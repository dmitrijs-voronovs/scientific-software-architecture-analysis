id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/COMBINE-lab/salmon/issues/825:9979,Energy Efficiency,allocate,allocated,9979,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:2768,Performance,queue,queue,2768,"n to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:3005,Performance,queue,queue,3005,"be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:3138,Performance,queue,queue,3138,"info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:3209,Performance,Queue,Queue,3209,"ed alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:3692,Performance,optimiz,optimizer,3692,"rent round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.ba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:4029,Performance,optimiz,optimizer,4029,"d parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.bam apex_infe_t2_rep3_S54_R1_001Aligned.out.bam apex_infe_t3_rep1_S31_R1_001Aligned.out.bam apex_infe_t3_rep3_S55_R1_001Aligned.out.bam apex_infe_t4_rep1_S32_R1_001Aligned.out.bam apex_infe_t4_rep3_S56_R1_001Aligned.out.bam apex_infe_t5_rep1_S33_R1_001Aligned.out.bam apex_infe_t5_rep3_S57_R1_001Aligned.out.bam apex_infe_t6_rep1_S34_R1_00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:7741,Performance,queue,queue,7741,"SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:9853,Performance,queue,queue,9853,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:2622,Safety,detect,detected,2622," }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equiva",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:7635,Safety,detect,detected,7635,"ock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:9747,Safety,detect,detected,9747,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:1753,Testability,Log,Logs,1753,"l -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment gro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:1789,Testability,log,logs,1789,"l -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment gro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:6718,Testability,Log,Logs,6718,"ep1_S42_R1_001Aligned.out.bam leaf_infe_t2_rep3_S66_R1_001Aligned.out.bam leaf_infe_t3_rep1_S43_R1_001Aligned.out.bam leaf_infe_t3_rep3_S67_R1_001Aligned.out.bam leaf_infe_t4_rep1_S44_R1_001Aligned.out.bam leaf_infe_t4_rep3_S68_R1_001Aligned.out.bam leaf_infe_t5_rep1_S45_R1_001Aligned.out.bam leaf_infe_t5_rep3_S69_R1_001Aligned.out.bam leaf_infe_t6_rep1_S46_R1_001Aligned.out.bam leaf_infe_t6_rep3_S70_R1_001Aligned.out.bam leaf_mock_t1_rep1_S35_R1_001Aligned.out.bam leaf_mock_t1_rep3_S59_R1_001Aligned.out.bam leaf_mock_t2_rep1_S36_R1_001Aligned.out.bam leaf_mock_t2_rep3_S60_R1_001Aligned.out.bam leaf_mock_t3_rep1_S37_R1_001Aligned.out.bam leaf_mock_t3_rep3_S61_R1_001Aligned.out.bam leaf_mock_t4_rep1_S38_R1_001Aligned.out.bam leaf_mock_t4_rep3_S62_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:6762,Testability,log,logs,6762,"3_S66_R1_001Aligned.out.bam leaf_infe_t3_rep1_S43_R1_001Aligned.out.bam leaf_infe_t3_rep3_S67_R1_001Aligned.out.bam leaf_infe_t4_rep1_S44_R1_001Aligned.out.bam leaf_infe_t4_rep3_S68_R1_001Aligned.out.bam leaf_infe_t5_rep1_S45_R1_001Aligned.out.bam leaf_infe_t5_rep3_S69_R1_001Aligned.out.bam leaf_infe_t6_rep1_S46_R1_001Aligned.out.bam leaf_infe_t6_rep3_S70_R1_001Aligned.out.bam leaf_mock_t1_rep1_S35_R1_001Aligned.out.bam leaf_mock_t1_rep3_S59_R1_001Aligned.out.bam leaf_mock_t2_rep1_S36_R1_001Aligned.out.bam leaf_mock_t2_rep3_S60_R1_001Aligned.out.bam leaf_mock_t3_rep1_S37_R1_001Aligned.out.bam leaf_mock_t3_rep3_S61_R1_001Aligned.out.bam leaf_mock_t4_rep1_S38_R1_001Aligned.out.bam leaf_mock_t4_rep3_S62_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhaus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:8830,Testability,Log,Logs,8830,"the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:8874,Testability,log,logs,8874,"processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhaus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/827:1544,Availability,error,errors,1544,"/output_genome/salmon-1.9.0_linux_x86_64/bin/salmon alevin -l ISR -i /users/nklimper/data/nklimper/permexp/output_genome/salmon_partial_sa_index \; -1 /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz \; /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz \; -2 /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz \; /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz \; -o alevin_out_new -p 16 --tgMap /users/nklimper/data/nklimper/permexp/output_genome/txp2gene.tsv \; --chromiumV3; ```. There were no errors when running salmon alevin, however the lib_format_counts.json file shows that there were 0 fragments with concordant consistent mappings:. ```json; {; ""read_files"": ""[ [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz], [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz] ]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 250325422,; ""num_assigned_fragments"": 250325422,; ""num_frags_with_con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/827
https://github.com/COMBINE-lab/salmon/issues/827:3007,Deployability,UPDATE,UPDATE,3007,"agittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz], [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz] ]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 250325422,; ""num_assigned_fragments"": 250325422,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 630613407,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I used the gzipped fastq files directly from the 10X website, and have tried with different indexes. I am using Salmon-1.9.0. Any idea what could be going wrong? Thanks!. --------; UPDATE; --------. I am unable to reproduce the results of the Spatial Alevin tutorial using the 10X Visium example. I used the same version of Salmon (1.1.0) as the tutorial, same refgenie mouse index, and generated the txp2gene.tsv file as described. Below is my script:. ```bash; #!/bin/bash; #SBATCH --account=carney-afleisc2-condo; #SBATCH -n 16; #SBATCH --mem=64G; #SBATCH -t 48:00:00; #SBATCH -J alevin; #SBATCH -o tutorial-out; #SBATCH -e tutorial-err. salmon alevin -l ISR -i ./salmon_partial_sa_index \; -1 ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz \; ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz \; -2 ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz \; ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/827
https://github.com/COMBINE-lab/salmon/issues/828:64,Performance,perform,performance,64,"Thank you for providing this good software！. It has a very good performance in the process of quantifying scRNA-seq data.Next, I'm thinking about whether it can be used to quantify the combination of genes and TEs.And I have tried this idea according to the following steps：. 1.Change the classification information in the third column of the annotated TEs gff file to ""gene"" or ""exon"", and number all TEs as genes.; 2.Merge genes and modified TEs files into a gff file.; 3.After the transcript sequences are extracted, the index is established using the salmon index and the salmon alevin is used for quantification. The program can run normally, including subsequent analysis in R. But I'm not sure if this is correct, so I would be very grateful if you have any suggestions！",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/828
https://github.com/COMBINE-lab/salmon/issues/829:147,Availability,fault,fault,147,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829
https://github.com/COMBINE-lab/salmon/issues/829:244,Availability,down,downloaded,244,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829
https://github.com/COMBINE-lab/salmon/issues/829:173,Deployability,install,installed,173,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829
https://github.com/COMBINE-lab/salmon/issues/829:106,Security,validat,validation,106,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829
https://github.com/COMBINE-lab/salmon/issues/830:11198,Availability,down,downloaded,11198,"ze = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:12024,Availability,avail,available,12024,"Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have to ask first). - I tried using the suggestion from previous issues (e.g. [--hitFilterPolicy BOTH](https://github.com/COMBINE-lab/salmon/issues/527)) to use `--hitFilterPolicy BOTH` but it didn't seem to help. - I tried trimming polyX tails with `fastp` but that didn't help either. - To try and see if `salmon` was causing the issues, I thought I'd try `kallisto` as a similar-ish comparison. `kallisto` mapped the reads with 100 EM bootstraps in about 25 minutes. Commands:. ```; kallisto index -i transcripts.idx genome.transcripts.fa; kallisto quant -i transcripts.idx -o output -b 100 <(zcat ${R1}) <(zcat ${R2}) -t 6; ```. Thanks for the tool - hopefully this is easy to sort out!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:290,Deployability,pipeline,pipeline,290,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:308,Deployability,pipeline,pipeline,308,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:7267,Deployability,release,release,7267,"1600 | max rel diff. = 0.073492; [2023-02-22 16:42:26.203] [jointLog] [info] iteration = 1700 | max rel diff. = 0.201421; [2023-02-22 16:42:29.533] [jointLog] [info] iteration = 1800 | max rel diff. = 0.127739; [2023-02-22 16:42:32.868] [jointLog] [info] iteration = 1900 | max rel diff. = 0.042789; [2023-02-22 16:42:36.215] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:11177,Deployability,install,installed,11177,"ze = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:12089,Deployability,Release,Release,12089,"Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have to ask first). - I tried using the suggestion from previous issues (e.g. [--hitFilterPolicy BOTH](https://github.com/COMBINE-lab/salmon/issues/527)) to use `--hitFilterPolicy BOTH` but it didn't seem to help. - I tried trimming polyX tails with `fastp` but that didn't help either. - To try and see if `salmon` was causing the issues, I thought I'd try `kallisto` as a similar-ish comparison. `kallisto` mapped the reads with 100 EM bootstraps in about 25 minutes. Commands:. ```; kallisto index -i transcripts.idx genome.transcripts.fa; kallisto quant -i transcripts.idx -o output -b 100 <(zcat ${R1}) <(zcat ${R2}) -t 6; ```. Thanks for the tool - hopefully this is easy to sort out!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:1142,Performance,Load,Loading,1142,"b total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39:30.679] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.680] [jointLog] [info] Thread s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:1212,Performance,Load,Loading,1212," bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39:30.679] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.680] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:3376,Performance,optimiz,optimizer,3376,"nted 34607288 total reads in the equivalence classes ; [2023-02-22 16:39:31.099] [jointLog] [warning] 5.2431e-05% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 26. [2023-02-22 16:39:31.099] [jointLog] [info] Number of mappings discarded because of alignment score : 10896346; [2023-02-22 16:39:31.099] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2579830; [2023-02-22 16:39:31.099] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 2262090; [2023-02-22 16:39:31.099] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 222960; [2023-02-22 16:39:31.099] [jointLog] [info] Mapping rate = 72.5797%. [2023-02-22 16:39:31.099] [jointLog] [info] finished quantifyLibrary(); [2023-02-22 16:39:31.099] [jointLog] [info] Starting optimizer; [2023-02-22 16:39:31.095] [fileLog] [info] ; At end of round 0; ==================; Observed 47681748 total fragments (47681748 in most recent round). [2023-02-22 16:39:31.343] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-02-22 16:39:31.387] [jointLog] [info] iteration = 0 | max rel diff. = 4339.45; [2023-02-22 16:39:31.726] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2023-02-22 16:40:27.779] [jointLog] [info] Computed expected counts (for bias correction); [2023-02-22 16:40:27.779] [jointLog] [info] processed bias for 0.0% of the transcripts; [2023-02-22 16:40:33.273] [jointLog] [info] processed bias for 10.0% of the transcripts; [2023-02-22 16:40:39.173] [jointLog] [info] processed bias for 20.0% of the transcripts; [2023-02-22 16:40:44.721] [jointLog] [info] processed bias for 30.0% of the transcripts; [2023-02-22 16:40:50.705] [jointLog] [info] processed bias for 40.0% of the transcripts; [2023-02-22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:6898,Performance,optimiz,optimizer,6898,"g] [info] iteration = 1200 | max rel diff. = 0.11409; [2023-02-22 16:42:12.875] [jointLog] [info] iteration = 1300 | max rel diff. = 3.98708; [2023-02-22 16:42:16.211] [jointLog] [info] iteration = 1400 | max rel diff. = 0.146333; [2023-02-22 16:42:19.531] [jointLog] [info] iteration = 1500 | max rel diff. = 0.118365; [2023-02-22 16:42:22.871] [jointLog] [info] iteration = 1600 | max rel diff. = 0.073492; [2023-02-22 16:42:26.203] [jointLog] [info] iteration = 1700 | max rel diff. = 0.201421; [2023-02-22 16:42:29.533] [jointLog] [info] iteration = 1800 | max rel diff. = 0.127739; [2023-02-22 16:42:32.868] [jointLog] [info] iteration = 1900 | max rel diff. = 0.042789; [2023-02-22 16:42:36.215] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a12",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:9202,Performance,Load,Loading,9202,"b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:9272,Performance,Load,Loading,9272," => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:9350,Performance,Load,Loading,9350,"0b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:9495,Performance,Load,Loading,9495," ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:9626,Performance,Load,Loading,9626,"ResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:9760,Performance,Load,Loading,9760,"nts will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] don",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:10005,Performance,Load,Loading,10005,"-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:10157,Performance,Load,Loading,10157,"709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:10301,Performance,Load,Loading,10301,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: v",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:10445,Performance,Load,Loading,10445,"------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:10580,Performance,Load,Loading,10580,"---------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of rea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:745,Security,validat,validateMappings,745,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:7401,Security,expose,exposes,7401,"info] iteration = 1800 | max rel diff. = 0.127739; [2023-02-22 16:42:32.868] [jointLog] [info] iteration = 1900 | max rel diff. = 0.042789; [2023-02-22 16:42:36.215] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:8805,Security,validat,validateMappings,8805,"nt ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:467,Testability,log,log,467,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:7646,Testability,log,log,7646," rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:8499,Testability,Log,Logs,8499,"ring aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:8532,Testability,log,logs,8532,"ring aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/830:10769,Testability,log,logfile,10769,"able | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following informa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830
https://github.com/COMBINE-lab/salmon/issues/832:229,Availability,error,error,229,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:250,Availability,Error,Error,250,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:421,Availability,Error,Error,421,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:1056,Availability,error,error,1056,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:53,Performance,load,load,53,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:86,Performance,load,load,86,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:113,Performance,load,load,113,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:142,Performance,load,load,142,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:169,Performance,load,load,169,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/832:196,Performance,load,load,196,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/833:1151,Availability,Error,Error,1151," much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of boun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/833:2082,Availability,Error,Error,2082,"ch appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of bounds",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/833:28,Integrability,protocol,protocol,28,"Hey. I am using the CellNet protocol and encountered the following issue. The index I am using is from refgenie. ; Any help would be much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/833:1694,Security,validat,validateMappings,1694,"ch appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of bounds",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/833:1086,Testability,Log,Logs,1086," much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of boun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/833:1132,Testability,log,logs,1132," much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of boun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/835:369,Availability,down,download,369,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:458,Availability,Down,Download,458,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:1910,Availability,fault,fault,1910,/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as w,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:473,Deployability,release,release,473,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:670,Deployability,Release,Release,670,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2263,Deployability,release,release,2263,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2744,Deployability,Continuous,Continuous,2744,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2755,Deployability,Integrat,Integration,2755,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2755,Integrability,Integrat,Integration,2755,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:627,Testability,test,testing,627,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2410,Testability,test,testing,2410,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2482,Testability,log,logs,2482,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2510,Testability,log,log,2510,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2570,Testability,log,log,2570,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2631,Testability,test,test,2631,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2734,Testability,test,test,2734,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/835:2767,Testability,log,log,2767,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/837:232,Availability,error,error,232,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon index; **Describe the bug**; Hi,; I have tried a big reference file before and It was succesfully created. Now, I am getting the following error. My index file is relatively big, ~2G. I could not solve the problem. I also increased CPU to 36. Log:; ````; [2023-03-15 20:10:48.957] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-15 20:10:48.968] [jLog] [info] building index; out : illerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:6072,Availability,down,downloaded,6072,"eger width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] edgeVecSize = 0; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] num keys = 1,869,461,974; ^M[Building BooPHF] 0.194% elapsed: 0 min 0 sec remaining: 3 min 39 sec^M[Building BooPHF] 0.206% elapsed: 0 min 0 sec remaining: 3 min 33 sec^M[Building BooPHF] 0.394% elapsed: 0 min 1 sec remaining: 2 min 45 sec^M[Building BooPHF] 0.406% elapsed: 0 min 1 sec remaining: 2 min 44 sec^M[Building BooPHF] 0.594% elapsed: 0 min 1 sec remaining: 2 m; psed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.4 % elapsed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.8 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.; salmon index was invoked improperly.; For usage information, try salmon index --help; ````. **To Reproduce**; Steps and data to reproduce the behavior:. `salmon index -t input.fa -i input.index`. Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? - biconda; * Which reference (e.g. transcriptome) was used? - metagenome; * Which read files were used? ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux- HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Thanks.; Ugur",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:6051,Deployability,install,installed,6051,"eger width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] edgeVecSize = 0; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] num keys = 1,869,461,974; ^M[Building BooPHF] 0.194% elapsed: 0 min 0 sec remaining: 3 min 39 sec^M[Building BooPHF] 0.206% elapsed: 0 min 0 sec remaining: 3 min 33 sec^M[Building BooPHF] 0.394% elapsed: 0 min 1 sec remaining: 2 min 45 sec^M[Building BooPHF] 0.406% elapsed: 0 min 1 sec remaining: 2 min 44 sec^M[Building BooPHF] 0.594% elapsed: 0 min 1 sec remaining: 2 m; psed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.4 % elapsed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.8 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.; salmon index was invoked improperly.; For usage information, try salmon index --help; ````. **To Reproduce**; Steps and data to reproduce the behavior:. `salmon index -t input.fa -i input.index`. Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? - biconda; * Which reference (e.g. transcriptome) was used? - metagenome; * Which read files were used? ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux- HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Thanks.; Ugur",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:2516,Energy Efficiency,allocate,allocated,2516,"d references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:34359738368; Pass Filling Filtering; 1 297 695; 2 55 3; True junctions count = 5239944; False junctions count = 16749742; Hash table size = 21989686; Candidate marks count = 29916168; --------------------------------------------------------------------------------; Reallocating bifurcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:3726,Integrability,wrap,wrapping,3726,"e():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [info] Done constructing the contig vector. 11353512; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] # segments = 11,353,511; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] total length = 2,210,067,304; [2023-03-15 20:35:28.518] [puff::index::jointLog] [info] Reading the reference files ...; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] positional integer width = 32; [2023-03-15 20:35:37.482] [puf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:3323,Performance,Load,Loading,3323,"urcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:3466,Performance,Load,Loading,3466,"------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [info] Done constructing the contig vector. 11353512; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] # segments = 11,35",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:1825,Security,Hash,Hash,1825,"lerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:34359738368; Pass Filling Filtering; 1 297 695; 2 55 3; True junctions count = 5239944; False junctions count = 16749742; Hash table size = 21989686; Candidate marks count = 29916168; --------------------------------------------------------------------------------; Reallocating bifurcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:2142,Security,Hash,Hash,2142," k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:34359738368; Pass Filling Filtering; 1 297 695; 2 55 3; True junctions count = 5239944; False junctions count = 16749742; Hash table size = 21989686; Candidate marks count = 29916168; --------------------------------------------------------------------------------; Reallocating bifurcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] S",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:3853,Security,validat,validation,3853,"1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [info] Done constructing the contig vector. 11353512; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] # segments = 11,353,511; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] total length = 2,210,067,304; [2023-03-15 20:35:28.518] [puff::index::jointLog] [info] Reading the reference files ...; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] positional integer width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:336,Testability,Log,Log,336,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon index; **Describe the bug**; Hi,; I have tried a big reference file before and It was succesfully created. Now, I am getting the following error. My index file is relatively big, ~2G. I could not solve the problem. I also increased CPU to 36. Log:; ````; [2023-03-15 20:10:48.957] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-15 20:10:48.968] [jLog] [info] building index; out : illerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/837:6287,Usability,clear,clear,6287,"eger width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] edgeVecSize = 0; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] num keys = 1,869,461,974; ^M[Building BooPHF] 0.194% elapsed: 0 min 0 sec remaining: 3 min 39 sec^M[Building BooPHF] 0.206% elapsed: 0 min 0 sec remaining: 3 min 33 sec^M[Building BooPHF] 0.394% elapsed: 0 min 1 sec remaining: 2 min 45 sec^M[Building BooPHF] 0.406% elapsed: 0 min 1 sec remaining: 2 min 44 sec^M[Building BooPHF] 0.594% elapsed: 0 min 1 sec remaining: 2 m; psed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.4 % elapsed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.8 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.; salmon index was invoked improperly.; For usage information, try salmon index --help; ````. **To Reproduce**; Steps and data to reproduce the behavior:. `salmon index -t input.fa -i input.index`. Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? - biconda; * Which reference (e.g. transcriptome) was used? - metagenome; * Which read files were used? ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux- HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Thanks.; Ugur",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837
https://github.com/COMBINE-lab/salmon/issues/838:5977,Availability,avail,available,5977,"fo] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6019,Availability,avail,available,6019,"](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a mod",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:2066,Deployability,release,release,2066,"ent_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in th",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:5909,Deployability,UPGRADE,UPGRADE,5909,"fo] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6070,Deployability,release,releases,6070,"; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6139,Deployability,upgrade,upgrade,6139,"; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6261,Deployability,update,updates,6261,"gned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7167,Deployability,release,release,7167,"rliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:2401,Performance,Load,Loading,2401,""": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:2466,Performance,Load,Loading,2466,"g file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 2762; [2023-03-07 06:54:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:3654,Performance,optimiz,optimizer,3654,"g] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 2762; [2023-03-07 06:54:46.290] [jointLog] [info] Mapping rate = 22.0189%. [2023-03-07 06:54:46.290] [jointLog] [info] finished quantifyLibrary(); [2023-03-07 06:54:46.290] [jointLog] [info] Starting optimizer; [2023-03-07 06:54:46.960] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-03-07 06:54:47.001] [jointLog] [info] iteration = 0 | max rel diff. = 433.028; [2023-03-07 06:54:50.676] [jointLog] [info] iteration = 100 | max rel diff. = 0.124404; [2023-03-07 06:54:54.362] [jointLog] [info] iteration = 200 | max rel diff. = 0.0697214; [2023-03-07 06:54:58.083] [jointLog] [info] iteration = 300 | max rel diff. = 0.0335353; [2023-03-07 06:55:01.780] [jointLog] [info] iteration = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:4879,Performance,optimiz,optimizer,4879,Log] [info] iteration = 100 | max rel diff. = 0.124404; [2023-03-07 06:54:54.362] [jointLog] [info] iteration = 200 | max rel diff. = 0.0697214; [2023-03-07 06:54:58.083] [jointLog] [info] iteration = 300 | max rel diff. = 0.0335353; [2023-03-07 06:55:01.780] [jointLog] [info] iteration = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-07 06:55:24.213] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0100626; [2023-03-07 06:55:24.977] [jointLog] [info] iteration = 1022 | max rel diff. = 0.00967998; [2023-03-07 06:55:25.088] [jointLog] [info] Finished optimizer; [2023-03-07 06:55:25.088] [jointLog] [info] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7502,Performance,Load,Loading,7502," }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7567,Performance,Load,Loading,7567,"> { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7640,Performance,Load,Loading,7640,"23-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7708,Performance,Load,Loading,7708,"or below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7779,Performance,Load,Loading,7779,"7:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smalle",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:8038,Performance,load,loading,8038," use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:8102,Performance,load,loading,8102,"ome a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%. [2023-03-17 07:46:19.488] [jointLog] [info] finished quantifyLibrary(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:9162,Performance,optimiz,optimizer,9162,"o] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%. [2023-03-17 07:46:19.488] [jointLog] [info] finished quantifyLibrary(); [2023-03-17 07:46:19.489] [jointLog] [info] Starting optimizer; [2023-03-17 07:46:20.246] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-03-17 07:46:20.304] [jointLog] [info] iteration = 0 | max rel diff. = 431.329; [2023-03-17 07:46:25.793] [jointLog] [info] iteration = 100 | max rel diff. = 0.170791; [2023-03-17 07:46:31.221] [jointLog] [info] iteration = 200 | max rel diff. = 0.0893134; [2023-03-17 07:46:36.693] [jointLog] [info] iteration = 300 | max rel diff. = 0.0353826; [2023-03-17 07:46:42.208] [jointLog] [info] iteration = 400 | max rel diff. = 0.0328108; [2023-03-17 07:46:47.631] [jointLog] [info] iteration = 500 | max rel diff. = 0.0266592; [2023-03-17 07:46:53.042] [jointLog] [info] iteration = 600 | max rel diff. = 0.0419357; [2023-03-17 07:46:58.543] [jointLog] [info] iteration = 700 | max rel diff. = 0.0160998; [2023-03-17 07:47:04.035] [jointLog] [info] iteration = 800 | max rel diff. = 0.0122848; [2023-03-17 07:47:09.471] [jointLog] [info] iteration = 900 | max rel diff. = 0.0122846. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:2678,Safety,detect,detected,2678," 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 2762; [2023-03-07 06:54:46.290] [jointLog] [info] Mapping rate = 22.0189%. [2023-03-07 06:54:46.290] [jointLog] [info] finished quantifyLibrary(); [2023-03-07 06:54:46.290] [jointLog] [info] Starting optimizer; [2023-03-07 06:54:46.960] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:8301,Safety,detect,detected,8301,"ecommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%. [2023-03-17 07:46:19.488] [jointLog] [info] finished quantifyLibrary(); [2023-03-17 07:46:19.489] [jointLog] [info] Starting optimizer; [2023-03-17 07:46:20.246] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-03-17 07:46:20.304] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:1783,Security,validat,validateMappings,1783,"ant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:1818,Security,validat,validation,1818,"ngyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:1976,Security,validat,validation,1976,"_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:2175,Security,validat,validateMappings,2175,"onsistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k u",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6884,Security,validat,validateMappings,6884,"9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6919,Security,validat,validation,6919," ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7077,Security,validat,validation,7077,"ures, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] D",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7276,Security,validat,validateMappings,7276,"s://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:8046,Security,hash,hash,8046," use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:409,Testability,test,tested,409,"Hi everyone,. I am using the salmon to calculate bins' abundance in metagenomic data. When I used Salmon map the reads to the bins, I only got ~20% mapping rate. And I have mapped the reads back to the bins using bowtie2, I got ~80% mapping rate; Besides, I also used the PE reads as two SE reads and input them into Salmon separately`salmon -i index -r read1`; Both reads could get ~80% mapping rate. I have tested many parameters that may affect the mapping rate, but it still can not be improved. If anyone could pull me out, I would appreciate it. . I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:784,Testability,log,log,784,"Hi everyone,. I am using the salmon to calculate bins' abundance in metagenomic data. When I used Salmon map the reads to the bins, I only got ~20% mapping rate. And I have mapped the reads back to the bins using bowtie2, I got ~80% mapping rate; Besides, I also used the PE reads as two SE reads and input them into Salmon separately`salmon -i index -r read1`; Both reads could get ~80% mapping rate. I have tested many parameters that may affect the mapping rate, but it still can not be improved. If anyone could pull me out, I would appreciate it. . I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:1477,Testability,log,log,1477,"nyone could pull me out, I would appreciate it. . I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:1503,Testability,log,logs,1503,"nyone could pull me out, I would appreciate it. . I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:1540,Testability,log,log,1540," I index the bins using the default kmer(31), and the length of reads is PE150. And the following is the command I use:; `salmon quant -i assembly_index/ -l A -1 9998_1.fastq.gz -2 9998_2.fastq.gz -p 100 -o 9998.quant --meta`. The log file:; ```{shell}; $cat lib_format_counts.json ; {; ""read_files"": [; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_1.fastq.gz"",; ""/share/work/HPC/work_tmp/liangyong/BinningMappingRateLow/9998_2.fastq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:2137,Testability,test,testing,2137,"onsistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k u",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:5095,Testability,log,log,5095,"2023-03-07 06:55:01.780] [jointLog] [info] iteration = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-07 06:55:24.213] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0100626; [2023-03-07 06:55:24.977] [jointLog] [info] iteration = 1022 | max rel diff. = 0.00967998; [2023-03-07 06:55:25.088] [jointLog] [info] Finished optimizer; [2023-03-07 06:55:25.088] [jointLog] [info] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:5139,Testability,log,log,5139,"tion = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-07 06:55:24.213] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0100626; [2023-03-07 06:55:24.977] [jointLog] [info] iteration = 1022 | max rel diff. = 0.00967998; [2023-03-07 06:55:25.088] [jointLog] [info] Finished optimizer; [2023-03-07 06:55:25.088] [jointLog] [info] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earlies",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6602,Testability,Log,Logs,6602,"ligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:6641,Testability,log,logs,6641,"d exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/838:7238,Testability,test,testing,7238,"s://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838
https://github.com/COMBINE-lab/salmon/issues/839:34,Deployability,pipeline,pipeline,34,"Hi all,. My group is developing a pipeline and we frequently encounter standard ribo-depleted RNA sequencing panels, as well as IDT targeted panels. To that end, how does salmon handle on and off target quantifications? Would it be best to assume that any off target transcripts are ""low quality"" calls and we should remove them from analysis? . Is there any incoming updates or features you all may be thinking of to account for targeted captures of RNA?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/839
https://github.com/COMBINE-lab/salmon/issues/839:368,Deployability,update,updates,368,"Hi all,. My group is developing a pipeline and we frequently encounter standard ribo-depleted RNA sequencing panels, as well as IDT targeted panels. To that end, how does salmon handle on and off target quantifications? Would it be best to assume that any off target transcripts are ""low quality"" calls and we should remove them from analysis? . Is there any incoming updates or features you all may be thinking of to account for targeted captures of RNA?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/839
https://github.com/COMBINE-lab/salmon/issues/840:103,Availability,down,downloaded,103,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840
https://github.com/COMBINE-lab/salmon/issues/840:1286,Integrability,protocol,protocol,1286,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840
https://github.com/COMBINE-lab/salmon/issues/840:942,Safety,detect,detect,942,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840
https://github.com/COMBINE-lab/salmon/issues/840:1229,Safety,Detect,Detected,1229,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840
https://github.com/COMBINE-lab/salmon/issues/841:80,Deployability,release,releases,80,"FYI, contrary to previous versions/tags, <https://github.com/COMBINE-lab/salmon/releases/tag/v1.10.1> lacks a `; salmon-1.10.1_linux_x86_64.tar.gz` binary.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/841
https://github.com/COMBINE-lab/salmon/issues/842:58,Availability,error,error,58,"When I tried to create a list with EdgeR, I encountered a error:""Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts"" . I could not solve this error and I hope you can help me:. ![Captura desde 2023-04-09 18-28-31](https://user-images.githubusercontent.com/112660223/230804485-b6c306fa-71c5-40ba-b254-19498ee9764f.png). SessionInfo():. ![Captura desde 2023-04-09 18-06-19](https://user-images.githubusercontent.com/112660223/230804518-129da88b-02cc-4218-9651-18c3393fd385.png). Data base information:. ![Captura desde 2023-04-09 18-31-15](https://user-images.githubusercontent.com/112660223/230804542-9bb653f5-d798-4bc8-8e95-254a5b773011.png); ![Captura desde 2023-04-09 18-33-08](https://user-images.githubusercontent.com/112660223/230804551-64fb1aa9-992e-49cf-a9fc-9c6c104211eb.png). I hope you can help me to find out what the error is and how to solve it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842
https://github.com/COMBINE-lab/salmon/issues/842:65,Availability,Error,Error,65,"When I tried to create a list with EdgeR, I encountered a error:""Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts"" . I could not solve this error and I hope you can help me:. ![Captura desde 2023-04-09 18-28-31](https://user-images.githubusercontent.com/112660223/230804485-b6c306fa-71c5-40ba-b254-19498ee9764f.png). SessionInfo():. ![Captura desde 2023-04-09 18-06-19](https://user-images.githubusercontent.com/112660223/230804518-129da88b-02cc-4218-9651-18c3393fd385.png). Data base information:. ![Captura desde 2023-04-09 18-31-15](https://user-images.githubusercontent.com/112660223/230804542-9bb653f5-d798-4bc8-8e95-254a5b773011.png); ![Captura desde 2023-04-09 18-33-08](https://user-images.githubusercontent.com/112660223/230804551-64fb1aa9-992e-49cf-a9fc-9c6c104211eb.png). I hope you can help me to find out what the error is and how to solve it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842
https://github.com/COMBINE-lab/salmon/issues/842:174,Availability,error,error,174,"When I tried to create a list with EdgeR, I encountered a error:""Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts"" . I could not solve this error and I hope you can help me:. ![Captura desde 2023-04-09 18-28-31](https://user-images.githubusercontent.com/112660223/230804485-b6c306fa-71c5-40ba-b254-19498ee9764f.png). SessionInfo():. ![Captura desde 2023-04-09 18-06-19](https://user-images.githubusercontent.com/112660223/230804518-129da88b-02cc-4218-9651-18c3393fd385.png). Data base information:. ![Captura desde 2023-04-09 18-31-15](https://user-images.githubusercontent.com/112660223/230804542-9bb653f5-d798-4bc8-8e95-254a5b773011.png); ![Captura desde 2023-04-09 18-33-08](https://user-images.githubusercontent.com/112660223/230804551-64fb1aa9-992e-49cf-a9fc-9c6c104211eb.png). I hope you can help me to find out what the error is and how to solve it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842
https://github.com/COMBINE-lab/salmon/issues/842:861,Availability,error,error,861,"When I tried to create a list with EdgeR, I encountered a error:""Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts"" . I could not solve this error and I hope you can help me:. ![Captura desde 2023-04-09 18-28-31](https://user-images.githubusercontent.com/112660223/230804485-b6c306fa-71c5-40ba-b254-19498ee9764f.png). SessionInfo():. ![Captura desde 2023-04-09 18-06-19](https://user-images.githubusercontent.com/112660223/230804518-129da88b-02cc-4218-9651-18c3393fd385.png). Data base information:. ![Captura desde 2023-04-09 18-31-15](https://user-images.githubusercontent.com/112660223/230804542-9bb653f5-d798-4bc8-8e95-254a5b773011.png); ![Captura desde 2023-04-09 18-33-08](https://user-images.githubusercontent.com/112660223/230804551-64fb1aa9-992e-49cf-a9fc-9c6c104211eb.png). I hope you can help me to find out what the error is and how to solve it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842
https://github.com/COMBINE-lab/salmon/issues/843:76,Integrability,message,message,76,"Hi,; This is not an bug, but I'm trying to understand something. I get this message when running salmon quant: ""replaced 53 non-ACGT nucleotides with random nucleotides."" Can you please explain what this means?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/843
https://github.com/COMBINE-lab/salmon/issues/845:126,Availability,failure,failure,126,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:224,Availability,error,error,224,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:931,Availability,down,downloaded,931,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1416,Availability,error,error,1416,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1528,Availability,error,error,1528,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1645,Availability,Error,Error,1645,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1707,Availability,Error,Error,1707,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:297,Deployability,pipeline,pipeline,297,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:319,Deployability,update,update,319,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:340,Deployability,install,install,340,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:356,Deployability,install,install-recommends,356,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:744,Deployability,install,install,744,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:910,Deployability,install,installed,910,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1492,Deployability,pipeline,pipeline,1492,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1655,Deployability,pipeline,pipeline,1655,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1696,Integrability,message,message,1696,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1540,Performance,load,loading,1540,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:385,Security,certificate,certificates,385,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:121,Testability,test,test,121,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:147,Testability,test,test,147,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:763,Testability,test,test,763,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1131,Testability,test,test,1131,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1173,Testability,test,tests,1173,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1422,Testability,log,log,1422,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1454,Testability,test,tests,1454,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1508,Testability,test,tests,1508,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:1765,Testability,test,tests,1765,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/847:295,Availability,fault,fault,295,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847
https://github.com/COMBINE-lab/salmon/issues/847:737,Availability,down,downloaded,737,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847
https://github.com/COMBINE-lab/salmon/issues/847:716,Deployability,install,installed,716,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847
https://github.com/COMBINE-lab/salmon/issues/847:785,Deployability,install,install,785,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847
https://github.com/COMBINE-lab/salmon/issues/847:1080,Usability,clear,clear,1080,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847
https://github.com/COMBINE-lab/salmon/issues/849:185,Availability,error,error,185,"Hi there, I was merging the quantified bulk rnaseq samples into a single file using **quantmerge**, however, I keep getting the ""either doesn't exist or doesn't contain a quant.sf file error"", although the file located in the given path. By the way, I do use salmon-1.10.0 version. I would apprecoate if you can help me to fix it. . Thanks,; Hasan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/849
https://github.com/COMBINE-lab/salmon/issues/850:1146,Deployability,pipeline,pipeline,1146,"eurat Object with information of sample tags obtained from R2 but I could not achieve this. ### **Background**; This is mice data comprised of 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the sample tag names to the end of decoy file; ```; [user@remote]$ tail -n 15 m.musculus_decoys.txt; GL456368.1; MU069434.1; JH584295.1; sampletag1G; sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850
https://github.com/COMBINE-lab/salmon/issues/850:1254,Deployability,pipeline,pipeline,1254,"f 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the sample tag names to the end of decoy file; ```; [user@remote]$ tail -n 15 m.musculus_decoys.txt; GL456368.1; MU069434.1; JH584295.1; sampletag1G; sampletag2G; [...]; sampletag12G; ```. 3. Created the index; ```; salmon index -t m.mus_gentrome.fa.gz -d m.musculus_decoys.txt -p 12 -i m.mus_s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850
https://github.com/COMBINE-lab/salmon/issues/850:626,Integrability,Protocol,Protocol,626,"Hello there!. I am analysing BD Rhapsody Single cell data and am wondering how to proceed with Salmon Alevin. After alignment I expected to create a Seurat Object with information of sample tags obtained from R2 but I could not achieve this. ### **Background**; This is mice data comprised of 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850
https://github.com/COMBINE-lab/salmon/issues/850:723,Integrability,Protocol,Protocol-EnhBead,723,"Hello there!. I am analysing BD Rhapsody Single cell data and am wondering how to proceed with Salmon Alevin. After alignment I expected to create a Seurat Object with information of sample tags obtained from R2 but I could not achieve this. ### **Background**; This is mice data comprised of 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850
https://github.com/COMBINE-lab/salmon/issues/850:2971,Performance,Load,Loaded,2971,"CTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the sample tag names to the end of decoy file; ```; [user@remote]$ tail -n 15 m.musculus_decoys.txt; GL456368.1; MU069434.1; JH584295.1; sampletag1G; sampletag2G; [...]; sampletag12G; ```. 3. Created the index; ```; salmon index -t m.mus_gentrome.fa.gz -d m.musculus_decoys.txt -p 12 -i m.mus_salmon_index --gencode; ```. 4. Aligned the 4 fastq files from the first cartridge (2 Lanes, each with one R1 and one R2); ```; salmon alevin -l ISR -1 Library1_WTA_S1_L00*_R1_001.fastq -2 Library1_WTA_S1_L00*_R2_001.fastq -i reference_genome/m.musculus/m.mus_salmon_index -p 10 --whitelist reference_genome/m.musculus/bd_rhapsody_barcode.txt -o alevin_output --umi-geometry '1[53-60]' --bc-geometry '1[1-9,22-30,44-52]' --read-geometry '2[1-end]' --tgMap reference_genome/m.musculus/txp2gene_2.tsv; ```. In which:; `whitelist` is a file containing possible CBs (I have not added anything related to sample tags here); `txp2gene` is a file that I did not change anything also. 5. Loaded the output in R with `ReadAlevin` from `SeuratWrappers`. ### **My issue**; I expected to have information for each cell (CB) which sampletag was present in its reads (vide page 20, figure 13 of the [Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf)); <img width=""792"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/67844695/da2ceba4-3c33-4296-9608-87dc4f6e642a"">. This information however is not present in the SeuratObject neither in the alevin_output directory (as seen by `grep -r ""sample""` not returning anything). Can you help me out with this? I am not sure why I don't have any reads mapping to the sampletags and have tried everything I could think of. Kind regards,; Igor",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850
https://github.com/COMBINE-lab/salmon/issues/851:315,Deployability,install,installed,315,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851
https://github.com/COMBINE-lab/salmon/issues/851:514,Deployability,install,install,514,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851
https://github.com/COMBINE-lab/salmon/issues/851:33,Energy Efficiency,efficient,efficient,33,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851
https://github.com/COMBINE-lab/salmon/issues/851:193,Integrability,message,message,193,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851
https://github.com/COMBINE-lab/salmon/issues/851:1350,Security,validat,validateMappings,1350," and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5cf02fecadbd"",; ""NameHash512"": ""24684d713ef7ab8e5f3bb7b16203900f9695e938760961daa2fe3733d5385554d4c60d7edfbac88831d9c645154847ec77c11d4125d38fd76137706af399d481"",; ""DecoySeqHash"": ""b87b7a94564c31d78da407e60a0aeb310b2dbdb398e0ddb39392286aaf2fe88c"",; ""DecoyNameHash"": ""5fc84a462ccf4735efdc48604a520ee47e1319156c2a5c252f5daba1e99bb401"",; ""num_decoys"": 194,; ""first",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851
https://github.com/COMBINE-lab/salmon/issues/852:264,Energy Efficiency,adapt,adapter,264,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852
https://github.com/COMBINE-lab/salmon/issues/852:264,Integrability,adapter,adapter,264,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852
https://github.com/COMBINE-lab/salmon/issues/852:264,Modifiability,adapt,adapter,264,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852
https://github.com/COMBINE-lab/salmon/issues/852:35,Performance,perform,perform,35,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852
https://github.com/COMBINE-lab/salmon/issues/853:2578,Availability,error,error,2578,"31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/tgMap.tsv }; ### [ fldMean ] => { 250 }; ### [ fldSD ] => { 20 }; ### [ validateMappings ] => { }. [2023-06-19 16:31:27.949] [alevinLog] [info] Filled with 39363 txp to gene entries ; [2023-06-19 16:31:27.956] [alevinLog] [info] Found all transcripts to gene mappings; [2023-06-19 16:31:27.971] [alevinLog] [info] Processing barcodes files (if Present) . . [2023-06-19 16:31:28.595] [alevinLog] [info] Done barcode density calculation.; [2023-06-19 16:31:28.595] [alevinLog] [info] # Barcodes Used: 442596 / 442596.; [2023-06-19 16:31:28.601] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:54,Safety,timeout,timeout,54,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:407,Security,validat,validation,407,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:421,Security,validat,validateMappings,421,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:457,Security,validat,validation,457,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:525,Security,validat,validateMappings,525,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:2094,Security,validat,validateMappings,2094,"31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/tgMap.tsv }; ### [ fldMean ] => { 250 }; ### [ fldSD ] => { 20 }; ### [ validateMappings ] => { }. [2023-06-19 16:31:27.949] [alevinLog] [info] Filled with 39363 txp to gene entries ; [2023-06-19 16:31:27.956] [alevinLog] [info] Found all transcripts to gene mappings; [2023-06-19 16:31:27.971] [alevinLog] [info] Processing barcodes files (if Present) . . [2023-06-19 16:31:28.595] [alevinLog] [info] Done barcode density calculation.; [2023-06-19 16:31:28.595] [alevinLog] [info] # Barcodes Used: 442596 / 442596.; [2023-06-19 16:31:28.601] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:63,Testability,Log,Logs,63,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/853:207,Testability,log,logs,207,"Version Info Exception: server did not respond before timeout; Logs will be written to /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2/logs; [2023-06-19 16:31:27.810] [jointLog] [info] setting maxHashResizeThreads to 12; [2023-06-19 16:31:27.811] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2023-06-19 16:31:27.814] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-06-19 16:31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/lab",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/854:267,Availability,echo,echo,267,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:422,Availability,echo,echo,422,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:475,Availability,error,error,475,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:612,Availability,avail,available,612,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:654,Availability,avail,available,654,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:517,Deployability,UPGRADE,UPGRADE,517,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:705,Deployability,release,releases,705,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:774,Deployability,upgrade,upgrade,774,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:896,Deployability,update,updates,896,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:481,Integrability,message,message,481,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:273,Performance,perform,performing,273,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:1154,Safety,detect,detected,1154,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:375,Security,validat,validateMappings,375,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/854:1228,Security,validat,validateMappings,1228,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854
https://github.com/COMBINE-lab/salmon/issues/855:41,Availability,error,error,41,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:164,Availability,down,down,164,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:242,Availability,error,error,242,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:305,Availability,down,downloaded,305,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:1341,Availability,error,error,1341,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:1670,Availability,Error,Error,1670,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:1750,Availability,Error,Error,1750,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:1987,Availability,Error,Error,1987,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:47,Integrability,message,message,47,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:248,Integrability,message,message,248,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:1347,Integrability,message,message,1347,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:856,Performance,load,load,856,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:876,Performance,load,load,876,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:910,Performance,load,load,910,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:932,Performance,load,load,932,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/855:958,Performance,load,load,958,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/pull/856:121,Deployability,patch,patching,121,"As per https://gcc.gnu.org/gcc-13/porting_to.html, `gcc13` changes the way it handles includes. These three files needed patching to allow the build to work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/856
https://github.com/COMBINE-lab/salmon/pull/857:35,Deployability,release,release,35,Merge develop into main for 1.10.2 release.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/857
https://github.com/COMBINE-lab/salmon/issues/858:362,Availability,down,downloaded,362,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/858:341,Deployability,install,installed,341,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/858:110,Usability,clear,clear,110,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/858:553,Usability,clear,clear,553,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/859:135,Availability,error,error,135,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:201,Availability,error,error,201,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:631,Availability,Error,Error,631,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:781,Availability,Error,Error,781,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:141,Integrability,message,message,141,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:207,Integrability,message,message,207,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:885,Integrability,message,message,885,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:586,Performance,Load,Loading,586,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/859:747,Performance,Load,Loading,747,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859
https://github.com/COMBINE-lab/salmon/issues/860:74,Availability,down,downloaded,74,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1019,Availability,error,error,1019,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1039,Availability,fault,fault,1039,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1499,Availability,error,error,1499,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1581,Availability,error,error,1581,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1618,Availability,error,error,1618,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1720,Availability,Error,Error,1720,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1800,Availability,Error,Error,1800,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1839,Availability,Error,Error,1839,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:96,Deployability,release,release,96,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:777,Deployability,install,install,777,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1484,Integrability,wrap,wrapper,1484,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:1592,Integrability,wrap,wrapper,1592,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/861:326,Deployability,pipeline,pipelines,326,"The answer here could simply be 'no' 😄 but as this question came up recently for me, and it is one I've seen mentioned on the `nf-core/scrna` slack, I figured I'd raise it here to get your thoughts. . There is a standard CellRanger workflow for the 10x V(D)J approach (https://support.10xgenomics.com/single-cell-vdj/software/pipelines/latest/using/vdj). Is this something remotely achievable with `alevin/alevin-fry`? It would be great for those who have matched 10x scRNA-seq to be able to process everything with the same package!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/861
https://github.com/COMBINE-lab/salmon/issues/861:22,Usability,simpl,simply,22,"The answer here could simply be 'no' 😄 but as this question came up recently for me, and it is one I've seen mentioned on the `nf-core/scrna` slack, I figured I'd raise it here to get your thoughts. . There is a standard CellRanger workflow for the 10x V(D)J approach (https://support.10xgenomics.com/single-cell-vdj/software/pipelines/latest/using/vdj). Is this something remotely achievable with `alevin/alevin-fry`? It would be great for those who have matched 10x scRNA-seq to be able to process everything with the same package!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/861
https://github.com/COMBINE-lab/salmon/issues/862:92,Availability,down,downloaded,92,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:269,Availability,down,downloaded,269,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:679,Availability,error,error,679,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:717,Availability,failure,failure,717,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:940,Availability,down,downloaded,940,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:769,Performance,perform,performed,769,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:463,Security,validat,validateMappings,463,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:707,Testability,assert,assertion,707,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/863:2210,Availability,error,error,2210," help me with that, but if you have thoughts, I'd appreciate them! Anyway, I decided arbitrarily to use the long-read BAMs as input to Salmon. ### Bug description; Secondly, as discussed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:2428,Availability,error,error,2428,"ed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:2486,Availability,error,errors,2486,"ference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to prov",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:2641,Availability,down,downloaded,2641,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:2897,Availability,avail,availability,2897,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:2742,Deployability,install,installed,2742,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:3390,Deployability,release,release,3390,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:3408,Deployability,Release,Release,3408,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:2878,Integrability,depend,depending,2878,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/863:46,Performance,perform,performed,46,"Hello, I hope you're well!. ### Context. 1. I performed short-read (Illumina, 150bp PE) and long-read (ONT, cDNA+PCR) RNA-sequencing on 12 human cell line samples (4 conditions, 3 biological replicates each).; 2. I aligned the short-reads to chm13v2.0_RefSeq_Liftoff_v5.1.gff3 using HISAT2, and the long reads to chm13v2.0.fa using Minimap2.; 4. I used StringTie hybrid assembly mode (--mix option) to generate GTFs using both technologies (to take advantage of structural information from long reads and accuracy from short reads).; 5. I then ran stringtie --merge to generate the transcriptome assembly GTF from the sample GTFs.; 6. I took this merged transcriptome and further annotated it using SQANTI3 (with chm13v2.0_RefSeq_Liftoff_v5.1.gtf and chm13v2.0.fa).; 7. I converted both the SQANTI-annotated and the StringTie GTFs into fasta as follows:; `gffread -w merged_transcriptome.fa -g chm13v2.0.fa merged_transcripts.gtf`. Now I'm trying to quantify with Salmon. Firstly, I'm not sure whether it's better to use the short or long reads here as input to Salmon, given that my goal is to identify short peptides (I have peptidomics data) derived from specific splicing events. You may or may not be able to help me with that, but if you have thoughts, I'd appreciate them! Anyway, I decided arbitrarily to use the long-read BAMs as input to Salmon. ### Bug description; Secondly, as discussed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffrea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863
https://github.com/COMBINE-lab/salmon/issues/864:133,Availability,error,error,133,"hello,; i am trying to run salmon on windows subsystem linux.; i installed using conda.; when i tried to run it, i got the following error:; ```; salmon index -t Homo_sapiens.GRCh38.dna.primary_assembly.fa -i hg38_index; salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.22' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libtbb.so.2); ```; what is the possible solution?; thank you for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/864
https://github.com/COMBINE-lab/salmon/issues/864:65,Deployability,install,installed,65,"hello,; i am trying to run salmon on windows subsystem linux.; i installed using conda.; when i tried to run it, i got the following error:; ```; salmon index -t Homo_sapiens.GRCh38.dna.primary_assembly.fa -i hg38_index; salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.22' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libtbb.so.2); ```; what is the possible solution?; thank you for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/864
https://github.com/COMBINE-lab/salmon/issues/865:232,Availability,error,errors,232,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:287,Availability,ERROR,ERROR,287,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:447,Availability,error,error,447,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:475,Availability,ERROR,ERROR,475,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:628,Availability,error,error,628,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:666,Availability,fault,fault,666,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:686,Availability,Error,Error,686,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/865:811,Availability,error,error,811,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/866:116,Availability,Error,Errors,116,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:352,Availability,down,downloaded,352,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:415,Availability,down,downloads,415,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:493,Availability,error,error,493,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:1061,Availability,avail,available,1061,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:186,Deployability,install,install,186,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:331,Deployability,install,installed,331,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:601,Deployability,RELEASE,RELEASE,601,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:1130,Deployability,Release,Release,1130,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/866:1203,Deployability,update,update,1203,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866
https://github.com/COMBINE-lab/salmon/issues/867:1043,Availability,error,error,1043," tools. . I have some split-seq data (from Parse Bio) that ran through the Parse Bio pipeline already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/issues/867:1772,Availability,recover,recovering,1772,"14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099. I found a discussion about the initial implementation of splitseq here with [this](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985198050) comment from @rob-p. I copied the geometry parameters he mentioned for this command:. > salmon alevin -i /ref/gencode.v43.transcripts/ -l A -1 r2.fastq.gz -2 r1.fastq.gz -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/issues/867:129,Deployability,pipeline,pipeline,129,"Hi everyone. As always, thanks for the great tools. . I have some split-seq data (from Parse Bio) that ran through the Parse Bio pipeline already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/issues/867:1772,Safety,recover,recovering,1772,"14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099. I found a discussion about the initial implementation of splitseq here with [this](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985198050) comment from @rob-p. I copied the geometry parameters he mentioned for this command:. > salmon alevin -i /ref/gencode.v43.transcripts/ -l A -1 r2.fastq.gz -2 r1.fastq.gz -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/issues/867:1173,Usability,guid,guidance,1173,"ne already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/issues/867:1434,Usability,simpl,simpler,1434,"ce) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/issues/867:1446,Usability,simpl,simpler,1446,"ce) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867
https://github.com/COMBINE-lab/salmon/pull/868:8,Availability,error,error,8,"Updated error model for ONT reads -- uses a markov model to model mismatches, indels, and homopolymer regions. Kmer size and step size for the markov model are set at 50 in ONTAlignmentModel.hpp, but could be adjusted (50 was found to be the best out of the values of k I tried).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/868
https://github.com/COMBINE-lab/salmon/pull/868:0,Deployability,Update,Updated,0,"Updated error model for ONT reads -- uses a markov model to model mismatches, indels, and homopolymer regions. Kmer size and step size for the markov model are set at 50 in ONTAlignmentModel.hpp, but could be adjusted (50 was found to be the best out of the values of k I tried).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/868
https://github.com/COMBINE-lab/salmon/issues/869:260,Availability,error,error,260,"Hi there, new to experimental RNAseq analysis. Have used ""clean"" example datasets and felt like salmon would be suitable for my analysis. However, using paired-end libraries from Illumina (I have tried trimmed and non-trimmed reads) I am getting the following error when running: salmon quant -i salmon_index/ --libType A -1 151_R1.fastq.gz -2 151_R2.fastq.gz --validateMappings -o 151_quant: . ""Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: 151_quant/lib_format_counts.json for details"". When I go to this file, I see: ""num_frags_with_consistent_mappings"": 0,. Given that the reads from illumina come in lanes, I did merge those files (R1 with R1 files and R2 with R2) but running salmon quant on the non-merged files produces the same error. These reads have been mapped to a reference genome for which my lab has used for many analyses, I am not sure what the issue could be. Any ideas would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/869
https://github.com/COMBINE-lab/salmon/issues/869:829,Availability,error,error,829,"Hi there, new to experimental RNAseq analysis. Have used ""clean"" example datasets and felt like salmon would be suitable for my analysis. However, using paired-end libraries from Illumina (I have tried trimmed and non-trimmed reads) I am getting the following error when running: salmon quant -i salmon_index/ --libType A -1 151_R1.fastq.gz -2 151_R2.fastq.gz --validateMappings -o 151_quant: . ""Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: 151_quant/lib_format_counts.json for details"". When I go to this file, I see: ""num_frags_with_consistent_mappings"": 0,. Given that the reads from illumina come in lanes, I did merge those files (R1 with R1 files and R2 with R2) but running salmon quant on the non-merged files produces the same error. These reads have been mapped to a reference genome for which my lab has used for many analyses, I am not sure what the issue could be. Any ideas would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/869
https://github.com/COMBINE-lab/salmon/issues/869:362,Security,validat,validateMappings,362,"Hi there, new to experimental RNAseq analysis. Have used ""clean"" example datasets and felt like salmon would be suitable for my analysis. However, using paired-end libraries from Illumina (I have tried trimmed and non-trimmed reads) I am getting the following error when running: salmon quant -i salmon_index/ --libType A -1 151_R1.fastq.gz -2 151_R2.fastq.gz --validateMappings -o 151_quant: . ""Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: 151_quant/lib_format_counts.json for details"". When I go to this file, I see: ""num_frags_with_consistent_mappings"": 0,. Given that the reads from illumina come in lanes, I did merge those files (R1 with R1 files and R2 with R2) but running salmon quant on the non-merged files produces the same error. These reads have been mapped to a reference genome for which my lab has used for many analyses, I am not sure what the issue could be. Any ideas would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/869
https://github.com/COMBINE-lab/salmon/issues/870:22,Availability,error,error,22,"Hi there,. here is my error and i ll provide my script. Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_17-25/17-25_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-11-18_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_7-14/7-14_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_15-23_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_2-4/2-4_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_35-43/35-43_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_18-26_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_41-49_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_48-56/48-56_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-10-17_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:16965,Availability,echo,echo,16965,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10054,Performance,Load,Loading,10054,"0_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10124,Performance,Load,Loading,10124,"ds/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10202,Performance,Load,Loading,10202," 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; ------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10347,Performance,Load,Loading,10347,"Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10478,Performance,Load,Loading,10478,"sizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10612,Performance,Load,Loading,10612,"nts will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File na",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:10857,Performance,Load,Loading,10857,"-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:11009,Performance,Load,Loading,11009,"866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:11152,Performance,Load,Loading,11152,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:11296,Performance,Load,Loading,11296,"-------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /noback",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:11431,Performance,Load,Loading,11431,"----------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_17-25/17-25_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-11-1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:16261,Performance,load,load,16261,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:16289,Performance,load,load,16289,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:9208,Security,validat,validateMappings,9208,"_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:9657,Security,validat,validateMappings,9657,"s/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:17070,Security,validat,validateMappings,17070,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:9308,Testability,Log,Logs,9308,".fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; ------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/870:9382,Testability,log,logs,9382,"med/Sample_8-15/8-15_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_39-47_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870
https://github.com/COMBINE-lab/salmon/issues/871:2333,Availability,avail,available,2333,"son HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/repodata.json HTTP/1.1"" 304 0; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/repodata.json HTTP/1.1"" 304 0; done; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64; - https://conda.anaconda.org/bioconda/noarch; - https://conda.anaconda.org/conda-forge/osx-arm64; - https://conda.anaconda.org/conda-forge/noarch; - https://repo.anaconda.com/pkgs/main/osx-arm64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/osx-arm64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Any help would be greatly appreciated!. Thanks,. Nordin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871
https://github.com/COMBINE-lab/salmon/issues/871:23,Deployability,install,install,23,"Hello!. I am trying to install Salmon on a M1-mac using bioconda. I have made a fresh install of conda 23.7.2. I have generated a specific channel for bioconda and I am following the instructions from the anaconda website for installation. . This is the bug I get when running: conda install -c bioconda salmon. nordin@Nordins-MacBook-Air ~ % conda create -n salmon salmon; Collecting package metadata (current_repodata.json): | DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871
https://github.com/COMBINE-lab/salmon/issues/871:86,Deployability,install,install,86,"Hello!. I am trying to install Salmon on a M1-mac using bioconda. I have made a fresh install of conda 23.7.2. I have generated a specific channel for bioconda and I am following the instructions from the anaconda website for installation. . This is the bug I get when running: conda install -c bioconda salmon. nordin@Nordins-MacBook-Air ~ % conda create -n salmon salmon; Collecting package metadata (current_repodata.json): | DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871
https://github.com/COMBINE-lab/salmon/issues/871:226,Deployability,install,installation,226,"Hello!. I am trying to install Salmon on a M1-mac using bioconda. I have made a fresh install of conda 23.7.2. I have generated a specific channel for bioconda and I am following the instructions from the anaconda website for installation. . This is the bug I get when running: conda install -c bioconda salmon. nordin@Nordins-MacBook-Air ~ % conda create -n salmon salmon; Collecting package metadata (current_repodata.json): | DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871
https://github.com/COMBINE-lab/salmon/issues/871:284,Deployability,install,install,284,"Hello!. I am trying to install Salmon on a M1-mac using bioconda. I have made a fresh install of conda 23.7.2. I have generated a specific channel for bioconda and I am following the instructions from the anaconda website for installation. . This is the bug I get when running: conda install -c bioconda salmon. nordin@Nordins-MacBook-Air ~ % conda create -n salmon salmon; Collecting package metadata (current_repodata.json): | DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871
https://github.com/COMBINE-lab/salmon/issues/872:378,Availability,error,error,378,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:1494,Availability,error,error,1494,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:1749,Availability,error,errors,1749,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:1862,Availability,Error,Error,1862,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:1950,Availability,Error,Error,1950,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:1999,Availability,Error,Error,1999,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:2111,Availability,Error,Error,2111,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:2194,Availability,Error,Error,2194,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:2240,Availability,Error,Error,2240,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:168,Energy Efficiency,power,power,168,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:129,Modifiability,sandbox,sandbox,129,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:500,Performance,Perform,Performing,500,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/872:129,Testability,sandbox,sandbox,129,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872
https://github.com/COMBINE-lab/salmon/issues/873:51,Availability,error,error,51,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873
https://github.com/COMBINE-lab/salmon/issues/873:33,Deployability,pipeline,pipeline,33,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873
https://github.com/COMBINE-lab/salmon/issues/873:208,Deployability,pipeline,pipeline,208,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873
https://github.com/COMBINE-lab/salmon/issues/873:418,Deployability,pipeline,pipeline,418,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873
https://github.com/COMBINE-lab/salmon/issues/873:502,Deployability,install,installed,502,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873
https://github.com/COMBINE-lab/salmon/issues/873:57,Integrability,message,message,57,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873
https://github.com/COMBINE-lab/salmon/issues/875:1278,Testability,log,log,1278,"Hello! Thank you for developing these amazing tools.; My laboratory is implementing scCUT&TAG-pro (like CITE-seq but for CUT&TAG rather than RNA-seq) using chromium v2 10X library prep. This means, that we have features (ADTs) with a library prep different than from CITE-seq. . I have seen in your documentation ([https://combine-lab.github.io/alevin-tutorial/2020/alevin-features/](https://combine-lab.github.io/alevin-tutorial/2020/alevin-features/)) that to map features using salmon alevin you need to use the flag `--citeseq` together with `--featureLength `and` --featureStart. ` Does this assume that the barcode is 16bp long and the UMI 12bp long? In my case, I have a cell barcode of 16 and a UMI of 10. . I have also seen that to specify the length I can specify the read geometry (`--bc-geometry 1[1-16] --umi-geometry 1[17-26] --read-geometry 2[1-15]`). However, if I try to use these flags, I would need to specify `--tgMap`, however, I cannot find anywhere in your documentation that specifies how to handle this flag when mapping features. Could you please help me with this?. Finally, I done a first run using the following command:; `salmon alevin -l ISR -iadt_index -1 1.fastq.gz -2 2.fastq.gz -p 20 --citeseq --featureStart 0 --featureLength 15`; And in the log file i got the following warning:; **[2023-09-22 17:09:36.774] [jointLog] [warning] Found 41405334 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large** This number means that I am losing 22% of my reads. I have checked and exactly this percentage of the UMI sequences in my reads start with an N, however I do not understand why. Do you have any idea why this could be? . Thank you!; Andrea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/875
https://github.com/COMBINE-lab/salmon/issues/876:96,Availability,fault,fault,96,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:235,Availability,fault,faulted,235,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:392,Availability,down,downloaded,392,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:839,Availability,recover,recoverOrphans,839,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1260,Availability,avail,available,1260,"elf, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1302,Availability,avail,available,1302,"rmation:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2052,Availability,recover,recoverOrphans,2052,"reenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:4925,Availability,fault,fault,4925,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:5157,Availability,recover,recoverOrphans,5157,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:371,Deployability,install,installed,371,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1165,Deployability,UPGRADE,UPGRADE,1165,"elf, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1353,Deployability,release,releases,1353,"nloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1422,Deployability,upgrade,upgrade,1422,"nloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1544,Deployability,update,updates,1544,"ation of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2926,Performance,Load,Loading,2926,"; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2996,Performance,Load,Loading,2996,"## [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:3074,Performance,Load,Loading,3074,"] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:3219,Performance,Load,Loading,3219,"UnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:3350,Performance,Load,Loading,3350,"hResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:3484,Performance,Load,Loading,3484,"ents will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] do",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:3729,Performance,Load,Loading,3729,-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [in,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:3881,Performance,Load,Loading,3881,"450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:4025,Performance,Load,Loading,4025,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i referen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:4169,Performance,Load,Loading,4169,"------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:4304,Performance,Load,Loading,4304,"---------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:839,Safety,recover,recoverOrphans,839,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2052,Safety,recover,recoverOrphans,2052,"reenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:4733,Safety,detect,detected,4733,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:5157,Safety,recover,recoverOrphans,5157,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:798,Security,validat,validateMappings,798,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:1972,Security,validat,validateMappings,1972,"reenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2529,Security,validat,validateMappings,2529,"res and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:5119,Security,validat,validateMappings,5119,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2204,Testability,Log,Logs,2204,"ion of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; ---------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:2256,Testability,log,logs,2256,"le. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; ------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/876:937,Usability,clear,clear,937,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/877:374,Availability,error,error,374,"Hello Salmon team,. I've recently been exploring the alignment mode of salmon quant and noticed that the --eqclasses option is mentioned in the help manual. Based on my understanding of the documentation, I initially thought that the --eqclasses option is used when input files are in alignment (BAM/SAM format). However, when I tried to use it, I encountered the following error: ""Conflicting options 'alignments' and 'eqclasses'."". Is the --eqclasses option applicable in alignment mode?; If not, when should it be used?; Does using the --eqclasses option in the context of alignment mode imply starting the quantification with a pre-computed equivalence class file and a reference transcriptome, thus bypassing the need for an alignment file (BAM)?. Thank you for your continuous efforts in developing and maintaining Salmon. I'm looking forward to any clarifications you can provide on this matter.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/877
https://github.com/COMBINE-lab/salmon/issues/877:772,Deployability,continuous,continuous,772,"Hello Salmon team,. I've recently been exploring the alignment mode of salmon quant and noticed that the --eqclasses option is mentioned in the help manual. Based on my understanding of the documentation, I initially thought that the --eqclasses option is used when input files are in alignment (BAM/SAM format). However, when I tried to use it, I encountered the following error: ""Conflicting options 'alignments' and 'eqclasses'."". Is the --eqclasses option applicable in alignment mode?; If not, when should it be used?; Does using the --eqclasses option in the context of alignment mode imply starting the quantification with a pre-computed equivalence class file and a reference transcriptome, thus bypassing the need for an alignment file (BAM)?. Thank you for your continuous efforts in developing and maintaining Salmon. I'm looking forward to any clarifications you can provide on this matter.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/877
https://github.com/COMBINE-lab/salmon/issues/879:312,Deployability,pipeline,pipeline,312,Now I get some fq data from bd rhapsody platform: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE212212; ![image](https://github.com/COMBINE-lab/salmon/assets/52995448/8a5b47a4-b041-4a6f-9ba4-3fba21a08028). And it used the sample_tag.fq data to store the sample information. I notice that the bd rhapsody pipeline can generate a sample tag file:; ![image](https://github.com/COMBINE-lab/salmon/assets/52995448/9d1c4031-60c6-446a-982a-8e00f6f031a0). it can tell you which sample the cell from in a single batch:; ![image](https://github.com/COMBINE-lab/salmon/assets/52995448/ab9c2577-6a13-4370-8e93-e3efed574b89). Does alevin also provide flag to handle the tag.fq?. Thank you.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/879
https://github.com/COMBINE-lab/salmon/issues/880:173,Modifiability,Variab,Variable,173,"Hey,; I have a question regarding the --seqBias flag, your documentation suggests it is specifically applied to random hexameric primers. But on the contrary it is based on Variable length Markov Model, is it feasible to use this flag for analysing the libraries made with random nonameric primers ?; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/880
https://github.com/COMBINE-lab/salmon/issues/881:194,Availability,fault,fault,194,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:200,Availability,error,error,200,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:560,Availability,down,downloaded,560,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1481,Availability,avail,available,1481,":. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1523,Availability,avail,available,1523," * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3800,Availability,fault,fault,3800,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3859,Availability,fault,fault,3859,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:539,Deployability,install,installed,539,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:602,Deployability,install,installed,602,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1413,Deployability,UPGRADE,UPGRADE,1413,":. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1574,Deployability,release,releases,1574,"ugh bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1643,Deployability,upgrade,upgrade,1643,"ugh bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1765,Deployability,update,updates,1765,"d using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --va",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3012,Performance,Load,Loading,3012,"riptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3077,Performance,Load,Loading,3077,"}; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the follo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3150,Performance,Load,Loading,3150," ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3218,Performance,Load,Loading,3218,"16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3289,Performance,Load,Loading,3289,"hold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-li",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3549,Performance,load,loading,3549,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3737,Performance,load,loading,3737,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:987,Security,validat,validateMappings,987,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] =",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1917,Security,validat,validateMappings,1917,"m options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 libra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:2405,Security,validat,validateMappings,2405," UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:2567,Security,validat,validateMappings,2567,"tains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:2739,Security,validat,validateMappings,2739,", features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3557,Security,hash,hash,3557,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:3880,Security,validat,validateMappings,3880,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:2179,Testability,Log,Logs,2179,"d concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:2211,Testability,log,logs,2211,"d concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:130,Usability,clear,clear,130,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/881:1182,Usability,clear,clear,1182," error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/886:224,Deployability,configurat,configuration,224,"Hello,; I would like to use alevin for quantification of 10x 5' PE. 10x 5' PE contains cDNA in read1 as well as read2. Could you tell me how to specify the --read-geometry to use both read1 and read2 for quantification. The configuration of the library is as follows; read1 BC16bp-UMI10bp-TSO13bp-cDNA5'; read2 cDNA3'. I tried the following library options, but I got ""Total 0.00 UMI after deduplicating.; `-l ISF --bc-geometry 1[1-16] --umi-geometry 1[17-26] --read-geometry ""1[40-end]2[1-end]""`. I also tried `""1[40-end] 2[1-end]""` and `""1[40-end],2[1-end]""` by changing the delimiter, but they were not quantified in the same way. On the other hand, ""1[40-end]"" and ""2[1-end]"" were quantified well. Best,; Yoshi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/886
https://github.com/COMBINE-lab/salmon/issues/886:224,Modifiability,config,configuration,224,"Hello,; I would like to use alevin for quantification of 10x 5' PE. 10x 5' PE contains cDNA in read1 as well as read2. Could you tell me how to specify the --read-geometry to use both read1 and read2 for quantification. The configuration of the library is as follows; read1 BC16bp-UMI10bp-TSO13bp-cDNA5'; read2 cDNA3'. I tried the following library options, but I got ""Total 0.00 UMI after deduplicating.; `-l ISF --bc-geometry 1[1-16] --umi-geometry 1[17-26] --read-geometry ""1[40-end]2[1-end]""`. I also tried `""1[40-end] 2[1-end]""` and `""1[40-end],2[1-end]""` by changing the delimiter, but they were not quantified in the same way. On the other hand, ""1[40-end]"" and ""2[1-end]"" were quantified well. Best,; Yoshi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/886
https://github.com/COMBINE-lab/salmon/issues/890:763,Energy Efficiency,allocate,allocate,763,"Hi @Ray6283,. It seems you are asking about the EM/VBEM algorithm in general. I would say your description is _almost_ right, except this part:. > Then using p_ij s , we put f_j to transcripts with highest probability , say t_jm , we do this for all fragments, so for each fragment we have assigned unique transcript. So we can have new eta, call it eta_1 ( because we have abundance). Specifically, the EM algorithm does _not_ do ""hard"" assignment. That is, at no point during the algorithm, is a fragment fully assigned to a specific transcript (unless it was uniquely mapped there). Rather, the EM algorithm performs ""soft"" assignment. So, consider we have a fragment $f_j$ that maps to two transcripts $t_{j1}$ and $t_{j2}$. The EM algorithm will ""partially"" allocate this fragment to each of the transcripts. Specifically, it will allocate them proportional to $P(f_j \in t_{j1}) \propto P(t_{j1} \mid \eta) P(f_j \mid t_{j1})$ and $P(f_j \in t_{j2}) \propto P(t_{j2} \mid \eta) P(f_j \mid t_{j2})$ respectively. Then, in the ""M"" phase of the EM algorithm, one calculates the total mass arising from a transcript $t_i$ as $\sum_{f_j \text{ such that } f_j \text{ maps to } t_i} P(f_j \in t_i)$ (one sum). Computing these abundances for all $t_i$ gives us our next estimate of $\eta$, and then we can go back and re-compute the probabilities $P(f_j \in t_{j1})$ etc. This is done until convergence. _Originally posted by @rob-p in https://github.com/COMBINE-lab/salmon/discussions/889#discussioncomment-7304773_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/890
https://github.com/COMBINE-lab/salmon/issues/890:836,Energy Efficiency,allocate,allocate,836,"Hi @Ray6283,. It seems you are asking about the EM/VBEM algorithm in general. I would say your description is _almost_ right, except this part:. > Then using p_ij s , we put f_j to transcripts with highest probability , say t_jm , we do this for all fragments, so for each fragment we have assigned unique transcript. So we can have new eta, call it eta_1 ( because we have abundance). Specifically, the EM algorithm does _not_ do ""hard"" assignment. That is, at no point during the algorithm, is a fragment fully assigned to a specific transcript (unless it was uniquely mapped there). Rather, the EM algorithm performs ""soft"" assignment. So, consider we have a fragment $f_j$ that maps to two transcripts $t_{j1}$ and $t_{j2}$. The EM algorithm will ""partially"" allocate this fragment to each of the transcripts. Specifically, it will allocate them proportional to $P(f_j \in t_{j1}) \propto P(t_{j1} \mid \eta) P(f_j \mid t_{j1})$ and $P(f_j \in t_{j2}) \propto P(t_{j2} \mid \eta) P(f_j \mid t_{j2})$ respectively. Then, in the ""M"" phase of the EM algorithm, one calculates the total mass arising from a transcript $t_i$ as $\sum_{f_j \text{ such that } f_j \text{ maps to } t_i} P(f_j \in t_i)$ (one sum). Computing these abundances for all $t_i$ gives us our next estimate of $\eta$, and then we can go back and re-compute the probabilities $P(f_j \in t_{j1})$ etc. This is done until convergence. _Originally posted by @rob-p in https://github.com/COMBINE-lab/salmon/discussions/889#discussioncomment-7304773_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/890
https://github.com/COMBINE-lab/salmon/issues/890:611,Performance,perform,performs,611,"Hi @Ray6283,. It seems you are asking about the EM/VBEM algorithm in general. I would say your description is _almost_ right, except this part:. > Then using p_ij s , we put f_j to transcripts with highest probability , say t_jm , we do this for all fragments, so for each fragment we have assigned unique transcript. So we can have new eta, call it eta_1 ( because we have abundance). Specifically, the EM algorithm does _not_ do ""hard"" assignment. That is, at no point during the algorithm, is a fragment fully assigned to a specific transcript (unless it was uniquely mapped there). Rather, the EM algorithm performs ""soft"" assignment. So, consider we have a fragment $f_j$ that maps to two transcripts $t_{j1}$ and $t_{j2}$. The EM algorithm will ""partially"" allocate this fragment to each of the transcripts. Specifically, it will allocate them proportional to $P(f_j \in t_{j1}) \propto P(t_{j1} \mid \eta) P(f_j \mid t_{j1})$ and $P(f_j \in t_{j2}) \propto P(t_{j2} \mid \eta) P(f_j \mid t_{j2})$ respectively. Then, in the ""M"" phase of the EM algorithm, one calculates the total mass arising from a transcript $t_i$ as $\sum_{f_j \text{ such that } f_j \text{ maps to } t_i} P(f_j \in t_i)$ (one sum). Computing these abundances for all $t_i$ gives us our next estimate of $\eta$, and then we can go back and re-compute the probabilities $P(f_j \in t_{j1})$ etc. This is done until convergence. _Originally posted by @rob-p in https://github.com/COMBINE-lab/salmon/discussions/889#discussioncomment-7304773_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/890
https://github.com/COMBINE-lab/salmon/issues/895:92,Availability,error,error,92,"surprisingly, after building a salmon conda env, when building an index I got the following error:. `exception : [unrecognised option '--decoys']. Exiting.`. I then ran salmon index --help , and there was no -d/--decoys option. and; `salmon -v ` returned ; salmon 0.13.1. the tag on https://anaconda.org/bioconda/salmon , last uploaded a few months ago suggests it is for 1.10.2 , which is clearly not the case. not sure if this was done by someone other than any of the salmon developers, but it definitely creates headaches for groups trying to automate expression analysis workflows using snakemake/conda",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/895
https://github.com/COMBINE-lab/salmon/issues/895:390,Usability,clear,clearly,390,"surprisingly, after building a salmon conda env, when building an index I got the following error:. `exception : [unrecognised option '--decoys']. Exiting.`. I then ran salmon index --help , and there was no -d/--decoys option. and; `salmon -v ` returned ; salmon 0.13.1. the tag on https://anaconda.org/bioconda/salmon , last uploaded a few months ago suggests it is for 1.10.2 , which is clearly not the case. not sure if this was done by someone other than any of the salmon developers, but it definitely creates headaches for groups trying to automate expression analysis workflows using snakemake/conda",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/895
https://github.com/COMBINE-lab/salmon/issues/898:130,Availability,error,error,130,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:242,Availability,error,error,242,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1065,Availability,avail,available,1065,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1107,Availability,avail,available,1107,"ds and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:2460,Availability,error,error,2460,"ned_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2152693 Bus error (core dumped); ```. Any advice on this would be highly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:35,Deployability,install,installed,35,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:970,Deployability,UPGRADE,UPGRADE,970,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1158,Deployability,release,releases,1158,"333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent heade",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1227,Deployability,upgrade,upgrade,1227,"333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent heade",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1349,Deployability,update,updates,1349,"-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:860,Energy Efficiency,schedul,scheduler,860,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:303,Performance,load,load,303,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:781,Testability,log,logs,781,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:897,Testability,log,log,897,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1705,Testability,Log,Logs,1705,"ned_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2152693 Bus error (core dumped); ```. Any advice on this would be highly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:1751,Testability,log,logs,1751,"ned_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2152693 Bus error (core dumped); ```. Any advice on this would be highly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/900:155,Safety,predict,predicted,155,"Hello,. I want to known if it's possible to view salmon quant.sf output in a browser ( IGV, JBROWSE) according to a fasta reference genome and gff file of predicted gene used for salmon mapping. Thanks in advance,; Regards,. Steven",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/900
https://github.com/COMBINE-lab/salmon/issues/901:304,Availability,avail,available,304,"Hello, I'm interested in trying out Salmon for the first time. In this analysis, I would like to disentangle a host eukaryote organism's reads for quantification from read data containing it and eight of its microbial symbionts. The host (C. elegans worms) of course has a great genome and transcriptome available.` transcript.fa` is no problem.; The microbes all have genomes and gtfs, but not transcript files (on NCBI). Luckily, I'm not interested in quantifying them - I checked a couple samples with STAR and BBsplit (within the BBmap toolkit) and microbial read abundance is too low for any one bacterium to use in analysis. However, I still need to get those bacteria reads out of the picture when quantifying the host worm reads/transcripts. **What is the best approach to go from a mixed-organism read pool to quantified host transcripts?**. - Perhaps, target-transcriptome = worm_transcripts.fa, with a concatenated decoy composed of worm transcripts, worm genome, and the genomes of the 8 microbes? This seems like the fastest and least error prone method, based on my developing understanding of Salmon. - Or, truly align reads and bin them to new fastq files using genomes+gtfs with STAR/samtools (or just genomes with BBsplit). Then take the putative worm-only reads, and then run Salmon in a single-organisms routine manner? Perhaps this is more accurate in a way?. Thank you for any advice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/901
https://github.com/COMBINE-lab/salmon/issues/901:1048,Availability,error,error,1048,"Hello, I'm interested in trying out Salmon for the first time. In this analysis, I would like to disentangle a host eukaryote organism's reads for quantification from read data containing it and eight of its microbial symbionts. The host (C. elegans worms) of course has a great genome and transcriptome available.` transcript.fa` is no problem.; The microbes all have genomes and gtfs, but not transcript files (on NCBI). Luckily, I'm not interested in quantifying them - I checked a couple samples with STAR and BBsplit (within the BBmap toolkit) and microbial read abundance is too low for any one bacterium to use in analysis. However, I still need to get those bacteria reads out of the picture when quantifying the host worm reads/transcripts. **What is the best approach to go from a mixed-organism read pool to quantified host transcripts?**. - Perhaps, target-transcriptome = worm_transcripts.fa, with a concatenated decoy composed of worm transcripts, worm genome, and the genomes of the 8 microbes? This seems like the fastest and least error prone method, based on my developing understanding of Salmon. - Or, truly align reads and bin them to new fastq files using genomes+gtfs with STAR/samtools (or just genomes with BBsplit). Then take the putative worm-only reads, and then run Salmon in a single-organisms routine manner? Perhaps this is more accurate in a way?. Thank you for any advice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/901
https://github.com/COMBINE-lab/salmon/issues/901:1324,Integrability,rout,routine,1324,"Hello, I'm interested in trying out Salmon for the first time. In this analysis, I would like to disentangle a host eukaryote organism's reads for quantification from read data containing it and eight of its microbial symbionts. The host (C. elegans worms) of course has a great genome and transcriptome available.` transcript.fa` is no problem.; The microbes all have genomes and gtfs, but not transcript files (on NCBI). Luckily, I'm not interested in quantifying them - I checked a couple samples with STAR and BBsplit (within the BBmap toolkit) and microbial read abundance is too low for any one bacterium to use in analysis. However, I still need to get those bacteria reads out of the picture when quantifying the host worm reads/transcripts. **What is the best approach to go from a mixed-organism read pool to quantified host transcripts?**. - Perhaps, target-transcriptome = worm_transcripts.fa, with a concatenated decoy composed of worm transcripts, worm genome, and the genomes of the 8 microbes? This seems like the fastest and least error prone method, based on my developing understanding of Salmon. - Or, truly align reads and bin them to new fastq files using genomes+gtfs with STAR/samtools (or just genomes with BBsplit). Then take the putative worm-only reads, and then run Salmon in a single-organisms routine manner? Perhaps this is more accurate in a way?. Thank you for any advice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/901
https://github.com/COMBINE-lab/salmon/issues/902:209,Availability,fault,fault,209,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:504,Availability,down,downloaded,504,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:781,Availability,error,error,781,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1343,Availability,fault,fault,1343,"st the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1635,Availability,avail,available,1635,"nda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility pri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1677,Availability,avail,available,1677,"b/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --vali",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4558,Availability,fault,fault,4558,"----------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4653,Availability,fault,fault,4653,"----------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4786,Availability,avail,available,4786,"----------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4828,Availability,avail,available,4828,"----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:10398,Availability,avail,available,10398,"ng] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any problem. I just wanted to report the bug.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:10583,Availability,error,error,10583,"ng] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any problem. I just wanted to report the bug.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:10791,Availability,error,error,10791,"ng] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any problem. I just wanted to report the bug.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:483,Deployability,install,installed,483,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1540,Deployability,UPGRADE,UPGRADE,1540,"nda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility pri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1728,Deployability,release,releases,1728,"oduces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1797,Deployability,upgrade,upgrade,1797,"oduces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1919,Deployability,update,updates,1919,"ode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4691,Deployability,UPGRADE,UPGRADE,4691,"----------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4879,Deployability,release,releases,4879,"-----------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4948,Deployability,upgrade,upgrade,4948,"-----------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:5070,Deployability,update,updates,5070," = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:10621,Deployability,update,update,10621,"ng] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any problem. I just wanted to report the bug.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:278,Integrability,depend,dependent,278,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3068,Performance,Load,Loading,3068,"ex ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3138,Performance,Load,Loading,3138,"hensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3216,Performance,Load,Loading,3216," { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3361,Performance,Load,Loading,3361,"salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3492,Performance,Load,Loading,3492,"ResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3626,Performance,Load,Loading,3626,"ments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output wh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:3870,Performance,Load,Loading,3870,23-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4022,Performance,Load,Loading,4022,"1.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest conve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4165,Performance,Load,Loading,4165,"ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4309,Performance,Load,Loading,4309,"--------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/genc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:4443,Performance,Load,Loading,4443,"-------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6193,Performance,Load,Loading,6193,"and ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6263,Performance,Load,Loading,6263,"gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6341,Performance,Load,Loading,6341," { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6486,Performance,Load,Loading,6486,"salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6617,Performance,Load,Loading,6617,"ResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6751,Performance,Load,Loading,6751,"ments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:6995,Performance,Load,Loading,6995,23-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:7147,Performance,Load,Loading,7147,8.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch w,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:7290,Performance,Load,Loading,7290,ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for furth,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:7434,Performance,Load,Loading,7434,--------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for further processing; [2023-11-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointL,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:7568,Performance,Load,Loading,7568,-------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for further processing; [2023-11-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointLog] [info] Number of mappings discarded because of alignment score : 148747; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments entirely,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:9271,Performance,optimiz,optimizer,9271,"-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointLog] [info] Number of mappings discarded because of alignment score : 148747; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 75092; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 67912; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 46918; [2023-11-30 09:38:33.436] [jointLog] [warning] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:9871,Performance,optimiz,optimizer,9871,"23-11-30 09:38:33.436] [jointLog] [warning] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:7995,Safety,detect,detected,7995,"ading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for further processing; [2023-11-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointLog] [info] Number of mappings discarded because of alignment score : 148747; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 75092; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 67912; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 46918; [2023-11-30 09:38:33.436] [jointLog] [warning] Only 268744 fragments were mapped, but the number of burn-in fragments was set to ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:2671,Security,validat,validateMappings,2671,"vailable at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:5796,Security,validat,validateMappings,5796,"###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1037,Testability,Log,Logs,1037,"cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; #",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:2363,Testability,Log,Logs,2363,"ipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:2398,Testability,log,logs,2398,"ipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:5488,Testability,Log,Logs,5488,"Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:5523,Testability,log,logs,5523,"Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/902:1246,Usability,clear,clear,1246," be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/903:30,Deployability,install,installed,30,"I am using Salmon (Salmon 1.3 installed through homebrew on mac ventura 13.5.2) for quantification in alignment mode. I have bam files (aligned to transcriptome) for nanopore data from Minimap2, which has primary and secondary alignments both (50% of total mapped reads are primary and other 50% are secondary alignments). Salmon is only performing quantification for primary alignments, but I also want to include the secondary alignments. . 1. Is there any argument I could use to include secondary alignments for quantification in Salmon Alignment mode? ; 2. Is it a good practice to include secondary alignments? 3. Are there any other important flags I should use which might be specific to ""Nanopore"" or ""Splicing Analysis"". . This is the code I am using at the moment: . salmon quant -t gencode.vM33.transcripts.fa -l A -g gencode.vM32.annotation.gtf -a barcode07.bam -o barcode_07_salmon_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/903
https://github.com/COMBINE-lab/salmon/issues/903:338,Performance,perform,performing,338,"I am using Salmon (Salmon 1.3 installed through homebrew on mac ventura 13.5.2) for quantification in alignment mode. I have bam files (aligned to transcriptome) for nanopore data from Minimap2, which has primary and secondary alignments both (50% of total mapped reads are primary and other 50% are secondary alignments). Salmon is only performing quantification for primary alignments, but I also want to include the secondary alignments. . 1. Is there any argument I could use to include secondary alignments for quantification in Salmon Alignment mode? ; 2. Is it a good practice to include secondary alignments? 3. Are there any other important flags I should use which might be specific to ""Nanopore"" or ""Splicing Analysis"". . This is the code I am using at the moment: . salmon quant -t gencode.vM33.transcripts.fa -l A -g gencode.vM32.annotation.gtf -a barcode07.bam -o barcode_07_salmon_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/903
https://github.com/COMBINE-lab/salmon/issues/904:120,Deployability,release,release,120,"Dear Salmon team,. It would be good if the SA decoy files provided in refgenie had gencode annotation with the ensemble release number also specified. Thanks and best wishes,; Rich; Richard Friedman, ; Columbia University Cancer Center; Biomedical Informatics Shared Resource",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/904
https://github.com/COMBINE-lab/salmon/issues/905:311,Deployability,install,installed,311,"Hello,; We have fastq files from an Illumina stranded human mRNA library (QC ok), sequenced on novaseq X in paired end (QC ok). But when we align with salmon, we only have 50% of reads aligned. Illumina certifies that they manage to align them with their tools at 72%, but we cannot reproduce with salmon1.10.2 installed with bioconda. We used the code:; salmon quant -i human_index -l ISR -1 Fastq/R1 -2 Fastq/R2 -p 8 --validateMappings -o SALMON_OUT. If anyone can help us increase this alignment %.; Thank you for your help.; Cecile",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/905
https://github.com/COMBINE-lab/salmon/issues/905:421,Security,validat,validateMappings,421,"Hello,; We have fastq files from an Illumina stranded human mRNA library (QC ok), sequenced on novaseq X in paired end (QC ok). But when we align with salmon, we only have 50% of reads aligned. Illumina certifies that they manage to align them with their tools at 72%, but we cannot reproduce with salmon1.10.2 installed with bioconda. We used the code:; salmon quant -i human_index -l ISR -1 Fastq/R1 -2 Fastq/R2 -p 8 --validateMappings -o SALMON_OUT. If anyone can help us increase this alignment %.; Thank you for your help.; Cecile",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/905
https://github.com/COMBINE-lab/salmon/issues/908:247,Availability,avail,available,247,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:1040,Performance,Load,Loading,1040,"t sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:1110,Performance,Load,Loading,1110,"the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28.202] [jointLog] [info] Number of mappings discarded because o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:2943,Performance,optimiz,optimizer,2943,"e, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28.202] [jointLog] [info] Number of mappings discarded because of alignment score : 18,226,670; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 762,980; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 82,701; [2024-01-27 01:10:28.219] [jointLog] [warning] Only 446871 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2024-01-27 01:10:28.219] [jointLog] [info] Mapping rate = 12.4124%. [2024-01-27 01:10:28.219] [jointLog] [info] finished quantifyLibrary(); [2024-01-27 01:10:28.224] [jointLog] [info] Starting optimizer; [2024-01-27 01:10:28.368] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2024-01-27 01:10:28.376] [jointLog] [info] iteration = 0 | max rel diff. = 174.042; [2024-01-27 01:10:28.453] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2024-01-27 01:10:52.990] [jointLog] [info] Computed expected counts (for bias correction); [2024-01-27 01:10:52.990] [jointLog] [info] processed bias for 0.0% of the transcripts; [2024-01-27 01:10:55.410] [jointLog] [info] processed bias for 10.0% of the transcripts; [2024-01-27 01:10:57.934] [jointLog] [info] processed bias for 20.0% of the transcripts; [2024-01-27 01:11:00.570] [jointLog] [info] processed bias for 30.0% of the transcripts; [2024-01-27 01:11:03.092] [jointLog] [info] processed bias for 40.0% of the transcripts; [2024-01-27 01:11:05.416] [jointLog] [info] processed bias for 50.0% of the transcripts; [2024-01-27 01:11:07.798] [jointLog] [info] processed bias for 60.0% of t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:4812,Performance,optimiz,optimizer,4812,"generate; [2024-01-27 01:10:28.376] [jointLog] [info] iteration = 0 | max rel diff. = 174.042; [2024-01-27 01:10:28.453] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2024-01-27 01:10:52.990] [jointLog] [info] Computed expected counts (for bias correction); [2024-01-27 01:10:52.990] [jointLog] [info] processed bias for 0.0% of the transcripts; [2024-01-27 01:10:55.410] [jointLog] [info] processed bias for 10.0% of the transcripts; [2024-01-27 01:10:57.934] [jointLog] [info] processed bias for 20.0% of the transcripts; [2024-01-27 01:11:00.570] [jointLog] [info] processed bias for 30.0% of the transcripts; [2024-01-27 01:11:03.092] [jointLog] [info] processed bias for 40.0% of the transcripts; [2024-01-27 01:11:05.416] [jointLog] [info] processed bias for 50.0% of the transcripts; [2024-01-27 01:11:07.798] [jointLog] [info] processed bias for 60.0% of the transcripts; [2024-01-27 01:11:10.207] [jointLog] [info] processed bias for 70.0% of the transcripts; [2024-01-27 01:11:12.614] [jointLog] [info] processed bias for 80.0% of the transcripts; [2024-01-27 01:11:15.076] [jointLog] [info] processed bias for 90.0% of the transcripts; [2024-01-27 01:11:17.845] [jointLog] [info] processed bias for 100.0% of the transcripts; [2024-01-27 01:11:18.538] [jointLog] [info] iteration = 100 | max rel diff. = 3.26654; [2024-01-27 01:11:19.295] [jointLog] [info] iteration = 200 | max rel diff. = 0.0770813; [2024-01-27 01:11:20.053] [jointLog] [info] iteration = 300 | max rel diff. = 0.194297; [2024-01-27 01:11:20.809] [jointLog] [info] iteration = 400 | max rel diff. = 0.0224582; [2024-01-27 01:11:21.021] [jointLog] [info] iteration = 429 | max rel diff. = 0.00843674; [2024-01-27 01:11:21.067] [jointLog] [info] Finished optimizer; [2024-01-27 01:11:21.067] [jointLog] [info] writing output ; ```. Is it normal for such converted fastq files?; Thanks a lot!. _Originally posted by @KOBE24DUNK in https://github.com/COMBINE-lab/salmon/discussions/906_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:1394,Safety,detect,detected,1394,".030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28.202] [jointLog] [info] Number of mappings discarded because of alignment score : 18,226,670; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 762,980; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2024-01-27",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:643,Security,validat,validateMappings,643,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/908:351,Testability,log,log,351,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908
https://github.com/COMBINE-lab/salmon/issues/909:11,Deployability,install,installation,11,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909
https://github.com/COMBINE-lab/salmon/issues/909:123,Deployability,install,installable,123,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909
https://github.com/COMBINE-lab/salmon/issues/909:205,Deployability,install,installable,205,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909
https://github.com/COMBINE-lab/salmon/issues/909:298,Deployability,install,installable,298,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909
https://github.com/COMBINE-lab/salmon/issues/909:415,Deployability,install,installed,415,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909
https://github.com/COMBINE-lab/salmon/issues/909:518,Deployability,install,installed,518,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909
https://github.com/COMBINE-lab/salmon/issues/910:195,Availability,redundant,redundant,195,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The issue existed in both bulk and single-cell mode. **Describe the bug**; When using Salmon to quantify non-redundant (NR) genes in metagenomic datasets, the generated output is missing a summary for nucleotide IDs that correspond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910
https://github.com/COMBINE-lab/salmon/issues/910:1365,Availability,down,downloaded,1365,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910
https://github.com/COMBINE-lab/salmon/issues/910:1344,Deployability,install,installed,1344,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910
https://github.com/COMBINE-lab/salmon/issues/910:1413,Deployability,install,install,1413,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910
https://github.com/COMBINE-lab/salmon/issues/910:195,Safety,redund,redundant,195,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The issue existed in both bulk and single-cell mode. **Describe the bug**; When using Salmon to quantify non-redundant (NR) genes in metagenomic datasets, the generated output is missing a summary for nucleotide IDs that correspond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910
https://github.com/COMBINE-lab/salmon/issues/910:1747,Usability,clear,clear,1747,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910
https://github.com/COMBINE-lab/salmon/issues/911:86,Deployability,release,releases,86,"In contrast to version 1.10.0, [version 1.10.1](https://github.com/COMBINE-lab/salmon/releases/tag/v1.10.1) only provides the source code and no precompiled binary archive.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/911
https://github.com/COMBINE-lab/salmon/issues/912:394,Availability,error,error,394,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:610,Availability,down,downstream,610,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:669,Availability,error,error,669,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:712,Availability,error,error,712,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1099,Availability,Down,Downloads,1099,"almon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1178,Availability,Down,Downloads,1178,"ling on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 35",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1958,Availability,avail,available,1958,"akes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system ty",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1998,Availability,avail,available,1998,"s configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2104,Availability,avail,available,2104,"mmand line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: resu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2589,Availability,Down,Downloads,2589,".6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking whi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5902,Availability,error,error,5902," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5964,Availability,error,error,5964," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6096,Availability,error,error,6096," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6167,Availability,error,error,6167," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6387,Availability,error,error,6387,"arwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7798,Availability,error,error,7798,"URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7827,Availability,Down,Downloads,7827,"URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7888,Availability,error,error,7888,"e HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineToo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:9130,Availability,Down,Downloads,9130,_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; C,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:9440,Availability,Down,Downloads,9440,AGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:9550,Availability,Down,Downloads,9550,_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DECODER_IA64_FALSE='#'; COND_DECODER_IA64_TRUE=''; COND_DECODER_LZMA1_FALSE='#'; COND_DECODER_LZMA1_TRUE=''; COND_DECODER_LZMA2_FALSE='#'; COND_DECODER_LZMA2_TRUE=''; COND_DECODER_LZ_FALSE='#'; CON,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:9660,Availability,Down,Downloads,9660,lue=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DECODER_IA64_FALSE='#'; COND_DECODER_IA64_TRUE=''; COND_DECODER_LZMA1_FALSE='#'; COND_DECODER_LZMA1_TRUE=''; COND_DECODER_LZMA2_FALSE='#'; COND_DECODER_LZMA2_TRUE=''; COND_DECODER_LZ_FALSE='#'; COND_DECODER_LZ_TRUE=''; COND_DECODER_POWERPC_FALSE='#'; COND_DECODER_POWERPC_TRUE=''; COND_DECODER_SIMPLE_FALSE=,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:12795,Availability,echo,echo,12795,COND_ENCODER_ARMTHUMB_FALSE='#'; COND_ENCODER_ARMTHUMB_TRUE=''; COND_ENCODER_ARM_FALSE='#'; COND_ENCODER_ARM_TRUE=''; COND_ENCODER_DELTA_FALSE='#'; COND_ENCODER_DELTA_TRUE=''; COND_ENCODER_IA64_FALSE='#'; COND_ENCODER_IA64_TRUE=''; COND_ENCODER_LZMA1_FALSE='#'; COND_ENCODER_LZMA1_TRUE=''; COND_ENCODER_LZMA2_FALSE='#'; COND_ENCODER_LZMA2_TRUE=''; COND_ENCODER_LZ_FALSE='#'; COND_ENCODER_LZ_TRUE=''; COND_ENCODER_POWERPC_FALSE='#'; COND_ENCODER_POWERPC_TRUE=''; COND_ENCODER_SIMPLE_FALSE='#'; COND_ENCODER_SIMPLE_TRUE=''; COND_ENCODER_SPARC_FALSE='#'; COND_ENCODER_SPARC_TRUE=''; COND_ENCODER_X86_FALSE='#'; COND_ENCODER_X86_TRUE=''; COND_FILTER_ARMTHUMB_FALSE='#'; COND_FILTER_ARMTHUMB_TRUE=''; COND_FILTER_ARM_FALSE='#'; COND_FILTER_ARM_TRUE=''; COND_FILTER_DELTA_FALSE='#'; COND_FILTER_DELTA_TRUE=''; COND_FILTER_IA64_FALSE='#'; COND_FILTER_IA64_TRUE=''; COND_FILTER_LZMA1_FALSE='#'; COND_FILTER_LZMA1_TRUE=''; COND_FILTER_LZMA2_FALSE='#'; COND_FILTER_LZMA2_TRUE=''; COND_FILTER_LZ_FALSE='#'; COND_FILTER_LZ_TRUE=''; COND_FILTER_POWERPC_FALSE='#'; COND_FILTER_POWERPC_TRUE=''; COND_FILTER_SIMPLE_FALSE='#'; COND_FILTER_SIMPLE_TRUE=''; COND_FILTER_SPARC_FALSE='#'; COND_FILTER_SPARC_TRUE=''; COND_FILTER_X86_FALSE='#'; COND_FILTER_X86_TRUE=''; COND_GNULIB_FALSE=''; COND_GNULIB_TRUE=''; COND_INTERNAL_SHA256_FALSE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:13425,Availability,Down,Downloads,13425,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:15073,Availability,Down,Downloads,15073,"=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXTRA_OPTIONS=''; ac_ct_AR=''; ac_ct_CC='/Library/Developer/CommandLineTools/usr/bin/cc'; ac_ct_DUMPBIN=''; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:15397,Availability,Down,Downloads,15397,"EEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:64,Deployability,install,installing,64,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:143,Deployability,install,installation,143,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:162,Deployability,install,installing,162,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1211,Deployability,install,install,1211,"e instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/osleve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4273,Deployability,install,install,4273," powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4315,Deployability,install,install,4315,"e:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4503,Deployability,install,install-sh,4503,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5484,Deployability,Install,InstalledDir,5484,igure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5741,Deployability,Install,InstalledDir,5741," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:8820,Deployability,install,install,8820,er cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FA,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:13042,Deployability,INSTALL,INSTALL,13042,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:13079,Deployability,INSTALL,INSTALL,13079,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:13108,Deployability,INSTALL,INSTALL,13108,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:13533,Deployability,install,install-sh,13533,"COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXTRA_OPTIONS=''; ac_ct_AR=''; ac_ct_CC='/Library/Developer/CommandLineTools/usr/bin/cc'; ac_ct_DUMPBIN=''; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:15125,Deployability,install,install-sh,15125,"EEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:15430,Deployability,install,install,15430,"ar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1; #define HAVE_DECODER_DELTA 1; #define HAVE_DECODER_X86 1; #define HAVE_DECODER_POWERPC 1; #define HAVE_DECODER_IA64 1; #define HAVE_DECODER_ARM 1; #define HAVE_DECODER_ARMTHUMB 1; #define HAVE_DECODER_SPARC 1; #define HAVE_MF_HC3 1; #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3278,Energy Efficiency,power,powerpc,3278,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3407,Energy Efficiency,power,powerpc,3407,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:859,Integrability,message,messages,859,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:691,Modifiability,config,configuring,691,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:905,Modifiability,config,configure,905,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:936,Modifiability,config,configure,936,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:990,Modifiability,config,configure,990,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1141,Modifiability,config,configure,1141,"ling on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 35",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1892,Modifiability,config,configured,1892,"le; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## --",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2908,Modifiability,config,configure,2908,"ically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2952,Modifiability,config,configure,2952,"ically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3000,Modifiability,config,configure,3000,"; Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3043,Modifiability,config,configure,3043,"; Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3091,Modifiability,config,configure,3091,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3154,Modifiability,config,configure,3154,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3182,Modifiability,config,configure,3182,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3232,Modifiability,config,configure,3232,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3311,Modifiability,config,configure,3311,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3361,Modifiability,config,configure,3361,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3440,Modifiability,config,configure,3440,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3495,Modifiability,config,configure,3495,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3540,Modifiability,config,configure,3540,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3598,Modifiability,config,configure,3598,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3642,Modifiability,config,configure,3642,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3710,Modifiability,config,configure,3710,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3738,Modifiability,config,configure,3738,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3802,Modifiability,config,configure,3802,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3830,Modifiability,config,configure,3830,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3887,Modifiability,config,configure,3887,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3923,Modifiability,config,configure,3923,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4002,Modifiability,config,configure,4002,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4035,Modifiability,config,configure,4035,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4105,Modifiability,config,configure,4105,"cking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4133,Modifiability,config,configure,4133,"ld be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: res",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4194,Modifiability,config,configure,4194,"hecking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: r",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4227,Modifiability,config,configure,4227,"configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/Command",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4282,Modifiability,config,configure,4282,"a64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4327,Modifiability,config,configure,4327,"ing which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Deve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4387,Modifiability,config,configure,4387,"zma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4416,Modifiability,config,configure,4416,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4469,Modifiability,config,configure,4469,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4521,Modifiability,config,configure,4521,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4556,Modifiability,config,configure,4556,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4584,Modifiability,config,configure,4584,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4619,Modifiability,config,configure,4619,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4647,Modifiability,config,configure,4647,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4682,Modifiability,config,configure,4682,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4710,Modifiability,config,configure,4710,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4744,Modifiability,config,configure,4744,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4780,Modifiability,config,configure,4780,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4809,Modifiability,config,configure,4809,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4861,Modifiability,config,configure,4861,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4890,Modifiability,config,configure,4890,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4944,Modifiability,variab,variables,4944,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4955,Modifiability,config,configure,4955,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4984,Modifiability,config,configure,4984,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5030,Modifiability,config,configure,5030,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5059,Modifiability,config,configure,5059,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5119,Modifiability,config,configure,5119,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5148,Modifiability,config,configure,5148,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5182,Modifiability,config,configure,5182,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5254,Modifiability,config,configure,5254,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5303,Modifiability,config,configure,5303,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5543,Modifiability,config,configure,5543,igure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5567,Modifiability,config,configure,5567,igure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5800,Modifiability,config,configure,5800," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5824,Modifiability,config,configure,5824," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:5987,Modifiability,config,configure,5987," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6011,Modifiability,config,configure,6011," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6190,Modifiability,config,configure,6190," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6214,Modifiability,config,configure,6214," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6269,Modifiability,config,configure,6269," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6461,Modifiability,config,configure,6461,"arwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6485,Modifiability,config,configure,6485,"arwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:6513,Modifiability,config,configure,6513,"arwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7782,Modifiability,config,configure,7782,"URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7872,Modifiability,config,configure,7872,"e HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineToo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7938,Modifiability,config,config,7938,"e HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineToo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:8001,Modifiability,variab,variables,8001,"C 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:9054,Modifiability,variab,variables,9054,c_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:16748,Modifiability,config,configure,16748,"ir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1; #define HAVE_DECODER_DELTA 1; #define HAVE_DECODER_X86 1; #define HAVE_DECODER_POWERPC 1; #define HAVE_DECODER_IA64 1; #define HAVE_DECODER_ARM 1; #define HAVE_DECODER_ARMTHUMB 1; #define HAVE_DECODER_SPARC 1; #define HAVE_MF_HC3 1; #define HAVE_MF_HC4 1; #define HAVE_MF_BT2 1; #define HAVE_MF_BT3 1; #define HAVE_MF_BT4 1; #define HAVE_CHECK_CRC32 1; #define HAVE_CHECK_CRC64 1; #define HAVE_CHECK_SHA256 1; #define ASSUME_RAM 128; #define PACKAGE ""xz""; #define VERSION ""5.2.2"". configure: exit 77; ""5.2.2"". configure: exit 77. Steps and data to reproduce the behavior:; salmon-1.10.1/cmake -DFETCH_BOOST=TRUE; make. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:16777,Modifiability,config,configure,16777,"ir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1; #define HAVE_DECODER_DELTA 1; #define HAVE_DECODER_X86 1; #define HAVE_DECODER_POWERPC 1; #define HAVE_DECODER_IA64 1; #define HAVE_DECODER_ARM 1; #define HAVE_DECODER_ARMTHUMB 1; #define HAVE_DECODER_SPARC 1; #define HAVE_MF_HC3 1; #define HAVE_MF_HC4 1; #define HAVE_MF_BT2 1; #define HAVE_MF_BT3 1; #define HAVE_MF_BT4 1; #define HAVE_CHECK_CRC32 1; #define HAVE_CHECK_CRC64 1; #define HAVE_CHECK_SHA256 1; #define ASSUME_RAM 128; #define PACKAGE ""xz""; #define VERSION ""5.2.2"". configure: exit 77; ""5.2.2"". configure: exit 77. Steps and data to reproduce the behavior:; salmon-1.10.1/cmake -DFETCH_BOOST=TRUE; make. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2195,Performance,Load,Load,2195,"rs/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3680,Performance,optimiz,optimizations,3680,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7995,Performance,Cache,Cache,7995,"C 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:4454,Safety,safe,safe,4454,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2631,Security,secur,security,2631,"/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2712,Security,secur,security,2712,"/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2787,Security,secur,security,2787,"ernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred ov",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:3571,Security,integrity,integrity,3571,,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:749,Testability,log,log,749,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:1988,Testability,log,logically,1988,"s configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:2878,Testability,test,tests,2878,"EASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:7945,Testability,log,log,7945," 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/913:85,Availability,error,error,85,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:1456,Availability,failure,failure,1456,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:5,Deployability,install,installed,5,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:1393,Performance,Load,Loading,1393,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:253,Security,validat,validateMappings,253,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:527,Security,validat,validateMappings,527,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:812,Security,validat,validateMappings,812,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:974,Security,validat,validateMappings,974,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:1124,Security,validat,validateMappings,1124,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:586,Testability,Log,Logs,586,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:618,Testability,log,logs,618,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:1446,Testability,assert,assertion,1446,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/914:42,Availability,error,error,42,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:1250,Availability,Error,Error,1250,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:1606,Availability,Error,Error,1606,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:946,Deployability,release,release,946,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:1683,Integrability,message,message,1683,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:663,Security,validat,validateMappings,663,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:698,Security,validat,validation,698,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:856,Security,validat,validation,856,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:1055,Security,validat,validateMappings,1055,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:375,Testability,Log,Logs,375,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:420,Testability,log,logs,420,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/914:1017,Testability,test,testing,1017,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/915:348,Availability,error,error,348,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915
https://github.com/COMBINE-lab/salmon/issues/915:211,Deployability,install,installed,211,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915
https://github.com/COMBINE-lab/salmon/issues/915:360,Performance,load,loading,360,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915
https://github.com/COMBINE-lab/salmon/pull/916:8,Deployability,update,updates,8,This PR updates the version of stadenio_libs and htscodecs.; These versions introduce changes that make them more amenable to be compiled for ARM.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/916
https://github.com/COMBINE-lab/salmon/pull/917:31,Deployability,patch,patch,31,Merge develop into master with patch to enable linux-ARM build on bioconda.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/917
https://github.com/COMBINE-lab/salmon/issues/918:445,Availability,down,download,445,"Hi, such a fantastic RNA-seq analyze tool Salmon! Recently, I used Salmon to analyze transcript level expression and the information of my analyze tool:. - Salmon: v1.6.0 (install from bioconda); - STAR: 2.7.9a (install from bioconda). And the detailed commands:. - Salmon:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/da6f0253-4dea-4566-aca6-749d4532ccc4); and the transcript index is constructed with hg38 transcripts fasta download from GENCODE:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/a839ba99-d731-45e4-bdc4-85c37419cd9e). - STAR:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/f657043b-c16b-4629-8b41-71acf14fb768). All commands were evaluated with Centos system. After get the result file of Salmon, I tried to check the result in genome browser using BAM only with unique mapping reads produced by STAR. But I am confused with the following result:. According to salmon transript level TPM value, PPIE gene is tend to use longer isoform (the labelled value is TPM):; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/daea059a-f0eb-4ecd-bbe3-3d4714564bc8); But when I visualized this gene in genome browser, I found that their are few reads aligned to specific region of the longest transcript:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/b4f6443f-319d-4e2c-8245-56941497ee2f). So, I'm confused about this result and search form some possible reasons. There are some people saying that because Salmon uses transcript index rather than genome index like STAR, so it can rescue more reads. But I would like to ask you for more advices, great thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/918
https://github.com/COMBINE-lab/salmon/issues/918:172,Deployability,install,install,172,"Hi, such a fantastic RNA-seq analyze tool Salmon! Recently, I used Salmon to analyze transcript level expression and the information of my analyze tool:. - Salmon: v1.6.0 (install from bioconda); - STAR: 2.7.9a (install from bioconda). And the detailed commands:. - Salmon:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/da6f0253-4dea-4566-aca6-749d4532ccc4); and the transcript index is constructed with hg38 transcripts fasta download from GENCODE:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/a839ba99-d731-45e4-bdc4-85c37419cd9e). - STAR:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/f657043b-c16b-4629-8b41-71acf14fb768). All commands were evaluated with Centos system. After get the result file of Salmon, I tried to check the result in genome browser using BAM only with unique mapping reads produced by STAR. But I am confused with the following result:. According to salmon transript level TPM value, PPIE gene is tend to use longer isoform (the labelled value is TPM):; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/daea059a-f0eb-4ecd-bbe3-3d4714564bc8); But when I visualized this gene in genome browser, I found that their are few reads aligned to specific region of the longest transcript:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/b4f6443f-319d-4e2c-8245-56941497ee2f). So, I'm confused about this result and search form some possible reasons. There are some people saying that because Salmon uses transcript index rather than genome index like STAR, so it can rescue more reads. But I would like to ask you for more advices, great thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/918
https://github.com/COMBINE-lab/salmon/issues/918:212,Deployability,install,install,212,"Hi, such a fantastic RNA-seq analyze tool Salmon! Recently, I used Salmon to analyze transcript level expression and the information of my analyze tool:. - Salmon: v1.6.0 (install from bioconda); - STAR: 2.7.9a (install from bioconda). And the detailed commands:. - Salmon:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/da6f0253-4dea-4566-aca6-749d4532ccc4); and the transcript index is constructed with hg38 transcripts fasta download from GENCODE:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/a839ba99-d731-45e4-bdc4-85c37419cd9e). - STAR:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/f657043b-c16b-4629-8b41-71acf14fb768). All commands were evaluated with Centos system. After get the result file of Salmon, I tried to check the result in genome browser using BAM only with unique mapping reads produced by STAR. But I am confused with the following result:. According to salmon transript level TPM value, PPIE gene is tend to use longer isoform (the labelled value is TPM):; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/daea059a-f0eb-4ecd-bbe3-3d4714564bc8); But when I visualized this gene in genome browser, I found that their are few reads aligned to specific region of the longest transcript:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/b4f6443f-319d-4e2c-8245-56941497ee2f). So, I'm confused about this result and search form some possible reasons. There are some people saying that because Salmon uses transcript index rather than genome index like STAR, so it can rescue more reads. But I would like to ask you for more advices, great thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/918
https://github.com/COMBINE-lab/salmon/issues/920:191,Availability,error,error,191,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920
https://github.com/COMBINE-lab/salmon/issues/920:642,Availability,down,downloaded,642,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920
https://github.com/COMBINE-lab/salmon/issues/920:621,Deployability,install,installed,621,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920
https://github.com/COMBINE-lab/salmon/issues/920:833,Usability,clear,clear,833,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920
https://github.com/COMBINE-lab/salmon/issues/921:466,Security,validat,validateMappings,466,"Hello,. I use salmon to analyse my metatranscriptomic data. In my results I found, some very high TPM but this TPM have already a very small EffectiveLength. Because of this very small EffectiveLength, the TPM are very high (and less reproducible between my replicates). How to analyse this TPM ? It's possible to remove this bias with a salmon argument ? . command line : ; ```bash; salmon quant -i {input.salmon_index} -l A -1 {input.fastq_1} -2 {input.fastq_2} --validateMappings -o {params.output_dir} --meta -p {threads} --seqBias --gcBias; ```. Exemple of Top3 TPM on a sample : ; ```; Name	Length	EffectiveLength	TPM	NumReads; lcl|NC_001136.10_cds_NP_010562.1_1187	168	8.000	27437.393774	1808.000; lcl|NC_001145.3_cds_NP_013978.1_4507	180	13.000	80351.033367	8604.000; lcl|NC_001137.3_cds_NP_010898.1_1506	132	1.000	85468.695651	704.000; ```. Thanks,. Steven",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/921
https://github.com/COMBINE-lab/salmon/issues/923:137,Availability,fault,fault,137,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:839,Availability,down,downloaded,839,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:3010,Availability,error,error,3010,"=> { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant/logs; [2024-04-09 18:22:04.559] [jointLog] [info] setting maxHashResizeThreads to 24; [2024-04-09 18:22:04.559] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:3429,Availability,error,error,3429,"lative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:3848,Availability,error,error,3848,] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:4267,Availability,error,error,4267,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:4686,Availability,error,error,4686,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has n,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:5105,Availability,error,error,5105,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:5524,Availability,error,error,5524,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:5942,Availability,error,error,5942,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:6360,Availability,error,error,6360,5df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:6778,Availability,error,error,6778,"4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:7268,Availability,error,error,7268,"024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:7421,Availability,error,error,7421," model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA004 kit reads aligned with minimap2. I have previously trialled running the above command on a single bam file and it seemed to have worked.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:7574,Availability,error,error,7574," model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA004 kit reads aligned with minimap2. I have previously trialled running the above command on a single bam file and it seemed to have worked.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:7664,Availability,fault,fault,7664," model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA004 kit reads aligned with minimap2. I have previously trialled running the above command on a single bam file and it seemed to have worked.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:818,Deployability,install,installed,818,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:888,Deployability,install,installed,888,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:2042,Testability,Log,Logs,2042," used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant/logs; [2024-04-09 18:22:04.559] [jointLog] [info] setting maxHashResizeThreads to 24; [2024-04-09 18:22:04.559] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:2132,Testability,log,logs,2132," used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant/logs; [2024-04-09 18:22:04.559] [jointLog] [info] setting maxHashResizeThreads to 24; [2024-04-09 18:22:04.559] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/923:1099,Usability,clear,clear,1099,"`419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/tra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923
https://github.com/COMBINE-lab/salmon/issues/924:270,Deployability,release,release,270,"Hello dear Salmon developers,; First of all - thank you very much for your effort in supporting Oxford Nanopore reads! I've been Salmon for quantification of ONT sequencing experiments, and recently I decided to dive deeper into how it produces counts for ONT data. The release with initial ONT support (v1.5.1) states that counts should be 100 for all transcripts because at that time it was not clear how EffectiveLength should be computed. However, now (when using release v1.10.1) Salmon produces some meaningful count estimates. I tried to figure out the algorithm by looking at the code, but failed... ; Is there a place where you have the said algorithm documented, or if not, could you please explain how is it implemented?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/924
https://github.com/COMBINE-lab/salmon/issues/924:468,Deployability,release,release,468,"Hello dear Salmon developers,; First of all - thank you very much for your effort in supporting Oxford Nanopore reads! I've been Salmon for quantification of ONT sequencing experiments, and recently I decided to dive deeper into how it produces counts for ONT data. The release with initial ONT support (v1.5.1) states that counts should be 100 for all transcripts because at that time it was not clear how EffectiveLength should be computed. However, now (when using release v1.10.1) Salmon produces some meaningful count estimates. I tried to figure out the algorithm by looking at the code, but failed... ; Is there a place where you have the said algorithm documented, or if not, could you please explain how is it implemented?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/924
https://github.com/COMBINE-lab/salmon/issues/924:397,Usability,clear,clear,397,"Hello dear Salmon developers,; First of all - thank you very much for your effort in supporting Oxford Nanopore reads! I've been Salmon for quantification of ONT sequencing experiments, and recently I decided to dive deeper into how it produces counts for ONT data. The release with initial ONT support (v1.5.1) states that counts should be 100 for all transcripts because at that time it was not clear how EffectiveLength should be computed. However, now (when using release v1.10.1) Salmon produces some meaningful count estimates. I tried to figure out the algorithm by looking at the code, but failed... ; Is there a place where you have the said algorithm documented, or if not, could you please explain how is it implemented?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/924
https://github.com/COMBINE-lab/salmon/issues/925:4939,Availability,down,downloaded,4939,"t_mapped"": 55.82249021745959,; mapped/salmon_MS0.33_AG1232_015_FI3/aux_info/meta_info.json: ""percent_mapped"": 55.80153947588767,; mapped/salmon_MS0.33_AG1232_016_FG1/aux_info/meta_info.json: ""percent_mapped"": 49.49543448190936,; mapped/salmon_MS0.33_AG1232_017_FG2/aux_info/meta_info.json: ""percent_mapped"": 55.19039678416574,; mapped/salmon_MS0.33_AG1232_018_FG3/aux_info/meta_info.json: ""percent_mapped"": 50.730150343757518,; ```. The [readthedocs](https://salmon.readthedocs.io/en/latest/file_formats.html#meta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:5881,Availability,recover,recoverOrphans,5881,"installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*001_*/aux_info/meta*.json; ""num_processed"": 39191989,; ""num_mapped"": 16720284,; ""num_decoy_fragments"": 3376529,; ""num_dovetail_fragments"": 5188759,; ""num_fragments_filtered_vm"": 3487789,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 3046512,; ""percent_mapped"": 42.6625043194414,; ""call"": ""quant"",; ```. The numbers from `unmapped_names.txt` are as follows:. ```; $ awk '{print $2}' mapped/salmon_MS0.33_AG1232_001_MR1/aux_info/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:9461,Availability,avail,available,9461,"rded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanation of why read mapping rates are low in my specific case, I'm after an explanation *in the documentation* of why read mapping rates from Salmon are generally low. Update: I've just confirmed that trimming doesn't have any substantial impact on the results for our first sample [AG1232_001_MR1].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:4918,Deployability,install,installed,4918,"t_mapped"": 55.82249021745959,; mapped/salmon_MS0.33_AG1232_015_FI3/aux_info/meta_info.json: ""percent_mapped"": 55.80153947588767,; mapped/salmon_MS0.33_AG1232_016_FG1/aux_info/meta_info.json: ""percent_mapped"": 49.49543448190936,; mapped/salmon_MS0.33_AG1232_017_FG2/aux_info/meta_info.json: ""percent_mapped"": 55.19039678416574,; mapped/salmon_MS0.33_AG1232_018_FG3/aux_info/meta_info.json: ""percent_mapped"": 50.730150343757518,; ```. The [readthedocs](https://salmon.readthedocs.io/en/latest/file_formats.html#meta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:4991,Deployability,install,installation,4991,"t_mapped"": 55.82249021745959,; mapped/salmon_MS0.33_AG1232_015_FI3/aux_info/meta_info.json: ""percent_mapped"": 55.80153947588767,; mapped/salmon_MS0.33_AG1232_016_FG1/aux_info/meta_info.json: ""percent_mapped"": 49.49543448190936,; mapped/salmon_MS0.33_AG1232_017_FG2/aux_info/meta_info.json: ""percent_mapped"": 55.19039678416574,; mapped/salmon_MS0.33_AG1232_018_FG3/aux_info/meta_info.json: ""percent_mapped"": 50.730150343757518,; ```. The [readthedocs](https://salmon.readthedocs.io/en/latest/file_formats.html#meta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:9539,Deployability,Release,Release,9539,"rded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanation of why read mapping rates are low in my specific case, I'm after an explanation *in the documentation* of why read mapping rates from Salmon are generally low. Update: I've just confirmed that trimming doesn't have any substantial impact on the results for our first sample [AG1232_001_MR1].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:9796,Deployability,Update,Update,9796,"rded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanation of why read mapping rates are low in my specific case, I'm after an explanation *in the documentation* of why read mapping rates from Salmon are generally low. Update: I've just confirmed that trimming doesn't have any substantial impact on the results for our first sample [AG1232_001_MR1].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:8741,Energy Efficiency,adapt,adapters,8741,"nt-697125235) in other mapping issue reports, it's possible that there could be multiple fragments in those numbers that contribute to a single read, meaning the unaccounted number is probably higher:. > The number you are looking at is the number of discarded mappings, not the number of discarded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:8741,Integrability,adapter,adapters,8741,"nt-697125235) in other mapping issue reports, it's possible that there could be multiple fragments in those numbers that contribute to a single read, meaning the unaccounted number is probably higher:. > The number you are looking at is the number of discarded mappings, not the number of discarded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:8741,Modifiability,adapt,adapters,8741,"nt-697125235) in other mapping issue reports, it's possible that there could be multiple fragments in those numbers that contribute to a single read, meaning the unaccounted number is probably higher:. > The number you are looking at is the number of discarded mappings, not the number of discarded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:5881,Safety,recover,recoverOrphans,5881,"installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*001_*/aux_info/meta*.json; ""num_processed"": 39191989,; ""num_mapped"": 16720284,; ""num_decoy_fragments"": 3376529,; ""num_dovetail_fragments"": 5188759,; ""num_fragments_filtered_vm"": 3487789,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 3046512,; ""percent_mapped"": 42.6625043194414,; ""call"": ""quant"",; ```. The numbers from `unmapped_names.txt` are as follows:. ```; $ awk '{print $2}' mapped/salmon_MS0.33_AG1232_001_MR1/aux_info/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:5417,Security,validat,validateMappings,5417,"eta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/925:5782,Security,validat,validateMappings,5782,"version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*001_*/aux_info/meta*.json; ""num_processed"": 39191989,; ""num_mapped"": 16720284,; ""num_decoy_fragments"": 3376529,; ""num_dovetail_fragments"": 5188759,; ""num_fragments_filtered_vm"": 3487789,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 3046512,; ""percent_mapped"": 42.6625043194414,; ""call"": ""quant"",; ```. The numbers from `unmapped_name",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925
https://github.com/COMBINE-lab/salmon/issues/926:446,Deployability,pipeline,pipeline,446,"NO BUG! I am presenting bulk RNA seq to non-bioinformaticians and wanted to go over how Salmon works in simple terms. . I tried understanding all the algorithms and models underlying the tool, but need help in explaining it more simply to a crowd of non-mathematicians. How would you explain the quasi mapping and quantification broadly and in simple terms? No need to get into deeper details. Just want an overview of a complicated mathematical pipeline. Presentation is on Monday so would really appreciate a timely response.; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926
https://github.com/COMBINE-lab/salmon/issues/926:104,Usability,simpl,simple,104,"NO BUG! I am presenting bulk RNA seq to non-bioinformaticians and wanted to go over how Salmon works in simple terms. . I tried understanding all the algorithms and models underlying the tool, but need help in explaining it more simply to a crowd of non-mathematicians. How would you explain the quasi mapping and quantification broadly and in simple terms? No need to get into deeper details. Just want an overview of a complicated mathematical pipeline. Presentation is on Monday so would really appreciate a timely response.; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926
https://github.com/COMBINE-lab/salmon/issues/926:229,Usability,simpl,simply,229,"NO BUG! I am presenting bulk RNA seq to non-bioinformaticians and wanted to go over how Salmon works in simple terms. . I tried understanding all the algorithms and models underlying the tool, but need help in explaining it more simply to a crowd of non-mathematicians. How would you explain the quasi mapping and quantification broadly and in simple terms? No need to get into deeper details. Just want an overview of a complicated mathematical pipeline. Presentation is on Monday so would really appreciate a timely response.; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926
https://github.com/COMBINE-lab/salmon/issues/926:344,Usability,simpl,simple,344,"NO BUG! I am presenting bulk RNA seq to non-bioinformaticians and wanted to go over how Salmon works in simple terms. . I tried understanding all the algorithms and models underlying the tool, but need help in explaining it more simply to a crowd of non-mathematicians. How would you explain the quasi mapping and quantification broadly and in simple terms? No need to get into deeper details. Just want an overview of a complicated mathematical pipeline. Presentation is on Monday so would really appreciate a timely response.; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926
https://github.com/COMBINE-lab/salmon/issues/927:358,Availability,error,error,358,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:1229,Availability,error,error,1229,"nally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:1664,Availability,error,error,1664,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:1875,Availability,error,error,1875,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:1989,Availability,down,downloaded,1989,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:160,Deployability,install,installed,160,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:669,Deployability,update,update,669,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:695,Deployability,install,install,695,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:1968,Deployability,install,installed,1968,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:2051,Deployability,install,install,2051,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:364,Integrability,message,message,364,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/927:1610,Security,validat,validateMappings,1610,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/929:230,Availability,recover,recovery,230,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:414,Availability,recover,recovery,414,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:824,Availability,down,downloaded,824,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:869,Availability,down,downloaded,869,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2242,Availability,recover,recoverOrphans,2242,"z --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:4412,Availability,recover,recoverOrphans,4412,"4cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634ad444936bd6d35205597c4962636c8fadbcf6406ca409a159b65e5f53c59e"",; ""index_name_hash512"": ""e552bd7a70d98c20ff4cf07a83a5f25d2dafe4a78e3dff92348f3d566c9037ccde0de6d4040625ca065a7484dcb8d668c583822bf5138e1540f61685bc991290"",; ""index_decoy_seq_hash"": ""39d3837ea001def952e79d70003dbba0199cc859b32f26350abfa271a6741167"",; ""index_decoy_name_hash"": ""bd5cd185b9e3272a64108e64e2bc47bc0552046dba3ff53683edeafab750c9ab"",; ""num_bootstraps"": 10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings im",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:4967,Availability,recover,recoverOrphans,4967,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:7838,Availability,avail,available,7838,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:745,Deployability,release,release,745,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:803,Deployability,install,installed,803,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:7907,Deployability,Release,Release,7907,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:5777,Performance,Load,Loading,5777,".fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:5847,Performance,Load,Loading,5847,"=> { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:5925,Performance,Load,Loading,5925,"lip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; ------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:6070,Performance,Load,Loading,6070,"output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:6201,Performance,Load,Loading,6201,"esizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:6335,Performance,Load,Loading,6335,"nts will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:6580,Performance,Load,Loading,6580,-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:6732,Performance,Load,Loading,6732,"221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:6875,Performance,Load,Loading,6875,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:7019,Performance,Load,Loading,7019,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:7154,Performance,Load,Loading,7154,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:230,Safety,recover,recovery,230,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:414,Safety,recover,recovery,414,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2242,Safety,recover,recoverOrphans,2242,"z --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:4412,Safety,recover,recoverOrphans,4412,"4cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634ad444936bd6d35205597c4962636c8fadbcf6406ca409a159b65e5f53c59e"",; ""index_name_hash512"": ""e552bd7a70d98c20ff4cf07a83a5f25d2dafe4a78e3dff92348f3d566c9037ccde0de6d4040625ca065a7484dcb8d668c583822bf5138e1540f61685bc991290"",; ""index_decoy_seq_hash"": ""39d3837ea001def952e79d70003dbba0199cc859b32f26350abfa271a6741167"",; ""index_decoy_name_hash"": ""bd5cd185b9e3272a64108e64e2bc47bc0552046dba3ff53683edeafab750c9ab"",; ""num_bootstraps"": 10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings im",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:4967,Safety,recover,recoverOrphans,4967,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:569,Security,expose,exposes,569,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:1234,Security,validat,validateMappings,1234,"r up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/sal",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2167,Security,validat,validateMappings,2167,"z --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:4808,Security,validat,validateMappings,4808,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:5380,Security,validat,validateMappings,5380,"led process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:1939,Testability,log,logs,1939,"ode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:1966,Testability,log,log,1966,"h read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2413,Testability,log,logs,2413,"re:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2436,Testability,log,log,2436,"big_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0fbc9a64cfb0b230f58119448d1c82706f1c515f210ccc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2508,Testability,log,logs,2508," │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0fbc9a64cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:2526,Testability,log,log,2526,"s.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes"": [; 496,; 768,; 1403,; 2707,; 100404; ],; ""index_seq_hash"": ""c0bf1b46db288bdf947208ef6410a0ced47fa770ab5284a1b231d958b283728b"",; ""index_name_hash"": ""db38822bce0fbc9a64cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:5065,Testability,Log,Logs,5065,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:5106,Testability,log,logs,5106,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/930:1147,Availability,down,downloaded,1147,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930
https://github.com/COMBINE-lab/salmon/issues/930:1126,Deployability,install,installed,1126,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930
https://github.com/COMBINE-lab/salmon/issues/930:299,Safety,Detect,Detected,299,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930
https://github.com/COMBINE-lab/salmon/issues/931:283,Availability,error,error,283,"Dear all,. I started to follow the Salmon ""Real data example"" on https://combine-lab.github.io/salmon-tutorials/2021/ont-long-read-quantification/. Everything goes fine up to:; minimap2 –t 8 –a -x map-ont –p 1.0 –N 100 minimap2_spike_index SRR6058582.fastq. when I get the following error:; [ERROR] failed to open file '–t': No such file or directory. ???. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/931
https://github.com/COMBINE-lab/salmon/issues/931:292,Availability,ERROR,ERROR,292,"Dear all,. I started to follow the Salmon ""Real data example"" on https://combine-lab.github.io/salmon-tutorials/2021/ont-long-read-quantification/. Everything goes fine up to:; minimap2 –t 8 –a -x map-ont –p 1.0 –N 100 minimap2_spike_index SRR6058582.fastq. when I get the following error:; [ERROR] failed to open file '–t': No such file or directory. ???. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/931
https://github.com/COMBINE-lab/salmon/issues/933:1383,Availability,error,error,1383,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933
https://github.com/COMBINE-lab/salmon/issues/933:215,Security,validat,validateMappings,215,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933
https://github.com/COMBINE-lab/salmon/issues/933:515,Security,validat,validateMappings,515,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933
https://github.com/COMBINE-lab/salmon/issues/933:1044,Security,validat,validateMappings,1044,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933
https://github.com/COMBINE-lab/salmon/issues/933:583,Testability,Log,Logs,583,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933
https://github.com/COMBINE-lab/salmon/issues/933:625,Testability,log,logs,625,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933
https://github.com/COMBINE-lab/salmon/issues/934:136,Availability,mask,masked,136,"Thank you for this wonderful pipeline. I have some human bulk RNAseq samples that were aligned in STAR against the genome with the soft-masked primary assembly (Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa). . I want to run Salmon with the full genome decoy to compare, and would like to use the same reference files for consistency. Does Salmon (like STAR) ignore the lower case for these sequences? Or since its the decoy, does it make a big difference?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934
https://github.com/COMBINE-lab/salmon/issues/934:29,Deployability,pipeline,pipeline,29,"Thank you for this wonderful pipeline. I have some human bulk RNAseq samples that were aligned in STAR against the genome with the soft-masked primary assembly (Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa). . I want to run Salmon with the full genome decoy to compare, and would like to use the same reference files for consistency. Does Salmon (like STAR) ignore the lower case for these sequences? Or since its the decoy, does it make a big difference?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934
https://github.com/COMBINE-lab/salmon/issues/935:229,Testability,test,testtranscriptome,229,**Describe the bug**; When I index the transcriptome duplicates with non-atgc characters are not identified as duplicates which leads to issues during quantification. **To Reproduce**. using salmon v1.10.0; salmon index -p 12 -t testtranscriptome.fa -i nodecoy_salmon_index --keepDuplicates. Only GeneB is in the resulting duplicate_clusters.tsv; This is the transcriptome (both genes are duplicates of one another one GeneA contains non-atgc characters). >GeneB_L; ATAACTACCTTCACACCGGCAACCATTTTGTTTACGAAGCTACAGTACTTGACGGTCAGCAGCAGCTCAT; TTTCAACATGGCGTCGAGATATGCTGCGAGAGTGCTGTGGAATTTTACAGCTCTTAGAAGTGCGAAAACA; CGACATTTACTCAAACGAATATCTCCTCTGAGCAATTTTAGGGATTTTCCTTATTCAAGTGACTTTTTTC; GTAGCTCAGCGCGTTTTGTTTGTGACAATTCAGCTGCGAAAAGTGCTCAACTCGGAAAACTAGACGTTGA; GAAGTTCCACTTGATATACACGTGCAGGGTTTGCAATACAAGGTCGAGGAAAACAATCTCAAAGCAGGCA; TACCATCATGGTGTTGTTATCGTTAAGTGTCCAGGATGTAGTAACAATCACCTCATTGCTGATAATCTTG; GATGGTTTTATAATGACAAGAGAAATATCGAAGACATTCTTGAGGAAAAGGGCGAAAAAGTCACCAAGAA; TGTAACAGAAGAGTTAACTTTAGAAGTTTTGGCAGACAAAATTAAGGAATGATGGATCCTTTGTAAAGAT; TATGGGTAAATTTTGGAGCTACATTTTGTGTACACTAAATCAATTATACTAAATATTTCAAAAAACTGTC; ATCAAGGTGACAATGGTGTCTGTTTATTGCAATATTGGTTGTGCCATGGCATACCAAAAGTTCCGAGACA; AGAATGTTGCAGATGCGCAGGAAAATTATGGTTTAATTTTGAGCAAAATGCAAGTGAACTTTGGAACAAT; AACAAATAATCAATGTGCTTACTATAAACTGTGAAATGTGTGCACTTAAAGTTATAAAGGTTGGAAGTGA; CATATTACTCTCCCTGTAAAGACTATGTATTTGTCAGTAAGTGACATTAATGAATCATCATGGTAAGTCA; TTCCTCTACAAATAATATTGGAAGATTTGATATTTTGTACTGTTTAATCTTCATGTTATGAAGTTGACAA; TCAAAATTAGTTTTCATAATTAGACAAGTTTTTAAATGTTGCTTTCAAAATCCCCATGTTTTTTCTGTTT; TGCTTGGAAGCCTGTGAAGCAGAGAAACGTCTTCAATTCATGATGTTGTGTGCAATCTAATATCCCTCAA; GTGATTGTAGCAACCCTGGAAAAAGACATGAATTGAATAAATTAGGTAATACCTCATTTAACAGAACATA; AAGTGAG. >GeneB_R; ATAACTACCTTCACACCGGCAACCATTTTGTTTACGAAGCTACAGTACTTGACGGTCAGCAGCAGCTCAT; TTTCAACATGGCGTCGAGATATGCTGCGAGAGTGCTGTGGAATTTTACAGCTCTTAGAAGTGCGAAAACA; CGACATTTACTCAAACGAATATCTCCTCTGAGCAATTTTAGGGATTTTCCTTATTCAAGTGACTTTTTTC; GTAGCTCAGCGCGTTTTGTTTGTGACAATTCAGCTGCGAAAAGTGCTCAACTCGGAAAACTAGACGTTGA; GAAG,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/935
https://github.com/COMBINE-lab/salmon/issues/936:93,Availability,error,error,93,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:345,Availability,error,error,345,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:523,Availability,error,error,523,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:604,Availability,error,error,604,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:641,Availability,error,error,641,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:792,Availability,Error,Error,792,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:885,Availability,Error,Error,885,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:927,Availability,Error,Error,927,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:1032,Availability,Error,Error,1032,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:1108,Availability,Error,Error,1108,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:1147,Availability,Error,Error,1147,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:20,Deployability,install,installing,20,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:134,Integrability,depend,dependencies,134,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:218,Integrability,depend,dependencies,218,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:508,Integrability,wrap,wrapper,508,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/936:615,Integrability,wrap,wrapper,615,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/937:214,Availability,error,error,214,"The bug primarily related to bulk mode. **Describe the bug**; Firstly, I built the index with RefSeq reference genome，cds and annotation file. And then, I run the command to get gene quantification,then ,I got the error:. [2024-06-09 20:52:47.925] [jointLog] [info] iteration = 3200 | max rel diff. = 0.0612643; [2024-06-09 20:52:48.138] [jointLog] [info] iteration = 3300 | max rel diff. = 0.0500664; [2024-06-09 20:52:48.352] [jointLog] [info] iteration = 3400 | max rel diff. = 0.0411332; [2024-06-09 20:52:48.569] [jointLog] [info] iteration = 3500 | max rel diff. = 0.0320723; [2024-06-09 20:52:48.782] [jointLog] [info] iteration = 3600 | max rel diff. = 0.0170861; [2024-06-09 20:52:48.997] [jointLog] [info] iteration = 3700 | max rel diff. = 0.218755; [2024-06-09 20:52:49.210] [jointLog] [info] iteration = 3800 | max rel diff. = 0.0130318; [2024-06-09 20:52:49.424] [jointLog] [info] iteration = 3900 | max rel diff. = 0.0255888; **Error: no valid ID found for GFF record**; [2024-06-09 20:52:49.648] [jointLog] [info] iteration = 4000 | max rel diff. = 0.088626; [2024-06-09 20:52:49.765] [jointLog] [info] iteration = 4050 | max rel diff. = 0.00732861. **To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937
https://github.com/COMBINE-lab/salmon/issues/937:943,Availability,Error,Error,943,"The bug primarily related to bulk mode. **Describe the bug**; Firstly, I built the index with RefSeq reference genome，cds and annotation file. And then, I run the command to get gene quantification,then ,I got the error:. [2024-06-09 20:52:47.925] [jointLog] [info] iteration = 3200 | max rel diff. = 0.0612643; [2024-06-09 20:52:48.138] [jointLog] [info] iteration = 3300 | max rel diff. = 0.0500664; [2024-06-09 20:52:48.352] [jointLog] [info] iteration = 3400 | max rel diff. = 0.0411332; [2024-06-09 20:52:48.569] [jointLog] [info] iteration = 3500 | max rel diff. = 0.0320723; [2024-06-09 20:52:48.782] [jointLog] [info] iteration = 3600 | max rel diff. = 0.0170861; [2024-06-09 20:52:48.997] [jointLog] [info] iteration = 3700 | max rel diff. = 0.218755; [2024-06-09 20:52:49.210] [jointLog] [info] iteration = 3800 | max rel diff. = 0.0130318; [2024-06-09 20:52:49.424] [jointLog] [info] iteration = 3900 | max rel diff. = 0.0255888; **Error: no valid ID found for GFF record**; [2024-06-09 20:52:49.648] [jointLog] [info] iteration = 4000 | max rel diff. = 0.088626; [2024-06-09 20:52:49.765] [jointLog] [info] iteration = 4050 | max rel diff. = 0.00732861. **To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937
https://github.com/COMBINE-lab/salmon/issues/937:2819,Deployability,Install,Installed,2819,"**To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.txt -i ${index} -p $threads. 3. The command to get gene quantification:; salmon quant -p 30 -i /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index -l IU -1 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R1_trimmed.fq.gz -2 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R2_trimmed.fq.gz --validateMappings --gcBias --seqBias -g /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.gtf -o /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/results/salmon/D5_1. Specifically, please provide at least the following information:; salmon = 1.10.1; Installed through bioconda; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937
https://github.com/COMBINE-lab/salmon/issues/937:2451,Security,validat,validateMappings,2451,"**To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.txt -i ${index} -p $threads. 3. The command to get gene quantification:; salmon quant -p 30 -i /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index -l IU -1 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R1_trimmed.fq.gz -2 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R2_trimmed.fq.gz --validateMappings --gcBias --seqBias -g /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.gtf -o /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/results/salmon/D5_1. Specifically, please provide at least the following information:; salmon = 1.10.1; Installed through bioconda; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937
https://github.com/COMBINE-lab/salmon/issues/938:94,Availability,down,down,94,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938
https://github.com/COMBINE-lab/salmon/issues/938:187,Testability,test,test,187,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938
https://github.com/COMBINE-lab/salmon/issues/938:1269,Testability,log,logic,1269,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938
https://github.com/COMBINE-lab/salmon/issues/938:1536,Testability,log,logic,1536,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938
https://github.com/COMBINE-lab/salmon/issues/939:99,Deployability,install,installed,99,libc++abi: terminating ; zsh: abort. I got this on Terminal while trying to run Salmon program.; I installed Salmon via conda so I have the 10.3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/939
https://github.com/COMBINE-lab/salmon/issues/939:30,Safety,abort,abort,30,libc++abi: terminating ; zsh: abort. I got this on Terminal while trying to run Salmon program.; I installed Salmon via conda so I have the 10.3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/939
https://github.com/COMBINE-lab/salmon/issues/941:16,Availability,Error,Error,16,Dear developer; Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).; code salmon quant -i $IndexDir -p 15 -l A -1 ${CleanDataDir}/${treat}${CleanReads1Suffix} -2 ${CleanDataDir}/${treat}${CleanReads2Suffix} -o ${outDir}/${treat}. How should I go about solving this error or investigating its cause?; ; Best wishes!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941
https://github.com/COMBINE-lab/salmon/issues/941:306,Availability,error,error,306,Dear developer; Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).; code salmon quant -i $IndexDir -p 15 -l A -1 ${CleanDataDir}/${treat}${CleanReads1Suffix} -2 ${CleanDataDir}/${treat}${CleanReads2Suffix} -o ${outDir}/${treat}. How should I go about solving this error or investigating its cause?; ; Best wishes!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941
https://github.com/COMBINE-lab/salmon/issues/942:290,Availability,error,error,290,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:393,Availability,Error,Error,393,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:488,Availability,error,error,488,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:529,Availability,error,error,529,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:549,Availability,Error,Error,549,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:1514,Deployability,install,installed,1514,"r/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LTS. Matrix products: default; BLAS/LAPACK: /home/chris/anaconda3/envs/r_and_python/lib/libopenblasp-r0.3.27.so; LAPACK version 3.12.0. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:1239,Modifiability,layers,layers,1239,"elieve I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:2943,Performance,load,loaded,2943, am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LTS. Matrix products: default; BLAS/LAPACK: /home/chris/anaconda3/envs/r_and_python/lib/libopenblasp-r0.3.27.so; LAPACK version 3.12.0. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ; [9] LC_ADDRESS=C LC_TELEPHONE=C ; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C . time zone: America/New_York; tzcode source: system (glibc). attached base packages:; [1] stats graphics grDevices utils datasets methods base . other attached packages:; [1] Seurat_5.1.0 SeuratObject_5.0.2 sp_2.1-4 patchwork_1.2.0 ; [5] ggplot2_3.5.1 devtools_2.4.5 usethis_2.2.3 tximport_1.30.0 ; [9] fishpond_2.8.0 . loaded via a namespace (and not attached):; [1] RColorBrewer_1.1-3 jsonlite_1.8.8 ; [3] magrittr_2.0.3 spatstat.utils_3.0-5 ; [5] fs_1.6.4 zlibbioc_1.48.0 ; [7] vctrs_0.6.5 ROCR_1.0-11 ; [9] spatstat.explore_3.2-6 memoise_2.0.1 ; [11] RCurl_1.98-1.14 htmltools_0.5.8.1 ; [13] S4Arrays_1.2.0 SparseArray_1.2.2 ; [15] sctransform_0.4.1 parallelly_1.37.1 ; [17] KernSmooth_2.23-24 htmlwidgets_1.6.4 ; [19] ica_1.0-3 plyr_1.8.9 ; [21] plotly_4.10.4 zoo_1.8-12 ; [23] cachem_1.1.0 igraph_2.0.3 ; [25] mime_0.12 lifecycle_1.0.4 ; [27] pkgconfig_2.0.3 Matrix_1.6-5 ; [29] R6_2.5.1 fastmap_1.2.0 ; [31] GenomeInfoDbData_1.2.11 MatrixGenerics_1.14.0 ; [33] fitdistrplus_1.1-11 future_1.33.2 ; [35] shiny_1.8.1.1 digest_0.6.36 ; [37] colorspace_2.1-0 S4Vectors_0.40.2 ; [39] tensor_1.5 RSpectra_0.16-1 ; [41] irlba_2.3.5.1 pkgload_1.3.4 ; [43] GenomicRanges_1.54.1 progressr_0.14.0 ; [45] spatstat.sparse_3.1-0 fansi_1.0.6 ; [47] polyclip_1.10-6 httr_1.4.7 ; [49] abind_1.4-5 compiler_4.3.3 ; [51] remotes_2.5.0 withr_3.0.0 ; [53] fastDummie,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/942:1948,Usability,simpl,simple,1948,"this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LTS. Matrix products: default; BLAS/LAPACK: /home/chris/anaconda3/envs/r_and_python/lib/libopenblasp-r0.3.27.so; LAPACK version 3.12.0. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ; [9] LC_ADDRESS=C LC_TELEPHONE=C ; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C . time zone: America/New_York; tzcode source: system (glibc). attached base packages:; [1] stats graphics grDevices utils datasets methods base . other attached packages:; [1] Seurat_5.1.0 SeuratObject_5.0.2 sp_2.1-4 patchwork_1.2.0 ; [5] ggplot2_3.5.1 devtools_2.4.5 usethis_2.2.3 tximport_1.30.0 ; [9] fishpond_2.8.0 . loaded via a namespace",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942
https://github.com/COMBINE-lab/salmon/issues/943:38,Availability,error,error,38,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:1064,Availability,error,error,1064,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:1254,Availability,error,error,1254,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:1328,Availability,Error,Error,1328,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:1379,Availability,error,error,1379,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:1021,Deployability,install,installed,1021,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:1334,Testability,log,log,1334,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/943:454,Usability,guid,guidance,454,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/945:58,Availability,Error,Error,58,"Hi, I hope you're well. Here is my question:; [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM. I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \; --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it's still report ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf. grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf. singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa. `. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa; `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945
https://github.com/COMBINE-lab/salmon/issues/945:672,Availability,Error,Error,672,"Hi, I hope you're well. Here is my question:; [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM. I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \; --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it's still report ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf. grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf. singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa. `. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa; `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945
https://github.com/COMBINE-lab/salmon/issues/946:58,Availability,Error,Error,58,"Hi, I hope you're well. Here is my question:. [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM; I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \ --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it still reports ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:. `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf`; `grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf`; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa`. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/946
https://github.com/COMBINE-lab/salmon/issues/946:670,Availability,Error,Error,670,"Hi, I hope you're well. Here is my question:. [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM; I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \ --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it still reports ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:. `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf`; `grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf`; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa`. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/946
https://github.com/COMBINE-lab/salmon/issues/948:380,Availability,down,down,380,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; I did a lot of independent RNAseq libs recently and all came out with the identical frag_length mean and sd (see below). This surprised me greatly as while the libraries looked consistent on a tapestation, I would not expect them to be this consistent down to >7 decimal places. Also it is unclear how I can access fld.gz to see the raw data. MultiQC only shows me one distribution (for ; ```Sample: Gam_0h_rep1A_RL5382_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep2A_RL5383_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep3A_RL5403_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep1_RL5385_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep2_RL5386_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep3_RL5406_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep1_RL5387_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep2_RL5388_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep3_RL5407_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep1_RL5384_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3044,Availability,down,downloaded,3044,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3023,Deployability,install,installed,3023,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3511,Deployability,release,release,3511,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3563,Deployability,release,release,3563,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3524,Energy Efficiency,Green,Green,3524,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3576,Energy Efficiency,Green,Green,3576,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:436,Security,access,access,436,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; I did a lot of independent RNAseq libs recently and all came out with the identical frag_length mean and sd (see below). This surprised me greatly as while the libraries looked consistent on a tapestation, I would not expect them to be this consistent down to >7 decimal places. Also it is unclear how I can access fld.gz to see the raw data. MultiQC only shows me one distribution (for ; ```Sample: Gam_0h_rep1A_RL5382_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep2A_RL5383_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep3A_RL5403_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep1_RL5385_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep2_RL5386_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep3_RL5406_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep1_RL5387_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep2_RL5388_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep3_RL5407_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep1_RL5384_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3276,Security,validat,validateMappings,3276,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/948:3359,Usability,clear,clear,3359,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948
https://github.com/COMBINE-lab/salmon/issues/949:492,Availability,down,downloaded,492,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949
https://github.com/COMBINE-lab/salmon/issues/949:471,Deployability,install,installed,471,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949
https://github.com/COMBINE-lab/salmon/issues/949:683,Usability,clear,clear,683,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949
https://github.com/COMBINE-lab/salmon/issues/950:37,Availability,error,error,37,"Hi, . [bulk mode] salmon 1.10.3; the error was reported in partial jobs when I used salmon to quantify the LR-RNA-seq data (It works normally on some samples). ; ; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant --ont -p 10 -t /public/home/b20223040336/Workspace/long_read_rna/01data/references/GCF_002263795.3_ARS-UCD2.0_rna.fna -l U -a mammary.cistern_4_tran.all.bam -o /public/home/b20223040336/Workspace/long_read_rna/03Results/mammary.cistern/LR/mammary.cistern_4/02_expression/UCD_based`. ![image](https://github.com/user-attachments/assets/b5f2348d-1bbf-4a6b-8902-e72bf065e0ae). I don't know how to solve this problem. I tried to install salmon using different methods, But it still doesn't work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950
https://github.com/COMBINE-lab/salmon/issues/950:722,Deployability,install,install,722,"Hi, . [bulk mode] salmon 1.10.3; the error was reported in partial jobs when I used salmon to quantify the LR-RNA-seq data (It works normally on some samples). ; ; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant --ont -p 10 -t /public/home/b20223040336/Workspace/long_read_rna/01data/references/GCF_002263795.3_ARS-UCD2.0_rna.fna -l U -a mammary.cistern_4_tran.all.bam -o /public/home/b20223040336/Workspace/long_read_rna/03Results/mammary.cistern/LR/mammary.cistern_4/02_expression/UCD_based`. ![image](https://github.com/user-attachments/assets/b5f2348d-1bbf-4a6b-8902-e72bf065e0ae). I don't know how to solve this problem. I tried to install salmon using different methods, But it still doesn't work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950
https://github.com/COMBINE-lab/salmon/issues/951:1133,Availability,down,downloaded,1133,"ead with STAR, hence mapped to the genome.; While reading about getting TPM, I can't get them from the counts, so I decided to try salmon.; It needs a transcripts.fa, which I am not sure how to properly get it. The documentation says: ; _If you have reads that have already been aligned to the genome, there are currently 3 options for converting them for use with Salmon. First, you could convert the SAM/BAM file to a FAST{A/Q} file and then use the lightweight-alignment-based mode of Salmon described below._; But there is nothing below it. Then, it states:; _Second, given the converted FASTA{A/Q} file, you could re-align these converted reads directly to the transcripts with your favorite aligner and run Salmon in alignment-based mode as described above._; I can get the FastQ from the Bam created by STAR, then my question, is which mapper do you recommend? Can bwa-mem2 work well?; My question, is that I will nonetheless need a transcriptome file, and to index it.; I downloaded the genome from NCBI: https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/207650/100/GCF_011952255.1_Bvos_JDL3184-5_v1.1/ ; and I don't know which file should I use as the transcriptome; there are cds_from_genomic, protein, and rna. In one forum, one mentioned download the human transcriptome from ensemble, but it is not there. Also, I found that one can generate it with gffread using the gtf file, so I wanted to confirm if that output file will work ; `gffread -w Bvostranscripts.fa -g BosVos.fasta GCF_011952255.1_Bvos_JDL3184-5_v1.1_genomic.gtf ; `; because I remember reading somewhere that the file must have transcript length, but it doesn't:; head Bvostranscripts.fa ; >XM_033511117.1 CDS=100-1053; ctCCAACGAGAAAGACGTGCTCAGAAGCGAGTCCCGCGTAGCGCCATGTAGAGGAGCAGGAAGAAGCGCA; GTCTTCCTCAGGCATTCCAGCGTCGAGTAATGCTGAAGCATATCCTGACGGGGCAACCGTCGTCAGCGGG; CTCCAGGCACCAGCACAATGACTACCAGGCGAGCTCGGGCTCGTTGCACGGcggccaccaccaccaccat; cattCTGGTCACCAACAGGATCAACAGCAACACCATCATTACAACCAAAACAGCAACGTTCGTGGAACGA; CAG",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/951
https://github.com/COMBINE-lab/salmon/issues/951:1414,Availability,down,download,1414,"ligned to the genome, there are currently 3 options for converting them for use with Salmon. First, you could convert the SAM/BAM file to a FAST{A/Q} file and then use the lightweight-alignment-based mode of Salmon described below._; But there is nothing below it. Then, it states:; _Second, given the converted FASTA{A/Q} file, you could re-align these converted reads directly to the transcripts with your favorite aligner and run Salmon in alignment-based mode as described above._; I can get the FastQ from the Bam created by STAR, then my question, is which mapper do you recommend? Can bwa-mem2 work well?; My question, is that I will nonetheless need a transcriptome file, and to index it.; I downloaded the genome from NCBI: https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/207650/100/GCF_011952255.1_Bvos_JDL3184-5_v1.1/ ; and I don't know which file should I use as the transcriptome; there are cds_from_genomic, protein, and rna. In one forum, one mentioned download the human transcriptome from ensemble, but it is not there. Also, I found that one can generate it with gffread using the gtf file, so I wanted to confirm if that output file will work ; `gffread -w Bvostranscripts.fa -g BosVos.fasta GCF_011952255.1_Bvos_JDL3184-5_v1.1_genomic.gtf ; `; because I remember reading somewhere that the file must have transcript length, but it doesn't:; head Bvostranscripts.fa ; >XM_033511117.1 CDS=100-1053; ctCCAACGAGAAAGACGTGCTCAGAAGCGAGTCCCGCGTAGCGCCATGTAGAGGAGCAGGAAGAAGCGCA; GTCTTCCTCAGGCATTCCAGCGTCGAGTAATGCTGAAGCATATCCTGACGGGGCAACCGTCGTCAGCGGG; CTCCAGGCACCAGCACAATGACTACCAGGCGAGCTCGGGCTCGTTGCACGGcggccaccaccaccaccat; cattCTGGTCACCAACAGGATCAACAGCAACACCATCATTACAACCAAAACAGCAACGTTCGTGGAACGA; CAGAGGGGAGCCAAGGACGGGGAGTCGACGTTTACGACTCGGTGGTCCATCAAAGAGCCAACGTGCATCA; GGCTGCCACCACGCCATCTTCCACTCACAGACACCCTTTGAATCATTCTCAGTTGAGCGTGAACAATCTT; TCTCAACGATTGAATCACTCGCACGCTCTTAATCTGTCCACGTTGTCCACGTCGAAGCATTCTGTGAACA; GCGTCAGTCCTGTTGCCGGTgggaataacaataacaataataataatctgtcgACTACATTGGGGGT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/951
https://github.com/COMBINE-lab/salmon/issues/952:512,Availability,avail,available,512,"This is not a bug but more of a question. I've run Salmon in alignment mode with transcriptome BAM file generated by STAR. The BAM file contains no unaligned reads. My question is there are often a small number of reads that were not assigned to any rich equivalence class. I am trying to understand what these reads are. I notice that this only happens when the input is paired-end reads. I suspect maybe the unassigned reads are dovetail paired end reads, but I don't know. The `--allowDovetail` option is not available in alignment mode. Here is an excerpt of the log:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 6205189; # of uniquely mapped reads : 1718004; # ambiguously mapped reads : 4487185. [2024-08-14 18:21:52.491] [jointLog] [info] Computed 350358 rich equivalence classes for further processing; [2024-08-14 18:21:52.491] [jointLog] [info] Counted 6192944 total reads in the equivalence classes; ```; As you can see 6192944 out of 6205189 reads were assigned to rich equivalence classes.; It would be nice to know what the excluded reads are, and/or if there are options to rescue these reads, similar to `--allowDovetail`.; This is Salmon version 1.10.3, but I also ran older version, which generated same results.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/952
https://github.com/COMBINE-lab/salmon/issues/952:567,Testability,log,log,567,"This is not a bug but more of a question. I've run Salmon in alignment mode with transcriptome BAM file generated by STAR. The BAM file contains no unaligned reads. My question is there are often a small number of reads that were not assigned to any rich equivalence class. I am trying to understand what these reads are. I notice that this only happens when the input is paired-end reads. I suspect maybe the unassigned reads are dovetail paired end reads, but I don't know. The `--allowDovetail` option is not available in alignment mode. Here is an excerpt of the log:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 6205189; # of uniquely mapped reads : 1718004; # ambiguously mapped reads : 4487185. [2024-08-14 18:21:52.491] [jointLog] [info] Computed 350358 rich equivalence classes for further processing; [2024-08-14 18:21:52.491] [jointLog] [info] Counted 6192944 total reads in the equivalence classes; ```; As you can see 6192944 out of 6205189 reads were assigned to rich equivalence classes.; It would be nice to know what the excluded reads are, and/or if there are options to rescue these reads, similar to `--allowDovetail`.; This is Salmon version 1.10.3, but I also ran older version, which generated same results.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/952
https://github.com/COMBINE-lab/salmon/issues/953:201,Availability,error,error,201,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1621,Availability,error,error,1621,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2761,Availability,Error,Error,2761,"nclude/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behav",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2846,Availability,Error,Error,2846,"almon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2885,Availability,Error,Error,2885,"almon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:3726,Availability,down,downloaded,3726,"ruct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Jul 23 16:00:21 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux**. **Additional context**; std err file attached.; [build.err.gz](https://github.com/user-attachments/files/16677963/build.err.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:839,Deployability,install,install,839,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:936,Deployability,install,install,936,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1035,Deployability,install,install,1035,"ated to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1132,Deployability,install,install,1132,"bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1238,Deployability,install,install,1238,"CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1336,Deployability,install,install,1336,"ude/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1562,Deployability,install,install,1562,"clude/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1788,Deployability,install,install,1788,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1882,Deployability,install,install,1882,"ode.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1982,Deployability,install,install,1982,"ror.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2075,Deployability,install,install,2075,"ions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2457,Deployability,install,install,2457,":25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:3705,Deployability,install,installed,3705,"ruct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Jul 23 16:00:21 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux**. **Additional context**; std err file attached.; [build.err.gz](https://github.com/user-attachments/files/16677963/build.err.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2950,Performance,load,load,2950,"pc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2986,Performance,load,load,2986,"ll/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC T",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:3024,Performance,load,load,3024,"22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Jul 23 16:00:21 UTC 2024 x86_64 x86_6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:1821,Security,hash,hash,1821,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/953:2112,Security,hash,hash,2112,"ions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/955:230,Availability,down,downloaded,230,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955
https://github.com/COMBINE-lab/salmon/issues/955:283,Availability,down,download,283,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955
https://github.com/COMBINE-lab/salmon/issues/955:541,Deployability,release,release-,541,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955
https://github.com/COMBINE-lab/salmon/issues/955:299,Security,access,accession,299,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955
https://github.com/COMBINE-lab/salmon/issues/956:388,Security,validat,validateMappings,388,"Hi, ; How to align metagenomic reads obtained from MetaBAT-generated MAGs to metatranscriptomic reads in order to calculate the Transcripts Per Million (TPM) for these MAGs.; $ salmon index -i transcripts_index -k 31 --gencode -p 8 -t /home/MBR02_0-5cm.6.fa; $ salmon quant -i transcripts_index -l A -1 /home/transcriptom/PCBR/PCBR_p_r1.fastq -2 /home/transcriptom/PCBR/PCBR_p_r2.fastq --validateMappings -o transcripts_quant. This is my code, but it’s doing the opposite of what I expected because it calculates the TPM as if the genome were a single entity.I’m not sure if the genome.fa file should be used as the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/956
https://github.com/COMBINE-lab/salmon/issues/957:27,Availability,error,error,27,"Hello,. I came across this error after executing the make index command in salmon. Eg:salmon index -t gencode.v46.transcripts.fa.gz -i human_index. . Please help me out. . Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/957
https://github.com/COMBINE-lab/salmon/issues/959:95,Availability,recover,recovery,95,"Hi all,. Is there any suggestion/best practices on whether one should or should not use orphan recovery? My feeling is that it should be used in cases where the library quality maybe isn't the greatest, but i'm not sure about this. Thanks all!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959
https://github.com/COMBINE-lab/salmon/issues/959:95,Safety,recover,recovery,95,"Hi all,. Is there any suggestion/best practices on whether one should or should not use orphan recovery? My feeling is that it should be used in cases where the library quality maybe isn't the greatest, but i'm not sure about this. Thanks all!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959
https://github.com/COMBINE-lab/salmon/issues/961:223,Availability,recover,recoverOrphans,223,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:275,Availability,recover,recoverOrphans,275,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:733,Availability,error,error,733,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1207,Availability,recover,recoverOrphans,1207,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1251,Availability,recover,recoverOrphans,1251,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1550,Availability,down,downloaded,1550," to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2244,Availability,error,error,2244,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2580,Availability,recover,recoverOrphans,2580,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2657,Availability,recover,recoverOrphans,2657,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2902,Availability,recover,recoverOrphans,2902,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2946,Availability,recover,recover,2946,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1529,Deployability,install,installed,1529," to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1832,Energy Efficiency,adapt,adapter,1832,"path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1832,Integrability,adapter,adapter,1832,"path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1832,Modifiability,adapt,adapter,1832,"path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:912,Performance,load,load,912,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:964,Performance,load,load,964,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:223,Safety,recover,recoverOrphans,223,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:275,Safety,recover,recoverOrphans,275,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1207,Safety,recover,recoverOrphans,1207,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1251,Safety,recover,recoverOrphans,1251,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2580,Safety,recover,recoverOrphans,2580,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2657,Safety,recover,recoverOrphans,2657,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2902,Safety,recover,recoverOrphans,2902,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2946,Safety,recover,recover,2946,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1185,Security,validat,validateMappings,1185,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:748,Testability,log,logs,748,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:790,Testability,log,logs,790,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:1502,Testability,test,tested,1502,"://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Addi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2754,Testability,log,log,2754,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2882,Testability,log,log,2882,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:130,Usability,clear,clear,130,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:2024,Usability,clear,clear,2024,"-colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousand",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/962:580,Availability,down,downloaded,580,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; The contents of the quant.genes.sf file and the quant.sf file are identical. The file quant.genes.sf should have been the results of genes quantification, but now it is all transcript quantification. I.e., the file quant.genes.sf is exactly the same as quant.sf (only the transcript names corresponding to the Name column are in a different order). **To Reproduce**; * Which version of salmon was used?; * 1.10.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * bioconda; * Which reference (e.g. transcriptome) was used?; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa. * My options ：; * generate decoys.txt:; grep ""^>"" < /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > \; /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; sed -i.bak -e 's/>//g' /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; cat /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962
https://github.com/COMBINE-lab/salmon/issues/962:2602,Availability,avail,available,2602,"/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /cold_data/zhaojiaxin/ensembl/salmon/transcripts_quant \; --seqBias \; --gcBias \; --posBias \; --geneMap /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; --auxDir aux_info \; --incompatPrior 0 \; --threads 50. **Expected behavior**; I want the genes quantization results to appear normally in the file quant.genes.sf. **Desktop (please complete the following information):**; - OS : Ubuntu Linux; - Version ; uname -a：; Linux 1302ubuntu 6.8.0-40-generic #40~22.04.3-Ubuntu SMP PREEMPT_DYNAMIC Tue Jul 30 17:30:19 UTC 2 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a：; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy. **Additional context**; I've already found a similar question, but it didn't solve my problem very well, the link to this question is as follows: https://github.com/COMBINE-lab/salmon/issues/569. As I understand it, one of the two questioners solved the problem by updating the salmon version, the other by tximport solved the problem. But first of all my salmon version is the latest 1.10.3, and secondly, I understand that tximport is an R package that handles salmon output files, which may not solve my problem. Looking forward to your professional reply and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962
https://github.com/COMBINE-lab/salmon/issues/962:559,Deployability,install,installed,559,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; The contents of the quant.genes.sf file and the quant.sf file are identical. The file quant.genes.sf should have been the results of genes quantification, but now it is all transcript quantification. I.e., the file quant.genes.sf is exactly the same as quant.sf (only the transcript names corresponding to the Name column are in a different order). **To Reproduce**; * Which version of salmon was used?; * 1.10.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * bioconda; * Which reference (e.g. transcriptome) was used?; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa. * My options ：; * generate decoys.txt:; grep ""^>"" < /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > \; /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; sed -i.bak -e 's/>//g' /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; cat /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962
https://github.com/COMBINE-lab/salmon/issues/962:2671,Deployability,Release,Release,2671,"/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /cold_data/zhaojiaxin/ensembl/salmon/transcripts_quant \; --seqBias \; --gcBias \; --posBias \; --geneMap /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; --auxDir aux_info \; --incompatPrior 0 \; --threads 50. **Expected behavior**; I want the genes quantization results to appear normally in the file quant.genes.sf. **Desktop (please complete the following information):**; - OS : Ubuntu Linux; - Version ; uname -a：; Linux 1302ubuntu 6.8.0-40-generic #40~22.04.3-Ubuntu SMP PREEMPT_DYNAMIC Tue Jul 30 17:30:19 UTC 2 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a：; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy. **Additional context**; I've already found a similar question, but it didn't solve my problem very well, the link to this question is as follows: https://github.com/COMBINE-lab/salmon/issues/569. As I understand it, one of the two questioners solved the problem by updating the salmon version, the other by tximport solved the problem. But first of all my salmon version is the latest 1.10.3, and secondly, I understand that tximport is an R package that handles salmon output files, which may not solve my problem. Looking forward to your professional reply and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962
https://github.com/COMBINE-lab/salmon/issues/963:277,Availability,echo,echo,277,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/963:592,Availability,error,error,592,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/963:636,Availability,ERROR,ERROR,636,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/963:758,Availability,error,error,758,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/963:12,Deployability,install,installed,12,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/963:416,Security,validat,validateMappings,416,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/963:72,Testability,test,test,72,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/965:242,Availability,avail,available,242,"**Bug primarily related to salmon (bulk mode)**. Using files from the tutorial (https://combine-lab.github.io/salmon/getting_started/) did not trigger the bug so I had to make an example with my data. ; C. reinhardtii annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:291,Availability,down,download,291,"**Bug primarily related to salmon (bulk mode)**. Using files from the tutorial (https://combine-lab.github.io/salmon/getting_started/) did not trigger the bug so I had to make an example with my data. ; C. reinhardtii annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:353,Availability,avail,available,353,"**Bug primarily related to salmon (bulk mode)**. Using files from the tutorial (https://combine-lab.github.io/salmon/getting_started/) did not trigger the bug so I had to make an example with my data. ; C. reinhardtii annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1226,Availability,error,error,1226," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1945,Deployability,install,installed,1945," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:2125,Integrability,depend,dependencies,2125," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1693,Safety,Abort,Aborted,1693," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1289,Testability,log,log,1289," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1303,Testability,log,log,1303," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1366,Testability,log,log,1366," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/965:1628,Testability,Assert,Assertion,1628," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/966:1085,Availability,down,down,1085,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:1231,Deployability,install,installed,1231,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:333,Integrability,rout,routine,333,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:129,Performance,perform,performance,129,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:410,Performance,perform,performance,410,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:652,Security,validat,validateMappings,652,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:1034,Testability,test,test,1034,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/issues/966:708,Usability,simpl,simple,708,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/pull/967:158,Availability,down,downs,158,"This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967
https://github.com/COMBINE-lab/salmon/pull/967:18,Performance,perform,performance,18,"This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967
https://github.com/COMBINE-lab/salmon/pull/968:171,Availability,down,downs,171,"Fixes #966 ; This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/968
https://github.com/COMBINE-lab/salmon/pull/968:31,Performance,perform,performance,31,"Fixes #966 ; This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/968
https://github.com/COMBINE-lab/salmon/issues/969:297,Availability,failure,failure,297,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:563,Availability,error,error,563,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:638,Availability,error,error,638,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:983,Availability,avail,available,983,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:272,Testability,test,test,272,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:406,Testability,test,test,406,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:531,Testability,test,test,531,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:542,Testability,test,test,542,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:741,Testability,test,test,741,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:775,Testability,test,tests,775,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/969:819,Testability,test,test,819,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969
https://github.com/COMBINE-lab/salmon/issues/971:281,Availability,fault,fault,281,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:432,Availability,fault,fault,432,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:526,Availability,error,error,526,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:682,Availability,down,downloaded,682,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1127,Availability,recover,recoverOrphans,1127," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1870,Availability,recover,recoverOrphans,1870,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:9593,Availability,fault,fault,9593,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:9779,Availability,recover,recoverOrphans,9779,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:661,Deployability,install,installed,661,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:2700,Performance,Load,Loading,2700,".gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:2770,Performance,Load,Loading,2770,"> { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:2848,Performance,Load,Loading,2848,"## [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:2993,Performance,Load,Loading,2993,"{ salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:3124,Performance,Load,Loading,3124,"esizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:3258,Performance,Load,Loading,3258,"nts will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] do",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:3503,Performance,Load,Loading,3503,"-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:3655,Performance,Load,Loading,3655,"563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:3799,Performance,Load,Loading,3799,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:3943,Performance,Load,Loading,3943,"------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32mfragments[0m; hits: 654,611, hits per frag: 0.438092[A. [32mprocessed[31m 2,000,000 [32mfragments[0m; hits: 857,321, hits per frag: 0.431748[A. [32m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:4078,Performance,Load,Loading,4078,"---------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32mfragments[0m; hits: 654,611, hits per frag: 0.438092[A. [32mprocessed[31m 2,000,000 [32mfragments[0m; hits: 857,321, hits per frag: 0.431748[A. [32mprocessed[31m 2,500,000 [32mfragments[0m; hits: 1,074,298, hits per frag: 0.432761[A. [32mprocessed[31m 3,000,000 [32mfragments[0m; hits: 1,284,332, h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1127,Safety,recover,recoverOrphans,1127," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1482,Safety,timeout,timeout,1482,"p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1870,Safety,recover,recoverOrphans,1870,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:4507,Safety,detect,detected,4507,"g contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32mfragments[0m; hits: 654,611, hits per frag: 0.438092[A. [32mprocessed[31m 2,000,000 [32mfragments[0m; hits: 857,321, hits per frag: 0.431748[A. [32mprocessed[31m 2,500,000 [32mfragments[0m; hits: 1,074,298, hits per frag: 0.432761[A. [32mprocessed[31m 3,000,000 [32mfragments[0m; hits: 1,284,332, hits per frag: 0.42818[A. [32mprocessed[31m 3,500,000 [32mfragments[0m; hits: 1,498,233, hits per frag: 0.429293[A. [32mprocessed[31m 4,000,000 [32mfragments[0m; hits: 1,711,798, hits per frag: 0.430057[A. [32mprocessed[31m 4,500,000 [32mfragments[0m; hits: 1,922,074, hits per frag: 0.428288[A. [32mprocessed[31m 5,000,000 [32mfragments[0m; hits: 2,141,874, hits per frag: 0.429173[A. [32mprocessed[31m 5,500,000 [32mfragments[0m; hits: 2,357,668, hits ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:9779,Safety,recover,recoverOrphans,9779,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1080,Security,validat,validateMappings,1080," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1790,Security,validat,validateMappings,1790,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:2303,Security,validat,validateMappings,2303,".sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; --------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:9741,Security,validat,validateMappings,9741,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1982,Testability,Log,Logs,1982," …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; ----------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:2029,Testability,log,logs,2029,"Type A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:121,Usability,clear,clear,121,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/971:1218,Usability,clear,clear,1218,"oothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
https://github.com/COMBINE-lab/salmon/issues/5:32,Availability,error,error,32,"""you are using an empty matrix"" error, seemingly during bias correction (--biasCorrect)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/6:12,Performance,perform,performance,12,Significant performance regression in version 0.4.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/10:0,Availability,error,error,0,error installing: CMake Error: Problem with archive_write_finish_entry(): Can't restore time,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:24,Availability,Error,Error,24,error installing: CMake Error: Problem with archive_write_finish_entry(): Can't restore time,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:6,Deployability,install,installing,6,error installing: CMake Error: Problem with archive_write_finish_entry(): Can't restore time,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/11:32,Availability,down,downloaded,32,attempts to switch to different downloaded tarball for jellyfish fail,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/12:25,Availability,error,error,25,[bns_restore_core] Parse error reading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12
https://github.com/COMBINE-lab/salmon/issues/16:77,Integrability,message,messages,77,Library format checking for stranded libraries gives uninformative debugging messages,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/19:67,Availability,down,downloading,67,upgrade CMakeLists.txt to use external copies of dependencies & no downloading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:0,Deployability,upgrade,upgrade,0,upgrade CMakeLists.txt to use external copies of dependencies & no downloading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:49,Integrability,depend,dependencies,49,upgrade CMakeLists.txt to use external copies of dependencies & no downloading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/20:1,Availability,Error,Error,1,`Error: no such instruction: 'xtest'` when building salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/21:0,Availability,Error,Error,0,Error building salmon (possible issue with Boost's iostreams),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/22:37,Availability,failure,failure,37,Space in fasta sequence causes quiet failure,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22
https://github.com/COMBINE-lab/salmon/pull/23:0,Deployability,Update,Update,0,Update CMakeLists.txt,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23
https://github.com/COMBINE-lab/salmon/issues/24:0,Availability,Error,Error,0,Error compiling salmon on Ubuntu 14.04,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/pull/26:18,Integrability,message,message,18,fix typos in help message,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/26
https://github.com/COMBINE-lab/salmon/issues/34:13,Availability,fault,fault,13,Segmentation fault when reporting results (0.6.0),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34
https://github.com/COMBINE-lab/salmon/pull/35:0,Deployability,Update,Update,0,Update library_type.rst,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/35
https://github.com/COMBINE-lab/salmon/issues/37:7,Availability,failure,failure,7,Silent failure while loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:21,Performance,load,loading,21,Silent failure while loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/41:6,Availability,error,error,6,Throw error if reads are less than k-mer size,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41
https://github.com/COMBINE-lab/salmon/issues/42:0,Availability,error,error,0,error Installing: CMake fail line 94; RapMap not found (with workaround),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/42:6,Deployability,Install,Installing,6,error Installing: CMake fail line 94; RapMap not found (with workaround),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/43:0,Availability,error,error,0,error building,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/pull/44:18,Integrability,message,message,18,Fix typo in CMake message,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/44
https://github.com/COMBINE-lab/salmon/issues/45:7,Integrability,depend,depends,7,Salmon depends on Staden depends on xz for lzma.h,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:25,Integrability,depend,depends,25,Salmon depends on Staden depends on xz for lzma.h,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/46:47,Security,validat,validate,47,undefined reference to boost::program_options::validate,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46
https://github.com/COMBINE-lab/salmon/issues/48:11,Availability,error,error,11,boost math error during EM iteration: Evaluation of function at pole -nan,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48
https://github.com/COMBINE-lab/salmon/issues/51:6,Availability,failure,failure,6,Build failure (libtbb),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51
https://github.com/COMBINE-lab/salmon/issues/55:10,Availability,error,error,10,Write non-error output to stdout,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55
https://github.com/COMBINE-lab/salmon/issues/56:35,Usability,guid,guide,35,Full length cDNA distribution as a guide to abundances?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/56
https://github.com/COMBINE-lab/salmon/pull/63:0,Deployability,Update,Update,0,Update README.md,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/63
https://github.com/COMBINE-lab/salmon/issues/64:13,Availability,fault,fault,13,Segmentation fault on some data when using `--useFSPD`,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/99:0,Availability,Error,Error,0,Error building develop version: lzma.h not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/105:59,Availability,error,error,59,creating index to file that doesn't exists does not output error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105
https://github.com/COMBINE-lab/salmon/issues/112:0,Availability,Error,Error,0,Error with installing Salmon v0.7.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:11,Deployability,install,installing,11,Error with installing Salmon v0.7.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/114:16,Safety,detect,detect,16,geneMap doesn't detect GFF3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114
https://github.com/COMBINE-lab/salmon/issues/119:0,Availability,Error,Error,0,Error:alpha weight was too small (only some samples),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/120:23,Safety,detect,detected,23,ISSUE: Number of genes detected in a single cell,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120
https://github.com/COMBINE-lab/salmon/issues/128:9,Deployability,update,update,9,Bioconda update to 0.8.1?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128
https://github.com/COMBINE-lab/salmon/issues/131:9,Availability,error,error,9,Critical error in Salmon in alignment mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131
https://github.com/COMBINE-lab/salmon/issues/134:86,Availability,error,error,86,Broken linked files cause salmon indexing to pause (indefinitely) without throwing an error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/134:45,Usability,pause,pause,45,Broken linked files cause salmon indexing to pause (indefinitely) without throwing an error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/135:24,Availability,error,error,24,RapMap and JSON parsing error salmon 0.8.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/139:0,Availability,Error,Errors,0,Errors when installing from source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:12,Deployability,install,installing,12,Errors when installing from source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/140:0,Availability,Error,Error,0,Error with bam files that has paired end reads + singletons,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140
https://github.com/COMBINE-lab/salmon/issues/142:16,Deployability,install,install,16,Salmon homebrew install broken,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142
https://github.com/COMBINE-lab/salmon/issues/143:44,Availability,error,errors,44,No counts Reported although Salmon shows no errors,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/144:16,Availability,error,error,16,--SeqBias quant error with single-end reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/147:9,Deployability,install,install,9,Bioconda install of salmon breaks existing R installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/147:45,Deployability,install,installation,45,Bioconda install of salmon breaks existing R installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/165:74,Availability,error,error,74,Would separate bias corrections for separate samples introduce systematic error?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165
https://github.com/COMBINE-lab/salmon/issues/172:0,Deployability,Install,Installing,0,Installing Salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/176:32,Availability,error,error,32,Salmon v0.9.0 index FastxParser error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176
https://github.com/COMBINE-lab/salmon/issues/178:40,Energy Efficiency,reduce,reduced,40,NumThreads (Consumer Threads) should be reduced too?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/178
https://github.com/COMBINE-lab/salmon/issues/181:18,Availability,error,errors,18,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:59,Deployability,install,installed,59,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:30,Modifiability,config,configuring,30,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/192:46,Availability,error,error,46,Salmon-0.9.1_linux_x86_64 binary: Exec format error (MacOS 10.12),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192
https://github.com/COMBINE-lab/salmon/issues/194:6,Deployability,install,installs,6,conda installs v 0.8.2 (Mac),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194
https://github.com/COMBINE-lab/salmon/issues/196:3,Availability,robust,robustness,3,On robustness of quasi-mapping for metagenomics,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196
https://github.com/COMBINE-lab/salmon/issues/203:0,Deployability,Install,Install,0,Install problem: autoconf not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203
https://github.com/COMBINE-lab/salmon/issues/204:0,Testability,Test,Testing,0,Testing problem: test 1 fails,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:17,Testability,test,test,17,Testing problem: test 1 fails,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/207:0,Availability,Failure,Failure,0,"Failure to compile using -lpthreads flag (should use -lpthread, without ""s"" instead ?)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/209:7,Availability,error,error,7,Salmon error message: salmon quant was invoked improperly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:13,Integrability,message,message,13,Salmon error message: salmon quant was invoked improperly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/214:0,Availability,Error,Error,0,Error with Salmon build: It removes identical transcript sequences,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214
https://github.com/COMBINE-lab/salmon/issues/215:12,Performance,load,loaded,12,Library not loaded: @rpath/libtbbmalloc_proxy.dylib,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215
https://github.com/COMBINE-lab/salmon/issues/216:0,Deployability,Install,Installing,0,Installing Salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/219:0,Availability,Error,Error,0,Error while loading shared libraries: libtbbmalloc_proxy.so.2: cannot open shared object file: No such file or directory,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219
https://github.com/COMBINE-lab/salmon/issues/219:12,Performance,load,loading,12,Error while loading shared libraries: libtbbmalloc_proxy.so.2: cannot open shared object file: No such file or directory,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219
https://github.com/COMBINE-lab/salmon/issues/222:13,Availability,ERROR,ERROR,13,"Exception : [ERROR: Failed to open file filename.bam, exiting!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/224:0,Availability,Error,Error,0,Error generating index.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224
https://github.com/COMBINE-lab/salmon/issues/225:43,Integrability,depend,dependencies,43,Tell to cmake the different places for the dependencies,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225
https://github.com/COMBINE-lab/salmon/issues/228:5,Availability,error,error,5,"""Bus error: 10"" or ""Segmentation fault: 11"" with version 0.10 and --validateMappings",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228
https://github.com/COMBINE-lab/salmon/issues/228:33,Availability,fault,fault,33,"""Bus error: 10"" or ""Segmentation fault: 11"" with version 0.10 and --validateMappings",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228
https://github.com/COMBINE-lab/salmon/issues/228:68,Security,validat,validateMappings,68,"""Bus error: 10"" or ""Segmentation fault: 11"" with version 0.10 and --validateMappings",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228
https://github.com/COMBINE-lab/salmon/issues/229:16,Availability,Error,Error,16,Salmon v0.10.0: Error in function boost::math::digamma<double>(double): numeric overflow],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/231:23,Security,access,access,23,Possible out of bounds access when alignment softclip co-incides with transcript boundary,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/232:60,Performance,load,loading,60,JSON Parsing failed - provided NVP (SeqHash) not found when loading index... older version of RapMap,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232
https://github.com/COMBINE-lab/salmon/issues/235:0,Availability,Error,Error,0,Error during Salmon installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:20,Deployability,install,installation,20,Error during Salmon installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/237:1,Availability,error,error,1,[error] umi indexing of jellyfish failing. Please report on github,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/242:26,Integrability,message,messages,26,Cleanup STDOUT and STDERR messages from salmon-0.10.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/243:28,Performance,load,loading,28,salmon docker failing while loading hash,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:36,Security,hash,hash,36,salmon docker failing while loading hash,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/244:0,Availability,Error,Error,0,Error in the tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244
https://github.com/COMBINE-lab/salmon/issues/245:0,Availability,ERROR,ERROR,0,ERROR: cell doesn't have any read count,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/246:0,Availability,Error,Error,0,Error bar on TPM estimation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/246
https://github.com/COMBINE-lab/salmon/issues/248:0,Performance,Perform,Perform,0,Perform salmon on only UTR region,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/248
https://github.com/COMBINE-lab/salmon/issues/250:5,Testability,test,test,5,Make test fails on Ubuntu 16,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/251:29,Availability,failure,failure,29,rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/251:19,Testability,assert,assertion,19,rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/256:22,Availability,error,error,22,salmon: symbol lookup error: salmon: undefined symbol: _ZNSt6locale10_S_classicE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256
https://github.com/COMBINE-lab/salmon/pull/257:0,Deployability,Update,Update,0,Update alevin.rst,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/257
https://github.com/COMBINE-lab/salmon/issues/260:40,Availability,down,down,40,Salmon Binary for Osx while Bioconda is down,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260
https://github.com/COMBINE-lab/salmon/issues/261:13,Availability,fault,fault,13,Segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/264:20,Availability,fault,fault,20,Alevin Segmentation fault after reading Cellular Barcodes.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/265:2,Availability,ERROR,ERROR,2,"""[ERROR] Transcript IDs are not in sorted order"" encountered during processing of single-end library",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/266:37,Availability,fault,faults,37,Add debug mode to avoid segmentation faults.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266
https://github.com/COMBINE-lab/salmon/issues/266:18,Safety,avoid,avoid,18,Add debug mode to avoid segmentation faults.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266
https://github.com/COMBINE-lab/salmon/issues/268:13,Availability,fault,fault,13,Segmentation fault in bioconda installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:31,Deployability,install,installation,31,Segmentation fault in bioconda installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/272:28,Testability,test,test,28,[Proposal] Travis CI to add test case easily,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/272
https://github.com/COMBINE-lab/salmon/pull/273:0,Deployability,Update,Update,0,Update .travis.yml to add test case easily.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273
https://github.com/COMBINE-lab/salmon/pull/273:26,Testability,test,test,26,Update .travis.yml to add test case easily.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273
https://github.com/COMBINE-lab/salmon/issues/275:21,Availability,error,error,21,develop branch: g++: error: unrecognized command line option ‘-std=c++14’,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/pull/276:49,Modifiability,variab,variables,49,Set the compiler to build boost from environment variables.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/issues/277:41,Deployability,upgrade,upgrade,41,constant Version Info: Could not resolve upgrade information in the alotted time.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277
https://github.com/COMBINE-lab/salmon/issues/281:14,Availability,error,error,14,salmon alevin error: cell doesn't have any read count,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/286:4,Integrability,depend,dependencies,4,old dependencies in anaconda environment,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/289:16,Availability,error,errors,16,Large number of errors about non-existent positions in the reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/291:41,Availability,error,error,41,alevin: correcting CB and dumpfq related error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291
https://github.com/COMBINE-lab/salmon/pull/292:0,Modifiability,Refactor,Refactor,0,Refactor .travis.yml.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/292
https://github.com/COMBINE-lab/salmon/issues/294:8,Deployability,Update,Updates,8,Alevin: Updates on How to Run 10x for v1 chemistry.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/295:20,Availability,Fault,Faults,20,Random Segmentation Faults,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/pull/298:0,Deployability,Update,Update,0,Update README.md,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/298
https://github.com/COMBINE-lab/salmon/issues/303:13,Availability,fault,fault,13,Segmentation fault 11 with bioconda build,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/309:8,Deployability,Install,Installing,8,Problem Installing From Source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/315:5,Testability,test,test,5,Make test failed,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/317:13,Availability,fault,fault,13,segmentation fault 11 on salmon tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/318:24,Availability,fault,fault,24,Corrected: segmentation fault 11 on salmon tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/320:0,Availability,error,error,0,error: segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320
https://github.com/COMBINE-lab/salmon/issues/320:20,Availability,fault,fault,20,error: segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320
https://github.com/COMBINE-lab/salmon/issues/321:13,Availability,Error,Error,13,Salmon Quant Error: Failed to Read Bytes From Input Stream! Read XXX,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/322:15,Availability,Error,Error,15,RapidJSON Logs Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/322:10,Testability,Log,Logs,10,RapidJSON Logs Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/323:70,Availability,fault,fault,70,@RG lines are at odds with binary encoded reference data Segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323
https://github.com/COMBINE-lab/salmon/issues/326:0,Availability,ERROR,ERROR,0,ERROR: Txp to Gene Map not found for transcripts.. no quant file in output dir,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326
https://github.com/COMBINE-lab/salmon/issues/331:30,Deployability,install,installation,30,Could not fetch RapMap during installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/337:20,Availability,fault,fault,20,Alevin segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/pull/338:16,Security,validat,validateMappings,16,small typo in --validateMappings description,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/338
https://github.com/COMBINE-lab/salmon/issues/342:15,Integrability,message,message,15,salmon version message in sam file,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/342
https://github.com/COMBINE-lab/salmon/issues/345:0,Performance,Load,Loading,0,Loading index exception,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/347:22,Security,validat,validateMappings,22,No unique counts with validateMappings,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347
https://github.com/COMBINE-lab/salmon/pull/348:47,Availability,avail,available,47,Use installed cereal and stadenio libraries if available.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348
https://github.com/COMBINE-lab/salmon/pull/348:4,Deployability,install,installed,4,Use installed cereal and stadenio libraries if available.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348
https://github.com/COMBINE-lab/salmon/issues/354:0,Performance,Load,Loading,0,Loading binary data with `alevin_df = parser.read_quants_bin('./salmon_folder')` is slow,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354
https://github.com/COMBINE-lab/salmon/issues/357:23,Availability,error,error,23,cram_io.c:66:18: fatal error: lzma.h: No such file or directory Make error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:69,Availability,error,error,69,cram_io.c:66:18: fatal error: lzma.h: No such file or directory Make error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/361:27,Energy Efficiency,adapt,adapted,27,Quantification matrix with adapted Celseq2 protocol,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:43,Integrability,protocol,protocol,43,Quantification matrix with adapted Celseq2 protocol,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:27,Modifiability,adapt,adapted,27,Quantification matrix with adapted Celseq2 protocol,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/362:2,Availability,error,error,2,"""[error] Can't find right Boundary."" with --expectCells and drop-seq data",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/364:31,Safety,detect,detect,31,[Alevin] Feature Request: auto detect 10X chemistry,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/364
https://github.com/COMBINE-lab/salmon/issues/386:13,Availability,error,error,13,Out of Range error for txp to gene Map due to Duplicate Transcript Names in the reference,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/389:13,Availability,error,error,13,salmon index error with decoy file,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/393:17,Safety,detect,detecting,17,Libtype auto not detecting correct type?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393
https://github.com/COMBINE-lab/salmon/issues/398:24,Energy Efficiency,adapt,adapters,24,Is it necessary to trim adapters before using salmon?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398
https://github.com/COMBINE-lab/salmon/issues/398:24,Integrability,adapter,adapters,24,Is it necessary to trim adapters before using salmon?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398
https://github.com/COMBINE-lab/salmon/issues/398:24,Modifiability,adapt,adapters,24,Is it necessary to trim adapters before using salmon?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398
https://github.com/COMBINE-lab/salmon/issues/406:37,Integrability,protocol,protocol,37,Would alevin work with QIAseq UPX 3' protocol?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/406
https://github.com/COMBINE-lab/salmon/issues/408:14,Availability,Error,Error,14,Index Version Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/414:13,Availability,error,error,13,salmon quant error: Segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:33,Availability,fault,fault,33,salmon quant error: Segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/418:12,Availability,error,error,12,Compilation error (179191a): Linked RapMap missing isDecoy function,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/419:26,Availability,fault,fault,26,salmon quant segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/423:31,Deployability,update,updated,31,Salmon in MetaWrap needs to be updated,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/426:39,Availability,error,error,39,index runs but quant fails with memory error (std::bad_alloc),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/427:0,Availability,error,error,0,error in quant.sf file name column while using fasta input file corresponding to the stringtie GTF file,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427
https://github.com/COMBINE-lab/salmon/issues/432:11,Availability,error,error,11,Allocation error building pufferfish index using v0.99.0 beta1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/436:46,Deployability,update,update,46,Seurat parser outdated and needs an EDS based update,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/436
https://github.com/COMBINE-lab/salmon/issues/443:10,Availability,error,error,10,1.0 build error: openssl.c: undefined reference to `EVP_sha256',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443
https://github.com/COMBINE-lab/salmon/issues/451:6,Availability,error,error,6,Index error with Salmon v1.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451
https://github.com/COMBINE-lab/salmon/issues/452:2,Deployability,install,installed,2,I installed latest version of salmon through git clone for trinityrnaseq but unable to run trinity,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/453:11,Deployability,install,installing,11,problem in installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/455:10,Availability,error,error,10,link time error building Salmon 1.0.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/456:15,Deployability,update,updated,15,ReadTheDoc not updated for Salmon 1.0.0?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/456
https://github.com/COMBINE-lab/salmon/issues/461:6,Deployability,install,install,6,Conda install,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/463:50,Performance,load,loading,50,"""Index requested greater than vector's size"" when loading pufferfish index using salmon v1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/pull/470:10,Deployability,Update,Update,10,[CI-SKIP] Update .lgtm.yml,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/470
https://github.com/COMBINE-lab/salmon/issues/480:9,Deployability,install,install,9,bioconda install doesn't work if channels aren't set up correctly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480
https://github.com/COMBINE-lab/salmon/issues/483:10,Deployability,upgrade,upgrade,10,failed to upgrade salmon with conda,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/483
https://github.com/COMBINE-lab/salmon/issues/486:18,Deployability,update,update,18,Salmon 1.1.0 auto update check stalled,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/486
https://github.com/COMBINE-lab/salmon/issues/489:23,Safety,detect,detection,23,automatic library type detection infers correct orientation but still includes other reads for quantification,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/489
https://github.com/COMBINE-lab/salmon/issues/496:28,Availability,down,download,28,Compile files due to failed download of tbb-VERSION tar distro,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/497:0,Availability,error,error,0,error in installation process,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:9,Deployability,install,installation,9,error in installation process,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/502:21,Deployability,install,installation,21,Feature request: Aid installation via package managers,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/503:13,Availability,fault,fault,13,Segmentation fault when indexing,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/512:0,Availability,error,errors,0,errors running salmon quant with 1.2.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/518:42,Availability,failure,failure,42,Exception : [rapidjson internal assertion failure: IsObject()],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:32,Testability,assert,assertion,32,Exception : [rapidjson internal assertion failure: IsObject()],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/519:27,Availability,error,error,27,Feature request: long read error model,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/521:33,Availability,fault,fault,33,Found an invalid character / Seg fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/532:28,Performance,optimiz,optimizer,28,Salmon takes hours to start optimizer,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/540:0,Availability,error,error,0,error with alevin using long read transcriptome,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/543:0,Availability,Error,Error,0,Error when indexing,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/544:58,Deployability,patch,patches,58,Handling counts dispersed across many alternate haplotype/patches for a single gene,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544
https://github.com/COMBINE-lab/salmon/issues/546:7,Availability,Error,Error,7,Script Error on Tutorial's page (Getting start).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546
https://github.com/COMBINE-lab/salmon/pull/547:0,Modifiability,Portab,Portable,0,Portable cpuRelax,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/547
https://github.com/COMBINE-lab/salmon/issues/551:20,Availability,error,error,20,Salmon installation error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:7,Deployability,install,installation,7,Salmon installation error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/554:16,Availability,error,error,16,"Non Issue, user error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/554
https://github.com/COMBINE-lab/salmon/issues/556:19,Availability,avail,available,19,Can salmon be made available for ARM based arch,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556
https://github.com/COMBINE-lab/salmon/issues/559:0,Availability,Error,Error,0,Error: The index version file /labs/Resources/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559
https://github.com/COMBINE-lab/salmon/issues/563:23,Security,validat,validateMappings,23,unrecognised option '--validateMappings',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563
https://github.com/COMBINE-lab/salmon/issues/565:24,Availability,error,error,24,libboost shared library error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/567:0,Usability,Resume,Resume,0,Resume after skipQuant?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/567
https://github.com/COMBINE-lab/salmon/issues/580:0,Availability,error,error,0,error: commlib error: got read error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/580:15,Availability,error,error,15,error: commlib error: got read error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/580:31,Availability,error,error,31,error: commlib error: got read error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/584:36,Availability,error,error,36,alevin tutorial setup ressources :: error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/584
https://github.com/COMBINE-lab/salmon/issues/592:10,Deployability,install,install,10,How can I install salmon latest version via Conda?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592
https://github.com/COMBINE-lab/salmon/issues/594:6,Integrability,depend,dependency,6,Conda dependency conflict with ICU between Salmon 1.3.0 and R 4.0.3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594
https://github.com/COMBINE-lab/salmon/issues/604:8,Deployability,update,update,8,fail to update salmon1.4.0 by conda,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/608:55,Availability,error,error,55,salmon v1.4.0 -DCMAKE_BUILD_TYPE=Debug produce compile error: -pg and -fomit-frame-pointer are incompatible,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/609:102,Availability,fault,fault,102,salmon v1.4.0 executable compiled using release mode(-DCMAKE_BUILD_TYPE=Release) produce segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:40,Deployability,release,release,40,salmon v1.4.0 executable compiled using release mode(-DCMAKE_BUILD_TYPE=Release) produce segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:72,Deployability,Release,Release,72,salmon v1.4.0 executable compiled using release mode(-DCMAKE_BUILD_TYPE=Release) produce segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/622:0,Deployability,Update,Update,0,Update salmon in conda,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/622
https://github.com/COMBINE-lab/salmon/pull/623:0,Deployability,Update,Update,0,Update Ocean Genomics contact,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/623
https://github.com/COMBINE-lab/salmon/issues/639:22,Availability,error,error,22,salmon: symbol lookup error: salmon: undefined symbol: _ZN5boost15program_options3argE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/641:10,Availability,error,error,10,what does error code 137 mean?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/642:15,Availability,error,error,15,"Problem with ""[error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character."" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:220,Availability,Error,Error,220,"Problem with ""[error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character."" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/650:69,Security,hash,hash,69,"Alevin: Problem with PyPI vpolo [""Reading Alevin’s bfh (big freaking hash) file"" section of Alevin tutorial]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/653:29,Deployability,release,releases,29,different TPMs for different releases of ensembl fasta,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/657:37,Usability,undo,undocumented,37,salmon --writeUnmappedNames produced undocumented result,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/657
https://github.com/COMBINE-lab/salmon/issues/659:0,Safety,Detect,Detected,0,Detected a *potential* strand bias warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/660:19,Availability,Error,Error,19,Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/664:13,Availability,error,error,13,FYI: Compile error for 1.4.0 and current git master,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/pull/665:0,Modifiability,Refactor,Refactoring,0,Refactoring,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/665
https://github.com/COMBINE-lab/salmon/issues/667:20,Performance,load,loading,20,Salmon won't finish loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/682:27,Availability,Error,Error,27,"""Wrong whitelist provided"" Error Message",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:33,Integrability,Message,Message,33,"""Wrong whitelist provided"" Error Message",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/683:11,Availability,error,error,11,Duplicates error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683
https://github.com/COMBINE-lab/salmon/pull/695:17,Integrability,protocol,protocol,17,Add sci-rna-seq3 protocol to salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/issues/701:3,Availability,error,error,3,No error model errors when using --ont option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701
https://github.com/COMBINE-lab/salmon/issues/701:15,Availability,error,errors,15,No error model errors when using --ont option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701
https://github.com/COMBINE-lab/salmon/issues/713:0,Availability,Error,Error,0,Error with index build while mapping reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/716:0,Deployability,Install,Installing,0,Installing Salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/716
https://github.com/COMBINE-lab/salmon/issues/722:23,Availability,error,error,23,refgenie index returns error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/pull/723:0,Deployability,update,update,0,update single-cell protocol documentation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723
https://github.com/COMBINE-lab/salmon/pull/723:19,Integrability,protocol,protocol,19,update single-cell protocol documentation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723
https://github.com/COMBINE-lab/salmon/issues/725:4,Availability,fault,fault,4,Seg fault in prettyWriter,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725
https://github.com/COMBINE-lab/salmon/issues/730:0,Availability,error,error,0,error when indexing transcroptome,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730
https://github.com/COMBINE-lab/salmon/pull/734:34,Integrability,protocol,protocols,34,Allow custom geometry single-cell protocols,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/issues/736:11,Availability,error,error,11,Issue with error message that doesn't always appear,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:17,Integrability,message,message,17,Issue with error message that doesn't always appear,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/746:6,Availability,error,error,6,weird error when running quant command,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746
https://github.com/COMBINE-lab/salmon/issues/754:28,Energy Efficiency,reduce,reduce,28,Will a smaller k-mer length reduce alignment accuracy?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/754
https://github.com/COMBINE-lab/salmon/issues/755:4,Deployability,install,installation,4,the installation of salmon index cannot be completed,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755
https://github.com/COMBINE-lab/salmon/issues/761:21,Deployability,release,release,21,salmon 1.8.0: binary release does not come with proper file permissions,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761
https://github.com/COMBINE-lab/salmon/issues/762:2,Usability,simpl,simple,2,A simple question about strand bias,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/762
https://github.com/COMBINE-lab/salmon/issues/767:40,Availability,Error,Error,40,"""salmon index was invoked improperly. "" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767
https://github.com/COMBINE-lab/salmon/issues/773:44,Deployability,pipeline,pipeline,44,question about the transcriptome for salmon pipeline,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/773
https://github.com/COMBINE-lab/salmon/issues/774:13,Integrability,protocol,protocol,13,--splitseqV1 protocol barcode and umi is extra from R1?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/774
https://github.com/COMBINE-lab/salmon/issues/778:8,Deployability,Install,Installing,8,Problem Installing Salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/787:0,Deployability,Install,Installing,0,Installing on macOS,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/790:0,Usability,Guid,Guidance,0,Guidance on Minimap2 Settings for Quantification of ONT Reads in Alignment Mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/792:90,Safety,predict,predicted,90,Is it okay to use the assembled MAGs' *fna DNA reads to map on its corresponding prodigal predicted gene *faa protein sequences?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792
https://github.com/COMBINE-lab/salmon/issues/795:22,Integrability,message,message,22,Aborted (core dumped) message at indexing step,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/795:0,Safety,Abort,Aborted,0,Aborted (core dumped) message at indexing step,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/809:0,Deployability,Update,Updated,0,Updated reference genome causes different transcripts quantification,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/809
https://github.com/COMBINE-lab/salmon/pull/810:47,Availability,failure,failure,47,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:55,Integrability,message,messages,55,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:6,Testability,Test,TestSalmonQuasi,6,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:42,Testability,test,test,42,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/issues/812:0,Testability,log,log,0,log(CPM) and TPM are so different,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812
https://github.com/COMBINE-lab/salmon/issues/825:13,Availability,fault,fault,13,Segmentation fault in bulk mode with .bam files,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/829:45,Availability,fault,fault,45,Salmon indexing hangs or throws segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829
https://github.com/COMBINE-lab/salmon/issues/832:13,Availability,Error,Error,13,Exception : [Error: RapMap-based indexing is not supported in this version of salmon.],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832
https://github.com/COMBINE-lab/salmon/issues/833:0,Availability,Error,Error,0,Error in geneIndexList[[i]] : subscript out of bounds,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833
https://github.com/COMBINE-lab/salmon/issues/835:13,Availability,fault,fault,13,Segmentation fault with shipped example,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835
https://github.com/COMBINE-lab/salmon/issues/840:56,Safety,detect,detected,56,"same read files, but different most likely library type detected with different transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840
https://github.com/COMBINE-lab/salmon/issues/842:0,Availability,Error,Error,0,"Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842
https://github.com/COMBINE-lab/salmon/issues/845:5,Testability,test,tests,5,Unit tests with `make test` not finding `libtbb.so.12`,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/845:22,Testability,test,test,22,Unit tests with `make test` not finding `libtbb.so.12`,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845
https://github.com/COMBINE-lab/salmon/issues/853:1,Availability,error,error,1,[error] Can't find left Boundary.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853
https://github.com/COMBINE-lab/salmon/issues/855:0,Availability,Error,Error,0,Error in library(edgeR) - there is no package called 'edgeR',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855
https://github.com/COMBINE-lab/salmon/issues/858:90,Availability,error,error,90,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/858:196,Availability,error,error,196,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/858:96,Integrability,message,message,96,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/858:202,Integrability,message,message,202,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858
https://github.com/COMBINE-lab/salmon/issues/860:48,Availability,error,error,48,"Compilation fails with ""lto1: internal compiler error: Segmentation fault""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/860:68,Availability,fault,fault,68,"Compilation fails with ""lto1: internal compiler error: Segmentation fault""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860
https://github.com/COMBINE-lab/salmon/issues/862:37,Availability,failure,failure,37,Salmon: rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/862:27,Testability,assert,assertion,27,Salmon: rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862
https://github.com/COMBINE-lab/salmon/issues/865:0,Availability,Error,Errors,0,Errors in Salmon Indexing with --features Option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865
https://github.com/COMBINE-lab/salmon/issues/871:0,Deployability,Install,Installation,0,Installation of Salmon on M1 Mac,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871
https://github.com/COMBINE-lab/salmon/issues/876:4,Availability,Fault,Fault,4,Seg Fault in salmon quant,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876
https://github.com/COMBINE-lab/salmon/issues/881:13,Availability,fault,fault,13,Segmentation fault in salmon quant,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881
https://github.com/COMBINE-lab/salmon/issues/898:13,Availability,error,error,13,Salmon quant error in --ont mode (Bus error (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/898:38,Availability,error,error,38,Salmon quant error in --ont mode (Bus error (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898
https://github.com/COMBINE-lab/salmon/issues/902:13,Availability,fault,fault,13,segmentation fault when skipQuant flag is set,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902
https://github.com/COMBINE-lab/salmon/issues/904:29,Availability,avail,available,29,Please make gencode SA files available,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/904
https://github.com/COMBINE-lab/salmon/issues/912:10,Availability,error,error,10,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:16,Deployability,install,installing,16,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/912:0,Modifiability,Config,Configure,0,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912
https://github.com/COMBINE-lab/salmon/issues/913:29,Availability,failure,failure,29,rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/913:19,Testability,assert,assertion,19,rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913
https://github.com/COMBINE-lab/salmon/issues/914:0,Availability,Error,Error,0,Error running salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914
https://github.com/COMBINE-lab/salmon/issues/915:7,Deployability,install,installation,7,Salmon installation problem,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915
https://github.com/COMBINE-lab/salmon/pull/916:0,Deployability,update,update,0,update stadenio and htscodecs,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/916
https://github.com/COMBINE-lab/salmon/issues/919:6,Availability,error,error,6,index error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/919
https://github.com/COMBINE-lab/salmon/issues/926:50,Safety,avoid,avoid,50,No bug - How to explain Salmon workflow simply ? (avoid mathematics-heavy explanation),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926
https://github.com/COMBINE-lab/salmon/issues/926:40,Usability,simpl,simply,40,No bug - How to explain Salmon workflow simply ? (avoid mathematics-heavy explanation),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926
https://github.com/COMBINE-lab/salmon/issues/927:0,Availability,Error,Error,0,Error (bug): version `GLIBC_PRIVATE' not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927
https://github.com/COMBINE-lab/salmon/issues/929:7,Availability,recover,recovery,7,Orphan recovery option in rare cases causes Salmon to quit abruptly without error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:76,Availability,error,error,76,Orphan recovery option in rare cases causes Salmon to quit abruptly without error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/929:7,Safety,recover,recovery,7,Orphan recovery option in rare cases causes Salmon to quit abruptly without error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929
https://github.com/COMBINE-lab/salmon/issues/931:0,Availability,error,error,0,error when trying to follow tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/931
https://github.com/COMBINE-lab/salmon/issues/934:5,Availability,mask,masked,5,soft masked decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934
https://github.com/COMBINE-lab/salmon/issues/936:8,Deployability,install,installing,8,Problem installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936
https://github.com/COMBINE-lab/salmon/issues/937:0,Availability,Error,Error,0,Error: no valid ID found for GFF record,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937
https://github.com/COMBINE-lab/salmon/issues/940:18,Availability,Error,Error,18,salmon quantmerge Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/940
https://github.com/COMBINE-lab/salmon/issues/941:0,Availability,Error,Error,0,Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941
https://github.com/COMBINE-lab/salmon/issues/943:14,Availability,error,errors,14,Salmon alevin errors out when cell barcode length is > 31 base pairs,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943
https://github.com/COMBINE-lab/salmon/issues/945:0,Availability,Error,Error,0,Error about Transcript * appears in the reference but did not appear in the BAM,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945
https://github.com/COMBINE-lab/salmon/issues/946:0,Availability,Error,Error,0,Error about Transcript * appears in the reference but did not appear in the BAM,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/946
https://github.com/COMBINE-lab/salmon/issues/950:5,Availability,error,error,5,Some error was reported by the same command,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950
https://github.com/COMBINE-lab/salmon/issues/953:20,Availability,failure,failure,20,Salmon 1.10.3 build failure,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953
https://github.com/COMBINE-lab/salmon/issues/957:0,Availability,ERROR,ERROR,0,ERROR: Version Server Response: Not Found; missing symbol called,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/957
https://github.com/COMBINE-lab/salmon/issues/959:17,Availability,recover,recoverOrphans,17,Suggestions on --recoverOrphans,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959
https://github.com/COMBINE-lab/salmon/issues/959:17,Safety,recover,recoverOrphans,17,Suggestions on --recoverOrphans,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959
https://github.com/COMBINE-lab/salmon/issues/961:20,Availability,recover,recoverOrphans,20,Salmon quant with --recoverOrphans fails without warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/961:20,Safety,recover,recoverOrphans,20,Salmon quant with --recoverOrphans fails without warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961
https://github.com/COMBINE-lab/salmon/issues/963:0,Availability,ERROR,ERROR,0,ERROR: file [DRR016125_2.fastq.gz] does not appear to exist!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963
https://github.com/COMBINE-lab/salmon/issues/965:13,Availability,error,error,13,stl_vector.h error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965
https://github.com/COMBINE-lab/salmon/issues/966:0,Performance,Perform,Performance,0,Performance issue in use of boost::math::digamma on aarch64 Linux,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966
https://github.com/COMBINE-lab/salmon/pull/967:0,Performance,Perform,Performance,0,Performance fix: don't let boost promote doubles to long doubles,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967
https://github.com/COMBINE-lab/salmon/pull/968:0,Performance,Perform,Performance,0,Performance fix: don't let boost promote doubles to long doubles,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/968
https://github.com/COMBINE-lab/salmon/issues/971:13,Availability,fault,fault,13,Segmentation fault (core dumped) in bulk mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971
