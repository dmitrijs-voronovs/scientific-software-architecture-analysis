id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTStreamerBasicType.html:2428,Performance,cache,cached,2428,"ss ;  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; virtual const char * GetInclude () const;  ; Int_t GetMaxIndex (Int_t i) const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeNam",MatchSource.WIKI,doc/master/classTStreamerBasicType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerBasicType.html
https://root.cern/doc/master/classTStreamerBasicType.html:3533,Performance,cache,cache,3533,"berStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerElement. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (con",MatchSource.WIKI,doc/master/classTStreamerBasicType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerBasicType.html
https://root.cern/doc/master/classTStreamerBasicType.html:3345,Safety,detect,detected,3345,"ceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TStrea",MatchSource.WIKI,doc/master/classTStreamerBasicType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerBasicType.html
https://root.cern/doc/master/classTStreamerBasicType.html:5296,Security,hash,hash,5296,";  Stream an object of class TStreamerElement. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerBasicType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerBasicType.html
https://root.cern/doc/master/classTStreamerElement.html:8599,Availability,error,error,8599,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:8688,Availability,error,error,8688,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:8843,Availability,error,error,8843,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:9140,Availability,error,error,9140,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:13224,Availability,error,error,13224,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:8605,Integrability,message,message,8605,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:9146,Integrability,message,message,9146,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:10136,Integrability,message,message,10136,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:13230,Integrability,message,message,13230,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:13603,Integrability,message,message,13603," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:1499,Modifiability,inherit,inherited,1499,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * G",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:5594,Modifiability,inherit,inherited,5594,"s, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerElement. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:7142,Modifiability,inherit,inherited,7142,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:8235,Modifiability,inherit,inheritance,8235,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:10234,Modifiability,inherit,inherits,10234,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:10351,Modifiability,inherit,inherits,10351,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:14104,Modifiability,inherit,inherited,14104,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class wh",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:14314,Modifiability,inherit,inherited,14314,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class wh",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:15114,Modifiability,inherit,inherits,15114,"pr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerElement (const TStreamerElement &)=delete;  ; TStreamerElement & operator= (const TStreamerElement &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera i",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:15519,Modifiability,inherit,inherited,15519," GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerElement (const TStreamerElement &)=delete;  ; TStreamerElement & operator= (const TStreamerElement &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TStreamerElement::EStatusBits. EnumeratorkHasRange ; kCache ; kRepeat ; kRead ; kWrite ; kDoNotDelete ; kWholeObject ; kWarned . Definition at line 75 of file TStreamerElement.h. ◆ EStatusBitsDupExceptions. enum class TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:15775,Modifiability,inherit,inherited,15775,"assObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerElement (const TStreamerElement &)=delete;  ; TStreamerElement & operator= (const TStreamerElement &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TStreamerElement::EStatusBits. EnumeratorkHasRange ; kCache ; kRepeat ; kRead ; kWrite ; kDoNotDelete ; kWholeObject ; kWarned . Definition at line 75 of file TStreamerElement.h. ◆ EStatusBitsDupExceptions. enum class TStreamerElement::EStatusBitsDupExceptions. strong . EnumeratorkDoNotDelete ; kHasRange . Definition at line 86 of file TStreamerElement.h. ◆ ESTLtype. enum TStreamerElement::ESTLtype. Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) . EnumeratorkSTL ; kSTLstring ; kSTLvector ; kSTLlist ; kSTLforwardlist ; kSTLdeque ; kSTLmap ; kSTLmultimap ; kSTLset ;",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:15874,Modifiability,inherit,inherited,15874,"assObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerElement (const TStreamerElement &)=delete;  ; TStreamerElement & operator= (const TStreamerElement &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TStreamerElement::EStatusBits. EnumeratorkHasRange ; kCache ; kRepeat ; kRead ; kWrite ; kDoNotDelete ; kWholeObject ; kWarned . Definition at line 75 of file TStreamerElement.h. ◆ EStatusBitsDupExceptions. enum class TStreamerElement::EStatusBitsDupExceptions. strong . EnumeratorkDoNotDelete ; kHasRange . Definition at line 86 of file TStreamerElement.h. ◆ ESTLtype. enum TStreamerElement::ESTLtype. Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) . EnumeratorkSTL ; kSTLstring ; kSTLvector ; kSTLlist ; kSTLforwardlist ; kSTLdeque ; kSTLmap ; kSTLmultimap ; kSTLset ;",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:28764,Modifiability,inherit,inherits,28764,"amerBasicType, and TStreamerBase.; Definition at line 571 of file TStreamerElement.cxx. Member Data Documentation. ◆ fArrayDim. Int_t TStreamerElement::fArrayDim. protected . Definition at line 42 of file TStreamerElement.h. ◆ fArrayLength. Int_t TStreamerElement::fArrayLength. protected . Definition at line 41 of file TStreamerElement.h. ◆ fClassObject. TClass* TStreamerElement::fClassObject. protected . Definition at line 48 of file TStreamerElement.h. ◆ fFactor. Double_t TStreamerElement::fFactor. protected . Maximum of data member if a range is specified [xmin,xmax,nbits]. ; Definition at line 53 of file TStreamerElement.h. ◆ fMaxIndex. Int_t TStreamerElement::fMaxIndex[5]. protected . Definition at line 43 of file TStreamerElement.h. ◆ fNewClass. TClass* TStreamerElement::fNewClass. protected . pointer to class of object ; Definition at line 49 of file TStreamerElement.h. ◆ fNewType. Int_t TStreamerElement::fNewType. protected . base offset for TObject if the element inherits from it ; Definition at line 46 of file TStreamerElement.h. ◆ fOffset. Int_t TStreamerElement::fOffset. protected . Definition at line 44 of file TStreamerElement.h. ◆ fSize. Int_t TStreamerElement::fSize. protected . Definition at line 40 of file TStreamerElement.h. ◆ fStreamer. TMemberStreamer* TStreamerElement::fStreamer. protected . new element class when reading ; Definition at line 50 of file TStreamerElement.h. ◆ fTObjectOffset. Int_t TStreamerElement::fTObjectOffset. protected . element offset in class ; Definition at line 45 of file TStreamerElement.h. ◆ fType. Int_t TStreamerElement::fType. protected . Definition at line 39 of file TStreamerElement.h. ◆ fTypeName. TString TStreamerElement::fTypeName. protected . new element type when reading ; Definition at line 47 of file TStreamerElement.h. ◆ fXmax. Double_t TStreamerElement::fXmax. protected . Minimum of data member if a range is specified [xmin,xmax,nbits]. ; Definition at line 52 of file TStreamerElement.h. ◆ fXmin. Double_t",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:3354,Performance,cache,cached,3354,"lement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; virtual const char * GetInclude () const;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; virtual Int_t GetSize () const;  Returns size of this element in bytes. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldForm",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:4536,Performance,cache,cache,4536,"berStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerElement. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function c",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:21319,Performance,cache,cached,21319,"ing, TStreamerSTL, and TStreamerSTLstring.; Definition at line 111 of file TStreamerElement.h. ◆ GetMaxIndex(). Int_t TStreamerElement::GetMaxIndex ; (; Int_t ; i); const. inline . Definition at line 112 of file TStreamerElement.h. ◆ GetMethod(). virtual ULongptr_t TStreamerElement::GetMethod ; (; ); const. inlinevirtual . Reimplemented in TStreamerBase, TStreamerBasicPointer, TStreamerLoop, and TStreamerBasicType.; Definition at line 113 of file TStreamerElement.h. ◆ GetNewClass(). TClass * TStreamerElement::GetNewClass ; (; ); const. inline . Definition at line 117 of file TStreamerElement.h. ◆ GetNewType(). Int_t TStreamerElement::GetNewType ; (; ); const. inline . Definition at line 116 of file TStreamerElement.h. ◆ GetOffset(). Int_t TStreamerElement::GetOffset ; (; ); const. inline . Definition at line 119 of file TStreamerElement.h. ◆ GetSequenceType(). void TStreamerElement::GetSequenceType ; (; TString & ; type); const. Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ; Definition at line 356 of file TStreamerElement.cxx. ◆ GetSize(). Int_t TStreamerElement::GetSize ; (; ); const. virtual . Returns size of this element in bytes. ; Reimplemented in TStreamerBase, TStreamerBasicPointer, TStreamerLoop, TStreamerBasicType, TStreamerObject, TStreamerObjectAny, TStreamerObjectPointer, TStreamerObjectAnyPointer, TStreamerString, TStreamerSTL, and TStreamerSTLstring.; Definition at line 376 of file TStreamerElement.cxx. ◆ GetStreamer(). TMemberStreamer * TStreamerElement::GetStreamer ; (; ); const. Return the local streamer object. ; Definition at line 384 of file TStreamerElement.cxx. ◆ GetTObjectOffset(). Int_t TStreamerElement::GetTObjectOffset ; (; ); const. inline . Definition at line 121 of file TStreamerElement.h. ◆ GetType(). Int_t TStreamerElement::GetType ; (; ); const. inline . Definition at line 118 of file TStreamerElement.h. ◆ GetTypeName(). const char * TStreamerElement::GetTypeName ;",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:24787,Performance,cache,cache,24787,"nition at line 146 of file TStreamerElement.h. ◆ IsaPointer(). virtual Bool_t TStreamerElement::IsaPointer ; (; ); const. inlinevirtual . Reimplemented in TStreamerBasicPointer, TStreamerLoop, TStreamerObjectPointer, TStreamerObjectAnyPointer, and TStreamerSTL.; Definition at line 128 of file TStreamerElement.h. ◆ IsBase(). Bool_t TStreamerElement::IsBase ; (; ); const. virtual . Return kTRUE if the element represent a base class. ; Reimplemented in TStreamerBase, and TStreamerSTL.; Definition at line 431 of file TStreamerElement.cxx. ◆ IsOldFormat(). Bool_t TStreamerElement::IsOldFormat ; (; const char * ; newTypeName). virtual . The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ; Definition at line 419 of file TStreamerElement.cxx. ◆ IsTransient(). Bool_t TStreamerElement::IsTransient ; (; ); const. virtual . Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ; Definition at line 440 of file TStreamerElement.cxx. ◆ ls(). void TStreamerElement::ls ; (; Option_t * ; option = """"); const. overridevirtual . Print the content of the element. ; Reimplemented from TNamed.; Reimplemented in TStreamerSTL.; Definition at line 458 of file TStreamerElement.cxx. ◆ operator=(). TStreamerElement & TStreamerElement::operator= ; (; const TStreamerElement & ; ). privatedelete . ◆ SetArrayDim(). void TStreamerElement::SetArrayDim ; (; Int_t ; dim). virtual . Set number of array dimensions. ; Reimplemented in TStreamerBasicPointer, TStreamerObjectPointer, and TStreamerObjectAnyPointer.; Definition at line 480 of file TStreamerElement.cxx. ◆ SetMaxIndex(). void TStreamerElement::SetMaxIndex ; (; Int_t ; dim, . Int_t ; max . ). virtual . set maximum index for array with dimension dim ; Definition at line 490 of file TStreamerElement.cxx. ◆ SetNewClass(). virtual void TStreamerElement::SetNewClas",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:4348,Safety,detect,detected,4348,"quence information including 'cached','repeat','write' or 'nodelete'. ;  ; virtual Int_t GetSize () const;  Returns size of this element in bytes. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TStrea",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:24508,Safety,detect,detected,24508,"eoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Reimplemented in TStreamerLoop, TStreamerObject, TStreamerObjectAny, TStreamerObjectPointer, TStreamerObjectAnyPointer, TStreamerString, TStreamerSTL, and TStreamerSTLstring.; Definition at line 146 of file TStreamerElement.h. ◆ IsaPointer(). virtual Bool_t TStreamerElement::IsaPointer ; (; ); const. inlinevirtual . Reimplemented in TStreamerBasicPointer, TStreamerLoop, TStreamerObjectPointer, TStreamerObjectAnyPointer, and TStreamerSTL.; Definition at line 128 of file TStreamerElement.h. ◆ IsBase(). Bool_t TStreamerElement::IsBase ; (; ); const. virtual . Return kTRUE if the element represent a base class. ; Reimplemented in TStreamerBase, and TStreamerSTL.; Definition at line 431 of file TStreamerElement.cxx. ◆ IsOldFormat(). Bool_t TStreamerElement::IsOldFormat ; (; const char * ; newTypeName). virtual . The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ; Definition at line 419 of file TStreamerElement.cxx. ◆ IsTransient(). Bool_t TStreamerElement::IsTransient ; (; ); const. virtual . Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ; Definition at line 440 of file TStreamerElement.cxx. ◆ ls(). void TStreamerElement::ls ; (; Option_t * ; option = """"); const. overridevirtual . Print the content of the element. ; Reimplemented from TNamed.; Reimplemented in TStreamerSTL.; Definition at line 458 of file TStreamerElement.cxx. ◆ operator=(). TStreamerElement & TStreamerElement::operator= ; (; const TStreamerElement & ; ). privatedelete . ◆ SetArrayDim(). void TStreamerElement::SetArrayDim ; (; Int_t ; dim). virtual . Set number of array dimensions. ; Reimplemented in TStreamerBasicPointer, TStreamerObjectPointer, and TStreamerObjectAnyPointer.; Definition at line 480 of file TStreamerEle",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerElement.html:6462,Security,hash,hash,6462,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html
https://root.cern/doc/master/classTStreamerInfo-members.html:3163,Availability,error,error,3163,"Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TStreamerInfoinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) overrideTStreamerInfovirtual; Destructor(void *p, Bool_t dtorOnly=kFALSE) overrideTStreamerInfovirtual; DestructorImpl(void *p, Bool_t dtorOnly)TStreamerInfoprivate; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EReadWrite enum nameTVirtualStreamerInfo; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTVirtualStreamerInfo; EStatusBitsDupExceptions enum nameTVirtualStreamerInfo; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Factory()TVirtualStreamerInfostatic; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCheckSumTStreamerInfoprivate; fClassTStreamerInfoprivate; fClassVersionTStreamerInfoprivate; fCompTStreamerInfoprivate; fCompFullTStreamerInfoprivate; fCompOptTStreamerInfoprivate; fElementsTStreamerInfoprivate; fgCanDeleteTVirtualStreamerInfoprotectedstatic; fgCountTStreamerInfoprivatestatic; fgDtorOnlyTObjectprivatestatic; fgInfoFactoryTVirtualStreamerInfoprotectedstatic; fgObjectStatTObjectprivatestatic; fgOptimizeTVirtualStreamerInfoprotectedstatic; fgStreamMemberWiseTVirtualStreamerInfoprotectedstatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIsBuiltTVirtualStreamerInfoprotected; fIsCompiledTVirtualStreamerInfoprotected; f",MatchSource.WIKI,doc/master/classTStreamerInfo-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html
https://root.cern/doc/master/classTStreamerInfo-members.html:3244,Availability,error,error,3244,"Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TStreamerInfoinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) overrideTStreamerInfovirtual; Destructor(void *p, Bool_t dtorOnly=kFALSE) overrideTStreamerInfovirtual; DestructorImpl(void *p, Bool_t dtorOnly)TStreamerInfoprivate; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EReadWrite enum nameTVirtualStreamerInfo; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTVirtualStreamerInfo; EStatusBitsDupExceptions enum nameTVirtualStreamerInfo; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Factory()TVirtualStreamerInfostatic; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCheckSumTStreamerInfoprivate; fClassTStreamerInfoprivate; fClassVersionTStreamerInfoprivate; fCompTStreamerInfoprivate; fCompFullTStreamerInfoprivate; fCompOptTStreamerInfoprivate; fElementsTStreamerInfoprivate; fgCanDeleteTVirtualStreamerInfoprotectedstatic; fgCountTStreamerInfoprivatestatic; fgDtorOnlyTObjectprivatestatic; fgInfoFactoryTVirtualStreamerInfoprotectedstatic; fgObjectStatTObjectprivatestatic; fgOptimizeTVirtualStreamerInfoprotectedstatic; fgStreamMemberWiseTVirtualStreamerInfoprotectedstatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIsBuiltTVirtualStreamerInfoprotected; fIsCompiledTVirtualStreamerInfoprotected; f",MatchSource.WIKI,doc/master/classTStreamerInfo-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html
https://root.cern/doc/master/classTStreamerInfo-members.html:199,Modifiability,inherit,inherited,199,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo Member List. This is the complete list of members for TStreamerInfo, including all inherited members. AbstractMethod(const char *method) constTObject; AddReadAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadTextAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddToTObjectTable(TObject *)TObjectprivatestatic; AddWriteAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteTextAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build(Bool_t isTransient=kFALSE) overrideTStreamerInfovirtual; BuildCheck(TFile *file=nullptr, Bool_t load=kTRUE) overrideTStreamerInfovirtual; BuildEmulated(TFile *file) overrideTStreamerInfovirtual; BuildFor(const TClass *cl) overrideTStreamerInfovirtual; BuildOld() overrideTStreamerInfovirtual; CallShowMembers(const void *obj, TMemberInspector &insp, Bool_t isTransient) const overrideTStreamerInfovirtual; CanDelete()TVirtualStreamerInfostatic; CanOptimize()TVirtualStreamerInfostatic; CheckedHash()TObjectinline; Class()TStreamerInfostatic; Class_Name()TStreamerInfostatic; Class_Version()TStreamerInfoinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""") overrideTStreamerInfovirtual; Clone(const char *newname="""") const overrideTStreamerInfovirtual; Compare(const TObject *obj) const overrideTNamedvirt",MatchSource.WIKI,doc/master/classTStreamerInfo-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html
https://root.cern/doc/master/classTStreamerInfo-members.html:1278,Performance,load,load,1278,"(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadTextAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddToTObjectTable(TObject *)TObjectprivatestatic; AddWriteAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteTextAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build(Bool_t isTransient=kFALSE) overrideTStreamerInfovirtual; BuildCheck(TFile *file=nullptr, Bool_t load=kTRUE) overrideTStreamerInfovirtual; BuildEmulated(TFile *file) overrideTStreamerInfovirtual; BuildFor(const TClass *cl) overrideTStreamerInfovirtual; BuildOld() overrideTStreamerInfovirtual; CallShowMembers(const void *obj, TMemberInspector &insp, Bool_t isTransient) const overrideTStreamerInfovirtual; CanDelete()TVirtualStreamerInfostatic; CanOptimize()TVirtualStreamerInfostatic; CheckedHash()TObjectinline; Class()TStreamerInfostatic; Class_Name()TStreamerInfostatic; Class_Version()TStreamerInfoinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""") overrideTStreamerInfovirtual; Clone(const char *newname="""") const overrideTStreamerInfovirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareContent(TClass *cl, TVirtualStreamerInfo *info, Bool_t warn, Bool_t complete, TFile *file) overrideTStreamerInfovirtual; Compile() overrideTStreamerInfovirtual; ComputeSize()TStreamerInfo; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TStreamerInfoin",MatchSource.WIKI,doc/master/classTStreamerInfo-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html
https://root.cern/doc/master/classTStreamerInfo-members.html:13284,Security,checksum,checksum,13284,"reamerInfo; kShort enum valueTVirtualStreamerInfo; kSingleKey enum valueTObject; kSkip enum valueTVirtualStreamerInfo; kSkipL enum valueTVirtualStreamerInfo; kSkipP enum valueTVirtualStreamerInfo; kSTL enum valueTVirtualStreamerInfo; kSTLp enum valueTVirtualStreamerInfo; kSTLstring enum valueTVirtualStreamerInfo; kStreamer enum valueTVirtualStreamerInfo; kStreamLoop enum valueTVirtualStreamerInfo; kTNamed enum valueTVirtualStreamerInfo; kTObject enum valueTVirtualStreamerInfo; kTString enum valueTVirtualStreamerInfo; kUChar enum valueTVirtualStreamerInfo; kUInt enum valueTVirtualStreamerInfo; kULong enum valueTVirtualStreamerInfo; kULong64 enum valueTVirtualStreamerInfo; kUnset enum valueTVirtualStreamerInfo; kUnsupportedConversion enum valueTVirtualStreamerInfo; kUShort enum valueTVirtualStreamerInfo; kWriteDelete enum valueTObject; kZombie enum valueTObject; ls(Option_t *option="""") const overrideTStreamerInfovirtual; MakeZombie()TObjectinlineprotected; MatchLegacyCheckSum(UInt_t checksum) constTStreamerInfo; MayNotUse(const char *method) constTObject; New(void *obj=nullptr) overrideTStreamerInfovirtual; NewArray(Long_t nElements, void *ary=nullptr) overrideTStreamerInfovirtual; NewInfo(TClass *cl) overrideTStreamerInfoinlinevirtual; Notify()TObjectvirtual; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TStreamerInfo &)=deleteTStreamerInfoprivate; TVirtualStreamerInfo::operator=(const TVirtualStreamerInfo &)TVirtualStreamerInfoprotected; TNamed::operator=(const TNamed &rhs)TNamed; TObject::operator=(const TObject &rhs)TObjectinline; Optimize(Bool_t opt=kTRUE)TVirtualStre",MatchSource.WIKI,doc/master/classTStreamerInfo-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html
https://root.cern/doc/master/classTStreamerInfo-members.html:16149,Security,checksum,checksum,16149,"e=0)TStreamerInfo; ReadBufferArtificial(TBuffer &b, const T &arrptr, TStreamerElement *aElement, Int_t narr, Int_t eoffset)TStreamerInfo; ReadBufferClones(TBuffer &b, TClonesArray *clones, Int_t nc, Int_t first, Int_t eoffset)TStreamerInfo; ReadBufferConv(TBuffer &b, const T &arrptr, const TCompInfo *compinfo, Int_t kase, TStreamerElement *aElement, Int_t narr, Int_t eoffset)TStreamerInfo; ReadBufferSkip(TBuffer &b, const T &arrptr, const TCompInfo *compinfo, Int_t kase, TStreamerElement *aElement, Int_t narr, Int_t eoffset)TStreamerInfo; ReadBufferSTL(TBuffer &b, TVirtualCollectionProxy *cont, Int_t nc, Int_t eoffset, Bool_t v7=kTRUE)TStreamerInfo; RecursiveRemove(TObject *obj)TObjectvirtual; ResetBit(UInt_t f)TObjectinline; ResetIsCompiled()TVirtualStreamerInfoinlineprotected; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetCanDelete(Bool_t opt=kTRUE)TVirtualStreamerInfostatic; SetCheckSum(UInt_t checksum) overrideTStreamerInfoinlinevirtual; SetClass(TClass *cl) overrideTStreamerInfovirtual; SetClassVersion(Int_t vers) overrideTStreamerInfoinlinevirtual; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetFactory(TVirtualStreamerInfo *factory)TVirtualStreamerInfostatic; SetIsCompiled()TVirtualStreamerInfoinlineprotected; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetOnFileClassVersion(Int_t vers)TStreamerInfoinline; SetStreamMemberWise(Bool_t enable=kTRUE)TVirtualStreamerInfostatic; SetTitle(const char *title="""")TNamedvirtual; SetUniqueID(UInt_t uid)TObjectvirtual; Sizeof() constTNamedvirtual; Streamer(TBuffer &) overrideTStreamerInfovirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TStreamerInfoinline; SysError(const char *method, const char *msgfmt,.",MatchSource.WIKI,doc/master/classTStreamerInfo-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html
https://root.cern/doc/master/classTStreamerInfo.html:17563,Availability,error,error,17563,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:17652,Availability,error,error,17652,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:17807,Availability,error,error,17807,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:18104,Availability,error,error,18104,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:22188,Availability,error,error,22188,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TStreamerElement * GetCurrentElement ();  static function returning a pointer to the current TStreamerElement fgElement points to the current",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:37806,Availability,error,error,37806," or BuildOld was never called on it (useful to force their re-running). ; Implements TVirtualStreamerInfo.; Definition at line 2616 of file TStreamerInfo.cxx. ◆ Clone(). TObject * TStreamerInfo::Clone ; (; const char * ; newname = """"); const. overridevirtual . Make a clone of an object using the Streamer facility. ; If newname is specified, this will be the name of the new object. ; Reimplemented from TNamed.; Definition at line 2818 of file TStreamerInfo.cxx. ◆ CompareContent(). Bool_t TStreamerInfo::CompareContent ; (; TClass * ; cl, . TVirtualStreamerInfo * ; info, . Bool_t ; warn, . Bool_t ; complete, . TFile * ; file . ). overridevirtual . Return True if the current StreamerInfo in cl or info is equivalent to this TStreamerInfo. ; In this context 'Equivalent' means the same number of persistent data member which the same actual C++ type and the same name. If 'warn' is true, Warning message are printed to explicit the differences. If 'complete' is false, stop at the first error, otherwise continue until all members have been checked. ; Implements TVirtualStreamerInfo.; Definition at line 2854 of file TStreamerInfo.cxx. ◆ Compile(). void TStreamerInfo::Compile ; (; ). overridevirtual . loop on the TStreamerElement list regroup members with same type Store predigested information into local arrays. ; This saves a huge amount of time compared to an explicit iteration on all elements. ; Implements TVirtualStreamerInfo.; Definition at line 2972 of file TStreamerInfoActions.cxx. ◆ ComputeSize(). void TStreamerInfo::ComputeSize ; (; ). Compute total size of all persistent elements of the class. ; Definition at line 3134 of file TStreamerInfo.cxx. ◆ DeclFileName(). static const char * TStreamerInfo::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 254 of file TStreamerInfo.h. ◆ DeleteArray(). void TStreamerInfo::DeleteArray ; (; void * ; p, . Bool_t ; dtorOnly = kFALSE . ). overridevirtual . Destroy an arra",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:42397,Availability,avail,available,42397,"der file for the class described by this TStreamerInfo the function is called by TFile::MakeProject for each class in the file. ; Implements TVirtualStreamerInfo.; Definition at line 4007 of file TStreamerInfo.cxx. ◆ GenerateIncludes(). UInt_t TStreamerInfo::GenerateIncludes ; (; FILE * ; fp, . char * ; inclist, . const TList * ; extrainfos . ). private . Add to the header file, the #include need for this class. ; Definition at line 3930 of file TStreamerInfo.cxx. ◆ GenerateInfoForPair() [1/2]. TVirtualStreamerInfo * TStreamerInfo::GenerateInfoForPair ; (; const std::string & ; firstname, . const std::string & ; secondname, . bool ; silent, . size_t ; hint_pair_offset, . size_t ; hint_pair_size . ). overridevirtual . Generate the TClass and TStreamerInfo for the requested pair. ; This creates a TVirtualStreamerInfo for the pair and trigger the BuildCheck/Old to provoke the creation of the corresponding TClass. This relies on the dictionary for std::pair<const int, int> to already exist (or the interpreter information being available) as it is used as a template. NoteThe returned object is owned by the caller. ; Implements TVirtualStreamerInfo.; Definition at line 5768 of file TStreamerInfo.cxx. ◆ GenerateInfoForPair() [2/2]. TVirtualStreamerInfo * TStreamerInfo::GenerateInfoForPair ; (; const std::string & ; pairclassname, . bool ; silent, . size_t ; hint_pair_offset, . size_t ; hint_pair_size . ). overridevirtual . Generate the TClass and TStreamerInfo for the requested pair. ; This creates a TVirtualStreamerInfo for the pair and trigger the BuildCheck/Old to provokes the creation of the corresponding TClass. This relies on the dictionary for std::pair<const int, int> to already exist (or the interpreter information being available) as it is used as a template. NoteThe returned object is owned by the caller. ; Implements TVirtualStreamerInfo.; Definition at line 5837 of file TStreamerInfo.cxx. ◆ GenExplicitClassStreamer(). TClassStreamer * TStreamerInfo::GenExplicit",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:43111,Availability,avail,available,43111,"idevirtual . Generate the TClass and TStreamerInfo for the requested pair. ; This creates a TVirtualStreamerInfo for the pair and trigger the BuildCheck/Old to provoke the creation of the corresponding TClass. This relies on the dictionary for std::pair<const int, int> to already exist (or the interpreter information being available) as it is used as a template. NoteThe returned object is owned by the caller. ; Implements TVirtualStreamerInfo.; Definition at line 5768 of file TStreamerInfo.cxx. ◆ GenerateInfoForPair() [2/2]. TVirtualStreamerInfo * TStreamerInfo::GenerateInfoForPair ; (; const std::string & ; pairclassname, . bool ; silent, . size_t ; hint_pair_offset, . size_t ; hint_pair_size . ). overridevirtual . Generate the TClass and TStreamerInfo for the requested pair. ; This creates a TVirtualStreamerInfo for the pair and trigger the BuildCheck/Old to provokes the creation of the corresponding TClass. This relies on the dictionary for std::pair<const int, int> to already exist (or the interpreter information being available) as it is used as a template. NoteThe returned object is owned by the caller. ; Implements TVirtualStreamerInfo.; Definition at line 5837 of file TStreamerInfo.cxx. ◆ GenExplicitClassStreamer(). TClassStreamer * TStreamerInfo::GenExplicitClassStreamer ; (; const ::ROOT::Detail::TCollectionProxyInfo & ; info, . TClass * ; cl . ). overridevirtual . Generate class streamer from static functions. ; Implements TVirtualStreamerInfo.; Definition at line 5685 of file TStreamerInfo.cxx. ◆ GenExplicitProxy(). TVirtualCollectionProxy * TStreamerInfo::GenExplicitProxy ; (; const ::ROOT::Detail::TCollectionProxyInfo & ; info, . TClass * ; cl . ). overridevirtual . Generate proxy from static functions. ; Implements TVirtualStreamerInfo.; Definition at line 5676 of file TStreamerInfo.cxx. ◆ GetActualClass(). TClass * TStreamerInfo::GetActualClass ; (; const void * ; obj); const. overridevirtual . Assuming that obj points to (the part of) an object that ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:28704,Deployability,update,update,28704,"tic void PrintValueAux (char *ladd, Int_t atype, TStreamerElement *aElement, Int_t aleng, Int_t *count);  print value of element in object at pointer, type atype, leng aleng or *count The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  . Private Attributes; UInt_t fCheckSum;  Checksum of original class. ;  ; TClass * fClass;  !pointer to class ;  ; Int_t fClassVersion;  Class version identifier. ;  ; TCompInfo * fComp;  ![fNslots with less than fElements->GetEntries()*1.5 used] Compiled info ;  ; TCompInfo ** fCompFull;  ![fElements->GetEntries()] ;  ; TCompInfo ** fCompOpt;  ![fNdata] ;  ; TObjArray * fElements;  Array of TStreamerElements. ;  ; Int_t fNdata;  !number of optimized elements ;  ; Int_t fNfulldata;  !number of elements ;  ; Int_t fNslots;  !total number of slots in fComp. ;  ; Int_t fNumber;  !Unique identifier ;  ; Int_t fNVirtualInfoLoc;  ! Number of virtual info location to update. ;  ; Version_t fOldVersion;  ! Version of the TStreamerInfo object read from the file ;  ; Int_t fOnFileClassVersion;  !Class version identifier as stored on file. ;  ; TStreamerInfoActions::TActionSequence * fReadMemberWise;  ! List of read action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fReadMemberWiseVecPtr;  ! List of read action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fReadObjectWise;  ! List of read action resulting from the compilation. ;  ; TStreamerInfoActions::TActionSequence * fReadText;  ! List of text read action resulting from the compilation, used for JSON. ;  ; Int_t fSize;  !size of the persistent class ;  ; ULong_t * fVirtualInfoLoc;  ![fNVirtualInfoLoc] Location of the pointer to the TStreamerInfo inside the object (when emulated) ;  ; TStreamerInfoActions::TActionSequence ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:70294,Deployability,update,update,70294,CompInfo** TStreamerInfo::fCompOpt. private . ![fNdata] ; Definition at line 97 of file TStreamerInfo.h. ◆ fElements. TObjArray* TStreamerInfo::fElements. private . Array of TStreamerElements. ; Definition at line 100 of file TStreamerInfo.h. ◆ fgCount. std::atomic< Int_t > TStreamerInfo::fgCount {0}. staticprivate . Number of TStreamerInfo instances. ; Definition at line 113 of file TStreamerInfo.h. ◆ fNdata. Int_t TStreamerInfo::fNdata. private . !number of optimized elements ; Definition at line 93 of file TStreamerInfo.h. ◆ fNfulldata. Int_t TStreamerInfo::fNfulldata. private . !number of elements ; Definition at line 94 of file TStreamerInfo.h. ◆ fNslots. Int_t TStreamerInfo::fNslots. private . !total number of slots in fComp. ; Definition at line 95 of file TStreamerInfo.h. ◆ fNumber. Int_t TStreamerInfo::fNumber. private . !Unique identifier ; Definition at line 91 of file TStreamerInfo.h. ◆ fNVirtualInfoLoc. Int_t TStreamerInfo::fNVirtualInfoLoc. private . ! Number of virtual info location to update. ; Definition at line 102 of file TStreamerInfo.h. ◆ fOldVersion. Version_t TStreamerInfo::fOldVersion. private . ! Version of the TStreamerInfo object read from the file ; Definition at line 101 of file TStreamerInfo.h. ◆ fOnFileClassVersion. Int_t TStreamerInfo::fOnFileClassVersion. private . !Class version identifier as stored on file. ; Definition at line 90 of file TStreamerInfo.h. ◆ fReadMemberWise. TStreamerInfoActions::TActionSequence* TStreamerInfo::fReadMemberWise. private . ! List of read action resulting from the compilation for use in member wise streaming. ; Definition at line 105 of file TStreamerInfo.h. ◆ fReadMemberWiseVecPtr. TStreamerInfoActions::TActionSequence* TStreamerInfo::fReadMemberWiseVecPtr. private . ! List of read action resulting from the compilation for use in member wise streaming. ; Definition at line 106 of file TStreamerInfo.h. ◆ fReadObjectWise. TStreamerInfoActions::TActionSequence* TStreamerInfo::fReadObjectWise. private . ! ,MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:10989,Energy Efficiency,allocate,allocate,10989," k, Int_t eoffset) const;  ; Double_t GetValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL (const char *name, TVirtualCollectionProxy *cont, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; template<class ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:11166,Energy Efficiency,allocate,allocate,11166,"rtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL (const char *name, TVirtualCollectionProxy *cont, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; template<class T > ; Int_t ReadBuffer (TBuffer &b, const T &arrptr, TCompInfo *const *const compinfo, Int_t first, Int_t last, Int_t narr=1, Int_t eoffset=0, Int_t mode=0);  ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:60001,Energy Efficiency,allocate,allocate,60001,"4541 of file TStreamerInfo.cxx. ◆ IsA(). TClass * TStreamerInfo::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 254 of file TStreamerInfo.h. ◆ ls(). void TStreamerInfo::ls ; (; Option_t * ; option = """"); const. overridevirtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue(). void TStreamerInfo::PrintValue ; (; const char * ; name, . char * ; pointer, . Int_t ; i, . Int_t ; len, . Int_t ; lenmax = 1000 . ); const. print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i i",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:60313,Energy Efficiency,allocate,allocate,60313,"rtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue(). void TStreamerInfo::PrintValue ; (; const char * ; name, . char * ; pointer, . Int_t ; i, . Int_t ; len, . Int_t ; lenmax = 1000 . ); const. print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ; len is the number of elements to be printed starting at pointer. ; Definition at line 5159 of file TStreamerInfo.cxx. ◆ PrintValueAux(). void TStreamerInfo::PrintValueAu",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:8978,Integrability,rout,routine,8978,"t (const char *) const override;  Return the offset of the data member as indicated by this StreamerInfo. ;  ; Int_t GetOffset (Int_t id) const override;  ; Version_t GetOldVersion () const override;  ; Int_t GetOnFileClassVersion () const override;  ; TStreamerInfoActions::TActionSequence * GetReadMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetReadObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetReadTextActions ();  ; Int_t GetSize () const override;  Return total size of all persistent elements of the class (with offsets). ;  ; Int_t GetSizeElements () const;  Return total size of all persistent elements of the class use GetSize if you want to get the real size in memory. ;  ; TStreamerElement * GetStreamerElement (const char *datamember, Int_t &offset) const override;  Return the StreamerElement of ""datamember"" inside our class or any of its base classes. ;  ; TStreamerElement * GetStreamerElementReal (Int_t i, Int_t j) const;  Obsolete: this routine is obsolete and should not longer be used. ;  ; Int_t GetType (Int_t id) const;  ; template<typename T > ; T GetTypedValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  Return value of element i in object at pointer. ;  ; template<typename T > ; T GetTypedValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; template<typename T > ; T GetTypedValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  Return value of element i in object number j in a TClonesArray and eventually element k in a sub-array. ;  ; template<typename T > ; T GetTypedValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  Return value of element i in object number j in a TClonesArray and eventually element k in a sub-array. ;  ; Double_t GetValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  ; Double_t GetValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:17569,Integrability,message,message,17569,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:18110,Integrability,message,message,18110,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:19100,Integrability,message,message,19100,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:22194,Integrability,message,message,22194,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TStreamerElement * GetCurrentElement ();  static function returning a pointer to the current TStreamerElement fgElement points to the current",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:22567,Integrability,message,message,22567," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TStreamerElement * GetCurrentElement ();  static function returning a pointer to the current TStreamerElement fgElement points to the current TStreamerElement being read in ReadBuffer ;  ;  Static Public Member Functions inherited from TVirtualStreamerInfo; static Bool_t CanDelete ();  static function returning true if ReadBuffer can delete object ;  ; static Bool_t CanOptimize ();  static function returning true if optimization can be on ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; s",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:37715,Integrability,message,message,37715,"tion = """"). overridevirtual . If opt contains 'built', reset this StreamerInfo as if Build or BuildOld was never called on it (useful to force their re-running). ; Implements TVirtualStreamerInfo.; Definition at line 2616 of file TStreamerInfo.cxx. ◆ Clone(). TObject * TStreamerInfo::Clone ; (; const char * ; newname = """"); const. overridevirtual . Make a clone of an object using the Streamer facility. ; If newname is specified, this will be the name of the new object. ; Reimplemented from TNamed.; Definition at line 2818 of file TStreamerInfo.cxx. ◆ CompareContent(). Bool_t TStreamerInfo::CompareContent ; (; TClass * ; cl, . TVirtualStreamerInfo * ; info, . Bool_t ; warn, . Bool_t ; complete, . TFile * ; file . ). overridevirtual . Return True if the current StreamerInfo in cl or info is equivalent to this TStreamerInfo. ; In this context 'Equivalent' means the same number of persistent data member which the same actual C++ type and the same name. If 'warn' is true, Warning message are printed to explicit the differences. If 'complete' is false, stop at the first error, otherwise continue until all members have been checked. ; Implements TVirtualStreamerInfo.; Definition at line 2854 of file TStreamerInfo.cxx. ◆ Compile(). void TStreamerInfo::Compile ; (; ). overridevirtual . loop on the TStreamerElement list regroup members with same type Store predigested information into local arrays. ; This saves a huge amount of time compared to an explicit iteration on all elements. ; Implements TVirtualStreamerInfo.; Definition at line 2972 of file TStreamerInfoActions.cxx. ◆ ComputeSize(). void TStreamerInfo::ComputeSize ; (; ). Compute total size of all persistent elements of the class. ; Definition at line 3134 of file TStreamerInfo.cxx. ◆ DeclFileName(). static const char * TStreamerInfo::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 254 of file TStreamerInfo.h. ◆ DeleteArray(). void TStreamerInfo::Delet",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:39845,Integrability,depend,dependencies,39845," emulated objects, with optional delete. ; Implements TVirtualStreamerInfo.; Definition at line 5126 of file TStreamerInfo.cxx. ◆ Destructor(). void TStreamerInfo::Destructor ; (; void * ; obj, . Bool_t ; dtorOnly = kFALSE . ). overridevirtual . Emulated destructor for this class. ; An emulated object is destroyed at address p. Destruct each of the datamembers in the same order as the implicit destructor would. ; Implements TVirtualStreamerInfo.; Definition at line 5100 of file TStreamerInfo.cxx. ◆ DestructorImpl(). void TStreamerInfo::DestructorImpl ; (; void * ; obj, . Bool_t ; dtorOnly . ). private . Internal part of the destructor. ; Destruct each of the datamembers in the same order as the implicit destructor would. ; Definition at line 4967 of file TStreamerInfo.cxx. ◆ ForceWriteInfo(). void TStreamerInfo::ForceWriteInfo ; (; TFile * ; file, . Bool_t ; force = kFALSE . ). overridevirtual . Recursively mark streamer infos for writing to a file. ; Will force this TStreamerInfo to the file and also all the dependencies. If argument force > 0 the loop on class dependencies is forced. This function is called when streaming a class that contains a null pointer. In this case, the TStreamerInfo for the class with the null pointer must be written to the file and also all the TStreamerInfo of all the classes referenced by the class. We must be given a file to write to. ; Implements TVirtualStreamerInfo.; Definition at line 3172 of file TStreamerInfo.cxx. ◆ GenEmulatedClassStreamer(). TClassStreamer * TStreamerInfo::GenEmulatedClassStreamer ; (; const char * ; class_name, . Bool_t ; silent . ). overridevirtual . Generate emulated class streamer for a given collection class. ; Implements TVirtualStreamerInfo.; Definition at line 5667 of file TStreamerInfo.cxx. ◆ GenEmulatedProxy(). TVirtualCollectionProxy * TStreamerInfo::GenEmulatedProxy ; (; const char * ; class_name, . Bool_t ; silent . ). overridevirtual . Generate emulated collection proxy for a given class. ; Impleme",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:39899,Integrability,depend,dependencies,39899,"Info.; Definition at line 5126 of file TStreamerInfo.cxx. ◆ Destructor(). void TStreamerInfo::Destructor ; (; void * ; obj, . Bool_t ; dtorOnly = kFALSE . ). overridevirtual . Emulated destructor for this class. ; An emulated object is destroyed at address p. Destruct each of the datamembers in the same order as the implicit destructor would. ; Implements TVirtualStreamerInfo.; Definition at line 5100 of file TStreamerInfo.cxx. ◆ DestructorImpl(). void TStreamerInfo::DestructorImpl ; (; void * ; obj, . Bool_t ; dtorOnly . ). private . Internal part of the destructor. ; Destruct each of the datamembers in the same order as the implicit destructor would. ; Definition at line 4967 of file TStreamerInfo.cxx. ◆ ForceWriteInfo(). void TStreamerInfo::ForceWriteInfo ; (; TFile * ; file, . Bool_t ; force = kFALSE . ). overridevirtual . Recursively mark streamer infos for writing to a file. ; Will force this TStreamerInfo to the file and also all the dependencies. If argument force > 0 the loop on class dependencies is forced. This function is called when streaming a class that contains a null pointer. In this case, the TStreamerInfo for the class with the null pointer must be written to the file and also all the TStreamerInfo of all the classes referenced by the class. We must be given a file to write to. ; Implements TVirtualStreamerInfo.; Definition at line 3172 of file TStreamerInfo.cxx. ◆ GenEmulatedClassStreamer(). TClassStreamer * TStreamerInfo::GenEmulatedClassStreamer ; (; const char * ; class_name, . Bool_t ; silent . ). overridevirtual . Generate emulated class streamer for a given collection class. ; Implements TVirtualStreamerInfo.; Definition at line 5667 of file TStreamerInfo.cxx. ◆ GenEmulatedProxy(). TVirtualCollectionProxy * TStreamerInfo::GenEmulatedProxy ; (; const char * ; class_name, . Bool_t ; silent . ). overridevirtual . Generate emulated collection proxy for a given class. ; Implements TVirtualStreamerInfo.; Definition at line 5658 of file TStreamerI",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:44260,Integrability,rout,routine,44260,"assStreamer(). TClassStreamer * TStreamerInfo::GenExplicitClassStreamer ; (; const ::ROOT::Detail::TCollectionProxyInfo & ; info, . TClass * ; cl . ). overridevirtual . Generate class streamer from static functions. ; Implements TVirtualStreamerInfo.; Definition at line 5685 of file TStreamerInfo.cxx. ◆ GenExplicitProxy(). TVirtualCollectionProxy * TStreamerInfo::GenExplicitProxy ; (; const ::ROOT::Detail::TCollectionProxyInfo & ; info, . TClass * ; cl . ). overridevirtual . Generate proxy from static functions. ; Implements TVirtualStreamerInfo.; Definition at line 5676 of file TStreamerInfo.cxx. ◆ GetActualClass(). TClass * TStreamerInfo::GetActualClass ; (; const void * ; obj); const. overridevirtual . Assuming that obj points to (the part of) an object that is of the type described by this streamerInfo, return the actual type of the object (i.e. ; the type described by this streamerInfo is a base class of the actual type of the object. This routine should only be called if the class described by this StreamerInfo is 'emulated'. ; Implements TVirtualStreamerInfo.; Definition at line 3255 of file TStreamerInfo.cxx. ◆ GetCheckSum() [1/2]. UInt_t TStreamerInfo::GetCheckSum ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 159 of file TStreamerInfo.h. ◆ GetCheckSum() [2/2]. UInt_t TStreamerInfo::GetCheckSum ; (; TClass::ECheckSum ; code); const. Recalculate the checksum of this TStreamerInfo based on its code. ; The class ckecksum is used by the automatic schema evolution algorithm to uniquely identify a class version. The check sum is built from the names/types of base classes and data members. The valid range of code is determined by ECheckSum.; kNoEnum: data members of type enum are not counted in the checksum; kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; kWithTypeDef: use the sugared type name in the calculation. This is needed for backward com",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:50682,Integrability,rout,routine,50682," class (with offsets). ; Implements TVirtualStreamerInfo.; Definition at line 4183 of file TStreamerInfo.cxx. ◆ GetSizeElements(). Int_t TStreamerInfo::GetSizeElements ; (; ); const. Return total size of all persistent elements of the class use GetSize if you want to get the real size in memory. ; Definition at line 4192 of file TStreamerInfo.cxx. ◆ GetStreamerElement(). TStreamerElement * TStreamerInfo::GetStreamerElement ; (; const char * ; datamember, . Int_t & ; offset . ); const. overridevirtual . Return the StreamerElement of ""datamember"" inside our class or any of its base classes. ; The offset information contained in the StreamerElement is related to its immediately containing class, so we return in 'offset' the offset inside our class. ; Implements TVirtualStreamerInfo.; Definition at line 4212 of file TStreamerInfo.cxx. ◆ GetStreamerElementReal(). TStreamerElement * TStreamerInfo::GetStreamerElementReal ; (; Int_t ; i, . Int_t ; j . ); const. Obsolete: this routine is obsolete and should not longer be used. ; TStreamerInfo holds two types of data structures; TObjArray* fElements; containing the list of all TStreamerElement objects for this class version.; ULong_t* fElem; containing the preprocessed information by TStreamerInfo::Compile In case consecutive data members are of the same type, the Compile function declares the consecutive elements as one single element in fElems. Example with the class TAttLine: TClass::GetClass(""TAttLine"")->GetStreamerInfo()->ls(); produces;; StreamerInfo for class: TAttLine, version=1; short fLineColor offset= 4 type= 2 line color; short fLineStyle offset= 6 type= 2 line style; short fLineWidth offset= 8 type= 2 line width; i= 0, fLineColor type= 22, offset= 4, len=3, method=0; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:55428,Integrability,rout,routine,55428,"tic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TVirtualStreamerInfo::lsvirtual void ls(Option_t *="""") const override=0List TNamed name and title.; lineTLine * lineDefinition entrylistblock_figure1.C:235; For I/O implementations (eg. XML) , one has to know the original name of the data member. This function can be used to return a pointer to the original TStreamerElement object corresponding to the j-th element of a compressed array in fElems. Parameters description:; i: the serial number in array fElem; j: the element number in the array of consecutive types In the above example the class TAttLine has 3 consecutive data members of the same type ""short"". Compile makes one single array of 3 elements. To access the TStreamerElement for the second element of this array, one can call: auto el = GetStreamerElementReal(0,1);; auto membername = el->GetName();; TStreamerInfo::GetStreamerElementRealTStreamerElement * GetStreamerElementReal(Int_t i, Int_t j) constObsolete: this routine is obsolete and should not longer be used.Definition TStreamerInfo.cxx:4316; This function is typically called from TBuffer, TXmlBuffer. . Definition at line 4316 of file TStreamerInfo.cxx. ◆ GetType(). Int_t TStreamerInfo::GetType ; (; Int_t ; id); const. inline . Definition at line 187 of file TStreamerInfo.h. ◆ GetTypedValue(). template<typename T > . T TStreamerInfo::GetTypedValue ; (; char * ; pointer, . Int_t ; i, . Int_t ; j, . Int_t ; len . ); const. Return value of element i in object at pointer. ; The function may be called in two ways:; method1 len < 0: i is assumed to be the TStreamerElement number i in StreamerInfo; method2 len >= 0: i is the type, address of variable is directly pointer. . Definition at line 4442 of file TStreamerInfo.cxx. ◆ GetTypedValueAux(). template<typename T > . T TStreamerInfo::GetTypedValueAux ; (; Int_t ; type, . void * ; ladd, ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:1420,Modifiability,inherit,inherited,1420,"an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; A TStreamerInfo is a list of TStreamerElement objects (one per data member or base class). When streaming an object, the system (TClass) loops on all the TStreamerElement objects and calls the appropriate function for each element type. ; Definition at line 39 of file TStreamerInfo.h. Classes; class  TCompInfo;  ; class  TPointerCollectionAdapter;  . Public Types; typedef TCompInfo TCompInfo_t;  ;  Public Types inherited from TVirtualStreamerInfo; enum  EReadWrite { ;   kBase = 0; , kOffsetL = 20; , kOffsetP = 40; , kCounter = 6; , ;   kCharStar = 7; , kChar = 1; , kShort = 2; , kInt = 3; , ;   kLong = 4; , kFloat = 5; , kDouble = 8; , kDouble32 = 9; , ;   kLegacyChar = 10; , kUChar = 11; , kUShort = 12; , kUInt = 13; , ;   kULong = 14; , kBits = 15; , kLong64 = 16; , kULong64 = 17; , ;   kBool = 18; , kFloat16 = 19; , kObject = 61; , kAny = 62; , ;   kObjectp = 63; , kObjectP = 64; , kTString = 65; , kTObject = 66; , ;   kTNamed = 67; , kAnyp = 68; , kAnyP = 69; , kAnyPnoVT = 70; , ;   kSTLp = 71; , kSkip = 100; , kSkipL = 120; , kSkipP = 140; , ;   kConv = 200; , kConvL = 220; , kConvP = 240; , kSTL = ROOT::kSTLany; , ;   kSTLstring = ROOT::kSTLstring; , kStreamer = 500; , kStreamLoop = 501; , kCache = 600; , ;   kArtificial = 1000; , kCacheNew = 1001; , kCacheDelete = 1002; , kNeedObjectForVirtualBaseClass = 99997; , ;   kMissing = 99999; , kNoType = -1; , kUnsupportedConversion = -2; , kUnset = -3. };  EReadWrite Enumerator. More...;  ; enum  EStatusBits { ;   kCannotOptimize = (1ULL << ( 12 )); , kIgnoreTObjectStreamer = (1ULL << ( 13 )); , kRecovered = (1ULL << ( 14 )); , kNeedCheck = (1ULL << ( 15 )); , ;   kIsCompiled = (1ULL << ( 16 )); , kBuildOldUsed = (1ULL << ( 17 )); , kBuildRunning = (1ULL << ( 18 )). };  ; enum class  EStatusBitsDupExceptions { kIgnoreTObjectStreamer = TVirtualStreamerInfo::kIgnoreTObjectStreamer; };  ;  Public Types inherit",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:2887,Modifiability,inherit,inherited,2887,"kTString = 65; , kTObject = 66; , ;   kTNamed = 67; , kAnyp = 68; , kAnyP = 69; , kAnyPnoVT = 70; , ;   kSTLp = 71; , kSkip = 100; , kSkipL = 120; , kSkipP = 140; , ;   kConv = 200; , kConvL = 220; , kConvP = 240; , kSTL = ROOT::kSTLany; , ;   kSTLstring = ROOT::kSTLstring; , kStreamer = 500; , kStreamLoop = 501; , kCache = 600; , ;   kArtificial = 1000; , kCacheNew = 1001; , kCacheDelete = 1002; , kNeedObjectForVirtualBaseClass = 99997; , ;   kMissing = 99999; , kNoType = -1; , kUnsupportedConversion = -2; , kUnset = -3. };  EReadWrite Enumerator. More...;  ; enum  EStatusBits { ;   kCannotOptimize = (1ULL << ( 12 )); , kIgnoreTObjectStreamer = (1ULL << ( 13 )); , kRecovered = (1ULL << ( 14 )); , kNeedCheck = (1ULL << ( 15 )); , ;   kIsCompiled = (1ULL << ( 16 )); , kBuildOldUsed = (1ULL << ( 17 )); , kBuildRunning = (1ULL << ( 18 )). };  ; enum class  EStatusBitsDupExceptions { kIgnoreTObjectStreamer = TVirtualStreamerInfo::kIgnoreTObjectStreamer; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStreamerInfo ();  Status bits See TVirtualStreamerInfo::EStatusBits for the values. ;  ;  TStreamerInfo (TClass *cl);  Create a TStreamerInfo object. ;  ;  ~TStreamerInfo () override;  TStreamerInfo dtor. ;  ; void Build (Bool_t isTransient=kFALSE) override;  Build the I/O data structure for the current class version. ;  ; void BuildCheck (TFile *file=nullptr, Boo",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:11567,Modifiability,variab,variable,11567,"tWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL (const char *name, TVirtualCollectionProxy *cont, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; template<class T > ; Int_t ReadBuffer (TBuffer &b, const T &arrptr, TCompInfo *const *const compinfo, Int_t first, Int_t last, Int_t narr=1, Int_t eoffset=0, Int_t mode=0);  Deserialize information from buffer b into object at pointer if (arrayMode & 1) ptr is a pointer to array of pointers to the objects otherwise it is a pointer to a pointer to a single object. ;  ; template<class T > ; Int_t ReadBufferArtificial (TBuffer &b, const T &arrptr, TStreamerElem",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:14227,Modifiability,inherit,inherited,14227,"ide;  Replace the TClass this streamerInfo is pointing to (belongs to) ;  ; void SetClassVersion (Int_t vers) override;  ; void SetOnFileClassVersion (Int_t vers);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerInfo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagFile (TFile *fFile) override;  Mark the classindex of the current file as using this TStreamerInfo. ;  ; void Update (const TClass *oldClass, TClass *newClass) override;  function called by the TClass constructor when replacing an emulated class by the real class ;  ; template<class T > ; Int_t WriteBufferAux (TBuffer &b, const T &arr, TCompInfo *const *const compinfo, Int_t first, Int_t last, Int_t narr, Int_t eoffset, Int_t mode);  The object at pointer is serialized to the buffer b if (arrayMode & 1) ptr is a pointer to array of pointers to the objects otherwise it is a pointer to a pointer to a single object. ;  ;  Public Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo ();  Default constructor. ;  ;  TVirtualStreamerInfo (TClass *);  Default constructor. ;  ; virtual ~TVirtualStreamerInfo ();  Destructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBuilt () const;  ; Bool_t IsCompiled () const;  ; Bool_t IsOptimized () const;  ; Int_t IsRecovered () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TVirtualStreamerInfo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:14767,Modifiability,inherit,inherited,14767,"r when replacing an emulated class by the real class ;  ; template<class T > ; Int_t WriteBufferAux (TBuffer &b, const T &arr, TCompInfo *const *const compinfo, Int_t first, Int_t last, Int_t narr, Int_t eoffset, Int_t mode);  The object at pointer is serialized to the buffer b if (arrayMode & 1) ptr is a pointer to array of pointers to the objects otherwise it is a pointer to a pointer to a single object. ;  ;  Public Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo ();  Default constructor. ;  ;  TVirtualStreamerInfo (TClass *);  Default constructor. ;  ; virtual ~TVirtualStreamerInfo ();  Destructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBuilt () const;  ; Bool_t IsCompiled () const;  ; Bool_t IsOptimized () const;  ; Int_t IsRecovered () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TVirtualStreamerInfo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:16106,Modifiability,inherit,inherited,16106,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:17199,Modifiability,inherit,inheritance,17199,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:19198,Modifiability,inherit,inherits,19198,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:19315,Modifiability,inherit,inherits,19315,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:23264,Modifiability,inherit,inherited,23264,"void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TStreamerElement * GetCurrentElement ();  static function returning a pointer to the current TStreamerElement fgElement points to the current TStreamerElement being read in ReadBuffer ;  ;  Static Public Member Functions inherited from TVirtualStreamerInfo; static Bool_t CanDelete ();  static function returning true if ReadBuffer can delete object ;  ; static Bool_t CanOptimize ();  static function returning true if optimization can be on ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualStreamerInfo * Factory ();  Static function returning a pointer to a new TVirtualStreamerInfo object. ;  ; static TStreamerBasicType * GetElementCounter (const char *countName, TClass *cl);  Get pointer to a TStreamerBasicType in TClass *cl static function. ;  ; static const char * GetElementCounterStart (const char *dmTitle);  Given a comment/title declaring an array counter, for example: ;  ; static Bool_t GetStreamMemberWise ();  Return whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ; static void Optimize (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetCanDelete (",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:24659,Modifiability,inherit,inherited,24659,"o a TStreamerBasicType in TClass *cl static function. ;  ; static const char * GetElementCounterStart (const char *dmTitle);  Given a comment/title declaring an array counter, for example: ;  ; static Bool_t GetStreamMemberWise ();  Return whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ; static void Optimize (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetCanDelete (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetFactory (TVirtualStreamerInfo *factory);  static function: Set the StreamerInfo factory ;  ; static Bool_t SetStreamMemberWise (Bool_t enable=kTRUE);  Set whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerInfo (const TStreamerInfo &)=delete;  ; void AddReadAction (TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo);  Add a read action for the given element. ;  ; void AddReadMemberWiseVecPtrAction (TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo);  Add a read action for the given element. ;  ; void AddReadTextAction (TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:24869,Modifiability,inherit,inherited,24869,"o a TStreamerBasicType in TClass *cl static function. ;  ; static const char * GetElementCounterStart (const char *dmTitle);  Given a comment/title declaring an array counter, for example: ;  ; static Bool_t GetStreamMemberWise ();  Return whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ; static void Optimize (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetCanDelete (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetFactory (TVirtualStreamerInfo *factory);  static function: Set the StreamerInfo factory ;  ; static Bool_t SetStreamMemberWise (Bool_t enable=kTRUE);  Set whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerInfo (const TStreamerInfo &)=delete;  ; void AddReadAction (TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo);  Add a read action for the given element. ;  ; void AddReadMemberWiseVecPtrAction (TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo);  Add a read action for the given element. ;  ; void AddReadTextAction (TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:28002,Modifiability,variab,variable,28002,"the array of TSchemaRule(s). ;  ; TStreamerInfo & operator= (const TStreamerInfo &)=delete;  ; Int_t WriteBuffer (TBuffer &b, char *pointer, Int_t first);  General Write. ;  ; Int_t WriteBufferClones (TBuffer &b, TClonesArray *clones, Int_t nc, Int_t first, Int_t eoffset);  Write for ClonesArray ('first' is an id between -1 and fNfulldata). ;  ; Int_t WriteBufferSTL (TBuffer &b, TVirtualCollectionProxy *cont, Int_t nc);  Write for STL container. ('first' is an id between -1 and fNfulldata). ;  ; Int_t WriteBufferSTLPtrs (TBuffer &b, TVirtualCollectionProxy *cont, Int_t nc, Int_t first, Int_t eoffset);  Write for STL container. ;  . Static Private Member Functions; template<typename T > ; static T GetTypedValueAux (Int_t type, void *ladd, int k, Int_t len);  Get the value from inside a collection. ;  ; static void PrintValueAux (char *ladd, Int_t atype, TStreamerElement *aElement, Int_t aleng, Int_t *count);  print value of element in object at pointer, type atype, leng aleng or *count The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  . Private Attributes; UInt_t fCheckSum;  Checksum of original class. ;  ; TClass * fClass;  !pointer to class ;  ; Int_t fClassVersion;  Class version identifier. ;  ; TCompInfo * fComp;  ![fNslots with less than fElements->GetEntries()*1.5 used] Compiled info ;  ; TCompInfo ** fCompFull;  ![fElements->GetEntries()] ;  ; TCompInfo ** fCompOpt;  ![fNdata] ;  ; TObjArray * fElements;  Array of TStreamerElements. ;  ; Int_t fNdata;  !number of optimized elements ;  ; Int_t fNfulldata;  !number of elements ;  ; Int_t fNslots;  !total number of slots in fComp. ;  ; Int_t fNumber;  !Unique identifier ;  ; Int_t fNVirtualInfoLoc;  ! Number of virtual info location to update. ;  ; Version_t fOldVersion;  ! Version of the TStreamerInfo object read from the file ;  ; Int_t fOnFileClassVersion;  !Class ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:30390,Modifiability,inherit,inherited,30390,"TActionSequence * fWriteMemberWise;  ! List of write action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWiseVecPtr;  ! List of write action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fWriteObjectWise;  ! List of write action resulting from the compilation. ;  ; TStreamerInfoActions::TActionSequence * fWriteText;  ! List of text write action resulting for the compilation, used for JSON. ;  . Static Private Attributes; static std::atomic< Int_t > fgCount {0};  Number of TStreamerInfo instances. ;  . Friends; class TStreamerInfoActions::TActionSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:30489,Modifiability,inherit,inherited,30489,"TActionSequence * fWriteMemberWise;  ! List of write action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWiseVecPtr;  ! List of write action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fWriteObjectWise;  ! List of write action resulting from the compilation. ;  ; TStreamerInfoActions::TActionSequence * fWriteText;  ! List of text write action resulting for the compilation, used for JSON. ;  . Static Private Attributes; static std::atomic< Int_t > fgCount {0};  Number of TStreamerInfo instances. ;  . Friends; class TStreamerInfoActions::TActionSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:30780,Modifiability,inherit,inherited,30780,"TActionSequence * fWriteMemberWise;  ! List of write action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWiseVecPtr;  ! List of write action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fWriteObjectWise;  ! List of write action resulting from the compilation. ;  ; TStreamerInfoActions::TActionSequence * fWriteText;  ! List of text write action resulting for the compilation, used for JSON. ;  . Static Private Attributes; static std::atomic< Int_t > fgCount {0};  Number of TStreamerInfo instances. ;  . Friends; class TStreamerInfoActions::TActionSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:30985,Modifiability,inherit,inherited,30985,"rInfoActions::TActionSequence * fWriteText;  ! List of text write action resulting for the compilation, used for JSON. ;  . Static Private Attributes; static std::atomic< Int_t > fgCount {0};  Number of TStreamerInfo instances. ;  . Friends; class TStreamerInfoActions::TActionSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_t fgStreamMemberWise = kTRUE;  . #include <TStreamerInfo.h>. Inheritance diagram for TStreamerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ TCompInfo_t. typedef TCompInfo TStreamerInfo::TCompInfo_t. Definition at line 66 of file TStreamerInfo.h. Constructor & Destructor Documentation. ◆ TStreamerInfo() [1/3]. TStreamerInfo::T",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:31273,Modifiability,inherit,inherited,31273,"onSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_t fgStreamMemberWise = kTRUE;  . #include <TStreamerInfo.h>. Inheritance diagram for TStreamerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ TCompInfo_t. typedef TCompInfo TStreamerInfo::TCompInfo_t. Definition at line 66 of file TStreamerInfo.h. Constructor & Destructor Documentation. ◆ TStreamerInfo() [1/3]. TStreamerInfo::TStreamerInfo ; (; const TStreamerInfo & ; ). privatedelete . ◆ TStreamerInfo() [2/3]. TStreamerInfo::TStreamerInfo ; (; ). Status bits See TVirtualStreamerInfo::EStatusBits for the values. ; Default ctor.; EReadWrite Enumerator See TVirtualStreamerInfo::EReadWrite for docum",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:31362,Modifiability,inherit,inherited,31362,"onSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_t fgStreamMemberWise = kTRUE;  . #include <TStreamerInfo.h>. Inheritance diagram for TStreamerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ TCompInfo_t. typedef TCompInfo TStreamerInfo::TCompInfo_t. Definition at line 66 of file TStreamerInfo.h. Constructor & Destructor Documentation. ◆ TStreamerInfo() [1/3]. TStreamerInfo::TStreamerInfo ; (; const TStreamerInfo & ; ). privatedelete . ◆ TStreamerInfo() [2/3]. TStreamerInfo::TStreamerInfo ; (; ). Status bits See TVirtualStreamerInfo::EStatusBits for the values. ; Default ctor.; EReadWrite Enumerator See TVirtualStreamerInfo::EReadWrite for docum",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:56117,Modifiability,variab,variable,56117,"Line has 3 consecutive data members of the same type ""short"". Compile makes one single array of 3 elements. To access the TStreamerElement for the second element of this array, one can call: auto el = GetStreamerElementReal(0,1);; auto membername = el->GetName();; TStreamerInfo::GetStreamerElementRealTStreamerElement * GetStreamerElementReal(Int_t i, Int_t j) constObsolete: this routine is obsolete and should not longer be used.Definition TStreamerInfo.cxx:4316; This function is typically called from TBuffer, TXmlBuffer. . Definition at line 4316 of file TStreamerInfo.cxx. ◆ GetType(). Int_t TStreamerInfo::GetType ; (; Int_t ; id); const. inline . Definition at line 187 of file TStreamerInfo.h. ◆ GetTypedValue(). template<typename T > . T TStreamerInfo::GetTypedValue ; (; char * ; pointer, . Int_t ; i, . Int_t ; j, . Int_t ; len . ); const. Return value of element i in object at pointer. ; The function may be called in two ways:; method1 len < 0: i is assumed to be the TStreamerElement number i in StreamerInfo; method2 len >= 0: i is the type, address of variable is directly pointer. . Definition at line 4442 of file TStreamerInfo.cxx. ◆ GetTypedValueAux(). template<typename T > . T TStreamerInfo::GetTypedValueAux ; (; Int_t ; type, . void * ; ladd, . int ; k, . Int_t ; len . ). staticprivate . Get the value from inside a collection. ; Definition at line 4338 of file TStreamerInfo.cxx. ◆ GetTypedValueClones(). template<typename T > . T TStreamerInfo::GetTypedValueClones ; (; TClonesArray * ; clones, . Int_t ; i, . Int_t ; j, . Int_t ; k, . Int_t ; eoffset . ); const. Definition at line 4484 of file TStreamerInfo.cxx. ◆ GetTypedValueSTL(). template<typename T > . T TStreamerInfo::GetTypedValueSTL ; (; TVirtualCollectionProxy * ; cont, . Int_t ; i, . Int_t ; j, . Int_t ; k, . Int_t ; eoffset . ); const. Return value of element i in object number j in a TClonesArray and eventually element k in a sub-array. ; Definition at line 4506 of file TStreamerInfo.cxx. ◆ GetTyped",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:61089,Modifiability,variab,variable,61089," we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue(). void TStreamerInfo::PrintValue ; (; const char * ; name, . char * ; pointer, . Int_t ; i, . Int_t ; len, . Int_t ; lenmax = 1000 . ); const. print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ; len is the number of elements to be printed starting at pointer. ; Definition at line 5159 of file TStreamerInfo.cxx. ◆ PrintValueAux(). void TStreamerInfo::PrintValueAux ; (; char * ; ladd, . Int_t ; atype, . TStreamerElement * ; aElement, . Int_t ; aleng, . Int_t * ; count . ). staticprivate . print value of element in object at pointer, type atype, leng aleng or *count The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ; len is the number of elements to be printed starting at pointer. ; Definition at line 5429 of file TStreamerInfo.cxx. ◆ PrintValueClones(). void TStreamerInfo::PrintValueClones ; (; const char * ; name, . TClonesArray * ; clones, . Int_t ; i, . Int_t ; eoffset, . Int_t ; lenmax = 1000 . ); const. Print v",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:61661,Modifiability,variab,variable,61661,"lStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue(). void TStreamerInfo::PrintValue ; (; const char * ; name, . char * ; pointer, . Int_t ; i, . Int_t ; len, . Int_t ; lenmax = 1000 . ); const. print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ; len is the number of elements to be printed starting at pointer. ; Definition at line 5159 of file TStreamerInfo.cxx. ◆ PrintValueAux(). void TStreamerInfo::PrintValueAux ; (; char * ; ladd, . Int_t ; atype, . TStreamerElement * ; aElement, . Int_t ; aleng, . Int_t * ; count . ). staticprivate . print value of element in object at pointer, type atype, leng aleng or *count The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ; len is the number of elements to be printed starting at pointer. ; Definition at line 5429 of file TStreamerInfo.cxx. ◆ PrintValueClones(). void TStreamerInfo::PrintValueClones ; (; const char * ; name, . TClonesArray * ; clones, . Int_t ; i, . Int_t ; eoffset, . Int_t ; lenmax = 1000 . ); const. Print value of element i in a TClonesArray. ; Definition at line 5204 of file TStreamerInfo.cxx. ◆ PrintValueSTL(). void TStreamerInfo::PrintValueSTL ; (; const char * ; name, . TVirtualCollectionProxy * ; cont, . Int_t ; i, . Int_t ; eoffset, . Int_t ; lenmax = 1000 . ); const. Print value of element i in a TClonesArray. ; Definition at line 5229 of file TStreamerInfo.cxx. ◆ ReadBuffer(). template<class T > . template Int_t TStreamerInfo::ReadBuffer< TVirtualArray > ; (; TBuffer & ; b, . const T & ; arrptr, . TCompInfo *const *const ; compinfo, . Int_t ; f",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:3908,Performance,load,load,3908," kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStreamerInfo ();  Status bits See TVirtualStreamerInfo::EStatusBits for the values. ;  ;  TStreamerInfo (TClass *cl);  Create a TStreamerInfo object. ;  ;  ~TStreamerInfo () override;  TStreamerInfo dtor. ;  ; void Build (Bool_t isTransient=kFALSE) override;  Build the I/O data structure for the current class version. ;  ; void BuildCheck (TFile *file=nullptr, Bool_t load=kTRUE) override;  Check if built and consistent with the class dictionary. ;  ; void BuildEmulated (TFile *file) override;  Create an Emulation TStreamerInfo object. ;  ; Bool_t BuildFor (const TClass *cl) override;  Check if we can build this for foreign class - do we have some rules to do that. ;  ; void BuildOld () override;  rebuild the TStreamerInfo structure ;  ; void CallShowMembers (const void *obj, TMemberInspector &insp, Bool_t isTransient) const override;  Emulated a call ShowMembers() on the obj of this class type, passing insp and parent. ;  ; void Clear (Option_t *="""") override;  If opt contains 'built', reset this StreamerInfo as if Build or BuildOld was never called on it (useful to force their re-running). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Bool_t CompareContent (TClass *cl, TVirtualStreamerInfo *info, Bool_t warn, Bool_t complete, TFile *file) override;  Return True if the current StreamerI",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:10637,Performance,optimiz,optimized,10637,"TypedValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; template<typename T > ; T GetTypedValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  Return value of element i in object number j in a TClonesArray and eventually element k in a sub-array. ;  ; template<typename T > ; T GetTypedValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  Return value of element i in object number j in a TClonesArray and eventually element k in a sub-array. ;  ; Double_t GetValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  ; Double_t GetValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:23463,Performance,optimiz,optimization,23463,"void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TStreamerElement * GetCurrentElement ();  static function returning a pointer to the current TStreamerElement fgElement points to the current TStreamerElement being read in ReadBuffer ;  ;  Static Public Member Functions inherited from TVirtualStreamerInfo; static Bool_t CanDelete ();  static function returning true if ReadBuffer can delete object ;  ; static Bool_t CanOptimize ();  static function returning true if optimization can be on ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualStreamerInfo * Factory ();  Static function returning a pointer to a new TVirtualStreamerInfo object. ;  ; static TStreamerBasicType * GetElementCounter (const char *countName, TClass *cl);  Get pointer to a TStreamerBasicType in TClass *cl static function. ;  ; static const char * GetElementCounterStart (const char *dmTitle);  Given a comment/title declaring an array counter, for example: ;  ; static Bool_t GetStreamMemberWise ();  Return whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ; static void Optimize (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetCanDelete (",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:28480,Performance,optimiz,optimized,28480,"ename T > ; static T GetTypedValueAux (Int_t type, void *ladd, int k, Int_t len);  Get the value from inside a collection. ;  ; static void PrintValueAux (char *ladd, Int_t atype, TStreamerElement *aElement, Int_t aleng, Int_t *count);  print value of element in object at pointer, type atype, leng aleng or *count The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  . Private Attributes; UInt_t fCheckSum;  Checksum of original class. ;  ; TClass * fClass;  !pointer to class ;  ; Int_t fClassVersion;  Class version identifier. ;  ; TCompInfo * fComp;  ![fNslots with less than fElements->GetEntries()*1.5 used] Compiled info ;  ; TCompInfo ** fCompFull;  ![fElements->GetEntries()] ;  ; TCompInfo ** fCompOpt;  ![fNdata] ;  ; TObjArray * fElements;  Array of TStreamerElements. ;  ; Int_t fNdata;  !number of optimized elements ;  ; Int_t fNfulldata;  !number of elements ;  ; Int_t fNslots;  !total number of slots in fComp. ;  ; Int_t fNumber;  !Unique identifier ;  ; Int_t fNVirtualInfoLoc;  ! Number of virtual info location to update. ;  ; Version_t fOldVersion;  ! Version of the TStreamerInfo object read from the file ;  ; Int_t fOnFileClassVersion;  !Class version identifier as stored on file. ;  ; TStreamerInfoActions::TActionSequence * fReadMemberWise;  ! List of read action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fReadMemberWiseVecPtr;  ! List of read action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence * fReadObjectWise;  ! List of read action resulting from the compilation. ;  ; TStreamerInfoActions::TActionSequence * fReadText;  ! List of text read action resulting from the compilation, used for JSON. ;  ; Int_t fSize;  !size of the persistent class ;  ; ULong_t * fVirtualInfoLoc;  ![fNVirtua",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:31077,Performance,optimiz,optimized,31077,"rInfoActions::TActionSequence * fWriteText;  ! List of text write action resulting for the compilation, used for JSON. ;  . Static Private Attributes; static std::atomic< Int_t > fgCount {0};  Number of TStreamerInfo instances. ;  . Friends; class TStreamerInfoActions::TActionSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_t fgStreamMemberWise = kTRUE;  . #include <TStreamerInfo.h>. Inheritance diagram for TStreamerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ TCompInfo_t. typedef TCompInfo TStreamerInfo::TCompInfo_t. Definition at line 66 of file TStreamerInfo.h. Constructor & Destructor Documentation. ◆ TStreamerInfo() [1/3]. TStreamerInfo::T",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:35032,Performance,load,load,35032,"iseVecPtrAction ; (; TStreamerInfoActions::TActionSequence * ; writeSequence, . Int_t ; index, . TStreamerInfo::TCompInfo * ; compinfo . ). private . This is for streaming via a TClonesArray (or a vector of pointers of this type). ; Definition at line 3858 of file TStreamerInfoActions.cxx. ◆ AddWriteTextAction(). void TStreamerInfo::AddWriteTextAction ; (; TStreamerInfoActions::TActionSequence * ; writeSequence, . Int_t ; index, . TStreamerInfo::TCompInfo * ; compinfo . ). private . Definition at line 3660 of file TStreamerInfoActions.cxx. ◆ Build(). void TStreamerInfo::Build ; (; Bool_t ; isTransient = kFALSE). overridevirtual . Build the I/O data structure for the current class version. ; A list of TStreamerElement derived classes is built by scanning one by one the list of data members of the analyzed class. ; Implements TVirtualStreamerInfo.; Definition at line 263 of file TStreamerInfo.cxx. ◆ BuildCheck(). void TStreamerInfo::BuildCheck ; (; TFile * ; file = nullptr, . Bool_t ; load = kTRUE . ). overridevirtual . Check if built and consistent with the class dictionary. ; This method is called by TFile::ReadStreamerInfo. ; Implements TVirtualStreamerInfo.; Definition at line 729 of file TStreamerInfo.cxx. ◆ BuildEmulated(). void TStreamerInfo::BuildEmulated ; (; TFile * ; file). overridevirtual . Create an Emulation TStreamerInfo object. ; Implements TVirtualStreamerInfo.; Definition at line 1254 of file TStreamerInfo.cxx. ◆ BuildFor(). Bool_t TStreamerInfo::BuildFor ; (; const TClass * ; cl). overridevirtual . Check if we can build this for foreign class - do we have some rules to do that. ; Implements TVirtualStreamerInfo.; Definition at line 1291 of file TStreamerInfo.cxx. ◆ BuildOld(). void TStreamerInfo::BuildOld ; (; ). overridevirtual . rebuild the TStreamerInfo structure ; Implements TVirtualStreamerInfo.; Definition at line 1705 of file TStreamerInfo.cxx. ◆ CallShowMembers(). void TStreamerInfo::CallShowMembers ; (; const void * ; obj, . TMemberInspecto",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:54362,Performance,load,load,54362,"t_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; TAttLineLine Attributes class.Definition TAttLine.h:18; TClass::GetStreamerInfoTVirtualStreamerInfo * GetStreamerInfo(Int_t version=0, Bool_t isTransient=kFALSE) constreturns a pointer to the TVirtualStreamerInfo object for version If the object does not exist,...Definition TClass.cxx:4666; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TVirtualStreamerInfo::lsvirtual void ls(Option_t *="""") const override=0List TNamed name and title.; lineTLine * lineDefinition entrylistblock_figure1.C:235; For I/O implementations (eg. XML) , one has to know the original name of the data member. This function can be used to return a pointer to the original TStreamerElement object corresponding to the j-th element of a compressed array in fElems. Parameters description:; i: the serial number in array fElem; j: the element number in the array of consecutive types In the above example the class TAttLine has 3 consecutive data members of the same type ""short"". Compile makes one single array of 3 elements. To access the TStreamerElement for the second element of this array, one can call: auto el = GetStreamerElementReal(0,1);; auto membername = el->GetName();; TStreamerInfo::GetStreamerElementRealTStreamerElement * GetStream",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:59432,Performance,optimiz,optimized,59432,"f file TStreamerInfo.h. ◆ GetWriteObjectWiseActions(). TStreamerInfoActions::TActionSequence * TStreamerInfo::GetWriteObjectWiseActions ; (; ). inline . Definition at line 171 of file TStreamerInfo.h. ◆ GetWriteTextActions(). TStreamerInfoActions::TActionSequence * TStreamerInfo::GetWriteTextActions ; (; ). inline . Definition at line 172 of file TStreamerInfo.h. ◆ InsertArtificialElements(). void TStreamerInfo::InsertArtificialElements ; (; std::vector< const ROOT::TSchemaRule * > & ; rules). private . Insert new members as expressed in the array of TSchemaRule(s). ; Definition at line 4541 of file TStreamerInfo.cxx. ◆ IsA(). TClass * TStreamerInfo::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 254 of file TStreamerInfo.h. ◆ ls(). void TStreamerInfo::ls ; (; Option_t * ; option = """"); const. overridevirtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:69742,Performance,optimiz,optimized,69742, Definition at line 99 of file TStreamerInfo.h. ◆ fClassVersion. Int_t TStreamerInfo::fClassVersion. private . Class version identifier. ; Definition at line 89 of file TStreamerInfo.h. ◆ fComp. TCompInfo* TStreamerInfo::fComp. private . ![fNslots with less than fElements->GetEntries()*1.5 used] Compiled info ; Definition at line 96 of file TStreamerInfo.h. ◆ fCompFull. TCompInfo** TStreamerInfo::fCompFull. private . ![fElements->GetEntries()] ; Definition at line 98 of file TStreamerInfo.h. ◆ fCompOpt. TCompInfo** TStreamerInfo::fCompOpt. private . ![fNdata] ; Definition at line 97 of file TStreamerInfo.h. ◆ fElements. TObjArray* TStreamerInfo::fElements. private . Array of TStreamerElements. ; Definition at line 100 of file TStreamerInfo.h. ◆ fgCount. std::atomic< Int_t > TStreamerInfo::fgCount {0}. staticprivate . Number of TStreamerInfo instances. ; Definition at line 113 of file TStreamerInfo.h. ◆ fNdata. Int_t TStreamerInfo::fNdata. private . !number of optimized elements ; Definition at line 93 of file TStreamerInfo.h. ◆ fNfulldata. Int_t TStreamerInfo::fNfulldata. private . !number of elements ; Definition at line 94 of file TStreamerInfo.h. ◆ fNslots. Int_t TStreamerInfo::fNslots. private . !total number of slots in fComp. ; Definition at line 95 of file TStreamerInfo.h. ◆ fNumber. Int_t TStreamerInfo::fNumber. private . !Unique identifier ; Definition at line 91 of file TStreamerInfo.h. ◆ fNVirtualInfoLoc. Int_t TStreamerInfo::fNVirtualInfoLoc. private . ! Number of virtual info location to update. ; Definition at line 102 of file TStreamerInfo.h. ◆ fOldVersion. Version_t TStreamerInfo::fOldVersion. private . ! Version of the TStreamerInfo object read from the file ; Definition at line 101 of file TStreamerInfo.h. ◆ fOnFileClassVersion. Int_t TStreamerInfo::fOnFileClassVersion. private . !Class version identifier as stored on file. ; Definition at line 90 of file TStreamerInfo.h. ◆ fReadMemberWise. TStreamerInfoActions::TActionSequence* TStreamerInfo::fRead,MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:7262,Security,checksum,checksum,7262,"nst std::string &secondname, bool silent, size_t hint_pair_offset, size_t hint_pair_size) override;  Generate the TClass and TStreamerInfo for the requested pair. ;  ; TVirtualStreamerInfo * GenerateInfoForPair (const std::string &pairclassname, bool silent, size_t hint_pair_offset, size_t hint_pair_size) override;  Generate the TClass and TStreamerInfo for the requested pair. ;  ; TClassStreamer * GenExplicitClassStreamer (const ::ROOT::Detail::TCollectionProxyInfo &info, TClass *cl) override;  Generate class streamer from static functions. ;  ; TVirtualCollectionProxy * GenExplicitProxy (const ::ROOT::Detail::TCollectionProxyInfo &info, TClass *cl) override;  Generate proxy from static functions. ;  ; TClass * GetActualClass (const void *obj) const override;  Assuming that obj points to (the part of) an object that is of the type described by this streamerInfo, return the actual type of the object (i.e. ;  ; UInt_t GetCheckSum () const override;  ; UInt_t GetCheckSum (TClass::ECheckSum code) const;  Recalculate the checksum of this TStreamerInfo based on its code. ;  ; TClass * GetClass () const override;  ; Int_t GetClassVersion () const override;  ; Int_t GetDataMemberOffset (TDataMember *dm, TMemberStreamer *&streamer) const;  Compute data member offset. ;  ; TStreamerElement * GetElem (Int_t id) const override;  ; TStreamerElement * GetElement (Int_t id) const override;  ; Int_t GetElementOffset (Int_t id) const override;  ; TObjArray * GetElements () const override;  ; Int_t GetLength (Int_t id) const;  ; ULongptr_t GetMethod (Int_t id) const;  ; Int_t GetNdata () const;  ; Int_t GetNelement () const;  ; Int_t GetNewType (Int_t id) const;  ; Int_t GetNumber () const override;  ; Int_t GetOffset (const char *) const override;  Return the offset of the data member as indicated by this StreamerInfo. ;  ; Int_t GetOffset (Int_t id) const override;  ; Version_t GetOldVersion () const override;  ; Int_t GetOnFileClassVersion () const override;  ; TStreamerInfoActio",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:10730,Security,checksum,checksum,10730," in a sub-array. ;  ; Double_t GetValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  ; Double_t GetValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:10767,Security,checksum,checksum,10767," in a sub-array. ;  ; Double_t GetValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  ; Double_t GetValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:10809,Security,checksum,checksum,10809," in a sub-array. ;  ; Double_t GetValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  ; Double_t GetValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:10846,Security,checksum,checksum,10846," in a sub-array. ;  ; Double_t GetValue (char *pointer, Int_t i, Int_t j, Int_t len) const;  ; Double_t GetValueClones (TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTL (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; Double_t GetValueSTLP (TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;  ; TStreamerInfoActions::TActionSequence * GetWriteMemberWiseActions (Bool_t forCollection);  ; TStreamerInfoActions::TActionSequence * GetWriteObjectWiseActions ();  ; TStreamerInfoActions::TActionSequence * GetWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:13198,Security,checksum,checksum,13198,"ReadBufferArtificial (TBuffer &b, const T &arrptr, TStreamerElement *aElement, Int_t narr, Int_t eoffset);  Handle Artificial StreamerElement. ;  ; Int_t ReadBufferClones (TBuffer &b, TClonesArray *clones, Int_t nc, Int_t first, Int_t eoffset);  Read for TClonesArray. ;  ; template<class T > ; Int_t ReadBufferConv (TBuffer &b, const T &arrptr, const TCompInfo *compinfo, Int_t kase, TStreamerElement *aElement, Int_t narr, Int_t eoffset);  Convert elements of a TClonesArray. ;  ; template<class T > ; Int_t ReadBufferSkip (TBuffer &b, const T &arrptr, const TCompInfo *compinfo, Int_t kase, TStreamerElement *aElement, Int_t narr, Int_t eoffset);  Skip an element. ;  ; Int_t ReadBufferSTL (TBuffer &b, TVirtualCollectionProxy *cont, Int_t nc, Int_t eoffset, Bool_t v7=kTRUE);  The STL vector/list is deserialized from the buffer b. ;  ; void SetCheckSum (UInt_t checksum) override;  ; void SetClass (TClass *cl) override;  Replace the TClass this streamerInfo is pointing to (belongs to) ;  ; void SetClassVersion (Int_t vers) override;  ; void SetOnFileClassVersion (Int_t vers);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerInfo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagFile (TFile *fFile) override;  Mark the classindex of the current file as using this TStreamerInfo. ;  ; void Update (const TClass *oldClass, TClass *newClass) override;  function called by the TClass constructor when replacing an emulated class by the real class ;  ; template<class T > ; Int_t WriteBufferAux (TBuffer &b, const T &arr, TCompInfo *const *const compinfo, Int_t first, Int_t last, Int_t narr, Int_t eoffset, Int_t mode);  The object at pointer is serialized to the buffer b if (arrayMode & 1) ptr is a pointer to array of pointers to the objects otherwise it is a pointer to a pointer to a single object. ;  ;  Public Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo ();  Default constructor. ;  ;  TVirtualStream",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:15426,Security,hash,hash,15426,"tructor. ;  ; TClass * IsA () const override;  ; Bool_t IsBuilt () const;  ; Bool_t IsCompiled () const;  ; Bool_t IsOptimized () const;  ; Int_t IsRecovered () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TVirtualStreamerInfo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:44726,Security,checksum,checksum,44726,". TClass * ; cl . ). overridevirtual . Generate proxy from static functions. ; Implements TVirtualStreamerInfo.; Definition at line 5676 of file TStreamerInfo.cxx. ◆ GetActualClass(). TClass * TStreamerInfo::GetActualClass ; (; const void * ; obj); const. overridevirtual . Assuming that obj points to (the part of) an object that is of the type described by this streamerInfo, return the actual type of the object (i.e. ; the type described by this streamerInfo is a base class of the actual type of the object. This routine should only be called if the class described by this StreamerInfo is 'emulated'. ; Implements TVirtualStreamerInfo.; Definition at line 3255 of file TStreamerInfo.cxx. ◆ GetCheckSum() [1/2]. UInt_t TStreamerInfo::GetCheckSum ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 159 of file TStreamerInfo.h. ◆ GetCheckSum() [2/2]. UInt_t TStreamerInfo::GetCheckSum ; (; TClass::ECheckSum ; code); const. Recalculate the checksum of this TStreamerInfo based on its code. ; The class ckecksum is used by the automatic schema evolution algorithm to uniquely identify a class version. The check sum is built from the names/types of base classes and data members. The valid range of code is determined by ECheckSum.; kNoEnum: data members of type enum are not counted in the checksum; kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; kWithTypeDef: use the sugared type name in the calculation. This is needed for backward compatibility. . WARNING; This function must be kept in sync with TClass::GetCheckSum. They are both used to handle backward compatibility and should both return the same values. TStreamerInfo uses the information in TStreamerElement while TClass uses the information from TClass::GetListOfBases and TClass::GetListOfDataMembers. Original algorithm from Victor Perevovchikov (perev.nosp@m.@bnl.nosp@m..gov). ; Definition at line 3298 of file TS",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:45076,Security,checksum,checksum,45076,"erInfo, return the actual type of the object (i.e. ; the type described by this streamerInfo is a base class of the actual type of the object. This routine should only be called if the class described by this StreamerInfo is 'emulated'. ; Implements TVirtualStreamerInfo.; Definition at line 3255 of file TStreamerInfo.cxx. ◆ GetCheckSum() [1/2]. UInt_t TStreamerInfo::GetCheckSum ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 159 of file TStreamerInfo.h. ◆ GetCheckSum() [2/2]. UInt_t TStreamerInfo::GetCheckSum ; (; TClass::ECheckSum ; code); const. Recalculate the checksum of this TStreamerInfo based on its code. ; The class ckecksum is used by the automatic schema evolution algorithm to uniquely identify a class version. The check sum is built from the names/types of base classes and data members. The valid range of code is determined by ECheckSum.; kNoEnum: data members of type enum are not counted in the checksum; kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; kWithTypeDef: use the sugared type name in the calculation. This is needed for backward compatibility. . WARNING; This function must be kept in sync with TClass::GetCheckSum. They are both used to handle backward compatibility and should both return the same values. TStreamerInfo uses the information in TStreamerElement while TClass uses the information from TClass::GetListOfBases and TClass::GetListOfDataMembers. Original algorithm from Victor Perevovchikov (perev.nosp@m.@bnl.nosp@m..gov). ; Definition at line 3298 of file TStreamerInfo.cxx. ◆ GetClass(). TClass * TStreamerInfo::GetClass ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 158 of file TStreamerInfo.h. ◆ GetClassVersion(). Int_t TStreamerInfo::GetClassVersion ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 161 of file TStreamerInfo.h. ◆ GetC",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:45107,Security,checksum,checksum,45107,"erInfo, return the actual type of the object (i.e. ; the type described by this streamerInfo is a base class of the actual type of the object. This routine should only be called if the class described by this StreamerInfo is 'emulated'. ; Implements TVirtualStreamerInfo.; Definition at line 3255 of file TStreamerInfo.cxx. ◆ GetCheckSum() [1/2]. UInt_t TStreamerInfo::GetCheckSum ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 159 of file TStreamerInfo.h. ◆ GetCheckSum() [2/2]. UInt_t TStreamerInfo::GetCheckSum ; (; TClass::ECheckSum ; code); const. Recalculate the checksum of this TStreamerInfo based on its code. ; The class ckecksum is used by the automatic schema evolution algorithm to uniquely identify a class version. The check sum is built from the names/types of base classes and data members. The valid range of code is determined by ECheckSum.; kNoEnum: data members of type enum are not counted in the checksum; kNoRange: return the checksum of data members and base classes, not including the ranges and array size found in comments.; kWithTypeDef: use the sugared type name in the calculation. This is needed for backward compatibility. . WARNING; This function must be kept in sync with TClass::GetCheckSum. They are both used to handle backward compatibility and should both return the same values. TStreamerInfo uses the information in TStreamerElement while TClass uses the information from TClass::GetListOfBases and TClass::GetListOfDataMembers. Original algorithm from Victor Perevovchikov (perev.nosp@m.@bnl.nosp@m..gov). ; Definition at line 3298 of file TStreamerInfo.cxx. ◆ GetClass(). TClass * TStreamerInfo::GetClass ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 158 of file TStreamerInfo.h. ◆ GetClassVersion(). Int_t TStreamerInfo::GetClassVersion ; (; ); const. inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 161 of file TStreamerInfo.h. ◆ GetC",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:55157,Security,access,access,55157,"tic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TVirtualStreamerInfo::lsvirtual void ls(Option_t *="""") const override=0List TNamed name and title.; lineTLine * lineDefinition entrylistblock_figure1.C:235; For I/O implementations (eg. XML) , one has to know the original name of the data member. This function can be used to return a pointer to the original TStreamerElement object corresponding to the j-th element of a compressed array in fElems. Parameters description:; i: the serial number in array fElem; j: the element number in the array of consecutive types In the above example the class TAttLine has 3 consecutive data members of the same type ""short"". Compile makes one single array of 3 elements. To access the TStreamerElement for the second element of this array, one can call: auto el = GetStreamerElementReal(0,1);; auto membername = el->GetName();; TStreamerInfo::GetStreamerElementRealTStreamerElement * GetStreamerElementReal(Int_t i, Int_t j) constObsolete: this routine is obsolete and should not longer be used.Definition TStreamerInfo.cxx:4316; This function is typically called from TBuffer, TXmlBuffer. . Definition at line 4316 of file TStreamerInfo.cxx. ◆ GetType(). Int_t TStreamerInfo::GetType ; (; Int_t ; id); const. inline . Definition at line 187 of file TStreamerInfo.h. ◆ GetTypedValue(). template<typename T > . T TStreamerInfo::GetTypedValue ; (; char * ; pointer, . Int_t ; i, . Int_t ; j, . Int_t ; len . ); const. Return value of element i in object at pointer. ; The function may be called in two ways:; method1 len < 0: i is assumed to be the TStreamerElement number i in StreamerInfo; method2 len >= 0: i is the type, address of variable is directly pointer. . Definition at line 4442 of file TStreamerInfo.cxx. ◆ GetTypedValueAux(). template<typename T > . T TStreamerInfo::GetTypedValueAux ; (; Int_t ; type, . void * ; ladd, ",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:59653,Security,checksum,checksum,59653,"ons::TActionSequence * TStreamerInfo::GetWriteTextActions ; (; ). inline . Definition at line 172 of file TStreamerInfo.h. ◆ InsertArtificialElements(). void TStreamerInfo::InsertArtificialElements ; (; std::vector< const ROOT::TSchemaRule * > & ; rules). private . Insert new members as expressed in the array of TSchemaRule(s). ; Definition at line 4541 of file TStreamerInfo.cxx. ◆ IsA(). TClass * TStreamerInfo::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 254 of file TStreamerInfo.h. ◆ ls(). void TStreamerInfo::ls ; (; Option_t * ; option = """"); const. overridevirtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). T",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:59690,Security,checksum,checksum,59690,"ile TStreamerInfo.h. ◆ InsertArtificialElements(). void TStreamerInfo::InsertArtificialElements ; (; std::vector< const ROOT::TSchemaRule * > & ; rules). private . Insert new members as expressed in the array of TSchemaRule(s). ; Definition at line 4541 of file TStreamerInfo.cxx. ◆ IsA(). TClass * TStreamerInfo::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 254 of file TStreamerInfo.h. ◆ ls(). void TStreamerInfo::ls ; (; Option_t * ; option = """"); const. overridevirtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue()",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:59732,Security,checksum,checksum,59732,"ile TStreamerInfo.h. ◆ InsertArtificialElements(). void TStreamerInfo::InsertArtificialElements ; (; std::vector< const ROOT::TSchemaRule * > & ; rules). private . Insert new members as expressed in the array of TSchemaRule(s). ; Definition at line 4541 of file TStreamerInfo.cxx. ◆ IsA(). TClass * TStreamerInfo::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 254 of file TStreamerInfo.h. ◆ ls(). void TStreamerInfo::ls ; (; Option_t * ; option = """"); const. overridevirtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue()",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:59769,Security,checksum,checksum,59769,"ile TStreamerInfo.h. ◆ InsertArtificialElements(). void TStreamerInfo::InsertArtificialElements ; (; std::vector< const ROOT::TSchemaRule * > & ; rules). private . Insert new members as expressed in the array of TSchemaRule(s). ; Definition at line 4541 of file TStreamerInfo.cxx. ◆ IsA(). TClass * TStreamerInfo::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 254 of file TStreamerInfo.h. ◆ ls(). void TStreamerInfo::ls ; (; Option_t * ; option = """"); const. overridevirtual . List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ; Implements TVirtualStreamerInfo.; Definition at line 4684 of file TStreamerInfo.cxx. ◆ MatchLegacyCheckSum(). Bool_t TStreamerInfo::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 3270 of file TStreamerInfo.cxx. ◆ New(). void * TStreamerInfo::New ; (; void * ; obj = nullptr). overridevirtual . An emulated object is created at address obj, if obj is null we allocate memory for the object. ; Implements TVirtualStreamerInfo.; Definition at line 4769 of file TStreamerInfo.cxx. ◆ NewArray(). void * TStreamerInfo::NewArray ; (; Long_t ; nElements, . void * ; ary = nullptr . ). overridevirtual . An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ; Implements TVirtualStreamerInfo.; Definition at line 4918 of file TStreamerInfo.cxx. ◆ NewInfo(). TVirtualStreamerInfo * TStreamerInfo::NewInfo ; (; TClass * ; cl). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 198 of file TStreamerInfo.h. ◆ operator=(). TStreamerInfo & TStreamerInfo::operator= ; (; const TStreamerInfo & ; ). privatedelete . ◆ PrintValue()",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfo.html:64736,Security,checksum,checksum,64736,". template Int_t TStreamerInfo::ReadBufferConv< TVirtualArray > ; (; TBuffer & ; b, . const T & ; arrptr, . const TCompInfo * ; compinfo, . Int_t ; kase, . TStreamerElement * ; aElement, . Int_t ; narr, . Int_t ; eoffset . ). Convert elements of a TClonesArray. ; Definition at line 568 of file TStreamerInfoReadBuffer.cxx. ◆ ReadBufferSkip(). template<class T > . template Int_t TStreamerInfo::ReadBufferSkip< TVirtualArray > ; (; TBuffer & ; b, . const T & ; arrptr, . const TCompInfo * ; compinfo, . Int_t ; kase, . TStreamerElement * ; aElement, . Int_t ; narr, . Int_t ; eoffset . ). Skip an element. ; Definition at line 182 of file TStreamerInfoReadBuffer.cxx. ◆ ReadBufferSTL(). Int_t TStreamerInfo::ReadBufferSTL ; (; TBuffer & ; b, . TVirtualCollectionProxy * ; cont, . Int_t ; nc, . Int_t ; eoffset, . Bool_t ; v7 = kTRUE . ). The STL vector/list is deserialized from the buffer b. ; Definition at line 1737 of file TStreamerInfoReadBuffer.cxx. ◆ SetCheckSum(). void TStreamerInfo::SetCheckSum ; (; UInt_t ; checksum). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 218 of file TStreamerInfo.h. ◆ SetClass(). void TStreamerInfo::SetClass ; (; TClass * ; cl). overridevirtual . Replace the TClass this streamerInfo is pointing to (belongs to) ; Implements TVirtualStreamerInfo.; Definition at line 5254 of file TStreamerInfo.cxx. ◆ SetClassVersion(). void TStreamerInfo::SetClassVersion ; (; Int_t ; vers). inlineoverridevirtual . Implements TVirtualStreamerInfo.; Definition at line 220 of file TStreamerInfo.h. ◆ SetOnFileClassVersion(). void TStreamerInfo::SetOnFileClassVersion ; (; Int_t ; vers). inline . Definition at line 221 of file TStreamerInfo.h. ◆ Streamer(). void TStreamerInfo::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TStreamerInfo. ; Reimplemented from TNamed.; Definition at line 5266 of file TStreamerInfo.cxx. ◆ StreamerNVirtual(). void TStreamerInfo::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNV",MatchSource.WIKI,doc/master/classTStreamerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:4152,Availability,error,error,4152,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:4241,Availability,error,error,4241,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:4396,Availability,error,error,4396,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:4693,Availability,error,error,4693,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:9136,Availability,error,error,9136,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static SequencePtr ConversionReadMemberWiseActionsViaProxyGetter (TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass);  ; static TActionSequence * CreateR",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:4158,Integrability,message,message,4158,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:4699,Integrability,message,message,4699,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:5901,Integrability,message,message,5901,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:9142,Integrability,message,message,9142,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static SequencePtr ConversionReadMemberWiseActionsViaProxyGetter (TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass);  ; static TActionSequence * CreateR",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:9515,Integrability,message,message,9515," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static SequencePtr ConversionReadMemberWiseActionsViaProxyGetter (TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass);  ; static TActionSequence * CreateReadMemberWiseActions (TVirtualStreamerInfo *info, TVirtualCollectionProxy &proxy);  Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. ;  ; static TActionSequence * CreateWriteMemberWiseActions (TVirtualStreamerInfo *info, TVirtualCollectionProxy &proxy);  Create the bundle of",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:698,Modifiability,inherit,inherited,698,". ROOT: TStreamerInfoActions::TActionSequence Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TStreamerInfoActions::TActionSequence Class Reference. . Definition at line 177 of file TStreamerInfoActions.h. Classes; struct  SequencePtr;  . Public Types; enum class  EStatusBits { kVectorPtrLooper = (1ULL << ( 14 )); };  ; using SequenceGetter_t = SequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TActionSequence (TVirtualStreamerInfo *info, UInt_t maxdata, Bool_t isForVecPtr=kFALSE);  ;  ~TActionSequence () override;  ; template<typename action_t > ; void AddAction (action_t action, TConfiguration *conf);  ; void AddAction (const TConfiguredAction &action);  ; void AddToOffset (Int_t delta);  ; void AddToSubSequence (TActionSequence *sequence, const TIDs &element_ids, Int_t offset, SequenceGetter_t create);  ; TActionSequence * CreateCopy ();  ; TActionSequence * CreateSubSequence (const std::vector< Int_t > &element_ids, size_t offset);  ; TActionSequence * CreateSubSequence (const TIDs &element_ids, size_t offset, SequenceGetter_t crea",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:2391,Modifiability,inherit,inherited,2391,"lStreamerInfo *info, UInt_t maxdata, Bool_t isForVecPtr=kFALSE);  ;  ~TActionSequence () override;  ; template<typename action_t > ; void AddAction (action_t action, TConfiguration *conf);  ; void AddAction (const TConfiguredAction &action);  ; void AddToOffset (Int_t delta);  ; void AddToSubSequence (TActionSequence *sequence, const TIDs &element_ids, Int_t offset, SequenceGetter_t create);  ; TActionSequence * CreateCopy ();  ; TActionSequence * CreateSubSequence (const std::vector< Int_t > &element_ids, size_t offset);  ; TActionSequence * CreateSubSequence (const TIDs &element_ids, size_t offset, SequenceGetter_t create);  ; TClass * IsA () const override;  ; Bool_t IsForVectorPtrLooper () const;  ; void Print (Option_t *="""") const override;  This method must be overridden when a class wants to print itself. ;  ; void SetMissing ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:3788,Modifiability,inherit,inheritance,3788,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:5999,Modifiability,inherit,inherits,5999,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:6116,Modifiability,inherit,inherits,6116,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:11711,Modifiability,inherit,inherited,11711,"e content described by 'info' into the collection described by 'proxy'. ;  ; static TActionSequence * CreateWriteMemberWiseActions (TVirtualStreamerInfo *info, TVirtualCollectionProxy &proxy);  Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. ;  ; static const char * DeclFileName ();  ; static SequencePtr ReadMemberWiseActionsCollectionCreator (TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *);  ; static SequencePtr ReadMemberWiseActionsCollectionGetter (TStreamerInfo *info, TVirtualCollectionProxy *, TClass *);  ; static SequencePtr ReadMemberWiseActionsGetter (TStreamerInfo *info, TVirtualCollectionProxy *, TClass *);  ; static SequencePtr ReadMemberWiseActionsViaProxyGetter (TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *);  ; static SequencePtr WriteMemberWiseActionsCollectionCreator (TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *);  ; static SequencePtr WriteMemberWiseActionsCollectionGetter (TStreamerInfo *info, TVirtualCollectionProxy *, TClass *);  ; static SequencePtr WriteMemberWiseActionsGetter (TStreamerInfo *info, TVirtualCollectionProxy *, TClass *);  ; static SequencePtr WriteMemberWiseActionsViaProxyGetter (TStreamerInfo *, TVirtualCollectionProxy *collectionProxy, TClass *);  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; ActionContainer_t fActions;  ; TLoopConfiguration * fLoopConfig;  If this is a",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:12339,Modifiability,config,configures,12339,"Proxy *collectionProxy, TClass *);  ; static SequencePtr WriteMemberWiseActionsCollectionGetter (TStreamerInfo *info, TVirtualCollectionProxy *, TClass *);  ; static SequencePtr WriteMemberWiseActionsGetter (TStreamerInfo *info, TVirtualCollectionProxy *, TClass *);  ; static SequencePtr WriteMemberWiseActionsViaProxyGetter (TStreamerInfo *, TVirtualCollectionProxy *collectionProxy, TClass *);  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; ActionContainer_t fActions;  ; TLoopConfiguration * fLoopConfig;  If this is a bundle of memberwise streaming action, this configures the looping. ;  ; TVirtualStreamerInfo * fStreamerInfo;  StreamerInfo used to derive these actions. ;  . Private Member Functions;  TActionSequence ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerInfoActions.h>. Inheritance diagram for TStreamerInfoActions::TActionSequence:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ SequenceGetter_t. using TStreamerInfoActions::TActionSequence::SequenceGetter_t = SequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass). Definition at line 185 of file TSt",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:12552,Modifiability,inherit,inherited,12552,"tionProxy, TClass *);  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; ActionContainer_t fActions;  ; TLoopConfiguration * fLoopConfig;  If this is a bundle of memberwise streaming action, this configures the looping. ;  ; TVirtualStreamerInfo * fStreamerInfo;  StreamerInfo used to derive these actions. ;  . Private Member Functions;  TActionSequence ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerInfoActions.h>. Inheritance diagram for TStreamerInfoActions::TActionSequence:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ SequenceGetter_t. using TStreamerInfoActions::TActionSequence::SequenceGetter_t = SequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass). Definition at line 185 of file TStreamerInfoActions.h. Member Enumeration Documentation. ◆ EStatusBits. enum class TStreamerInfoActions::TActionSequence::EStatusBits. strong . EnumeratorkVectorPtrLooper . Definition at line 180 of file TStreamerInfoActions.h. Constructor & Destructor Documentation. ◆ TActionSequence() [1/2]. TStreamerInfoActions::TActionSequence::TActionSequence ; (; ). inlineprivate . Defi",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:12651,Modifiability,inherit,inherited,12651,"tionProxy, TClass *);  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; ActionContainer_t fActions;  ; TLoopConfiguration * fLoopConfig;  If this is a bundle of memberwise streaming action, this configures the looping. ;  ; TVirtualStreamerInfo * fStreamerInfo;  StreamerInfo used to derive these actions. ;  . Private Member Functions;  TActionSequence ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerInfoActions.h>. Inheritance diagram for TStreamerInfoActions::TActionSequence:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ SequenceGetter_t. using TStreamerInfoActions::TActionSequence::SequenceGetter_t = SequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass). Definition at line 185 of file TStreamerInfoActions.h. Member Enumeration Documentation. ◆ EStatusBits. enum class TStreamerInfoActions::TActionSequence::EStatusBits. strong . EnumeratorkVectorPtrLooper . Definition at line 180 of file TStreamerInfoActions.h. Constructor & Destructor Documentation. ◆ TActionSequence() [1/2]. TStreamerInfoActions::TActionSequence::TActionSequence ; (; ). inlineprivate . Defi",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:21389,Modifiability,config,configures,21389,"uence::WriteMemberWiseActionsCollectionCreator ; (; TStreamerInfo * ; info, . TVirtualCollectionProxy * ; collectionProxy, . TClass * ;  . ). inlinestatic . Definition at line 292 of file TStreamerInfoActions.h. ◆ WriteMemberWiseActionsCollectionGetter(). static SequencePtr TStreamerInfoActions::TActionSequence::WriteMemberWiseActionsCollectionGetter ; (; TStreamerInfo * ; info, . TVirtualCollectionProxy * ; , . TClass * ;  . ). inlinestatic . Definition at line 284 of file TStreamerInfoActions.h. ◆ WriteMemberWiseActionsGetter(). static SequencePtr TStreamerInfoActions::TActionSequence::WriteMemberWiseActionsGetter ; (; TStreamerInfo * ; info, . TVirtualCollectionProxy * ; , . TClass * ;  . ). inlinestatic . Definition at line 297 of file TStreamerInfoActions.h. ◆ WriteMemberWiseActionsViaProxyGetter(). static SequencePtr TStreamerInfoActions::TActionSequence::WriteMemberWiseActionsViaProxyGetter ; (; TStreamerInfo * ; , . TVirtualCollectionProxy * ; collectionProxy, . TClass * ;  . ). inlinestatic . Definition at line 288 of file TStreamerInfoActions.h. Member Data Documentation. ◆ fActions. ActionContainer_t TStreamerInfoActions::TActionSequence::fActions. Definition at line 212 of file TStreamerInfoActions.h. ◆ fLoopConfig. TLoopConfiguration* TStreamerInfoActions::TActionSequence::fLoopConfig. If this is a bundle of memberwise streaming action, this configures the looping. ; Definition at line 211 of file TStreamerInfoActions.h. ◆ fStreamerInfo. TVirtualStreamerInfo* TStreamerInfoActions::TActionSequence::fStreamerInfo. StreamerInfo used to derive these actions. ; Definition at line 210 of file TStreamerInfoActions.h. Libraries for TStreamerInfoActions::TActionSequence:. [legend]; The documentation for this class was generated from the following files:; io/io/inc/TStreamerInfoActions.h; io/io/src/TStreamerInfoActions.cxx. TStreamerInfoActionsTActionSequence. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:5630,Security,hash,hash,5630," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:3146,Availability,error,error,3146,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:3235,Availability,error,error,3235,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:3390,Availability,error,error,3390,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:3687,Availability,error,error,3687,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:8251,Availability,error,error,8251," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:3152,Integrability,message,message,3152,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:3693,Integrability,message,message,3693,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:4895,Integrability,message,message,4895,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:8257,Integrability,message,message,8257," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:8630,Integrability,message,message,8630," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:1385,Modifiability,inherit,inherited,1385,"eamerInfoActions.h. Public Member Functions;  TConfiguredAction ();  ;  TConfiguredAction (const TConfiguredAction &rval);  ;  TConfiguredAction (TStreamerInfoAction_t action, TConfiguration *conf);  ;  TConfiguredAction (TStreamerInfoLoopAction_t action, TConfiguration *conf);  ;  TConfiguredAction (TStreamerInfoVecPtrLoopAction_t action, TConfiguration *conf);  ;  ~TConfiguredAction () override;  ; TClass * IsA () const override;  ; Int_t operator() (TBuffer &buffer, void *object) const;  ; Int_t operator() (TBuffer &buffer, void *start_collection, const void *end_collection) const;  ; Int_t operator() (TBuffer &buffer, void *start_collection, const void *end_collection, const TLoopConfiguration *loopconf) const;  ; TConfiguredAction & operator= (const TConfiguredAction &rval);  ; void PrintDebug (TBuffer &buffer, void *object) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:2782,Modifiability,inherit,inheritance,2782,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:4993,Modifiability,inherit,inherits,4993,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:5110,Modifiability,inherit,inherits,5110,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:9131,Modifiability,inherit,inherited,9131,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; union { ;  ;    TStreamerInfoAction_t   fAction ;  ;    TStreamerInfoLoopAction_t   fLoopAction ;  ;    TStreamerInfoVecPtrLoopAction_t   fVecPtrLoopAction ;  ; };  ;  ; TConfiguration * fConfiguration;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteD",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:9886,Modifiability,inherit,inherited,9886,"ic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; union { ;  ;    TStreamerInfoAction_t   fAction ;  ;    TStreamerInfoLoopAction_t   fLoopAction ;  ;    TStreamerInfoVecPtrLoopAction_t   fVecPtrLoopAction ;  ; };  ;  ; TConfiguration * fConfiguration;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerInfoActions.h>. Inheritance diagram for TStreamerInfoActions::TConfiguredAction:. This browser is not able to show SVG: t",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:10527,Modifiability,inherit,inherited,10527," { ;  ;    TStreamerInfoAction_t   fAction ;  ;    TStreamerInfoLoopAction_t   fLoopAction ;  ;    TStreamerInfoVecPtrLoopAction_t   fVecPtrLoopAction ;  ; };  ;  ; TConfiguration * fConfiguration;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerInfoActions.h>. Inheritance diagram for TStreamerInfoActions::TConfiguredAction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TConfiguredAction() [1/5]. TStreamerInfoActions::TConfiguredAction::TConfiguredAction ; (; ). inline . Definition at line 85 of file TStreamerInfoActions.h. ◆ TConfiguredAction() [2/5]. TStreamerInfoActions::TConfiguredAction::TConfiguredAction ; (; const TConfiguredAction & ; rval). inline . Definition at line 86 of file TStreamerInfoActions.h. ◆ TConfiguredAction() [3/5]. TStreamerInfoActions::TConfiguredAction::TConfiguredAction ; (; TStreamerInfoAction_t ; action, . TConfiguration * ; conf . ). inline . Definition at line 102 of file TStreamerInfoActions.h. ◆ TConfiguredAction() [4/5",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:10626,Modifiability,inherit,inherited,10626," { ;  ;    TStreamerInfoAction_t   fAction ;  ;    TStreamerInfoLoopAction_t   fLoopAction ;  ;    TStreamerInfoVecPtrLoopAction_t   fVecPtrLoopAction ;  ; };  ;  ; TConfiguration * fConfiguration;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerInfoActions.h>. Inheritance diagram for TStreamerInfoActions::TConfiguredAction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TConfiguredAction() [1/5]. TStreamerInfoActions::TConfiguredAction::TConfiguredAction ; (; ). inline . Definition at line 85 of file TStreamerInfoActions.h. ◆ TConfiguredAction() [2/5]. TStreamerInfoActions::TConfiguredAction::TConfiguredAction ; (; const TConfiguredAction & ; rval). inline . Definition at line 86 of file TStreamerInfoActions.h. ◆ TConfiguredAction() [3/5]. TStreamerInfoActions::TConfiguredAction::TConfiguredAction ; (; TStreamerInfoAction_t ; action, . TConfiguration * ; conf . ). inline . Definition at line 102 of file TStreamerInfoActions.h. ◆ TConfiguredAction() [4/5",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:4624,Security,hash,hash,4624," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html
https://root.cern/doc/master/classTStreamerInfo_1_1TCompInfo.html:454,Performance,cache,cached,454,". ROOT: TStreamerInfo::TCompInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TStreamerInfo::TCompInfo Class Reference. . Definition at line 41 of file TStreamerInfo.h. Public Member Functions;  TCompInfo ();  ;  ~TCompInfo ();  ; void Update (const TClass *oldcl, TClass *newcl);  Update the TClass pointer cached in this object. ;  . Public Attributes; TClass * fClass;  Not Owned. ;  ; TString fClassName;  ; TStreamerElement * fElem;  Not Owned. ;  ; Int_t fLength;  ; ULongptr_t fMethod;  ; TClass * fNewClass;  Not Owned. ;  ; Int_t fNewType;  ; Int_t fOffset;  ; TMemberStreamer * fStreamer;  Not Owned. ;  ; Int_t fType;  . Constructor & Destructor Documentation. ◆ TCompInfo(). TStreamerInfo::TCompInfo::TCompInfo ; (; ). inline . Definition at line 57 of file TStreamerInfo.h. ◆ ~TCompInfo(). TStreamerInfo::TCompInfo::~TCompInfo ; (; ). inline . Definition at line 59 of file TStreamerInfo.h. Member Function Documentation. ◆ Update(). void TStreamerInfo::TCompInfo::Update ; (; const TClass * ; oldcl, . TClass * ; newcl . ). Update the TClass pointer cached in this object. ; Definition at line 5644 of file TStreamerInfo.cxx. Member Data Documentation. ◆ fClass. TClass* TStreamerInfo::TCompInfo::fClass. Not Owned. ; Definition at line 53 of file TStreamerInfo.h. ◆ fClassName. TString TStreamerInfo::TCompInfo::fClassName. Definition at line 55 of file TStreamerInfo.h. ◆ fElem. TStreamerElement* TStreamerInfo::TCompInfo::fElem. Not Owned. ; Definition at line 51 of file TStreamerInfo.h. ◆ fLength. Int_t TStreamerInfo::TCompInfo::fLength. Definition at line 50 of file TStreamerInfo.h. ◆ fMethod. ULongptr_t TStreamerInfo::TCompInfo::fMethod. Definition at line 52 of file TStreamerInfo.h. ◆ fNewClass. TClass* TStreamerInfo::TCompInfo::fNewClass. Not Owned. ; Definition at line 54 of file TStreamerInfo.h. ◆ fNewType. Int_t TStreamerI",MatchSource.WIKI,doc/master/classTStreamerInfo_1_1TCompInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo_1_1TCompInfo.html
https://root.cern/doc/master/classTStreamerInfo_1_1TCompInfo.html:1210,Performance,cache,cached,1210,"of all members ; TStreamerInfo::TCompInfo Class Reference. . Definition at line 41 of file TStreamerInfo.h. Public Member Functions;  TCompInfo ();  ;  ~TCompInfo ();  ; void Update (const TClass *oldcl, TClass *newcl);  Update the TClass pointer cached in this object. ;  . Public Attributes; TClass * fClass;  Not Owned. ;  ; TString fClassName;  ; TStreamerElement * fElem;  Not Owned. ;  ; Int_t fLength;  ; ULongptr_t fMethod;  ; TClass * fNewClass;  Not Owned. ;  ; Int_t fNewType;  ; Int_t fOffset;  ; TMemberStreamer * fStreamer;  Not Owned. ;  ; Int_t fType;  . Constructor & Destructor Documentation. ◆ TCompInfo(). TStreamerInfo::TCompInfo::TCompInfo ; (; ). inline . Definition at line 57 of file TStreamerInfo.h. ◆ ~TCompInfo(). TStreamerInfo::TCompInfo::~TCompInfo ; (; ). inline . Definition at line 59 of file TStreamerInfo.h. Member Function Documentation. ◆ Update(). void TStreamerInfo::TCompInfo::Update ; (; const TClass * ; oldcl, . TClass * ; newcl . ). Update the TClass pointer cached in this object. ; Definition at line 5644 of file TStreamerInfo.cxx. Member Data Documentation. ◆ fClass. TClass* TStreamerInfo::TCompInfo::fClass. Not Owned. ; Definition at line 53 of file TStreamerInfo.h. ◆ fClassName. TString TStreamerInfo::TCompInfo::fClassName. Definition at line 55 of file TStreamerInfo.h. ◆ fElem. TStreamerElement* TStreamerInfo::TCompInfo::fElem. Not Owned. ; Definition at line 51 of file TStreamerInfo.h. ◆ fLength. Int_t TStreamerInfo::TCompInfo::fLength. Definition at line 50 of file TStreamerInfo.h. ◆ fMethod. ULongptr_t TStreamerInfo::TCompInfo::fMethod. Definition at line 52 of file TStreamerInfo.h. ◆ fNewClass. TClass* TStreamerInfo::TCompInfo::fNewClass. Not Owned. ; Definition at line 54 of file TStreamerInfo.h. ◆ fNewType. Int_t TStreamerInfo::TCompInfo::fNewType. Definition at line 48 of file TStreamerInfo.h. ◆ fOffset. Int_t TStreamerInfo::TCompInfo::fOffset. Definition at line 49 of file TStreamerInfo.h. ◆ fStreamer. TMemberStreamer* TStre",MatchSource.WIKI,doc/master/classTStreamerInfo_1_1TCompInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerInfo_1_1TCompInfo.html
https://root.cern/doc/master/classTStreamerLoop.html:7566,Availability,error,error,7566,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:7655,Availability,error,error,7655,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:7810,Availability,error,error,7810,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:8107,Availability,error,error,8107,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:12191,Availability,error,error,12191,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:7572,Integrability,message,message,7572,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:8113,Integrability,message,message,8113,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:9103,Integrability,message,message,9103,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:12197,Integrability,message,message,12197,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:12570,Integrability,message,message,12570," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:1529,Modifiability,inherit,inherited,1529,"char *countName, const char *countClass, Int_t version, const char *typeName);  Create a TStreamerLoop object. ;  ; virtual ~TStreamerLoop ();  TStreamerLoop dtor. ;  ; const char * GetCountClass () const;  ; const char * GetCountName () const;  ; Int_t GetCountVersion () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; ULongptr_t GetMethod () const override;  return address of counter ;  ; Int_t GetSize () const override;  Returns size of counter in bytes. ;  ; Bool_t HasCounter () const override;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetCountClass (const char *clname);  ; void SetCountName (const char *name);  ; void SetCountVersion (Int_t count);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerLoop. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; TClass * GetNewClass () const;  ; Int_t GetNewTyp",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:4561,Modifiability,inherit,inherited,4561,"l_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:6109,Modifiability,inherit,inherited,6109,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:7202,Modifiability,inherit,inheritance,7202,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:9201,Modifiability,inherit,inherits,9201,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:9318,Modifiability,inherit,inherits,9318,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:13071,Modifiability,inherit,inherited,13071,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is spe",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:13291,Modifiability,inherit,inherited,13291,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is spe",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:13501,Modifiability,inherit,inherited,13501,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is spe",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:14136,Modifiability,inherit,inherited,14136,"lass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerLoop (const TStreamerLoop &)=delete;  ; TStreamerLoop & operator= (const TStreamerLoop &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusB",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:14461,Modifiability,inherit,inherits,14461,"tatic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerLoop (const TStreamerLoop &)=delete;  ; TStreamerLoop & operator= (const TStreamerLoop &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; en",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:14866,Modifiability,inherit,inherited,14866,"Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerLoop (const TStreamerLoop &)=delete;  ; TStreamerLoop & operator= (const TStreamerLoop &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kS",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:15107,Modifiability,inherit,inherited,15107,"; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerLoop (const TStreamerLoop &)=delete;  ; TStreamerLoop & operator= (const TStreamerLoop &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:16242,Modifiability,inherit,inherited,16242,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerLoop:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:16883,Modifiability,inherit,inherited,16883,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerLoop:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerLoop() [1/3]. TStreamerLoop::TStreamerLoop ; (; const TStreamerLoop & ; ). privatedelete . ◆ TStreamerLoop() [2/3]. TStreamerLoop::TStreamerLoop ; (; ). pointer to basic type counter ; Default ctor. ; Definition at line 1022 of file TStreamerElement.cxx. ◆ TStreamerLoop() [3/3]. TStreamerLoop::TStreamerLoop ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; countName, . const char * ; countClass, . Int_t ; version, . const char * ; typeName . ). Create a TStreamerLoop object. ; Definition at line 1029 of file TStreamerElement.cxx. ◆ ~TStreamerLoop(). TStreamerLoop::~TStreame",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:16982,Modifiability,inherit,inherited,16982,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerLoop:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerLoop() [1/3]. TStreamerLoop::TStreamerLoop ; (; const TStreamerLoop & ; ). privatedelete . ◆ TStreamerLoop() [2/3]. TStreamerLoop::TStreamerLoop ; (; ). pointer to basic type counter ; Default ctor. ; Definition at line 1022 of file TStreamerElement.cxx. ◆ TStreamerLoop() [3/3]. TStreamerLoop::TStreamerLoop ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; countName, . const char * ; countClass, . Int_t ; version, . const char * ; typeName . ). Create a TStreamerLoop object. ; Definition at line 1029 of file TStreamerElement.cxx. ◆ ~TStreamerLoop(). TStreamerLoop::~TStreame",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:2681,Performance,cache,cached,2681,"rElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (tr",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:3589,Performance,cache,cache,3589,"t_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:3401,Safety,detect,detected,3401," function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virt",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerLoop.html:5429,Security,hash,hash,5429,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerLoop.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html
https://root.cern/doc/master/classTStreamerObject.html:7215,Availability,error,error,7215,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:7304,Availability,error,error,7304,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:7459,Availability,error,error,7459,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:7756,Availability,error,error,7756,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:11840,Availability,error,error,11840,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:7221,Integrability,message,message,7221,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:7762,Integrability,message,message,7762,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:8752,Integrability,message,message,8752,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:11846,Integrability,message,message,11846,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:12219,Integrability,message,message,12219," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:1058,Modifiability,inherit,inherited,1058,"OOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerObject Class Reference. . Definition at line 293 of file TStreamerElement.h. Public Member Functions;  TStreamerObject ();  Default ctor. ;  ;  TStreamerObject (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObject object. ;  ; virtual ~TStreamerObject ();  TStreamerObject dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of object class in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:4210,Modifiability,inherit,inherited,4210,"l_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:5758,Modifiability,inherit,inherited,5758,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:6851,Modifiability,inherit,inheritance,6851,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:8850,Modifiability,inherit,inherits,8850,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:8967,Modifiability,inherit,inherits,8967,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:12720,Modifiability,inherit,inherited,12720,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObject (const TStreamerObject &)=delete;  ; TStreamerObject & operator= (const TStreamerObject &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepe",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:12940,Modifiability,inherit,inherited,12940,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObject (const TStreamerObject &)=delete;  ; TStreamerObject & operator= (const TStreamerObject &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepe",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:13150,Modifiability,inherit,inherited,13150,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObject (const TStreamerObject &)=delete;  ; TStreamerObject & operator= (const TStreamerObject &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepe",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:13825,Modifiability,inherit,inherited,13825," TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObject (const TStreamerObject &)=delete;  ; TStreamerObject & operator= (const TStreamerObject &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:14960,Modifiability,inherit,inherited,14960,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:15601,Modifiability,inherit,inherited,15601,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:15700,Modifiability,inherit,inherited,15700,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:15905,Modifiability,inherit,inherited,15905,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObject() [1/3]. TStreamerObject::TStreamerObject ; (; cons",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:16230,Modifiability,inherit,inherits,16230,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObject() [1/3]. TStreamerObject::TStreamerObject ; (; const TStreamerObject & ; ). privatedelete . ◆ TStreamerObject() [2/3]. TStreamerObject::TStreamerObject ; (; ). Default ctor. ; Definition at line 1226 of file TStreamerElement.cxx. ◆ TStreamerObject() [3/3]. TStreamerObject::TStreamerObject ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName . ). Create a TStr",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:16635,Modifiability,inherit,inherited,16635,"enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObject() [1/3]. TStreamerObject::TStreamerObject ; (; const TStreamerObject & ; ). privatedelete . ◆ TStreamerObject() [2/3]. TStreamerObject::TStreamerObject ; (; ). Default ctor. ; Definition at line 1226 of file TStreamerElement.cxx. ◆ TStreamerObject() [3/3]. TStreamerObject::TStreamerObject ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName . ). Create a TStreamerObject object. ; Definition at line 1233 of file TStreamerElement.cxx. ◆ ~TStreamerObject(). TStreamerObject::~TStreamerObject ; (; ). virtual . TStreamerObject dtor. ; Definition at line 1246 of file TStreamerElement.cxx. Member Function Documentation. ◆ Class(). static TClass * TStreamerObject:",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:2252,Performance,cache,cached,2252," ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTrans",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:3238,Performance,cache,cache,3238,"ype with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:3050,Safety,detect,detected,3050,") const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virt",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObject.html:5078,Security,hash,hash,5078,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html
https://root.cern/doc/master/classTStreamerObjectAny.html:7235,Availability,error,error,7235,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:7324,Availability,error,error,7324,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:7479,Availability,error,error,7479,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:7776,Availability,error,error,7776,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:11860,Availability,error,error,11860,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:7241,Integrability,message,message,7241,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:7782,Integrability,message,message,7782,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:8772,Integrability,message,message,8772,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:11866,Integrability,message,message,11866,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:12239,Integrability,message,message,12239," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:1078,Modifiability,inherit,inherited,1078,"Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerObjectAny Class Reference. . Definition at line 312 of file TStreamerElement.h. Public Member Functions;  TStreamerObjectAny ();  Default ctor. ;  ;  TStreamerObjectAny (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObjectAny object. ;  ; virtual ~TStreamerObjectAny ();  TStreamerObjectAny dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObjectAny. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:4230,Modifiability,inherit,inherited,4230,"l_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:5778,Modifiability,inherit,inherited,5778,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:6871,Modifiability,inherit,inheritance,6871,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:8870,Modifiability,inherit,inherits,8870,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:8987,Modifiability,inherit,inherits,8987,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:12740,Modifiability,inherit,inherited,12740,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAny (const TStreamerObjectAny &)=delete;  ; TStreamerObjectAny & operator= (const TStreamerObjectAny &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:12960,Modifiability,inherit,inherited,12960,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAny (const TStreamerObjectAny &)=delete;  ; TStreamerObjectAny & operator= (const TStreamerObjectAny &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:13170,Modifiability,inherit,inherited,13170,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAny (const TStreamerObjectAny &)=delete;  ; TStreamerObjectAny & operator= (const TStreamerObjectAny &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:13857,Modifiability,inherit,inherited,13857,"tic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAny (const TStreamerObjectAny &)=delete;  ; TStreamerObjectAny & operator= (const TStreamerObjectAny &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:14992,Modifiability,inherit,inherited,14992,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:15633,Modifiability,inherit,inherited,15633,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:15732,Modifiability,inherit,inherited,15732,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:15937,Modifiability,inherit,inherited,15937,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAny:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAny() [1/3]. TStreamerObjectAny::TStreamerObjectA",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:16262,Modifiability,inherit,inherits,16262,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAny:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAny() [1/3]. TStreamerObjectAny::TStreamerObjectAny ; (; const TStreamerObjectAny & ; ). privatedelete . ◆ TStreamerObjectAny() [2/3]. TStreamerObjectAny::TStreamerObjectAny ; (; ). Default ctor. ; Definition at line 1323 of file TStreamerElement.cxx. ◆ TStreamerObjectAny() [3/3]. TStreamerObjectAny::TStreamerObjectAny ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const cha",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:16667,Modifiability,inherit,inherited,16667,"enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAny:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAny() [1/3]. TStreamerObjectAny::TStreamerObjectAny ; (; const TStreamerObjectAny & ; ). privatedelete . ◆ TStreamerObjectAny() [2/3]. TStreamerObjectAny::TStreamerObjectAny ; (; ). Default ctor. ; Definition at line 1323 of file TStreamerElement.cxx. ◆ TStreamerObjectAny() [3/3]. TStreamerObjectAny::TStreamerObjectAny ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName . ). Create a TStreamerObjectAny object. ; Definition at line 1330 of file TStreamerElement.cxx. ◆ ~TStreamerObjectAny(). TStreamerObjectAny::~TStreamerObjectAny ; (; ). virtual . TStreamerObjectAny dtor. ; Definition at line 1339 of file TStreamerElement.cxx. Member Function Documentat",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:2272,Performance,cache,cached,2272," ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTrans",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:3258,Performance,cache,cache,3258,"ype with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:3070,Safety,detect,detected,3070,") const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virt",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAny.html:5098,Security,hash,hash,5098,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerObjectAny.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:7298,Availability,error,error,7298,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:7387,Availability,error,error,7387,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:7542,Availability,error,error,7542,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:7839,Availability,error,error,7839,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:11923,Availability,error,error,11923,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:7304,Integrability,message,message,7304,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:7845,Integrability,message,message,7845,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:8835,Integrability,message,message,8835,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:11929,Integrability,message,message,11929,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:12302,Integrability,message,message,12302," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:1256,Modifiability,inherit,inherited,1256,"; List of all members ; TStreamerObjectAnyPointer Class Reference. . Definition at line 352 of file TStreamerElement.h. Public Member Functions;  TStreamerObjectAnyPointer ();  Default ctor. ;  ;  TStreamerObjectAnyPointer (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObjectAnyPointer object. ;  ; virtual ~TStreamerObjectAnyPointer ();  TStreamerObjectAnyPointer dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of objectpointer in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetArrayDim (Int_t dim) override;  Set number of array dimensions. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObjectAnyPointer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:4293,Modifiability,inherit,inherited,4293,"const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:5841,Modifiability,inherit,inherited,5841,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:6934,Modifiability,inherit,inheritance,6934,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:8933,Modifiability,inherit,inherits,8933,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:9050,Modifiability,inherit,inherits,9050,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:12803,Modifiability,inherit,inherited,12803,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAnyPointer (const TStreamerObjectAnyPointer &)=delete;  ; TStreamerObjectAnyPointer & operator= (const TStreamerObjectAnyPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:13023,Modifiability,inherit,inherited,13023,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAnyPointer (const TStreamerObjectAnyPointer &)=delete;  ; TStreamerObjectAnyPointer & operator= (const TStreamerObjectAnyPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:13233,Modifiability,inherit,inherited,13233,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAnyPointer (const TStreamerObjectAnyPointer &)=delete;  ; TStreamerObjectAnyPointer & operator= (const TStreamerObjectAnyPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:13948,Modifiability,inherit,inherited,13948,"atic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectAnyPointer (const TStreamerObjectAnyPointer &)=delete;  ; TStreamerObjectAnyPointer & operator= (const TStreamerObjectAnyPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:15083,Modifiability,inherit,inherited,15083,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:15724,Modifiability,inherit,inherited,15724,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:15823,Modifiability,inherit,inherited,15823,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:16028,Modifiability,inherit,inherited,16028,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAnyPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAnyPointer() [1/3]. TStreamerObjectAnyPoin",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:16353,Modifiability,inherit,inherits,16353,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAnyPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAnyPointer() [1/3]. TStreamerObjectAnyPointer::TStreamerObjectAnyPointer ; (; const TStreamerObjectAnyPointer & ; ). privatedelete . ◆ TStreamerObjectAnyPointer() [2/3]. TStreamerObjectAnyPointer::TStreamerObjectAnyPointer ; (; ). Default ctor. ; Definition at line 1521 of file TStreamerElement.cxx. ◆ TStreamerObjectAnyPointer() [3/3]. TStreamerObjectAnyPointer::TStreamerObjectAnyPointer ; ",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:16758,Modifiability,inherit,inherited,16758,"enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAnyPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAnyPointer() [1/3]. TStreamerObjectAnyPointer::TStreamerObjectAnyPointer ; (; const TStreamerObjectAnyPointer & ; ). privatedelete . ◆ TStreamerObjectAnyPointer() [2/3]. TStreamerObjectAnyPointer::TStreamerObjectAnyPointer ; (; ). Default ctor. ; Definition at line 1521 of file TStreamerElement.cxx. ◆ TStreamerObjectAnyPointer() [3/3]. TStreamerObjectAnyPointer::TStreamerObjectAnyPointer ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName . ). Create a TStreamerObjectAnyPointer object. ; Definition at line 1528 of file TStreamerElement.cxx. ◆ ~TStreamerObjectAnyPointer(). TStreamerObjectAnyPointer::~TStreamerObjectAnyPointer ; (; ). virtual . TS",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:2450,Performance,cache,cached,2450," ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the ele",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:3397,Performance,cache,cache,3397,"enceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (co",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:3209,Safety,detect,detected,3209,"onst;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:5161,Security,hash,hash,5161,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerObjectAnyPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:7274,Availability,error,error,7274,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:7363,Availability,error,error,7363,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:7518,Availability,error,error,7518,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:7815,Availability,error,error,7815,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:11899,Availability,error,error,11899,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:7280,Integrability,message,message,7280,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:7821,Integrability,message,message,7821,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:8811,Integrability,message,message,8811,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:11905,Integrability,message,message,11905,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:12278,Integrability,message,message,12278," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:1232,Modifiability,inherit,inherited,1232,"te Member Functions |; List of all members ; TStreamerObjectPointer Class Reference. . Definition at line 331 of file TStreamerElement.h. Public Member Functions;  TStreamerObjectPointer ();  Default ctor. ;  ;  TStreamerObjectPointer (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObjectPointer object. ;  ; virtual ~TStreamerObjectPointer ();  TStreamerObjectPointer dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of objectpointer in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetArrayDim (Int_t dim) override;  Set number of array dimensions. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObjectPointer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:4269,Modifiability,inherit,inherited,4269,"const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:5817,Modifiability,inherit,inherited,5817,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:6910,Modifiability,inherit,inheritance,6910,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:8909,Modifiability,inherit,inherits,8909,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:9026,Modifiability,inherit,inherits,9026,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:12779,Modifiability,inherit,inherited,12779,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectPointer (const TStreamerObjectPointer &)=delete;  ; TStreamerObjectPointer & operator= (const TStreamerObjectPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCach",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:12999,Modifiability,inherit,inherited,12999,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectPointer (const TStreamerObjectPointer &)=delete;  ; TStreamerObjectPointer & operator= (const TStreamerObjectPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCach",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:13209,Modifiability,inherit,inherited,13209,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectPointer (const TStreamerObjectPointer &)=delete;  ; TStreamerObjectPointer & operator= (const TStreamerObjectPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCach",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:13912,Modifiability,inherit,inherited,13912,"ss ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerObjectPointer (const TStreamerObjectPointer &)=delete;  ; TStreamerObjectPointer & operator= (const TStreamerObjectPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:15047,Modifiability,inherit,inherited,15047,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:15688,Modifiability,inherit,inherited,15688,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:15787,Modifiability,inherit,inherited,15787,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:15992,Modifiability,inherit,inherited,15992,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectPointer() [1/3]. TStreamerObjectPointer::TStr",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:16317,Modifiability,inherit,inherits,16317,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectPointer() [1/3]. TStreamerObjectPointer::TStreamerObjectPointer ; (; const TStreamerObjectPointer & ; ). privatedelete . ◆ TStreamerObjectPointer() [2/3]. TStreamerObjectPointer::TStreamerObjectPointer ; (; ). Default ctor. ; Definition at line 1417 of file TStreamerElement.cxx. ◆ TStreamerObjectPointer() [3/3]. TStreamerObjectPointer::TStreamerObjectPointer ; (; const char * ; name, . const c",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:16722,Modifiability,inherit,inherited,16722,"enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectPointer() [1/3]. TStreamerObjectPointer::TStreamerObjectPointer ; (; const TStreamerObjectPointer & ; ). privatedelete . ◆ TStreamerObjectPointer() [2/3]. TStreamerObjectPointer::TStreamerObjectPointer ; (; ). Default ctor. ; Definition at line 1417 of file TStreamerElement.cxx. ◆ TStreamerObjectPointer() [3/3]. TStreamerObjectPointer::TStreamerObjectPointer ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName . ). Create a TStreamerObjectPointer object. ; Definition at line 1424 of file TStreamerElement.cxx. ◆ ~TStreamerObjectPointer(). TStreamerObjectPointer::~TStreamerObjectPointer ; (; ). virtual . TStreamerObjectPointer dtor. ; Definition at li",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:2426,Performance,cache,cached,2426," ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the ele",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:3373,Performance,cache,cache,3373,"enceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (co",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:3185,Safety,detect,detected,3185,"onst;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerObjectPointer.html:5137,Security,hash,hash,5137,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerObjectPointer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html
https://root.cern/doc/master/classTStreamerSTL.html:7641,Availability,error,error,7641,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:7730,Availability,error,error,7730,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:7885,Availability,error,error,7885,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:8182,Availability,error,error,8182,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:12266,Availability,error,error,12266,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:7647,Integrability,message,message,7647,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:8188,Integrability,message,message,8188,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:9178,Integrability,message,message,9178,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:12272,Integrability,message,message,12272,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:12645,Integrability,message,message,12645," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:901,Modifiability,variab,variable,901,". ROOT: TStreamerSTL Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerSTL Class Reference. . Definition at line 391 of file TStreamerElement.h. Public Member Functions;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of STL container in bytes. ;  ; Int_t GetSTLtype () const;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer *streamer) override;  Set pointer to Streamer function for this element NOTE: we do not take ownership. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTL. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *t",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:1830,Modifiability,inherit,inherited,1830,"  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of STL container in bytes. ;  ; Int_t GetSTLtype () const;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer *streamer) override;  Set pointer to Streamer function for this element NOTE: we do not take ownership. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTL. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceTyp",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:4636,Modifiability,inherit,inherited,4636,"st;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns n",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:6184,Modifiability,inherit,inherited,6184,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:7277,Modifiability,inherit,inheritance,7277,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:9276,Modifiability,inherit,inherits,9276,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:9393,Modifiability,inherit,inherits,9393,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:13146,Modifiability,inherit,inherited,13146,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewC",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:13366,Modifiability,inherit,inherited,13366,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewC",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:13576,Modifiability,inherit,inherited,13576,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewC",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:14142,Modifiability,inherit,inherited,14142," Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerSTL (const TStreamerSTL &)=delete;  ; TStreamerSTL & operator= (const TStreamerSTL &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:14467,Modifiability,inherit,inherits,14467,"mber Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerSTL (const TStreamerSTL &)=delete;  ; TStreamerSTL & operator= (const TStreamerSTL &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:14872,Modifiability,inherit,inherited,14872,"atus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerSTL (const TStreamerSTL &)=delete;  ; TStreamerSTL & operator= (const TStreamerSTL &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLse",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:15109,Modifiability,inherit,inherited,15109,"t;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerSTL (const TStreamerSTL &)=delete;  ; TStreamerSTL & operator= (const TStreamerSTL &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:16244,Modifiability,inherit,inherited,16244,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:16885,Modifiability,inherit,inherited,16885,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTL() [1/4]. TStreamerSTL::TStreamerSTL ; (; const TStreamerSTL & ; ). privatedelete . ◆ TStreamerSTL() [2/4]. TStreamerSTL::TStreamerSTL ; (; ). Default ctor. ; Definition at line 1686 of file TStreamerElement.cxx. ◆ TStreamerSTL() [3/4]. TStreamerSTL::TStreamerSTL ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName, . const char * ; trueType, . Bool_t ; dmPointer . ). Create a TStreamerSTL object. ; Definition at line 1724 of file TStreamerElement.cxx. ◆ TStreamerSTL() [4/4]. TStreamerSTL::TStreamerSTL ; (; const char * ; name, . const char * ; title, . Int_t ; offs",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:16984,Modifiability,inherit,inherited,16984,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTL() [1/4]. TStreamerSTL::TStreamerSTL ; (; const TStreamerSTL & ; ). privatedelete . ◆ TStreamerSTL() [2/4]. TStreamerSTL::TStreamerSTL ; (; ). Default ctor. ; Definition at line 1686 of file TStreamerElement.cxx. ◆ TStreamerSTL() [3/4]. TStreamerSTL::TStreamerSTL ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName, . const char * ; trueType, . Bool_t ; dmPointer . ). Create a TStreamerSTL object. ; Definition at line 1724 of file TStreamerElement.cxx. ◆ TStreamerSTL() [4/4]. TStreamerSTL::TStreamerSTL ; (; const char * ; name, . const char * ; title, . Int_t ; offs",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:18482,Modifiability,variab,variable,18482," ◆ TStreamerSTL() [2/4]. TStreamerSTL::TStreamerSTL ; (; ). Default ctor. ; Definition at line 1686 of file TStreamerElement.cxx. ◆ TStreamerSTL() [3/4]. TStreamerSTL::TStreamerSTL ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName, . const char * ; trueType, . Bool_t ; dmPointer . ). Create a TStreamerSTL object. ; Definition at line 1724 of file TStreamerElement.cxx. ◆ TStreamerSTL() [4/4]. TStreamerSTL::TStreamerSTL ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName, . const TVirtualCollectionProxy & ; proxy, . Bool_t ; dmPointer . ). Create a TStreamerSTL object. ; Definition at line 1693 of file TStreamerElement.cxx. ◆ ~TStreamerSTL(). TStreamerSTL::~TStreamerSTL ; (; ). virtual . TStreamerSTL dtor. ; Definition at line 1803 of file TStreamerElement.cxx. Member Function Documentation. ◆ CannotSplit(). Bool_t TStreamerSTL::CannotSplit ; (; ); const. overridevirtual . We can not split STL's which are inside a variable size array. ; At least for now. ; Reimplemented from TStreamerElement.; Definition at line 1811 of file TStreamerElement.cxx. ◆ Class(). static TClass * TStreamerSTL::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TStreamerSTL::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TStreamerSTL::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 421 of file TStreamerElement.h. ◆ DeclFileName(). static const char * TStreamerSTL::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 421 of file TStreamerElement.h. ◆ GetCtype(). Int_t TStreamerSTL::GetCtype ; (; ); const. inline . Definition at line 413 of file TStreamerElement.h. ◆ GetInclude(). const char * TStreamerSTL::GetInclude ; (; ); const. overridevirtual . Return the proper include for this element. ; Reimpleme",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:2919,Performance,cache,cached,2919,"rNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element r",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:3860,Performance,cache,cache,3860,"etSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &na",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:3672,Safety,detect,detected,3672,"t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited fr",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTL.html:5504,Security,hash,hash,5504,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerSTL.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html
https://root.cern/doc/master/classTStreamerSTLstring.html:8011,Availability,error,error,8011,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:8100,Availability,error,error,8100,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:8255,Availability,error,error,8255,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:8552,Availability,error,error,8552,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:12636,Availability,error,error,12636,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:8017,Integrability,message,message,8017,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:8558,Integrability,message,message,8558,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:9548,Integrability,message,message,9548,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:12642,Integrability,message,message,12642,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:13015,Integrability,message,message,13015," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; sta",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:1015,Modifiability,inherit,inherited,1015,". ROOT: TStreamerSTLstring Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerSTLstring Class Reference. . Definition at line 425 of file TStreamerElement.h. Public Member Functions;  TStreamerSTLstring ();  Default ctor. ;  ;  TStreamerSTLstring (const char *name, const char *title, Int_t offset, const char *typeName, Bool_t dmPointer);  Create a TStreamerSTLstring object. ;  ; virtual ~TStreamerSTLstring ();  TStreamerSTLstring dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTLstring. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerSTL;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; Int_t GetSTLtype () const;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:1560,Modifiability,variab,variable,1560,"r);  Create a TStreamerSTLstring object. ;  ; virtual ~TStreamerSTLstring ();  TStreamerSTLstring dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTLstring. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerSTL;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; Int_t GetSTLtype () const;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer *streamer) override;  Set pointer to Streamer function for this element NOTE: we do not take ownership. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLe",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:2200,Modifiability,inherit,inherited,2200,"Type, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; Int_t GetSTLtype () const;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer *streamer) override;  Set pointer to Streamer function for this element NOTE: we do not take ownership. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceTyp",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:5006,Modifiability,inherit,inherited,5006,"st;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns n",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:6554,Modifiability,inherit,inherited,6554,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:7647,Modifiability,inherit,inheritance,7647,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:9646,Modifiability,inherit,inherits,9646,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:9763,Modifiability,inherit,inherits,9763,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:13516,Modifiability,inherit,inherited,13516," either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerSTLstring (const TStreamerSTLstring &)=delete;  ; TStreamerSTLstring & operator= (const TStreamerSTLstring &)=delete;  . Additional Inherited Members;  Public Types i",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:13732,Modifiability,inherit,inherited,13732," either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerSTLstring (const TStreamerSTLstring &)=delete;  ; TStreamerSTLstring & operator= (const TStreamerSTLstring &)=delete;  . Additional Inherited Members;  Public Types i",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:13952,Modifiability,inherit,inherited,13952," either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerSTLstring (const TStreamerSTLstring &)=delete;  ; TStreamerSTLstring & operator= (const TStreamerSTLstring &)=delete;  . Additional Inherited Members;  Public Types i",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:14162,Modifiability,inherit,inherited,14162," either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerSTL; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerSTLstring (const TStreamerSTLstring &)=delete;  ; TStreamerSTLstring & operator= (const TStreamerSTLstring &)=delete;  . Additional Inherited Members;  Public Types i",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:14849,Modifiability,inherit,inherited,14849,"tic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerSTLstring (const TStreamerSTLstring &)=delete;  ; TStreamerSTLstring & operator= (const TStreamerSTLstring &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:15984,Modifiability,inherit,inherited,15984,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArra",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:16625,Modifiability,inherit,inherited,16625,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attri",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:16724,Modifiability,inherit,inherited,16724,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attri",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:16929,Modifiability,inherit,inherited,16929,"00; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTLstring:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTLstring()",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:17016,Modifiability,inherit,inherited,17016,"00; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTLstring:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTLstring()",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:17341,Modifiability,inherit,inherits,17341,"erenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTLstring:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTLstring() [1/3]. TStreamerSTLstring::TStreamerSTLstring ; (; const TStreamerSTLstring & ; ). privatedelete . ◆ TStreamerSTLstring() [2/3]. TStreamerSTLstring::TStreamerSTLstring ; (; ). Default ctor. ; Definition at line 2010 of file TStreamerElement.cxx. ◆ TStreamerSTLstring() [3/3]. TStreamerSTLstring::TStreamerSTLstring ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const cha",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:17746,Modifiability,inherit,inherited,17746,"om TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTLstring:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTLstring() [1/3]. TStreamerSTLstring::TStreamerSTLstring ; (; const TStreamerSTLstring & ; ). privatedelete . ◆ TStreamerSTLstring() [2/3]. TStreamerSTLstring::TStreamerSTLstring ; (; ). Default ctor. ; Definition at line 2010 of file TStreamerElement.cxx. ◆ TStreamerSTLstring() [3/3]. TStreamerSTLstring::TStreamerSTLstring ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName, . Bool_t ; dmPointer . ). Create a TStreamerSTLstring object. ; Definition at line 2017 of file TStreamerElement.cxx. ◆ ~TStreamerSTLstring(). TStreamerSTLstring::~TStreamerSTLstring ; (; ). virtual . TStreamerSTLstring dtor. ; Definition at line 2041 of file TStreamerElement.cxx. Memb",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:3289,Performance,cache,cached,3289,"rNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element r",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:4230,Performance,cache,cache,4230,"etSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &na",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:4042,Safety,detect,detected,4042,"t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited fr",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerSTLstring.html:5874,Security,hash,hash,5874,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerSTLstring.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html
https://root.cern/doc/master/classTStreamerString.html:7192,Availability,error,error,7192,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:7281,Availability,error,error,7281,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:7436,Availability,error,error,7436,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:7733,Availability,error,error,7733,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:11817,Availability,error,error,11817,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:7198,Integrability,message,message,7198,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:7739,Integrability,message,message,7739,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:8729,Integrability,message,message,8729,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:11823,Integrability,message,message,11823,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:12196,Integrability,message,message,12196," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static c",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:951,Modifiability,inherit,inherited,951,". ROOT: TStreamerString Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerString Class Reference. . Definition at line 373 of file TStreamerElement.h. Public Member Functions;  TStreamerString ();  Default ctor. ;  ;  TStreamerString (const char *name, const char *title, Int_t offset);  Create a TStreamerString object. ;  ; virtual ~TStreamerString ();  TStreamerString dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerString. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:4187,Modifiability,inherit,inherited,4187,"l_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:5735,Modifiability,inherit,inherited,5735,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:6828,Modifiability,inherit,inheritance,6828,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:8827,Modifiability,inherit,inherits,8827,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:8944,Modifiability,inherit,inherits,8944,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:12697,Modifiability,inherit,inherited,12697,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerString (const TStreamerString &)=delete;  ; TStreamerString & operator= (const TStreamerString &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepe",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:12917,Modifiability,inherit,inherited,12917,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerString (const TStreamerString &)=delete;  ; TStreamerString & operator= (const TStreamerString &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepe",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:13127,Modifiability,inherit,inherited,13127,"  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TStreamerElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerString (const TStreamerString &)=delete;  ; TStreamerString & operator= (const TStreamerString &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepe",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:13802,Modifiability,inherit,inherited,13802," TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TStreamerString (const TStreamerString &)=delete;  ; TStreamerString & operator= (const TStreamerString &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:14937,Modifiability,inherit,inherited,14937,"NotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:15578,Modifiability,inherit,inherited,15578,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:15677,Modifiability,inherit,inherited,15677,"et; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerEl",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:15882,Modifiability,inherit,inherited,15882,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerString() [1/3]. TStreamerString::TStreamerString ; (; cons",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:16207,Modifiability,inherit,inherits,16207,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerString() [1/3]. TStreamerString::TStreamerString ; (; const TStreamerString & ; ). privatedelete . ◆ TStreamerString() [2/3]. TStreamerString::TStreamerString ; (; ). Default ctor. ; Definition at line 1616 of file TStreamerElement.cxx. ◆ TStreamerString() [3/3]. TStreamerString::TStreamerString ; (; const char * ; name, . const char * ; title, . Int_t ; offset . ). Create a TStreamerString object. ; Defin",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:16612,Modifiability,inherit,inherited,16612,"enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerString() [1/3]. TStreamerString::TStreamerString ; (; const TStreamerString & ; ). privatedelete . ◆ TStreamerString() [2/3]. TStreamerString::TStreamerString ; (; ). Default ctor. ; Definition at line 1616 of file TStreamerElement.cxx. ◆ TStreamerString() [3/3]. TStreamerString::TStreamerString ; (; const char * ; name, . const char * ; title, . Int_t ; offset . ). Create a TStreamerString object. ; Definition at line 1623 of file TStreamerElement.cxx. ◆ ~TStreamerString(). TStreamerString::~TStreamerString ; (; ). virtual . TStreamerString dtor. ; Definition at line 1631 of file TStreamerElement.cxx. Member Function Documentation. ◆ Class(). static TClass * TStreamerString::Class ; (; ). static . Ret",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:2145,Performance,cache,cached,2145," ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t GetOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if t",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:3215,Performance,cache,cache,3215,"t','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update (const TClass *oldClass, TClass *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:3027,Safety,detect,detected,3027,"tOffset () const;  ; void GetSequenceType (TString &type) const;  Fill type with the string representation of sequence information including 'cached','repeat','write' or 'nodelete'. ;  ; TMemberStreamer * GetStreamer () const;  Return the local streamer object. ;  ; Int_t GetTObjectOffset () const;  ; Int_t GetType () const;  ; const char * GetTypeName () const;  ; const char * GetTypeNameBasic () const;  Return type name of this element in case the type name is not a standard basic type, return the basic type name known to CINT. ;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; virtual Bool_t HasCounter () const;  ; virtual void Init (TVirtualStreamerInfo *obj=nullptr);  Initliaze the element. ;  ; virtual Bool_t IsaPointer () const;  ; virtual Bool_t IsBase () const;  Return kTRUE if the element represent a base class. ;  ; virtual Bool_t IsOldFormat (const char *newTypeName);  The early 3.00/00 and 3.01/01 versions used to store dm->GetTypeName instead of dm->GetFullTypename if this case is detected, the element type name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetArrayDim (Int_t dim);  Set number of array dimensions. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virt",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTStreamerString.html:5055,Security,hash,hash,5055,"Class *newClass);  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTStreamerString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStreamerString.html
https://root.cern/doc/master/classTString.html:41898,Availability,error,error,41898,"); const. Returns true if all characters in string are octal digits (0-7). ; Returns false in case string length is 0 or string contains other characters. ; Definition at line 1924 of file TString.cxx. ◆ IsWhitespace(). Bool_t TString::IsWhitespace ; (; ); const. inline . Definition at line 415 of file TString.h. ◆ Itoa(). TString TString::Itoa ; (; Int_t ; value, . Int_t ; base . ). static . Converts an Int_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2144 of file TString.cxx. ◆ MaxSize(). static Ssiz_t TString::MaxSize ; (; ). inlinestaticprivate . Definition at line 261 of file TString.h. ◆ MaxWaste(). Ssiz_t TString::MaxWaste ; (; Ssiz_t ; mw = 15). static . Set maximum space that may be wasted in a string before doing a resize. ; Default is 15. ; Definition at line 1612 of file TStri",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:42509,Availability,error,error,42509,"tement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2144 of file TString.cxx. ◆ MaxSize(). static Ssiz_t TString::MaxSize ; (; ). inlinestaticprivate . Definition at line 261 of file TString.h. ◆ MaxWaste(). Ssiz_t TString::MaxWaste ; (; Ssiz_t ; mw = 15). static . Set maximum space that may be wasted in a string before doing a resize. ; Default is 15. ; Definition at line 1612 of file TString.cxx. ◆ MaybeRegexp(). Bool_t TString::MaybeRegexp ; (; ); const. Returns true if string contains one of the regexp characters ""^$.[]*+?"". ; Definition at line 952 of file TString.cxx. ◆ MaybeWildcard(). Bool_t TString::MaybeWildcard ; (; ); const. Returns true if string contains one of the wildcard characters ""[]*?"". ; Definition at line 964 of file TString.cxx. ◆ MD5(). TString TString::MD5 ; (; ); const. Return the MD5 digest for this string, in a string representation. ; Definition at line 940 of file TString.cxx. ◆ operator const char *(). TString::operator const char * ; (; ); const. inline . Definiti",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56541,Availability,error,error,56541,"this way: TString myl = ""tok1 tok2|tok3"";; TString tok;; Ssiz_t from = 0;; while (myl.Tokenize(tok, from, ""[ |]"")) {; // Analyse tok; ...; }; TString::TokenizeTObjArray * Tokenize(const TString &delim) constThis function is used to isolate sequential tokens in a TString.Definition TString.cxx:2264; int; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle de",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56949,Availability,error,error,56949," 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle descendant of TObject ; Definition at line 1428 of file TString.cxx. ◆ Zero(). void TString::Zero ; (; ). inlineprivate . Definition at line 264 of file TString.h. Friends And Related Symbol Documentation. ◆ operator+ [1/11]. TString operator+ ; (; char ; c, . const TString & ; s . ). friend . Add string to char. ; Definition at line 1557 of file TString.cxx. ◆ operator+ [2/11]. TString operator+ ; (; const",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:25400,Energy Efficiency,allocate,allocated,25400,"(; Ssiz_t ; nc). Return string capacity. ; If nc != current capacity Clone() the string in a string with the desired capacity. ; Definition at line 442 of file TString.cxx. ◆ Chop(). TString & TString::Chop ; (; ). inline . Definition at line 691 of file TString.h. ◆ Class(). static TClass * TString::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 473 of file TString.h. ◆ Clear(). void TString::Clear ; (; ). Clear string without changing its capacity. ; Definition at line 1235 of file TString.cxx. ◆ Clobber(). Ssiz_t TString::Clobber ; (; Ssiz_t ; nc). protected . Clear string and make sure it has a capacity of nc. ; WarningIf nc > MaxSize(), then Fatal() is raised, and only MaxSize() elements are allocated if Fatal does not abort ; ReturnsResulting allocated capacity (after clamping, if needed) ; Definition at line 1246 of file TString.cxx. ◆ Clone(). void TString::Clone ; (; Ssiz_t ; tot). private . Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ; Preserve previous contents. WarningIf tot > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated ; Definition at line 1279 of file TString.cxx. ◆ CompareTo() [1/2]. int TString::CompareTo ; (; const char * ; cs2, . ECaseCompare ; cmp = kExact . ); const. Compare a string to char *cs2. ; Returns returns zero if the two strings are identical, otherwise returns the difference between the first two differing bytes (treated as unsigned char values, so that ‘\200’ is greater than ‘\0’, for example). Zero-length strings are always identical. ; Definition at line 457 of file TString.cxx. ◆ CompareTo() [2/2]. int TString::CompareTo ; (; const TString & ; str, . ECaseCompare ; cmp = kExa",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:25453,Energy Efficiency,allocate,allocated,25453,"(; Ssiz_t ; nc). Return string capacity. ; If nc != current capacity Clone() the string in a string with the desired capacity. ; Definition at line 442 of file TString.cxx. ◆ Chop(). TString & TString::Chop ; (; ). inline . Definition at line 691 of file TString.h. ◆ Class(). static TClass * TString::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 473 of file TString.h. ◆ Clear(). void TString::Clear ; (; ). Clear string without changing its capacity. ; Definition at line 1235 of file TString.cxx. ◆ Clobber(). Ssiz_t TString::Clobber ; (; Ssiz_t ; nc). protected . Clear string and make sure it has a capacity of nc. ; WarningIf nc > MaxSize(), then Fatal() is raised, and only MaxSize() elements are allocated if Fatal does not abort ; ReturnsResulting allocated capacity (after clamping, if needed) ; Definition at line 1246 of file TString.cxx. ◆ Clone(). void TString::Clone ; (; Ssiz_t ; tot). private . Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ; Preserve previous contents. WarningIf tot > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated ; Definition at line 1279 of file TString.cxx. ◆ CompareTo() [1/2]. int TString::CompareTo ; (; const char * ; cs2, . ECaseCompare ; cmp = kExact . ); const. Compare a string to char *cs2. ; Returns returns zero if the two strings are identical, otherwise returns the difference between the first two differing bytes (treated as unsigned char values, so that ‘\200’ is greater than ‘\0’, for example). Zero-length strings are always identical. ; Definition at line 457 of file TString.cxx. ◆ CompareTo() [2/2]. int TString::CompareTo ; (; const TString & ; str, . ECaseCompare ; cmp = kExa",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:25830,Energy Efficiency,allocate,allocated,25830,"const char * TString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 473 of file TString.h. ◆ Clear(). void TString::Clear ; (; ). Clear string without changing its capacity. ; Definition at line 1235 of file TString.cxx. ◆ Clobber(). Ssiz_t TString::Clobber ; (; Ssiz_t ; nc). protected . Clear string and make sure it has a capacity of nc. ; WarningIf nc > MaxSize(), then Fatal() is raised, and only MaxSize() elements are allocated if Fatal does not abort ; ReturnsResulting allocated capacity (after clamping, if needed) ; Definition at line 1246 of file TString.cxx. ◆ Clone(). void TString::Clone ; (; Ssiz_t ; tot). private . Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ; Preserve previous contents. WarningIf tot > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated ; Definition at line 1279 of file TString.cxx. ◆ CompareTo() [1/2]. int TString::CompareTo ; (; const char * ; cs2, . ECaseCompare ; cmp = kExact . ); const. Compare a string to char *cs2. ; Returns returns zero if the two strings are identical, otherwise returns the difference between the first two differing bytes (treated as unsigned char values, so that ‘\200’ is greater than ‘\0’, for example). Zero-length strings are always identical. ; Definition at line 457 of file TString.cxx. ◆ CompareTo() [2/2]. int TString::CompareTo ; (; const TString & ; str, . ECaseCompare ; cmp = kExact . ); const. Compare a string to another string. ; Returns returns zero if the two strings are identical, otherwise returns the difference between the first two differing bytes (treated as unsigned char values, so that ‘\200’ is greater than ‘\0’, for example). Zero-length strings are always identical. ; Definition at line 487 of file TString.cxx. ◆ Contains() [1/4]. Bool_t TString",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:37121,Energy Efficiency,allocate,allocated,37121,"; s, . Ssiz_t ; patlen, . Ssiz_t ; i, . ECaseCompare ; cmp . ); const. inline . Definition at line 657 of file TString.h. ◆ Index() [7/8]. Ssiz_t TString::Index ; (; TPRegexp & ; r, . Ssiz_t * ; extent, . Ssiz_t ; start = 0 . ); const. Find the first occurrence of the regexp in string and return the position. ; Extent is length of the matched string and start is the offset at which the matching should start. ; Definition at line 628 of file TPRegexp.cxx. ◆ Index() [8/8]. Ssiz_t TString::Index ; (; TPRegexp & ; r, . Ssiz_t ; start = 0 . ); const. Find the first occurrence of the regexp in string and return the position. ; Start is the offset at which the search should start. ; Definition at line 613 of file TPRegexp.cxx. ◆ Init(). char * TString::Init ; (; Ssiz_t ; capacity, . Ssiz_t ; nchar . ). private . Private member function returning an empty string representation of size capacity and containing nchar characters. ; WarningIf nchar > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated ; Definition at line 261 of file TString.cxx. ◆ InitChar(). void TString::InitChar ; (; char ; c). protected . Initialize a string with a single character. ; Definition at line 148 of file TString.cxx. ◆ InitialCapacity(). Ssiz_t TString::InitialCapacity ; (; Ssiz_t ; ic = 15). static . Set default initial capacity for all TStrings. Default is 15. ; Definition at line 1593 of file TString.cxx. ◆ Insert() [1/4]. TString & TString::Insert ; (; Ssiz_t ; pos, . const char * ; s . ). inline . Definition at line 661 of file TString.h. ◆ Insert() [2/4]. TString & TString::Insert ; (; Ssiz_t ; pos, . const char * ; s, . Ssiz_t ; extent . ). inline . Definition at line 664 of file TString.h. ◆ Insert() [3/4]. TString & TString::Insert ; (; Ssiz_t ; pos, . const TString & ; s . ). inline . Definition at line 667 of file TString.h. ◆ Insert() [4/4]. TString & TString::Insert ; (; Ssiz_t ; pos, . const TString & ; s, . Ssiz_t ; extent . ). inline . Definition at line 67",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:41417,Energy Efficiency,adapt,adapted,41417,"xpressed in the base specified (range=2-36), i.e. ; {0,1} for base 2, {0-9,a-f,A-F} for base 16, {0-9,a-z,A-Z} for base 36. Returns false in case string length is 0 or string contains other characters. ; Definition at line 1957 of file TString.cxx. ◆ IsLong(). Bool_t TString::IsLong ; (; ); const. inlineprivate . Definition at line 238 of file TString.h. ◆ IsNull(). Bool_t TString::IsNull ; (; ); const. inline . Definition at line 414 of file TString.h. ◆ IsOct(). Bool_t TString::IsOct ; (; ); const. Returns true if all characters in string are octal digits (0-7). ; Returns false in case string length is 0 or string contains other characters. ; Definition at line 1924 of file TString.cxx. ◆ IsWhitespace(). Bool_t TString::IsWhitespace ; (; ); const. inline . Definition at line 415 of file TString.h. ◆ Itoa(). TString TString::Itoa ; (; Int_t ; value, . Int_t ; base . ). static . Converts an Int_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced vers",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:42422,Energy Efficiency,adapt,adapted,42422,"intf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2144 of file TString.cxx. ◆ MaxSize(). static Ssiz_t TString::MaxSize ; (; ). inlinestaticprivate . Definition at line 261 of file TString.h. ◆ MaxWaste(). Ssiz_t TString::MaxWaste ; (; Ssiz_t ; mw = 15). static . Set maximum space that may be wasted in a string before doing a resize. ; Default is 15. ; Definition at line 1612 of file TString.cxx. ◆ MaybeRegexp(). Bool_t TString::MaybeRegexp ; (; ); const. Returns true if string contains one of the regexp characters ""^$.[]*+?"". ; Definition at line 952 of file TString.cxx. ◆ MaybeWildcard(). Bool_t TString::MaybeWildcard ; (; ); const. Returns true if string contains one of the wildcard characters ""[]*?"". ; Definition at line 964 of file TString.cxx. ◆ MD5(). TString TString::MD5 ; (; ); const. Return the MD5 digest for this string, in a string representation. ; Definition at line 940 of f",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56454,Energy Efficiency,adapt,adapted,56454,"oken is found, kFALSE if not or if some inconsistency occurred. This method allows to loop over tokens in this way: TString myl = ""tok1 tok2|tok3"";; TString tok;; Ssiz_t from = 0;; while (myl.Tokenize(tok, from, ""[ |]"")) {; // Analyse tok; ...; }; TString::TokenizeTObjArray * Tokenize(const TString &delim) constThis function is used to isolate sequential tokens in a TString.Definition TString.cxx:2264; int; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of mult",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56862,Energy Efficiency,adapt,adapted,56862,"t; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle descendant of TObject ; Definition at line 1428 of file TString.cxx. ◆ Zero(). void TString::Zero ; (; ). inlineprivate . Definition at line 264 of file TString.h. Friends And Related Symbol Documentation. ◆ operator+ [1/11]. TString operator+ ; (; char ; c, . const TString & ; s . ). friend . Add stri",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:33872,Integrability,depend,depending,33872,", . Bool_t ; chop = kTRUE . ). Read one line from the stream, including the \n, or until EOF. ; Remove the trailing [\r]\n if chop is true. Returns kTRUE if data was read. ; Definition at line 204 of file Stringio.cxx. ◆ GetShortPointer() [1/2]. char * TString::GetShortPointer ; (; ). inlineprivate . Definition at line 254 of file TString.h. ◆ GetShortPointer() [2/2]. const char * TString::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Pl",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:41388,Modifiability,enhance,enhanced,41388,"xpressed in the base specified (range=2-36), i.e. ; {0,1} for base 2, {0-9,a-f,A-F} for base 16, {0-9,a-z,A-Z} for base 36. Returns false in case string length is 0 or string contains other characters. ; Definition at line 1957 of file TString.cxx. ◆ IsLong(). Bool_t TString::IsLong ; (; ); const. inlineprivate . Definition at line 238 of file TString.h. ◆ IsNull(). Bool_t TString::IsNull ; (; ); const. inline . Definition at line 414 of file TString.h. ◆ IsOct(). Bool_t TString::IsOct ; (; ); const. Returns true if all characters in string are octal digits (0-7). ; Returns false in case string length is 0 or string contains other characters. ; Definition at line 1924 of file TString.cxx. ◆ IsWhitespace(). Bool_t TString::IsWhitespace ; (; ); const. inline . Definition at line 415 of file TString.h. ◆ Itoa(). TString TString::Itoa ; (; Int_t ; value, . Int_t ; base . ). static . Converts an Int_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced vers",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:41417,Modifiability,adapt,adapted,41417,"xpressed in the base specified (range=2-36), i.e. ; {0,1} for base 2, {0-9,a-f,A-F} for base 16, {0-9,a-z,A-Z} for base 36. Returns false in case string length is 0 or string contains other characters. ; Definition at line 1957 of file TString.cxx. ◆ IsLong(). Bool_t TString::IsLong ; (; ); const. inlineprivate . Definition at line 238 of file TString.h. ◆ IsNull(). Bool_t TString::IsNull ; (; ); const. inline . Definition at line 414 of file TString.h. ◆ IsOct(). Bool_t TString::IsOct ; (; ); const. Returns true if all characters in string are octal digits (0-7). ; Returns false in case string length is 0 or string contains other characters. ; Definition at line 1924 of file TString.cxx. ◆ IsWhitespace(). Bool_t TString::IsWhitespace ; (; ); const. inline . Definition at line 415 of file TString.h. ◆ Itoa(). TString TString::Itoa ; (; Int_t ; value, . Int_t ; base . ). static . Converts an Int_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced vers",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:42393,Modifiability,enhance,enhanced,42393,"intf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2144 of file TString.cxx. ◆ MaxSize(). static Ssiz_t TString::MaxSize ; (; ). inlinestaticprivate . Definition at line 261 of file TString.h. ◆ MaxWaste(). Ssiz_t TString::MaxWaste ; (; Ssiz_t ; mw = 15). static . Set maximum space that may be wasted in a string before doing a resize. ; Default is 15. ; Definition at line 1612 of file TString.cxx. ◆ MaybeRegexp(). Bool_t TString::MaybeRegexp ; (; ); const. Returns true if string contains one of the regexp characters ""^$.[]*+?"". ; Definition at line 952 of file TString.cxx. ◆ MaybeWildcard(). Bool_t TString::MaybeWildcard ; (; ); const. Returns true if string contains one of the wildcard characters ""[]*?"". ; Definition at line 964 of file TString.cxx. ◆ MD5(). TString TString::MD5 ; (; ); const. Return the MD5 digest for this string, in a string representation. ; Definition at line 940 of f",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:42422,Modifiability,adapt,adapted,42422,"intf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2144 of file TString.cxx. ◆ MaxSize(). static Ssiz_t TString::MaxSize ; (; ). inlinestaticprivate . Definition at line 261 of file TString.h. ◆ MaxWaste(). Ssiz_t TString::MaxWaste ; (; Ssiz_t ; mw = 15). static . Set maximum space that may be wasted in a string before doing a resize. ; Default is 15. ; Definition at line 1612 of file TString.cxx. ◆ MaybeRegexp(). Bool_t TString::MaybeRegexp ; (; ); const. Returns true if string contains one of the regexp characters ""^$.[]*+?"". ; Definition at line 952 of file TString.cxx. ◆ MaybeWildcard(). Bool_t TString::MaybeWildcard ; (; ); const. Returns true if string contains one of the wildcard characters ""[]*?"". ; Definition at line 964 of file TString.cxx. ◆ MD5(). TString TString::MD5 ; (; ); const. Return the MD5 digest for this string, in a string representation. ; Definition at line 940 of f",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56425,Modifiability,enhance,enhanced,56425,"oken is found, kFALSE if not or if some inconsistency occurred. This method allows to loop over tokens in this way: TString myl = ""tok1 tok2|tok3"";; TString tok;; Ssiz_t from = 0;; while (myl.Tokenize(tok, from, ""[ |]"")) {; // Analyse tok; ...; }; TString::TokenizeTObjArray * Tokenize(const TString &delim) constThis function is used to isolate sequential tokens in a TString.Definition TString.cxx:2264; int; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of mult",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56454,Modifiability,adapt,adapted,56454,"oken is found, kFALSE if not or if some inconsistency occurred. This method allows to loop over tokens in this way: TString myl = ""tok1 tok2|tok3"";; TString tok;; Ssiz_t from = 0;; while (myl.Tokenize(tok, from, ""[ |]"")) {; // Analyse tok; ...; }; TString::TokenizeTObjArray * Tokenize(const TString &delim) constThis function is used to isolate sequential tokens in a TString.Definition TString.cxx:2264; int; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of mult",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56833,Modifiability,enhance,enhanced,56833,"t; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle descendant of TObject ; Definition at line 1428 of file TString.cxx. ◆ Zero(). void TString::Zero ; (; ). inlineprivate . Definition at line 264 of file TString.h. Friends And Related Symbol Documentation. ◆ operator+ [1/11]. TString operator+ ; (; char ; c, . const TString & ; s . ). friend . Add stri",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:56862,Modifiability,adapt,adapted,56862,"t; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle descendant of TObject ; Definition at line 1428 of file TString.cxx. ◆ Zero(). void TString::Zero ; (; ). inlineprivate . Definition at line 264 of file TString.h. Friends And Related Symbol Documentation. ◆ operator+ [1/11]. TString operator+ ; (; char ; c, . const TString & ; s . ). friend . Add stri",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:25428,Safety,abort,abort,25428,"(; Ssiz_t ; nc). Return string capacity. ; If nc != current capacity Clone() the string in a string with the desired capacity. ; Definition at line 442 of file TString.cxx. ◆ Chop(). TString & TString::Chop ; (; ). inline . Definition at line 691 of file TString.h. ◆ Class(). static TClass * TString::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 473 of file TString.h. ◆ Clear(). void TString::Clear ; (; ). Clear string without changing its capacity. ; Definition at line 1235 of file TString.cxx. ◆ Clobber(). Ssiz_t TString::Clobber ; (; Ssiz_t ; nc). protected . Clear string and make sure it has a capacity of nc. ; WarningIf nc > MaxSize(), then Fatal() is raised, and only MaxSize() elements are allocated if Fatal does not abort ; ReturnsResulting allocated capacity (after clamping, if needed) ; Definition at line 1246 of file TString.cxx. ◆ Clone(). void TString::Clone ; (; Ssiz_t ; tot). private . Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ; Preserve previous contents. WarningIf tot > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated ; Definition at line 1279 of file TString.cxx. ◆ CompareTo() [1/2]. int TString::CompareTo ; (; const char * ; cs2, . ECaseCompare ; cmp = kExact . ); const. Compare a string to char *cs2. ; Returns returns zero if the two strings are identical, otherwise returns the difference between the first two differing bytes (treated as unsigned char values, so that ‘\200’ is greater than ‘\0’, for example). Zero-length strings are always identical. ; Definition at line 457 of file TString.cxx. ◆ CompareTo() [2/2]. int TString::CompareTo ; (; const TString & ; str, . ECaseCompare ; cmp = kExa",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:679,Security,access,accessed,679,". ROOT: TString Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Static Private Member Functions |; Friends |; List of all members ; TString Class ReferenceCore ROOT classes » Base ROOT classes. ; Basic string class. ; Cannot be stored in a TCollection... use TObjString instead.; The underlying string is stored as a char* that can be accessed via TString::Data(). TString provides Short String Optimization (SSO) so that short strings (<15 on 64-bit and <11 on 32-bit) are contained in the TString internal data structure without the need for mallocing the required space.; Substring operations are provided by the TSubString class, which holds a reference to the original string and its data, along with the offset and length of the substring. To retrieve the substring as a TString, construct a TString from it, eg: root [0] TString s(""hello world""); root [1] TString s2( s(0,5) ); root [2] s2; (class TString)""hello""; hellostd::string hello(std::string who, std::string msg)Definition FunModule.C:5; TStringBasic string class.Definition TString.h:139. Definition at line 139 of file TString.h. Classes; struct  LongStr_t;  ; struct  RawStr_t;  ; struct  Rep_t;  ; struct  ShortStr_t;  ; union  UStr_t;  . Public Types; enum  ECaseCompare { kExact; , kIgnoreCase; };  ; enum  EStripType { kLeading = 0x1; , kTrailing = 0x2; , kBoth = 0x3; };  ; using size_type = Ssiz_t;  . Public Member Functions;  TString ();  TString default ctor. ;  ;  TString (char c);  Initialize a string with a single character. ;  ;  TString (char c, Ssiz_t s);  Initialize the first n locations of a TString with character c. ;  ;  TString (const char *s);  Create TString and",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:4837,Security,hash,hash,4837,"g &pat, ECaseCompare cmp=kExact) const;  ; Bool_t Contains (TPRegexp &pat) const;  ; TString Copy () const;  Copy a string. ;  ; Int_t CountChar (Int_t c) const;  Return number of times character c occurs in the string. ;  ; const char * Data () const;  ; Bool_t EndsWith (const char *pat, ECaseCompare cmp=kExact) const;  Return true if string ends with the specified string. ;  ; Bool_t EqualTo (const char *cs, ECaseCompare cmp=kExact) const;  ; Bool_t EqualTo (const TString &st, ECaseCompare cmp=kExact) const;  ; virtual void FillBuffer (char *&buffer) const;  Copy string into I/O buffer. ;  ; Ssiz_t First (char c) const;  Find first occurrence of a character c. ;  ; Ssiz_t First (const char *cs) const;  Find first occurrence of a character in cs. ;  ; void Form (const char *fmt,...);  Formats a string using a printf style format descriptor. ;  ; Bool_t Gets (FILE *fp, Bool_t chop=kTRUE);  Read one line from the stream, including the \n, or until EOF. ;  ; UInt_t Hash (ECaseCompare cmp=kExact) const;  Return hash value. ;  ; Ssiz_t Index (const char *pat, Ssiz_t i=0, ECaseCompare cmp=kExact) const;  ; Ssiz_t Index (const char *pat, Ssiz_t patlen, Ssiz_t i, ECaseCompare cmp) const;  Search for a string in the TString. ;  ; Ssiz_t Index (const TRegexp &pat, Ssiz_t *ext, Ssiz_t i=0) const;  Find the first occurrence of the regexp in string and return the position, or -1 if there is no match. ;  ; Ssiz_t Index (const TRegexp &pat, Ssiz_t i=0) const;  Find the first occurrence of the regexp in string and return the position, or -1 if there is no match. ;  ; Ssiz_t Index (const TString &s, Ssiz_t i=0, ECaseCompare cmp=kExact) const;  ; Ssiz_t Index (const TString &s, Ssiz_t patlen, Ssiz_t i, ECaseCompare cmp) const;  ; Ssiz_t Index (TPRegexp &pat, Ssiz_t *ext, Ssiz_t i=0) const;  Find the first occurrence of the regexp in string and return the position. ;  ; Ssiz_t Index (TPRegexp &pat, Ssiz_t i=0) const;  Find the first occurrence of the regexp in string and return the p",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:13330,Security,hash,hash,13330," is used to isolate sequential tokens in a TString. ;  ; Bool_t Tokenize (TString &tok, Ssiz_t &from, const char *delim="" "") const;  Search for tokens delimited by regular expression 'delim' (default "" "") in this string; search starts at 'from' and the token is returned in 'tok'. ;  ; void ToLower ();  Change string to lower-case. ;  ; void ToUpper ();  Change string to upper case. ;  ; std::string_view View () const;  . Static Public Member Functions; static TString BaseConvert (const TString &s_in, Int_t base_in, Int_t base_out);  Converts string from base base_in to base base_out. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString Format (const char *fmt,...);  Static method which formats a string using a printf style format descriptor and return a TString. ;  ; static Ssiz_t GetInitialCapacity ();  ; static Ssiz_t GetMaxWaste ();  ; static Ssiz_t GetResizeIncrement ();  ; static UInt_t Hash (const void *txt, Int_t ntxt);  Calculates hash index from any char string. ;  ; static Ssiz_t InitialCapacity (Ssiz_t ic=15);  Set default initial capacity for all TStrings. Default is 15. ;  ; static TString Itoa (Int_t value, Int_t base);  Converts an Int_t to a TString with respect to the base specified (2-36). ;  ; static TString LLtoa (Long64_t value, Int_t base);  Converts a Long64_t to a TString with respect to the base specified (2-36). ;  ; static Ssiz_t MaxWaste (Ssiz_t mw=15);  Set maximum space that may be wasted in a string before doing a resize. ;  ; static TString * ReadString (TBuffer &b, const TClass *clReq);  Read TString object from buffer. ;  ; static Ssiz_t ResizeIncrement (Ssiz_t ri=16);  Set default resize increment for all TStrings. Default is 16. ;  ; static TString UItoa (UInt_t value, Int_t base);  Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ;  ; static TString ULLtoa ",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:16017,Security,hash,hash,16017,"tring and make sure it has a capacity of nc. ;  ; void InitChar (char c);  Initialize a string with a single character. ;  . Static Protected Member Functions; static Ssiz_t AdjustCapacity (Ssiz_t oldCap, Ssiz_t newCap);  Calculate a nice capacity greater than or equal to newCap. ;  ; static Ssiz_t Align (Ssiz_t s);  ; static Ssiz_t Recommend (Ssiz_t s);  . Protected Attributes; Rep_t fRep;  . Private Types; enum  { kShortMask = 0x80; , kLongMask = 0x80000000; };  ; enum  ;  ; enum  { kNwords = sizeof(UStr_t) / sizeof(Ssiz_t); };  . Private Member Functions; void Clone (Ssiz_t nc);  Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ;  ; void FormImp (const char *fmt, va_list ap);  Formats a string using a printf style format descriptor. ;  ; Ssiz_t GetLongCap () const;  ; char * GetLongPointer ();  ; const char * GetLongPointer () const;  ; Ssiz_t GetLongSize () const;  ; char * GetPointer ();  ; const char * GetPointer () const;  ; char * GetShortPointer ();  ; const char * GetShortPointer () const;  ; Ssiz_t GetShortSize () const;  ; UInt_t HashCase () const;  Return a case-sensitive hash value (endian independent). ;  ; UInt_t HashFoldCase () const;  Return a case-insensitive hash value (endian independent). ;  ; char * Init (Ssiz_t capacity, Ssiz_t nchar);  Private member function returning an empty string representation of size capacity and containing nchar characters. ;  ; Bool_t IsLong () const;  ; void SetLongCap (Ssiz_t s);  ; void SetLongPointer (char *p);  ; void SetLongSize (Ssiz_t s);  ; void SetShortSize (Ssiz_t s);  ; void SetSize (Ssiz_t s);  ; void UnLink () const;  ; void Zero ();  . Static Private Member Functions; static Ssiz_t MaxSize ();  . Friends; TString operator+ (char c, const TString &s);  Add string to char. ;  ; TString operator+ (const char *cs, const TString &s);  Use the special concatenation constructor. ;  ; TString operator+ (const TString &s, char c);  Add char to string.",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:16112,Security,hash,hash,16112,"acity greater than or equal to newCap. ;  ; static Ssiz_t Align (Ssiz_t s);  ; static Ssiz_t Recommend (Ssiz_t s);  . Protected Attributes; Rep_t fRep;  . Private Types; enum  { kShortMask = 0x80; , kLongMask = 0x80000000; };  ; enum  ;  ; enum  { kNwords = sizeof(UStr_t) / sizeof(Ssiz_t); };  . Private Member Functions; void Clone (Ssiz_t nc);  Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ;  ; void FormImp (const char *fmt, va_list ap);  Formats a string using a printf style format descriptor. ;  ; Ssiz_t GetLongCap () const;  ; char * GetLongPointer ();  ; const char * GetLongPointer () const;  ; Ssiz_t GetLongSize () const;  ; char * GetPointer ();  ; const char * GetPointer () const;  ; char * GetShortPointer ();  ; const char * GetShortPointer () const;  ; Ssiz_t GetShortSize () const;  ; UInt_t HashCase () const;  Return a case-sensitive hash value (endian independent). ;  ; UInt_t HashFoldCase () const;  Return a case-insensitive hash value (endian independent). ;  ; char * Init (Ssiz_t capacity, Ssiz_t nchar);  Private member function returning an empty string representation of size capacity and containing nchar characters. ;  ; Bool_t IsLong () const;  ; void SetLongCap (Ssiz_t s);  ; void SetLongPointer (char *p);  ; void SetLongSize (Ssiz_t s);  ; void SetShortSize (Ssiz_t s);  ; void SetSize (Ssiz_t s);  ; void UnLink () const;  ; void Zero ();  . Static Private Member Functions; static Ssiz_t MaxSize ();  . Friends; TString operator+ (char c, const TString &s);  Add string to char. ;  ; TString operator+ (const char *cs, const TString &s);  Use the special concatenation constructor. ;  ; TString operator+ (const TString &s, char c);  Add char to string. ;  ; TString operator+ (const TString &s, const char *cs);  Use the special concatenation constructor. ;  ; TString operator+ (const TString &s1, const TString &s2);  Use the special concatenation constructor. ;  ; template<class T > ; std::",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:33619,Security,hash,hash,33619,"er() [2/2]. const char * TString::GetPointer ; (; ); const. inlineprivate . Definition at line 257 of file TString.h. ◆ GetResizeIncrement(). Ssiz_t TString::GetResizeIncrement ; (; ). static . Definition at line 1576 of file TString.cxx. ◆ Gets(). Bool_t TString::Gets ; (; FILE * ; fp, . Bool_t ; chop = kTRUE . ). Read one line from the stream, including the \n, or until EOF. ; Remove the trailing [\r]\n if chop is true. Returns kTRUE if data was read. ; Definition at line 204 of file Stringio.cxx. ◆ GetShortPointer() [1/2]. char * TString::GetShortPointer ; (; ). inlineprivate . Definition at line 254 of file TString.h. ◆ GetShortPointer() [2/2]. const char * TString::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:33856,Security,hash,hash,33856,", . Bool_t ; chop = kTRUE . ). Read one line from the stream, including the \n, or until EOF. ; Remove the trailing [\r]\n if chop is true. Returns kTRUE if data was read. ; Definition at line 204 of file Stringio.cxx. ◆ GetShortPointer() [1/2]. char * TString::GetShortPointer ; (; ). inlineprivate . Definition at line 254 of file TString.h. ◆ GetShortPointer() [2/2]. const char * TString::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Pl",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:33956,Security,hash,hashes,33956,", . Bool_t ; chop = kTRUE . ). Read one line from the stream, including the \n, or until EOF. ; Remove the trailing [\r]\n if chop is true. Returns kTRUE if data was read. ; Definition at line 204 of file Stringio.cxx. ◆ GetShortPointer() [1/2]. char * TString::GetShortPointer ; (; ). inlineprivate . Definition at line 254 of file TString.h. ◆ GetShortPointer() [2/2]. const char * TString::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Pl",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:34157,Security,hash,hash,34157,"]. char * TString::GetShortPointer ; (; ). inlineprivate . Definition at line 254 of file TString.h. ◆ GetShortPointer() [2/2]. const char * TString::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Plen is the length of pattern, startIndex is the index from which to start and cmp selects the type of case-comparison. ; Definition at line 901 of file TString.cxx. ◆ Index() [3/8]. Ssiz_t TString::Index ; (; const TRegexp & ; r, . Ssiz_t * ; ex",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:34303,Security,hash,hash,34303,"::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Plen is the length of pattern, startIndex is the index from which to start and cmp selects the type of case-comparison. ; Definition at line 901 of file TString.cxx. ◆ Index() [3/8]. Ssiz_t TString::Index ; (; const TRegexp & ; r, . Ssiz_t * ; extent, . Ssiz_t ; start = 0 . ); const. Find the first occurrence of the regexp in string and return the position, or -1 if there is no match. ; Exte",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:34480,Security,hash,hash,34480,"ion at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Plen is the length of pattern, startIndex is the index from which to start and cmp selects the type of case-comparison. ; Definition at line 901 of file TString.cxx. ◆ Index() [3/8]. Ssiz_t TString::Index ; (; const TRegexp & ; r, . Ssiz_t * ; extent, . Ssiz_t ; start = 0 . ); const. Find the first occurrence of the regexp in string and return the position, or -1 if there is no match. ; Extent is length of the matched string and start is the offset at which the matching should start. Please, see the Warning in the class documentation above. ; Definition at line 26",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTString.html:33917,Usability,simpl,simple,33917,", . Bool_t ; chop = kTRUE . ). Read one line from the stream, including the \n, or until EOF. ; Remove the trailing [\r]\n if chop is true. Returns kTRUE if data was read. ; Definition at line 204 of file Stringio.cxx. ◆ GetShortPointer() [1/2]. char * TString::GetShortPointer ; (; ). inlineprivate . Definition at line 254 of file TString.h. ◆ GetShortPointer() [2/2]. const char * TString::GetShortPointer ; (; ); const. inlineprivate . Definition at line 255 of file TString.h. ◆ GetShortSize(). Ssiz_t TString::GetShortSize ; (; ); const. inlineprivate . Definition at line 244 of file TString.h. ◆ Hash() [1/2]. UInt_t TString::Hash ; (; const void * ; txt, . Int_t ; ntxt . ). static . Calculates hash index from any char string. ; (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/ . Definition at line 850 of file TString.cxx. ◆ Hash() [2/2]. UInt_t TString::Hash ; (; ECaseCompare ; cmp = kExact); const. Return hash value. ; Definition at line 677 of file TString.cxx. ◆ HashCase(). UInt_t TString::HashCase ; (; ); const. private . Return a case-sensitive hash value (endian independent). ; Definition at line 633 of file TString.cxx. ◆ HashFoldCase(). UInt_t TString::HashFoldCase ; (; ); const. private . Return a case-insensitive hash value (endian independent). ; Definition at line 662 of file TString.cxx. ◆ Index() [1/8]. Ssiz_t TString::Index ; (; const char * ; pat, . Ssiz_t ; i = 0, . ECaseCompare ; cmp = kExact . ); const. inline . Definition at line 651 of file TString.h. ◆ Index() [2/8]. Ssiz_t TString::Index ; (; const char * ; pattern, . Ssiz_t ; plen, . Ssiz_t ; startIndex, . ECaseCompare ; cmp . ); const. Search for a string in the TString. ; Pl",MatchSource.WIKI,doc/master/classTString.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTString.html
https://root.cern/doc/master/classTStructNode.html:5965,Availability,error,error,5965,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:6054,Availability,error,error,6054,"gs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:6209,Availability,error,error,6209,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:6506,Availability,error,error,6506,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:10962,Availability,error,error,10962," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetScaleBy (EScalingType type);  Sets scaling by to ""type"". ;  ;  Static Public Member Functions inherited from TObject; static TClass *",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:2239,Energy Efficiency,allocate,allocated,2239,"ns maximum number of objects displayed when the node is top node on scene. ;  ; TList * GetMembers () const;  Returns list with pointers to daughter nodes. ;  ; ULong_t GetMembersCount () const;  Returns numbers of members of node. ;  ; Float_t GetMiddle () const;  Returns center of outlining box on y-axis. ;  ; const char * GetName () const override;  Returns name of object. ;  ; ENodeType GetNodeType () const;  Returns type of node. ;  ; TStructNode * GetParent () const;  Returns pointer to parent node. ;  ; void * GetPointer () const;  Returns main pointer. ;  ; ULong_t GetRelativeMembersCount () const;  Returns relative numbers of members. ;  ; ULong_t GetRelativeSize () const;  Returns relative size of node. ;  ; ULong_t GetRelativeVolume () const;  Returns size or number of members. ;  ; Float_t GetRelativeVolumeRatio ();  Returns ratio - relative volume to area taken by utlining box. ;  ; ULong_t GetSize () const;  Returns size of node. ;  ; ULong_t GetTotalSize () const;  Returns total size of allocated memory in bytes. ;  ; TString GetTypeName () const;  Returns name of class. ;  ; ULong_t GetVolume () const;  Returns size or number of members. ;  ; Float_t GetVolumeRatio ();  Returns ratio - volme of node to area taken by outlining box. ;  ; Float_t GetWidth () const;  Returns width of outlining box. ;  ; Float_t GetX () const;  Returns X coordinate. ;  ; Float_t GetY () const;  Returns Y coordinate. ;  ; TClass * IsA () const override;  ; Bool_t IsCollapsed () const;  Returns true if node is colllapsed. ;  ; Bool_t IsSortable () const override;  Returns true, because we have overrided method Compare. ;  ; bool IsVisible () const;  Returns true if node is visible. ;  ; void SetAllMembersCount (ULong_t count);  Sets numbers of all members to ""number"". ;  ; void SetCollapsed (Bool_t collapsed);  Sets collapsing of node to ""collapse"". ;  ; void SetHeight (Float_t h);  Sets width of outlining box to ""w"". ;  ; void SetMaxLevel (UInt_t level);  Sets maximum numb",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:3815,Energy Efficiency,allocate,allocated,3815,"eturns true, because we have overrided method Compare. ;  ; bool IsVisible () const;  Returns true if node is visible. ;  ; void SetAllMembersCount (ULong_t count);  Sets numbers of all members to ""number"". ;  ; void SetCollapsed (Bool_t collapsed);  Sets collapsing of node to ""collapse"". ;  ; void SetHeight (Float_t h);  Sets width of outlining box to ""w"". ;  ; void SetMaxLevel (UInt_t level);  Sets maximum number of leves displayed when the node is top node on scene. ;  ; void SetMaxObjects (UInt_t max);  Sets maximum number of objects displayed when the node is top node on scene. ;  ; void SetMembers (TList *list);  Sets list of dauther nodes to ""list"". ;  ; void SetMembersCount (ULong_t count);  Sets number of members to ""number"". ;  ; void SetNodeType (ENodeType type);  Sets type of node to ""type"". ;  ; void SetPointer (void *pointer);  Sets main pointer to ""pointer"". ;  ; void SetSize (ULong_t size);  Sets size of node to ""size"". ;  ; void SetTotalSize (ULong_t size);  Sets total size of allocated memory in bytes to value ""size"". ;  ; void SetVisible (bool visible);  Sets visibility of node to ""visible"". ;  ; void SetWidth (Float_t w);  Sets width of outlining box to ""w"". ;  ; void SetX (Float_t x);  Sets X coordinate to ""x"". ;  ; void SetY (Float_t y);  Sets Y coordinate to ""y"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t ",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:18965,Energy Efficiency,allocate,allocated,18965,"n returns size of node and dauthers, otherwise returns size of node only. ; Definition at line 212 of file TStructNode.cxx. ◆ GetRelativeVolume(). ULong_t TStructNode::GetRelativeVolume ; (; ); const. Returns size or number of members. ; If ScaleBy is set to kMembers and node is collapsed, then it returns all number of members. If node isn't collapsed it returns number of members. If Scaleby is set to kSize and node is collapsed, then it returns total size of node and daughters, else it returns size of node, otherwise it returns 0. ; Definition at line 226 of file TStructNode.cxx. ◆ GetRelativeVolumeRatio(). Float_t TStructNode::GetRelativeVolumeRatio ; (; ). Returns ratio - relative volume to area taken by utlining box. ; Definition at line 248 of file TStructNode.cxx. ◆ GetSize(). ULong_t TStructNode::GetSize ; (; ); const. Returns size of node. ; Definition at line 256 of file TStructNode.cxx. ◆ GetTotalSize(). ULong_t TStructNode::GetTotalSize ; (; ); const. Returns total size of allocated memory in bytes. ; Definition at line 264 of file TStructNode.cxx. ◆ GetTypeName(). TString TStructNode::GetTypeName ; (; ); const. Returns name of class. ; Definition at line 272 of file TStructNode.cxx. ◆ GetVolume(). ULong_t TStructNode::GetVolume ; (; ); const. Returns size or number of members. ; If ScaleBy is set to kMembers it returns all number of members. If Scaleby is set to kSize then it returns total size of node and daughters, otherwise it returns 0. ; Definition at line 281 of file TStructNode.cxx. ◆ GetVolumeRatio(). Float_t TStructNode::GetVolumeRatio ; (; ). Returns ratio - volme of node to area taken by outlining box. ; Definition at line 296 of file TStructNode.cxx. ◆ GetWidth(). Float_t TStructNode::GetWidth ; (; ); const. Returns width of outlining box. ; Definition at line 304 of file TStructNode.cxx. ◆ GetX(). Float_t TStructNode::GetX ; (; ); const. Returns X coordinate. ; Definition at line 312 of file TStructNode.cxx. ◆ GetY(). Float_t TStructNode::Get",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:22640,Energy Efficiency,allocate,allocated,22640,"d TStructNode::SetMembers ; (; TList * ; list). Sets list of dauther nodes to ""list"". ; Definition at line 392 of file TStructNode.cxx. ◆ SetMembersCount(). void TStructNode::SetMembersCount ; (; ULong_t ; count). Sets number of members to ""number"". ; Definition at line 400 of file TStructNode.cxx. ◆ SetNodeType(). void TStructNode::SetNodeType ; (; ENodeType ; type). Sets type of node to ""type"". ; Definition at line 408 of file TStructNode.cxx. ◆ SetPointer(). void TStructNode::SetPointer ; (; void * ; pointer). Sets main pointer to ""pointer"". ; Definition at line 416 of file TStructNode.cxx. ◆ SetScaleBy(). void TStructNode::SetScaleBy ; (; EScalingType ; type). static . Sets scaling by to ""type"". ; Definition at line 424 of file TStructNode.cxx. ◆ SetSize(). void TStructNode::SetSize ; (; ULong_t ; size). Sets size of node to ""size"". ; Definition at line 432 of file TStructNode.cxx. ◆ SetTotalSize(). void TStructNode::SetTotalSize ; (; ULong_t ; size). Sets total size of allocated memory in bytes to value ""size"". ; Definition at line 440 of file TStructNode.cxx. ◆ SetVisible(). void TStructNode::SetVisible ; (; bool ; visible). Sets visibility of node to ""visible"". ; Definition at line 448 of file TStructNode.cxx. ◆ SetWidth(). void TStructNode::SetWidth ; (; Float_t ; w). Sets width of outlining box to ""w"". ; Definition at line 456 of file TStructNode.cxx. ◆ SetX(). void TStructNode::SetX ; (; Float_t ; x). Sets X coordinate to ""x"". ; Definition at line 464 of file TStructNode.cxx. ◆ SetY(). void TStructNode::SetY ; (; Float_t ; y). Sets Y coordinate to ""y"". ; Definition at line 472 of file TStructNode.cxx. ◆ Streamer(). void TStructNode::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TStructNode::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 108 of file TStructNode.h. Member Data Documentation. ◆ fAllMembersCount. ULong_t",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:5971,Integrability,message,message,5971,"  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:6512,Integrability,message,message,6512,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:7645,Integrability,message,message,7645,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:10968,Integrability,message,message,10968," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetScaleBy (EScalingType type);  Sets scaling by to ""type"". ;  ;  Static Public Member Functions inherited from TObject; static TClass *",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:11341,Integrability,message,message,11341," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetScaleBy (EScalingType type);  Sets scaling by to ""type"". ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (B",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:4285,Modifiability,inherit,inherited,4285,"ode on scene. ;  ; void SetMaxObjects (UInt_t max);  Sets maximum number of objects displayed when the node is top node on scene. ;  ; void SetMembers (TList *list);  Sets list of dauther nodes to ""list"". ;  ; void SetMembersCount (ULong_t count);  Sets number of members to ""number"". ;  ; void SetNodeType (ENodeType type);  Sets type of node to ""type"". ;  ; void SetPointer (void *pointer);  Sets main pointer to ""pointer"". ;  ; void SetSize (ULong_t size);  Sets size of node to ""size"". ;  ; void SetTotalSize (ULong_t size);  Sets total size of allocated memory in bytes to value ""size"". ;  ; void SetVisible (bool visible);  Sets visibility of node to ""visible"". ;  ; void SetWidth (Float_t w);  Sets width of outlining box to ""w"". ;  ; void SetX (Float_t x);  Sets X coordinate to ""x"". ;  ; void SetY (Float_t y);  Sets Y coordinate to ""y"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  ",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:5601,Modifiability,inherit,inheritance,5601,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:7743,Modifiability,inherit,inherits,7743,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against goo",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:7860,Modifiability,inherit,inherits,7860," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessa",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:11919,Modifiability,inherit,inherited,11919,"t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetScaleBy (EScalingType type);  Sets scaling by to ""type"". ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; ULong_t fAllMembersCount;  ; Bool_t fCollapsed;  ; Float_t fHeight;  ; UInt_t fLevel;  ; UInt_t fMaxLevel;  ; UInt_t fMaxObjects;  ; TList * fMembers;  ; ULong_t fMembersCount;  ; TString fName;  ; ENodeType fNodeType;  ; TStructNode * fParent;  ; void * fPointer;  ; ULong_t fSize;  ; ULong_t fTotalSize;  ; TString fTypeName;  ; Bool_t fVisible;  ; Float_t fWidth;  ; Float_t fX;  ; Float_t fY;  . Static Private Attributes; static EScalingType fgScalBy = kMembers;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x020",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:12940,Modifiability,inherit,inherited,12940," ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; ULong_t fAllMembersCount;  ; Bool_t fCollapsed;  ; Float_t fHeight;  ; UInt_t fLevel;  ; UInt_t fMaxLevel;  ; UInt_t fMaxObjects;  ; TList * fMembers;  ; ULong_t fMembersCount;  ; TString fName;  ; ENodeType fNodeType;  ; TStructNode * fParent;  ; void * fPointer;  ; ULong_t fSize;  ; ULong_t fTotalSize;  ; TString fTypeName;  ; Bool_t fVisible;  ; Float_t fWidth;  ; Float_t fX;  ; Float_t fY;  . Static Private Attributes; static EScalingType fgScalBy = kMembers;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructNode.h>. Inheritance diagram for TStructNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:13581,Modifiability,inherit,inherited,13581,"ong_t fSize;  ; ULong_t fTotalSize;  ; TString fTypeName;  ; Bool_t fVisible;  ; Float_t fWidth;  ; Float_t fX;  ; Float_t fY;  . Static Private Attributes; static EScalingType fgScalBy = kMembers;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructNode.h>. Inheritance diagram for TStructNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructNode(). TStructNode::TStructNode ; (; TString ; name, . TString ; typeName, . void * ; pointer, . TStructNode * ; parent, . ULong_t ; size, . ENodeType ; type . ). Constructs node with name ""name"" of class ""typeName"" and given parent ""parent"" which represents pointer ""pointer"". ; Size of node is set to ""size"" and type is set to ""type"" ; Definition at line 37 of file TStructNode.cxx. ◆ ~TStructNode(). TStructNode::~TStructNode ; (; ). override . Destructs list of nodes. ; Definition at line 63 of file TStructNode.cxx. Member Function Documentation. ◆ Class(). static TClass * TStructNode::Class ; (; ). static . Returns",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:13680,Modifiability,inherit,inherited,13680,"ong_t fSize;  ; ULong_t fTotalSize;  ; TString fTypeName;  ; Bool_t fVisible;  ; Float_t fWidth;  ; Float_t fX;  ; Float_t fY;  . Static Private Attributes; static EScalingType fgScalBy = kMembers;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructNode.h>. Inheritance diagram for TStructNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructNode(). TStructNode::TStructNode ; (; TString ; name, . TString ; typeName, . void * ; pointer, . TStructNode * ; parent, . ULong_t ; size, . ENodeType ; type . ). Constructs node with name ""name"" of class ""typeName"" and given parent ""parent"" which represents pointer ""pointer"". ; Size of node is set to ""size"" and type is set to ""type"" ; Definition at line 37 of file TStructNode.cxx. ◆ ~TStructNode(). TStructNode::~TStructNode ; (; ). override . Destructs list of nodes. ; Definition at line 63 of file TStructNode.cxx. Member Function Documentation. ◆ Class(). static TClass * TStructNode::Class ; (; ). static . Returns",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNode.html:7374,Security,hash,hash,7374,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTStructNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNode.html
https://root.cern/doc/master/classTStructNodeProperty.html:4435,Availability,error,error,4435,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:4524,Availability,error,error,4524,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:4679,Availability,error,error,4679,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:4976,Availability,error,error,4976,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:9060,Availability,error,error,9060,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:4441,Integrability,message,message,4441,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:4982,Integrability,message,message,4982,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:5972,Integrability,message,message,5972,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:9066,Integrability,message,message,9066,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:9439,Integrability,message,message,9439," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:1475,Modifiability,inherit,inherited,1475,"me"" with color ""color"". ;  ;  TStructNodeProperty (const char *name, Pixel_t pixel);  Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""pixel"". ;  ;  ~TStructNodeProperty () override;  Destructor. ;  ; Int_t Compare (const TObject *obj) const override;  Overrided method. Compare two objects of TStructNodeProperty class. ;  ; TColor GetColor () const;  Returns color of class. ;  ; Pixel_t GetPixel () const;  Return color in Pixel_t format. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  Retruns true, because we have overrided method Compare. ;  ; void SetColor (const TColor &color);  Sets the color to ""color"". ;  ; void SetColor (Int_t color);  Sets the color to ""color"". ;  ; void SetColor (Pixel_t pixel);  Sets the color to ""pixel"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  P",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:2978,Modifiability,inherit,inherited,2978,"t override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:4071,Modifiability,inherit,inheritance,4071,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:6070,Modifiability,inherit,inherits,6070,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:6187,Modifiability,inherit,inherits,6187,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:9940,Modifiability,inherit,inherited,9940,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TColor fColor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:10150,Modifiability,inherit,inherited,10150,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TColor fColor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:10718,Modifiability,inherit,inherited,10718,"; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TColor fColor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStructNodeProperty.h>. Inheritance diagram for ",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:11359,Modifiability,inherit,inherited,11359," void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TColor fColor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStructNodeProperty.h>. Inheritance diagram for TStructNodeProperty:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructNodeProperty() [1/2]. TStructNodeProperty::TStructNodeProperty ; (; const char * ; name, . Int_t ; color . ). Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""color"". ; Definition at line 32 of file TStructNodeProperty.cxx. ◆ TStructNodeProperty() [2/2]. TStructNodeProperty::TStructNodeProperty ; (; const char * ; name, . Pixel_t ; pixel . ). Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""pixel"". ; Definition at line 41 of file TStructNodeProperty.",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:11458,Modifiability,inherit,inherited,11458," void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TColor fColor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStructNodeProperty.h>. Inheritance diagram for TStructNodeProperty:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructNodeProperty() [1/2]. TStructNodeProperty::TStructNodeProperty ; (; const char * ; name, . Int_t ; color . ). Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""color"". ; Definition at line 32 of file TStructNodeProperty.cxx. ◆ TStructNodeProperty() [2/2]. TStructNodeProperty::TStructNodeProperty ; (; const char * ; name, . Pixel_t ; pixel . ). Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""pixel"". ; Definition at line 41 of file TStructNodeProperty.",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:11663,Modifiability,inherit,inherited,11663,"or;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStructNodeProperty.h>. Inheritance diagram for TStructNodeProperty:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructNodeProperty() [1/2]. TStructNodeProperty::TStructNodeProperty ; (; const char * ; name, . Int_t ; color . ). Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""color"". ; Definition at line 32 of file TStructNodeProperty.cxx. ◆ TStructNodeProperty() [2/2]. TStructNodeProperty::TStructNodeProperty ; (; const char * ; name, . Pixel_t ; pixel . ). Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""pixel"". ; Definition at line 41 of file TStructNodeProperty.cxx. ◆ ~TStructNodeProperty(). TStructNodeProperty::~TStructNodeProperty ; (; ). override . Destructor. ; Definition at line 50 of file TStructNodeProperty.cxx. Member Function Documentation. ◆",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructNodeProperty.html:2258,Security,hash,hash,2258," SetColor (Pixel_t pixel);  Sets the color to ""pixel"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method th",MatchSource.WIKI,doc/master/classTStructNodeProperty.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html
https://root.cern/doc/master/classTStructViewer.html:3457,Availability,error,error,3457,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:3546,Availability,error,error,3546,"longs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:3701,Availability,error,error,3701,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:3998,Availability,error,error,3998,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:8562,Availability,error,error,8562," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:10198,Energy Efficiency,allocate,allocated,10198,"ect to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddNode (TStructNode *node, ULong_t size);  Find list with nodes on specified level and add node to this list and increment list of sizes and list of members. ;  ; void CountMembers (TClass *cl, TStructNode *parent, void *pointer);  Count allocated memory, increase member counters, find child nodes. ;  ; void Prepare ();  Create top node and find all member nodes. ;  ; void Reset ();  Deleting nodes, maps and array. ;  . Private Attributes; TList fColors;  ; TStructViewerGUI * fGUI;  ; TObjArray fLevelArray;  ; TExMap fLevelMembersCount;  ; TExMap fLevelSize;  ; void * fPointer;  ; TClass * fPointerClass;  ; TExMap fPointers;  ; TStructNode * fTopNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannot",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:13077,Energy Efficiency,allocate,allocated,13077,"er::~TStructViewer ; (; ). override . Destructor. Clean all object after closing the viewer. ; Definition at line 87 of file TStructViewer.cxx. Member Function Documentation. ◆ AddNode(). void TStructViewer::AddNode ; (; TStructNode * ; node, . ULong_t ; size . ). private . Find list with nodes on specified level and add node to this list and increment list of sizes and list of members. ; Definition at line 97 of file TStructViewer.cxx. ◆ Class(). static TClass * TStructViewer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TStructViewer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TStructViewer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 62 of file TStructViewer.h. ◆ CountMembers(). void TStructViewer::CountMembers ; (; TClass * ; cl, . TStructNode * ; parent, . void * ; pointer . ). private . Count allocated memory, increase member counters, find child nodes. ; Definition at line 115 of file TStructViewer.cxx. ◆ DeclFileName(). static const char * TStructViewer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 62 of file TStructViewer.h. ◆ Draw(). void TStructViewer::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw object if there is valid pointer. ; Reimplemented from TObject.; Definition at line 342 of file TStructViewer.cxx. ◆ GetCanvas(). TCanvas * TStructViewer::GetCanvas ; (; ). Returns canvas used to keep TGeoVolumes. ; Definition at line 362 of file TStructViewer.cxx. ◆ GetColor(). TColor TStructViewer::GetColor ; (; const char * ; typeName). Returns color associated with type ""typeName"". ; Definition at line 503 of file TStructViewer.cxx. ◆ GetFrame(). TGMainFrame * TStructViewer::GetFrame ; (; ). Returns pointer to main window. ; Definition at line 370 of file TStructViewer.cxx. ◆ GetLevelMembersCount(). TExMap TStructVie",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:3463,Integrability,message,message,3463,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:4004,Integrability,message,message,4004,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:5206,Integrability,message,message,5206,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:8568,Integrability,message,message,8568," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:8941,Integrability,message,message,8941," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:1780,Modifiability,inherit,inherited,1780,");  Returns canvas used to keep TGeoVolumes. ;  ; TColor GetColor (const char *typeName);  Returns color associated with type ""typeName"". ;  ; TGMainFrame * GetFrame ();  Returns pointer to main window. ;  ; TExMap GetLevelMembersCount () const;  Returns TExMap with pairs <level number, number of objects> ;  ; TExMap GetLevelSize () const;  Returns TExMap with pairs <level number, size of level in bytes> ;  ; Bool_t GetLinksVisibility () const;  Get visibility of links between objects. ;  ; void * GetPointer () const;  Return main pointer. ;  ; TClass * IsA () const override;  ; void SetColor (TString name, Int_t color);  Sets color for the class ""name"" to color ""color"". ;  ; void SetLinksVisibility (Bool_t val);  ISets links visibility. ;  ; void SetPointer (void *ptr, const char *clname=nullptr);  Set main pointer of class ""clname"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:3093,Modifiability,inherit,inheritance,3093," ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:5304,Modifiability,inherit,inherits,5304,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:5421,Modifiability,inherit,inherits,5421,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:9442,Modifiability,inherit,inherited,9442,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddNode (TStructNode *node, ULong_t size);  Find list with nodes on specified level and add node to this list and increment list of sizes and list of members. ;  ; void CountMembers (TClass *cl, TStructNode *parent, void *pointer);  Count allocated memory, increase member counters, find child nodes. ;  ; void Prepare ();  Create top node and find all member nodes. ;  ; void Reset ();  Deleting nodes, maps and array. ;  . Private Attributes; TList fColors;  ; TStructViewerGUI * fGUI;  ; TOb",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:10667,Modifiability,inherit,inherited,10667,"tus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddNode (TStructNode *node, ULong_t size);  Find list with nodes on specified level and add node to this list and increment list of sizes and list of members. ;  ; void CountMembers (TClass *cl, TStructNode *parent, void *pointer);  Count allocated memory, increase member counters, find child nodes. ;  ; void Prepare ();  Create top node and find all member nodes. ;  ; void Reset ();  Deleting nodes, maps and array. ;  . Private Attributes; TList fColors;  ; TStructViewerGUI * fGUI;  ; TObjArray fLevelArray;  ; TExMap fLevelMembersCount;  ; TExMap fLevelSize;  ; void * fPointer;  ; TClass * fPointerClass;  ; TExMap fPointers;  ; TStructNode * fTopNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructViewer.h>. Inheritance diagram for TStructViewer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:11308,Modifiability,inherit,inherited,11308,"TStructViewerGUI * fGUI;  ; TObjArray fLevelArray;  ; TExMap fLevelMembersCount;  ; TExMap fLevelSize;  ; void * fPointer;  ; TClass * fPointerClass;  ; TExMap fPointers;  ; TStructNode * fTopNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructViewer.h>. Inheritance diagram for TStructViewer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewer(). TStructViewer::TStructViewer ; (; void * ; ptr = nullptr, . const char * ; clname = nullptr . ). Default constructor. An argument ""ptr"" is a main pointer of type ""clname"", which should be shown in the viewer. ; Definition at line 69 of file TStructViewer.cxx. ◆ ~TStructViewer(). TStructViewer::~TStructViewer ; (; ). override . Destructor. Clean all object after closing the viewer. ; Definition at line 87 of file TStructViewer.cxx. Member Function Documentation. ◆ AddNode(). void TStructViewer::AddNode ; (; TStructNode * ; node, . ULong_t ; size . ). private . Find list with nodes on specified level and ",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:11407,Modifiability,inherit,inherited,11407,"TStructViewerGUI * fGUI;  ; TObjArray fLevelArray;  ; TExMap fLevelMembersCount;  ; TExMap fLevelSize;  ; void * fPointer;  ; TClass * fPointerClass;  ; TExMap fPointers;  ; TStructNode * fTopNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructViewer.h>. Inheritance diagram for TStructViewer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewer(). TStructViewer::TStructViewer ; (; void * ; ptr = nullptr, . const char * ; clname = nullptr . ). Default constructor. An argument ""ptr"" is a main pointer of type ""clname"", which should be shown in the viewer. ; Definition at line 69 of file TStructViewer.cxx. ◆ ~TStructViewer(). TStructViewer::~TStructViewer ; (; ). override . Destructor. Clean all object after closing the viewer. ; Definition at line 87 of file TStructViewer.cxx. Member Function Documentation. ◆ AddNode(). void TStructViewer::AddNode ; (; TStructNode * ; node, . ULong_t ; size . ). private . Find list with nodes on specified level and ",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewer.html:4935,Security,hash,hash,4935," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTStructViewer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewer.html
https://root.cern/doc/master/classTStructViewerGUI.html:19044,Availability,error,error,19044,"u don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:19133,Availability,error,error,19133,"pend graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:19288,Availability,error,error,19288,"ash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:19585,Availability,error,error,19585,");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:23116,Availability,error,error,23116,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:36635,Availability,mask,mask,36635," fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:2207,Deployability,update,updates,2207,"* GetCanvas ();  ; Int_t GetColor (TStructNode *node);  Returns color form fColors for given ""node"". ;  ; TStructNodeProperty * GetDefaultColor ();  Return default color for nodes. ;  ; Bool_t GetLinksVisibility () const;  Returns true if links are visible, otherwise return false. ;  ; TStructNode * GetNodePtr () const;  Returns top node pointer. ;  ; void GLWidgetProcessedEventSlot (Event_t *event);  Handle events. Sets fMouseX and fMouseY when user move a mouse over viewer and hides ToolTip. ;  ; void LevelDistValueSetSlot (Long_t dist);  Emmited when user changes distance between levels. ;  ; void MouseOverSlot (TGLPhysicalShape *shape);  MouseOver slot. ;  ; void RedoButtonSlot ();  Activated when user click Redo button. Repeat last Undo action. ;  ; void ResetButtonSlot ();  Resets camera. ;  ; void ScaleByChangedSlot ();  Activated when user press radio button. ;  ; void SetLinksVisibility (Bool_t val);  Sets links visibility to ""visible"". ;  ; void SetNodePtr (TStructNode *val);  Sets top node pointer and updates view. ;  ; void SetPointerButtonSlot ();  Sets pointer given in fPointerTestEntry to the main pointer. ;  ; void ShowLinksToggled (Bool_t on);  Changes links visibility and refresh view. ;  ; void UndoButtonSlot ();  UndoButton Slot. Activated when user press Undo button. Restore last top node pointer. ;  ; void Update (Bool_t resetCamera=false);  Updates view. Clear all the nodes, call draw function and update scene. Doesn't reset camera. ;  ; void UpdateButtonSlot ();  Update button slot. Updates scene. ;  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() s",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:2623,Deployability,update,update,2623,"useX and fMouseY when user move a mouse over viewer and hides ToolTip. ;  ; void LevelDistValueSetSlot (Long_t dist);  Emmited when user changes distance between levels. ;  ; void MouseOverSlot (TGLPhysicalShape *shape);  MouseOver slot. ;  ; void RedoButtonSlot ();  Activated when user click Redo button. Repeat last Undo action. ;  ; void ResetButtonSlot ();  Resets camera. ;  ; void ScaleByChangedSlot ();  Activated when user press radio button. ;  ; void SetLinksVisibility (Bool_t val);  Sets links visibility to ""visible"". ;  ; void SetNodePtr (TStructNode *val);  Sets top node pointer and updates view. ;  ; void SetPointerButtonSlot ();  Sets pointer given in fPointerTestEntry to the main pointer. ;  ; void ShowLinksToggled (Bool_t on);  Changes links visibility and refresh view. ;  ; void UndoButtonSlot ();  UndoButton Slot. Activated when user press Undo button. Restore last top node pointer. ;  ; void Update (Bool_t resetCamera=false);  Updates view. Clear all the nodes, call draw function and update scene. Doesn't reset camera. ;  ; void UpdateButtonSlot ();  Update button slot. Updates scene. ;  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:41372,Deployability,update,updates,41372,"s can be displayed on scene. Hides redendant nodes. ; Definition at line 290 of file TStructViewerGUI.cxx. ◆ ClassDefOverride(). TStructViewerGUI::ClassDefOverride ; (; TStructViewerGUI ; , . 0 ;  . ). ◆ CloseWindow(). void TStructViewerGUI::CloseWindow ; (; ). overridevirtual . Delete window. ; Reimplemented from TGMainFrame.; Definition at line 334 of file TStructViewerGUI.cxx. ◆ ColorSelectedSlot(). void TStructViewerGUI::ColorSelectedSlot ; (; Pixel_t ; pixel). Slot for default color selsect. ; Sets default colot to ""pixel"" ; Definition at line 343 of file TStructViewerGUI.cxx. ◆ Divide(). void TStructViewerGUI::Divide ; (; TList * ; list, . Float_t ; x1, . Float_t ; x2, . Float_t ; y1, . Float_t ; y2 . ). private . Divides rectangle where the outlining box is placed. ; Definition at line 355 of file TStructViewerGUI.cxx. ◆ DoubleClickedSlot(). void TStructViewerGUI::DoubleClickedSlot ; (; ). Activated when user double click on objects on 3D scene. ; Sets clicked node to top node and updates scene with camers reset. ; Definition at line 413 of file TStructViewerGUI.cxx. ◆ Draw(). void TStructViewerGUI::Draw ; (; Option_t * ; option = """"). overridevirtual . Check limits and draws nodes and links. ; Reimplemented from TObject.; Definition at line 430 of file TStructViewerGUI.cxx. ◆ DrawLink(). void TStructViewerGUI::DrawLink ; (; TStructNode * ; parent). private . Recursive method to draw links. ; Definition at line 448 of file TStructViewerGUI.cxx. ◆ DrawNode(). void TStructViewerGUI::DrawNode ; (; TStructNode * ; node). private . Creates and draws TGeoVolume from given ""node"". ; Definition at line 478 of file TStructViewerGUI.cxx. ◆ DrawVolumes(). void TStructViewerGUI::DrawVolumes ; (; TStructNode * ; visObj). private . Recursive method to draw GeoVolumes. ; Definition at line 532 of file TStructViewerGUI.cxx. ◆ FindNodeProperty(). TStructNodeProperty * TStructViewerGUI::FindNodeProperty ; (; TStructNode * ; node). private . Returns pointer to property associate",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:43950,Deployability,update,updates,43950,"nksVisibility(). Bool_t TStructViewerGUI::GetLinksVisibility ; (; ); const. Returns true if links are visible, otherwise return false. ; Definition at line 610 of file TStructViewerGUI.cxx. ◆ GetNodePtr(). TStructNode * TStructViewerGUI::GetNodePtr ; (; ); const. Returns top node pointer. ; Definition at line 622 of file TStructViewerGUI.cxx. ◆ GLWidgetProcessedEventSlot(). void TStructViewerGUI::GLWidgetProcessedEventSlot ; (; Event_t * ; event). Handle events. Sets fMouseX and fMouseY when user move a mouse over viewer and hides ToolTip. ; Definition at line 630 of file TStructViewerGUI.cxx. ◆ LevelDistValueSetSlot(). void TStructViewerGUI::LevelDistValueSetSlot ; (; Long_t ; dist). Emmited when user changes distance between levels. ; Definition at line 654 of file TStructViewerGUI.cxx. ◆ MouseOverSlot(). void TStructViewerGUI::MouseOverSlot ; (; TGLPhysicalShape * ; shape). MouseOver slot. ; Activated when user out mouse over object on scene. Sets ToolTip and updates labels ; Definition at line 665 of file TStructViewerGUI.cxx. ◆ RedoButtonSlot(). void TStructViewerGUI::RedoButtonSlot ; (; ). Activated when user click Redo button. Repeat last Undo action. ; Definition at line 691 of file TStructViewerGUI.cxx. ◆ ResetButtonSlot(). void TStructViewerGUI::ResetButtonSlot ; (; ). Resets camera. ; Definition at line 707 of file TStructViewerGUI.cxx. ◆ Scale(). void TStructViewerGUI::Scale ; (; TStructNode * ; parent). private . Recursive method to scaling all modes on scene. ; We have to scale nodes to get real ratio between nodes. Uses fMaxRatio. ; Definition at line 717 of file TStructViewerGUI.cxx. ◆ ScaleByChangedSlot(). void TStructViewerGUI::ScaleByChangedSlot ; (; ). Activated when user press radio button. ; Definition at line 889 of file TStructViewerGUI.cxx. ◆ SetLinksVisibility(). void TStructViewerGUI::SetLinksVisibility ; (; Bool_t ; val). Sets links visibility to ""visible"". ; Definition at line 767 of file TStructViewerGUI.cxx. ◆ SetNodePtr(). void TStruct",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:45049,Deployability,update,updates,45049,"id TStructViewerGUI::RedoButtonSlot ; (; ). Activated when user click Redo button. Repeat last Undo action. ; Definition at line 691 of file TStructViewerGUI.cxx. ◆ ResetButtonSlot(). void TStructViewerGUI::ResetButtonSlot ; (; ). Resets camera. ; Definition at line 707 of file TStructViewerGUI.cxx. ◆ Scale(). void TStructViewerGUI::Scale ; (; TStructNode * ; parent). private . Recursive method to scaling all modes on scene. ; We have to scale nodes to get real ratio between nodes. Uses fMaxRatio. ; Definition at line 717 of file TStructViewerGUI.cxx. ◆ ScaleByChangedSlot(). void TStructViewerGUI::ScaleByChangedSlot ; (; ). Activated when user press radio button. ; Definition at line 889 of file TStructViewerGUI.cxx. ◆ SetLinksVisibility(). void TStructViewerGUI::SetLinksVisibility ; (; Bool_t ; val). Sets links visibility to ""visible"". ; Definition at line 767 of file TStructViewerGUI.cxx. ◆ SetNodePtr(). void TStructViewerGUI::SetNodePtr ; (; TStructNode * ; val). Sets top node pointer and updates view. ; Definition at line 758 of file TStructViewerGUI.cxx. ◆ SetPointerButtonSlot(). void TStructViewerGUI::SetPointerButtonSlot ; (; ). Sets pointer given in fPointerTestEntry to the main pointer. ; Definition at line 779 of file TStructViewerGUI.cxx. ◆ ShowLinksToggled(). void TStructViewerGUI::ShowLinksToggled ; (; Bool_t ; on). Changes links visibility and refresh view. ; Definition at line 788 of file TStructViewerGUI.cxx. ◆ UnCheckMaxObjects(). void TStructViewerGUI::UnCheckMaxObjects ; (; ). private . Shows hidden nodes. ; Definition at line 798 of file TStructViewerGUI.cxx. ◆ UndoButtonSlot(). void TStructViewerGUI::UndoButtonSlot ; (; ). UndoButton Slot. Activated when user press Undo button. Restore last top node pointer. ; Definition at line 873 of file TStructViewerGUI.cxx. ◆ Update(). void TStructViewerGUI::Update ; (; Bool_t ; resetCamera = false). Updates view. Clear all the nodes, call draw function and update scene. Doesn't reset camera. ; Definition a",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:45992,Deployability,update,update,45992,"ewerGUI::SetNodePtr ; (; TStructNode * ; val). Sets top node pointer and updates view. ; Definition at line 758 of file TStructViewerGUI.cxx. ◆ SetPointerButtonSlot(). void TStructViewerGUI::SetPointerButtonSlot ; (; ). Sets pointer given in fPointerTestEntry to the main pointer. ; Definition at line 779 of file TStructViewerGUI.cxx. ◆ ShowLinksToggled(). void TStructViewerGUI::ShowLinksToggled ; (; Bool_t ; on). Changes links visibility and refresh view. ; Definition at line 788 of file TStructViewerGUI.cxx. ◆ UnCheckMaxObjects(). void TStructViewerGUI::UnCheckMaxObjects ; (; ). private . Shows hidden nodes. ; Definition at line 798 of file TStructViewerGUI.cxx. ◆ UndoButtonSlot(). void TStructViewerGUI::UndoButtonSlot ; (; ). UndoButton Slot. Activated when user press Undo button. Restore last top node pointer. ; Definition at line 873 of file TStructViewerGUI.cxx. ◆ Update(). void TStructViewerGUI::Update ; (; Bool_t ; resetCamera = false). Updates view. Clear all the nodes, call draw function and update scene. Doesn't reset camera. ; Definition at line 814 of file TStructViewerGUI.cxx. ◆ UpdateButtonSlot(). void TStructViewerGUI::UpdateButtonSlot ; (; ). Update button slot. Updates scene. ; Definition at line 840 of file TStructViewerGUI.cxx. ◆ UpdateLabels(). void TStructViewerGUI::UpdateLabels ; (; TStructNode * ; node). private . Refresh information in labels when user put mouse over object. ; Definition at line 848 of file TStructViewerGUI.cxx. Member Data Documentation. ◆ fAllMembersCountLabel. TGLabel* TStructViewerGUI::fAllMembersCountLabel. private . Definition at line 64 of file TStructViewerGUI.h. ◆ fAutoRefesh. TGCheckButton* TStructViewerGUI::fAutoRefesh. private . Definition at line 76 of file TStructViewerGUI.h. ◆ fBoxHeightEntry. TGNumberEntry* TStructViewerGUI::fBoxHeightEntry. private . Definition at line 75 of file TStructViewerGUI.h. ◆ fCanvas. TCanvas* TStructViewerGUI::fCanvas. private . Definition at line 57 of file TStructViewerGUI.h. ◆ fC",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:4073,Integrability,message,messages,4073,"const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHints (UInt_t &wmin, UInt_t &hmin, UInt_t &wmax, UInt_t &hmax, UInt_t &winc, UInt_t &hinc) const;  ; EInitialState GetWMState () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events. ;  ; Bool_t HandleClientMessage (Event_t *event) override;  Handle client messages sent to this frame. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard events. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle primary selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle selection request event. ;  ; TClass * IsA () const override;  ; virtual void RemoveBind (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Remove key binding. ;  ; virtual Bool_t SaveFrameAsCodeOrImage ();  Opens dialog window allowing user to save the frame contents as a ROOT macro or as an image. ;  ; virtual Bool_t SaveFrameAsCodeOrImage (const TString &fileName);  Saves the frame contents as a ROOT macro or as an image, depending on the extension of the fileName argument. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a main frame widget as a C++ statement(s) on output stream out. ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:4852,Integrability,depend,depending,4852,"hmin, UInt_t &wmax, UInt_t &hmax, UInt_t &winc, UInt_t &hinc) const;  ; EInitialState GetWMState () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events. ;  ; Bool_t HandleClientMessage (Event_t *event) override;  Handle client messages sent to this frame. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard events. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle primary selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle selection request event. ;  ; TClass * IsA () const override;  ; virtual void RemoveBind (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Remove key binding. ;  ; virtual Bool_t SaveFrameAsCodeOrImage ();  Opens dialog window allowing user to save the frame contents as a ROOT macro or as an image. ;  ; virtual Bool_t SaveFrameAsCodeOrImage (const TString &fileName);  Saves the frame contents as a ROOT macro or as an image, depending on the extension of the fileName argument. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a main frame widget as a C++ statement(s) on output stream out. ;  ; virtual void SaveSource (const char *filename=""Rootappl.C"", Option_t *option="""");  Save the GUI main frame widget in a C++ macro file. ;  ; virtual void SendCloseMessage ();  Send close message to self. ;  ; void SetClassHints (const char *className, const char *resourceName);  Set the windows class and resource name. ;  ; void SetIconName (const char *name);  Set window icon name. This is typically done via the window manager. ;  ; void SetIconPixmap (char **xpm_array);  Set window icon by xpm array. ;  ; const TGPicture * SetIconPixmap (const char *iconName);  Set window icon pixmap by name. ;  ; void SetMWMHints (UInt_t value, UInt_t funcs, UInt_t input);  Set decoration style for MWM-compatible wm (mwm, ncdwm, fvwm?). ;  ; void SetWindowName (co",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:5241,Integrability,message,message,5241,"ide;  Handle mouse motion events. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle primary selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle selection request event. ;  ; TClass * IsA () const override;  ; virtual void RemoveBind (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Remove key binding. ;  ; virtual Bool_t SaveFrameAsCodeOrImage ();  Opens dialog window allowing user to save the frame contents as a ROOT macro or as an image. ;  ; virtual Bool_t SaveFrameAsCodeOrImage (const TString &fileName);  Saves the frame contents as a ROOT macro or as an image, depending on the extension of the fileName argument. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a main frame widget as a C++ statement(s) on output stream out. ;  ; virtual void SaveSource (const char *filename=""Rootappl.C"", Option_t *option="""");  Save the GUI main frame widget in a C++ macro file. ;  ; virtual void SendCloseMessage ();  Send close message to self. ;  ; void SetClassHints (const char *className, const char *resourceName);  Set the windows class and resource name. ;  ; void SetIconName (const char *name);  Set window icon name. This is typically done via the window manager. ;  ; void SetIconPixmap (char **xpm_array);  Set window icon by xpm array. ;  ; const TGPicture * SetIconPixmap (const char *iconName);  Set window icon pixmap by name. ;  ; void SetMWMHints (UInt_t value, UInt_t funcs, UInt_t input);  Set decoration style for MWM-compatible wm (mwm, ncdwm, fvwm?). ;  ; void SetWindowName (const char *name=nullptr) override;  Set window name. This is typically done via the window manager. ;  ; void SetWMPosition (Int_t x, Int_t y);  Give the window manager a window position hint. ;  ; void SetWMSize (UInt_t w, UInt_t h);  Give the window manager a window size hint. ;  ; void SetWMSizeHints (UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc);  Give the window manager ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:14305,Integrability,message,message,14305,"ow () override;  map window ;  ; void Move (Int_t x, Int_t y) override;  Move frame. ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w=0, UInt_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; voi",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:19050,Integrability,message,message,19050,"u don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:19591,Integrability,message,message,19591,");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:20469,Integrability,message,message,20469,"esponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:23122,Integrability,message,message,23122,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:23495,Integrability,message,message,23495," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:2756,Modifiability,inherit,inherited,2756," *shape);  MouseOver slot. ;  ; void RedoButtonSlot ();  Activated when user click Redo button. Repeat last Undo action. ;  ; void ResetButtonSlot ();  Resets camera. ;  ; void ScaleByChangedSlot ();  Activated when user press radio button. ;  ; void SetLinksVisibility (Bool_t val);  Sets links visibility to ""visible"". ;  ; void SetNodePtr (TStructNode *val);  Sets top node pointer and updates view. ;  ; void SetPointerButtonSlot ();  Sets pointer given in fPointerTestEntry to the main pointer. ;  ; void ShowLinksToggled (Bool_t on);  Changes links visibility and refresh view. ;  ; void UndoButtonSlot ();  UndoButton Slot. Activated when user press Undo button. Restore last top node pointer. ;  ; void Update (Bool_t resetCamera=false);  Updates view. Clear all the nodes, call draw function and update scene. Doesn't reset camera. ;  ; void UpdateButtonSlot ();  Update button slot. Updates scene. ;  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHints (UInt_t &wmin, UInt_t &hmin, ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:6546,Modifiability,inherit,inherited,6546,"ixmap (const char *iconName);  Set window icon pixmap by name. ;  ; void SetMWMHints (UInt_t value, UInt_t funcs, UInt_t input);  Set decoration style for MWM-compatible wm (mwm, ncdwm, fvwm?). ;  ; void SetWindowName (const char *name=nullptr) override;  Set window name. This is typically done via the window manager. ;  ; void SetWMPosition (Int_t x, Int_t y);  Give the window manager a window position hint. ;  ; void SetWMSize (UInt_t w, UInt_t h);  Give the window manager a window size hint. ;  ; void SetWMSizeHints (UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc);  Give the window manager minimum and maximum size hints. ;  ; void SetWMState (EInitialState state);  Set the initial state of the window. Either kNormalState or kIconicState. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:10460,Modifiability,inherit,inherited,10460,"(std::ostream &out, Option_t *option="""");  Auxiliary protected method used to save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:11327,Modifiability,inherit,inheritance,11327,"es (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:15328,Modifiability,inherit,inherited,15328,"ser color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; v",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:17032,Modifiability,inherit,inherited,17032,"Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:17767,Modifiability,inherit,inherited,17767," void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:20567,Modifiability,inherit,inherits,20567,"d, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:20684,Modifiability,inherit,inherits,20684,"const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:23802,Modifiability,inherit,inherited,23802,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:27921,Modifiability,inherit,inherited,27921,"fMembersCountLabel;  ; UInt_t fMouseX;  ; UInt_t fMouseY;  ; TGLabel * fNodeNameLabel;  ; TStructNode * fNodePtr;  ; TGLabel * fNodeTypelabel;  ; TStructViewer * fParent;  ; TGTextEntry * fPointerTextEntry;  ; TGTextEntry * fPointerTypeTextEntry;  ; TGTextButton * fRedoButton;  ; TList fRedoList;  ; TGRadioButton * fScaleByMembersButton;  ; TGRadioButton * fScaleBySizeButton;  ; TStructNode * fSelectedObject;  ; TGCheckButton * fShowLinksCheckButton;  ; TGLabel * fSizeLabel;  ; TGToolTip * fToolTip;  ; TGeoVolume * fTopVolume;  ; TGLabel * fTotalSizeLabel;  ; TGTextButton * fUndoButton;  ; TList fUndoList;  ; TList fVisibleObjects;  ; TExMap fVolumes;  . Static Private Attributes; static UInt_t fgCounter = 0;  ; static TGeoMedium * fgMedium = nullptr;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGMainFrame; s",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:28428,Modifiability,inherit,inherited,28428,"caleBySizeButton;  ; TStructNode * fSelectedObject;  ; TGCheckButton * fShowLinksCheckButton;  ; TGLabel * fSizeLabel;  ; TGToolTip * fToolTip;  ; TGeoVolume * fTopVolume;  ; TGLabel * fTotalSizeLabel;  ; TGTextButton * fUndoButton;  ; TList fUndoList;  ; TList fVisibleObjects;  ; TExMap fVolumes;  . Static Private Attributes; static UInt_t fgCounter = 0;  ; static TGeoMedium * fgMedium = nullptr;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFil",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:29084,Modifiability,inherit,inherited,29084,";  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inhe",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:29299,Modifiability,inherit,inherited,29299,";  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inhe",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:29519,Modifiability,inherit,inherited,29519,";  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inhe",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:30405,Modifiability,inherit,inherited,30405,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:30715,Modifiability,inherit,inherited,30715,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:30927,Modifiability,inherit,inherited,30927,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:31445,Modifiability,inherit,inherited,31445," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:32605,Modifiability,inherit,inherited,32605,"er, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:32699,Modifiability,inherit,inherited,32699,"er, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:32794,Modifiability,inherit,inherited,32794,"er, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:32893,Modifiability,inherit,inherited,32893,"er, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:33135,Modifiability,inherit,inherited,33135,"er, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:33629,Modifiability,inherit,inherited,33629,"m  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:33793,Modifiability,inherit,inherited,33793,"m  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:33893,Modifiability,inherit,inherited,33893,"m  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:34104,Modifiability,inherit,inherited,34104,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Prot",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:34217,Modifiability,inherit,inherited,34217,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Prot",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:34343,Modifiability,inherit,inherited,34343," const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:35192,Modifiability,inherit,inherited,35192,"GFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;  ; UInt_t fWMHeight;  WM height. ;  ; UInt_t fWMHeightInc;  WM height increments. ;  ; EInitialState fWMInitState;  WM initial state. ;  ; UInt_t fWMMaxHeight;  WM max height. ;  ; UInt_t fWMMaxWidth;  WM max width. ;  ; UInt_t fWMMinHeight;  WM min height. ;  ; UInt_t fWMMinWidth;  WM min width. ;  ; UInt_t fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:36115,Modifiability,inherit,inherited,36115,"dles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;  ; UInt_t fWMHeight;  WM height. ;  ; UInt_t fWMHeightInc;  WM height increments. ;  ; EInitialState fWMInitState;  WM initial state. ;  ; UInt_t fWMMaxHeight;  WM max height. ;  ; UInt_t fWMMaxWidth;  WM max width. ;  ; UInt_t fWMMinHeight;  WM min height. ;  ; UInt_t fWMMinWidth;  WM min width. ;  ; UInt_t fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:36439,Modifiability,inherit,inherited,36439,"dles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;  ; UInt_t fWMHeight;  WM height. ;  ; UInt_t fWMHeightInc;  WM height increments. ;  ; EInitialState fWMInitState;  WM initial state. ;  ; UInt_t fWMMaxHeight;  WM max height. ;  ; UInt_t fWMMaxWidth;  WM max width. ;  ; UInt_t fWMMinHeight;  WM min height. ;  ; UInt_t fWMMinWidth;  WM min width. ;  ; UInt_t fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:37071,Modifiability,inherit,inherited,37071," fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:37348,Modifiability,inherit,inherited,37348,"eanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUse",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:37500,Modifiability,inherit,inherited,37500,"ditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TStructViewerGUI.h>. Inheritance diagram for TStructViewerGUI:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewerGUI(). TStructViewerGUI::TStructViewerGUI ; (; TStructViewer * ; parent, . TStructNode * ; nodePtr, . TList * ; colors, . const TGWindow * ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:37713,Modifiability,inherit,inherited,37713,"ditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TStructViewerGUI.h>. Inheritance diagram for TStructViewerGUI:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewerGUI(). TStructViewerGUI::TStructViewerGUI ; (; TStructViewer * ; parent, . TStructNode * ; nodePtr, . TList * ; colors, . const TGWindow * ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:37827,Modifiability,inherit,inherited,37827,"ditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TStructViewerGUI.h>. Inheritance diagram for TStructViewerGUI:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewerGUI(). TStructViewerGUI::TStructViewerGUI ; (; TStructViewer * ; parent, . TStructNode * ; nodePtr, . TList * ; colors, . const TGWindow * ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:38496,Modifiability,inherit,inherited,38496,"ditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TStructViewerGUI.h>. Inheritance diagram for TStructViewerGUI:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewerGUI(). TStructViewerGUI::TStructViewerGUI ; (; TStructViewer * ; parent, . TStructNode * ; nodePtr, . TList * ; colors, . const TGWindow * ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:38628,Modifiability,inherit,inherited,38628,"ditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TStructViewerGUI.h>. Inheritance diagram for TStructViewerGUI:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructViewerGUI(). TStructViewerGUI::TStructViewerGUI ; (; TStructViewer * ; parent, . TStructNode * ; nodePtr, . TList * ; colors, . const TGWindow * ; ",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStructViewerGUI.html:17263,Security,hash,hash,17263,"TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTStructViewerGUI.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html
https://root.cern/doc/master/classTStyle-members.html:1759,Availability,error,error,1759,"overrideTStylevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TStyleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTStylevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EPaperSize enum nameTStyle; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fAttDateTStyleprivate; fAxisMaxDigitsTStyleprivate; fBarOffsetTStyleprivate; fBarWidthTStyleprivate; fBitsTObjectprivate; fCandleBoxRangeTStyleprivate; fCandleScaledTStyleprivate; fCandleWhiskerRangeTStyleprivate; fCanvasBorderModeTStyleprivate; fCanvasBorderSizeTStyleprivate; fCanvasColorTStyleprivate; fCanvasDefHTStyleprivate; fCanvasDefWTStyleprivate; fCanvasDefXTStyleprivate; fCanvasDefYTStyleprivate; fCanvasPreferGLTStyleprivate; fCapLinePSTStyleprivate; fColorModelPSTStyleprivate; fDateXTStyleprivate; fDateYTStyleprivate; fDrawBorderTStyleprivate; fEndErrorSizeTStyleprivate; fErrorXTStyleprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFitFormatTStyleprivate; fFrameBorderModeTStyleprivate; fFrameBorderSizeTStyleprivate; fFrameFillColorTStyleprivate; fFrameFillStyleTStyleprivat",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle-members.html:1840,Availability,error,error,1840,"overrideTStylevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TStyleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTStylevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EPaperSize enum nameTStyle; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fAttDateTStyleprivate; fAxisMaxDigitsTStyleprivate; fBarOffsetTStyleprivate; fBarWidthTStyleprivate; fBitsTObjectprivate; fCandleBoxRangeTStyleprivate; fCandleScaledTStyleprivate; fCandleWhiskerRangeTStyleprivate; fCanvasBorderModeTStyleprivate; fCanvasBorderSizeTStyleprivate; fCanvasColorTStyleprivate; fCanvasDefHTStyleprivate; fCanvasDefWTStyleprivate; fCanvasDefXTStyleprivate; fCanvasDefYTStyleprivate; fCanvasPreferGLTStyleprivate; fCapLinePSTStyleprivate; fColorModelPSTStyleprivate; fDateXTStyleprivate; fDateYTStyleprivate; fDrawBorderTStyleprivate; fEndErrorSizeTStyleprivate; fErrorXTStyleprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFitFormatTStyleprivate; fFrameBorderModeTStyleprivate; fFrameBorderSizeTStyleprivate; fFrameFillColorTStyleprivate; fFrameFillStyleTStyleprivat",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle-members.html:16049,Availability,error,errorx,16049,"SetAxisColor(Color_t color=1, Option_t *axis=""X"")TStyle; SetAxisMaxDigits(Int_t maxd=5)TStyle; SetBarOffset(Float_t baroff=0.5)TStyleinline; SetBarWidth(Float_t barwidth=0.5)TStyleinline; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetCandleBoxRange(Double_t bRange=0.5)TStyle; SetCandleScaled(Bool_t on=kFALSE)TStyleinline; SetCandleWhiskerRange(Double_t wRange=1.0)TStyle; SetCanvasBorderMode(Int_t mode=1)TStyleinline; SetCanvasBorderSize(Width_t size=1)TStyleinline; SetCanvasColor(Color_t color=19)TStyleinline; SetCanvasDefH(Int_t h=500)TStyleinline; SetCanvasDefW(Int_t w=700)TStyleinline; SetCanvasDefX(Int_t topx=10)TStyleinline; SetCanvasDefY(Int_t topy=10)TStyleinline; SetCanvasPreferGL(Bool_t prefer=kTRUE)TStyleinline; SetCapLinePS(Int_t capline=0)TStyleinline; SetColorModelPS(Int_t c=0)TStyle; SetDateX(Float_t x=0.01)TStyleinline; SetDateY(Float_t y=0.01)TStyleinline; SetDrawBorder(Int_t drawborder=1)TStyleinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEndErrorSize(Float_t np=2)TStyle; SetErrorX(Float_t errorx=0.5)TStyleinline; SetExponentOffset(Float_t xoff=0., Float_t yoff=0., Option_t *axis=""XY"")TStyle; SetFillAttributes()TAttFillvirtual; SetFillColor(Color_t fcolor)TAttFillinlinevirtual; SetFillColorAlpha(Color_t fcolor, Float_t falpha)TAttFillvirtual; SetFillStyle(Style_t fstyle)TAttFillinlinevirtual; SetFitFormat(const char *format=""5.4g"")TStyleinline; SetFrameBorderMode(Int_t mode=1)TStyleinline; SetFrameBorderSize(Width_t size=1)TStyleinline; SetFrameFillColor(Color_t color=1)TStyleinline; SetFrameFillStyle(Style_t styl=0)TStyleinline; SetFrameLineColor(Color_t color=1)TStyleinline; SetFrameLineStyle(Style_t styl=0)TStyleinline; SetFrameLineWidth(Width_t width=1)TStyleinline; SetFuncColor(Color_t color=1)TStyleinline; SetFuncStyle(Style_t style=1)TStyleinline; SetFuncWidth(Width_t width=4)TStyleinline; SetGridColor(Color_t color=0)TStyleinline; SetGridStyle(Style_t style=3)TStylei",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle-members.html:185,Modifiability,inherit,inherited,185,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStyle Member List. This is the complete list of members for TStyle, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AxisChoice(Option_t *axis) constTStyle; Browse(TBrowser *b) overrideTStylevirtual; BuildStyles()TStylestatic; cd()TStylevirtual; CheckedHash()TObjectinline; Class()TStylestatic; Class_Name()TStylestatic; Class_Version()TStyleinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &style) const overrideTStylevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TStyleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTStylevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EPaperSize enum nameTStyle; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual;",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle-members.html:19096,Testability,log,logx,19096,"t size=0.04, Option_t *axis=""X"")TStyle; SetLegendBorderSize(Width_t size=4)TStyleinline; SetLegendFillColor(Color_t color=0)TStyleinline; SetLegendFillStyle(Style_t style=1001)TStyleinline; SetLegendFont(Style_t font=62)TStyleinline; SetLegendTextSize(Double_t size=0.)TStyleinline; SetLegoInnerR(Float_t rad=0.5)TStyleinline; SetLineAttributes()TAttLinevirtual; SetLineColor(Color_t lcolor)TAttLineinlinevirtual; SetLineColorAlpha(Color_t lcolor, Float_t lalpha)TAttLinevirtual; SetLineScalePS(Float_t scale=3)TStyleinline; SetLineStyle(Style_t lstyle)TAttLineinlinevirtual; SetLineStyleString(Int_t i, const char *text)TStyle; SetLineWidth(Width_t lwidth)TAttLineinlinevirtual; SetMarkerAttributes()TAttMarkervirtual; SetMarkerColor(Color_t mcolor=1)TAttMarkerinlinevirtual; SetMarkerColorAlpha(Color_t mcolor, Float_t malpha)TAttMarkervirtual; SetMarkerSize(Size_t msize=1)TAttMarkerinlinevirtual; SetMarkerStyle(Style_t mstyle=1)TAttMarkerinlinevirtual; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetNdivisions(Int_t n=510, Option_t *axis=""X"")TStyle; SetNumberContours(Int_t number=20)TStyle; SetObjectStat(Bool_t stat)TObjectstatic; SetOptDate(Int_t datefl=1)TStyle; SetOptFile(Int_t file=1)TStyleinline; SetOptFit(Int_t fit=1)TStyle; SetOptLogx(Int_t logx=1)TStyleinline; SetOptLogy(Int_t logy=1)TStyleinline; SetOptLogz(Int_t logz=1)TStyleinline; SetOptStat(Int_t stat=1)TStyle; SetOptStat(Option_t *stat)TStyle; SetOptTitle(Int_t tit=1)TStyleinline; SetOrthoCamera(Bool_t on=kTRUE)TStyleinline; SetPadBorderMode(Int_t mode=1)TStyleinline; SetPadBorderSize(Width_t size=1)TStyleinline; SetPadBottomMargin(Float_t margin=0.1)TStyleinline; SetPadColor(Color_t color=19)TStyleinline; SetPadGridX(Bool_t gridx)TStyleinline; SetPadGridY(Bool_t gridy)TStyleinline; SetPadLeftMargin(Float_t margin=0.1)TStyleinline; SetPadRightMargin(Float_t margin=0.1)TStyleinline; SetPadTickX(Int_t tickx)TStyleinline; SetPadTickY(Int_t ticky)TStyleinlin",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle-members.html:19134,Testability,log,logy,19134,"t size=0.04, Option_t *axis=""X"")TStyle; SetLegendBorderSize(Width_t size=4)TStyleinline; SetLegendFillColor(Color_t color=0)TStyleinline; SetLegendFillStyle(Style_t style=1001)TStyleinline; SetLegendFont(Style_t font=62)TStyleinline; SetLegendTextSize(Double_t size=0.)TStyleinline; SetLegoInnerR(Float_t rad=0.5)TStyleinline; SetLineAttributes()TAttLinevirtual; SetLineColor(Color_t lcolor)TAttLineinlinevirtual; SetLineColorAlpha(Color_t lcolor, Float_t lalpha)TAttLinevirtual; SetLineScalePS(Float_t scale=3)TStyleinline; SetLineStyle(Style_t lstyle)TAttLineinlinevirtual; SetLineStyleString(Int_t i, const char *text)TStyle; SetLineWidth(Width_t lwidth)TAttLineinlinevirtual; SetMarkerAttributes()TAttMarkervirtual; SetMarkerColor(Color_t mcolor=1)TAttMarkerinlinevirtual; SetMarkerColorAlpha(Color_t mcolor, Float_t malpha)TAttMarkervirtual; SetMarkerSize(Size_t msize=1)TAttMarkerinlinevirtual; SetMarkerStyle(Style_t mstyle=1)TAttMarkerinlinevirtual; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetNdivisions(Int_t n=510, Option_t *axis=""X"")TStyle; SetNumberContours(Int_t number=20)TStyle; SetObjectStat(Bool_t stat)TObjectstatic; SetOptDate(Int_t datefl=1)TStyle; SetOptFile(Int_t file=1)TStyleinline; SetOptFit(Int_t fit=1)TStyle; SetOptLogx(Int_t logx=1)TStyleinline; SetOptLogy(Int_t logy=1)TStyleinline; SetOptLogz(Int_t logz=1)TStyleinline; SetOptStat(Int_t stat=1)TStyle; SetOptStat(Option_t *stat)TStyle; SetOptTitle(Int_t tit=1)TStyleinline; SetOrthoCamera(Bool_t on=kTRUE)TStyleinline; SetPadBorderMode(Int_t mode=1)TStyleinline; SetPadBorderSize(Width_t size=1)TStyleinline; SetPadBottomMargin(Float_t margin=0.1)TStyleinline; SetPadColor(Color_t color=19)TStyleinline; SetPadGridX(Bool_t gridx)TStyleinline; SetPadGridY(Bool_t gridy)TStyleinline; SetPadLeftMargin(Float_t margin=0.1)TStyleinline; SetPadRightMargin(Float_t margin=0.1)TStyleinline; SetPadTickX(Int_t tickx)TStyleinline; SetPadTickY(Int_t ticky)TStyleinlin",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle-members.html:19172,Testability,log,logz,19172,"t size=0.04, Option_t *axis=""X"")TStyle; SetLegendBorderSize(Width_t size=4)TStyleinline; SetLegendFillColor(Color_t color=0)TStyleinline; SetLegendFillStyle(Style_t style=1001)TStyleinline; SetLegendFont(Style_t font=62)TStyleinline; SetLegendTextSize(Double_t size=0.)TStyleinline; SetLegoInnerR(Float_t rad=0.5)TStyleinline; SetLineAttributes()TAttLinevirtual; SetLineColor(Color_t lcolor)TAttLineinlinevirtual; SetLineColorAlpha(Color_t lcolor, Float_t lalpha)TAttLinevirtual; SetLineScalePS(Float_t scale=3)TStyleinline; SetLineStyle(Style_t lstyle)TAttLineinlinevirtual; SetLineStyleString(Int_t i, const char *text)TStyle; SetLineWidth(Width_t lwidth)TAttLineinlinevirtual; SetMarkerAttributes()TAttMarkervirtual; SetMarkerColor(Color_t mcolor=1)TAttMarkerinlinevirtual; SetMarkerColorAlpha(Color_t mcolor, Float_t malpha)TAttMarkervirtual; SetMarkerSize(Size_t msize=1)TAttMarkerinlinevirtual; SetMarkerStyle(Style_t mstyle=1)TAttMarkerinlinevirtual; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetNdivisions(Int_t n=510, Option_t *axis=""X"")TStyle; SetNumberContours(Int_t number=20)TStyle; SetObjectStat(Bool_t stat)TObjectstatic; SetOptDate(Int_t datefl=1)TStyle; SetOptFile(Int_t file=1)TStyleinline; SetOptFit(Int_t fit=1)TStyle; SetOptLogx(Int_t logx=1)TStyleinline; SetOptLogy(Int_t logy=1)TStyleinline; SetOptLogz(Int_t logz=1)TStyleinline; SetOptStat(Int_t stat=1)TStyle; SetOptStat(Option_t *stat)TStyle; SetOptTitle(Int_t tit=1)TStyleinline; SetOrthoCamera(Bool_t on=kTRUE)TStyleinline; SetPadBorderMode(Int_t mode=1)TStyleinline; SetPadBorderSize(Width_t size=1)TStyleinline; SetPadBottomMargin(Float_t margin=0.1)TStyleinline; SetPadColor(Color_t color=19)TStyleinline; SetPadGridX(Bool_t gridx)TStyleinline; SetPadGridY(Bool_t gridy)TStyleinline; SetPadLeftMargin(Float_t margin=0.1)TStyleinline; SetPadRightMargin(Float_t margin=0.1)TStyleinline; SetPadTickX(Int_t tickx)TStyleinline; SetPadTickY(Int_t ticky)TStyleinlin",MatchSource.WIKI,doc/master/classTStyle-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle-members.html
https://root.cern/doc/master/classTStyle.html:12982,Availability,error,error,12982,"given fraction of the distribution. ;  ; void SetCandleScaled (Bool_t on=kFALSE);  ; void SetCandleWhiskerRange (Double_t wRange=1.0);  By setting whisker-range for candle plot, one can force the whiskers to cover the fraction of the distribution. ;  ; void SetCanvasBorderMode (Int_t mode=1);  ; void SetCanvasBorderSize (Width_t size=1);  ; void SetCanvasColor (Color_t color=19);  ; void SetCanvasDefH (Int_t h=500);  ; void SetCanvasDefW (Int_t w=700);  ; void SetCanvasDefX (Int_t topx=10);  ; void SetCanvasDefY (Int_t topy=10);  ; void SetCanvasPreferGL (Bool_t prefer=kTRUE);  ; void SetCapLinePS (Int_t capline=0);  Set the line cap method used for PostScript, PDF and SVG output. See TPostScript::SetLineCap for details. ;  ; void SetColorModelPS (Int_t c=0);  Define the color model used by TPostScript and TPDF (RGB or CMYK). ;  ; void SetDateX (Float_t x=0.01);  ; void SetDateY (Float_t y=0.01);  ; void SetDrawBorder (Int_t drawborder=1);  ; void SetEndErrorSize (Float_t np=2);  Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors). ;  ; void SetErrorX (Float_t errorx=0.5);  ; void SetExponentOffset (Float_t xoff=0., Float_t yoff=0., Option_t *axis=""XY"");  Method set X and Y offset of the axis 10^n notation. ;  ; void SetFitFormat (const char *format=""5.4g"");  ; void SetFrameBorderMode (Int_t mode=1);  ; void SetFrameBorderSize (Width_t size=1);  ; void SetFrameFillColor (Color_t color=1);  ; void SetFrameFillStyle (Style_t styl=0);  ; void SetFrameLineColor (Color_t color=1);  ; void SetFrameLineStyle (Style_t styl=0);  ; void SetFrameLineWidth (Width_t width=1);  ; void SetFuncColor (Color_t color=1);  ; void SetFuncStyle (Style_t style=1);  ; void SetFuncWidth (Width_t width=4);  ; void SetGridColor (Color_t color=0);  ; void SetGridStyle (Style_t style=3);  ; void SetGridWidth (Width_t width=1);  ; void SetHatchesLineWidth (Int_t l);  ; void SetHatchesSpacing (Double_t h);  ; void SetHeaderPS (const char *header);  ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:13045,Availability,error,errorx,13045,"uble_t wRange=1.0);  By setting whisker-range for candle plot, one can force the whiskers to cover the fraction of the distribution. ;  ; void SetCanvasBorderMode (Int_t mode=1);  ; void SetCanvasBorderSize (Width_t size=1);  ; void SetCanvasColor (Color_t color=19);  ; void SetCanvasDefH (Int_t h=500);  ; void SetCanvasDefW (Int_t w=700);  ; void SetCanvasDefX (Int_t topx=10);  ; void SetCanvasDefY (Int_t topy=10);  ; void SetCanvasPreferGL (Bool_t prefer=kTRUE);  ; void SetCapLinePS (Int_t capline=0);  Set the line cap method used for PostScript, PDF and SVG output. See TPostScript::SetLineCap for details. ;  ; void SetColorModelPS (Int_t c=0);  Define the color model used by TPostScript and TPDF (RGB or CMYK). ;  ; void SetDateX (Float_t x=0.01);  ; void SetDateY (Float_t y=0.01);  ; void SetDrawBorder (Int_t drawborder=1);  ; void SetEndErrorSize (Float_t np=2);  Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors). ;  ; void SetErrorX (Float_t errorx=0.5);  ; void SetExponentOffset (Float_t xoff=0., Float_t yoff=0., Option_t *axis=""XY"");  Method set X and Y offset of the axis 10^n notation. ;  ; void SetFitFormat (const char *format=""5.4g"");  ; void SetFrameBorderMode (Int_t mode=1);  ; void SetFrameBorderSize (Width_t size=1);  ; void SetFrameFillColor (Color_t color=1);  ; void SetFrameFillStyle (Style_t styl=0);  ; void SetFrameLineColor (Color_t color=1);  ; void SetFrameLineStyle (Style_t styl=0);  ; void SetFrameLineWidth (Width_t width=1);  ; void SetFuncColor (Color_t color=1);  ; void SetFuncStyle (Style_t style=1);  ; void SetFuncWidth (Width_t width=4);  ; void SetGridColor (Color_t color=0);  ; void SetGridStyle (Style_t style=3);  ; void SetGridWidth (Width_t width=1);  ; void SetHatchesLineWidth (Int_t l);  ; void SetHatchesSpacing (Double_t h);  ; void SetHeaderPS (const char *header);  Define a string to be inserted in the Postscript header. ;  ; void SetHistFillColor (Color_t color=1);  ; void SetH",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:22201,Availability,error,error,22201,"plement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:22290,Availability,error,error,22290,"AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:22445,Availability,error,error,22445,"/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:22742,Availability,error,error,22742,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:26575,Availability,error,error,26575,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:36887,Availability,error,error,36887,"which is covered by the box (0 < x < 1), default 0.5. ;  ; Bool_t fCandleScaled;  Candle plot, shall the box-width be scaled to each other by the integral of a box? ;  ; Double_t fCandleWhiskerRange;  Candle plot, the fraction which is covered by the whiskers (0 < x < 1), default 1. ;  ; Int_t fCanvasBorderMode;  Canvas border mode. ;  ; Width_t fCanvasBorderSize;  Canvas border size. ;  ; Color_t fCanvasColor;  Canvas color. ;  ; Int_t fCanvasDefH;  Default canvas height. ;  ; Int_t fCanvasDefW;  Default canvas width. ;  ; Int_t fCanvasDefX;  Default canvas top X position. ;  ; Int_t fCanvasDefY;  Default canvas top Y position. ;  ; Bool_t fCanvasPreferGL;  If true, rendering in canvas is with GL. ;  ; Int_t fCapLinePS;  Determines the appearance of line caps on PostScript, PDF and SVG. ;  ; Int_t fColorModelPS;  PostScript color model: 0 = RGB, 1 = CMYK. ;  ; Float_t fDateX;  X position of the date in the canvas (in NDC) ;  ; Float_t fDateY;  Y position of the date in the canvas (in NDC) ;  ; Int_t fDrawBorder;  Flag to draw border(=1) or not (0) ;  ; Float_t fEndErrorSize;  Size of lines at the end of error bars. ;  ; Float_t fErrorX;  Per cent of bin width for errors along X. ;  ; TString fFitFormat;  Printing format for fit parameters. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Color_t fFuncColor;  Function color. ;  ; Style_t fFuncStyle;  Function style. ;  ; Width_t fFuncWidth;  Function line width. ;  ; Color_t fGridColor;  Grid line color (if 0 use axis line color) ;  ; Style_t fGridStyle;  Grid line style. ;  ; Width_t fGridWidth;  Grid line width. ;  ; Int_t fHatchesLineWidth;  Hatches line width for hatch styles > 3100. ;  ; D",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:36948,Availability,error,errors,36948,";  ; Double_t fCandleWhiskerRange;  Candle plot, the fraction which is covered by the whiskers (0 < x < 1), default 1. ;  ; Int_t fCanvasBorderMode;  Canvas border mode. ;  ; Width_t fCanvasBorderSize;  Canvas border size. ;  ; Color_t fCanvasColor;  Canvas color. ;  ; Int_t fCanvasDefH;  Default canvas height. ;  ; Int_t fCanvasDefW;  Default canvas width. ;  ; Int_t fCanvasDefX;  Default canvas top X position. ;  ; Int_t fCanvasDefY;  Default canvas top Y position. ;  ; Bool_t fCanvasPreferGL;  If true, rendering in canvas is with GL. ;  ; Int_t fCapLinePS;  Determines the appearance of line caps on PostScript, PDF and SVG. ;  ; Int_t fColorModelPS;  PostScript color model: 0 = RGB, 1 = CMYK. ;  ; Float_t fDateX;  X position of the date in the canvas (in NDC) ;  ; Float_t fDateY;  Y position of the date in the canvas (in NDC) ;  ; Int_t fDrawBorder;  Flag to draw border(=1) or not (0) ;  ; Float_t fEndErrorSize;  Size of lines at the end of error bars. ;  ; Float_t fErrorX;  Per cent of bin width for errors along X. ;  ; TString fFitFormat;  Printing format for fit parameters. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Color_t fFuncColor;  Function color. ;  ; Style_t fFuncStyle;  Function style. ;  ; Width_t fFuncWidth;  Function line width. ;  ; Color_t fGridColor;  Grid line color (if 0 use axis line color) ;  ; Style_t fGridStyle;  Grid line style. ;  ; Width_t fGridWidth;  Grid line width. ;  ; Int_t fHatchesLineWidth;  Hatches line width for hatch styles > 3100. ;  ; Double_t fHatchesSpacing;  Hatches spacing for hatch styles > 3100. ;  ; TString fHeaderPS;  User defined additional Postscript header. ;  ; Color_t fHistFillColor;  ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:69207,Availability,error,error,69207,"= (1-Red-Black)/(1-Black);; Double_t Magenta = (1-Green-Black)/(1-Black);; Double_t Yellow = (1-Blue-Black)/(1-Black);; double; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; CMYK adds the black component which allows better quality for black printing. PostScript and PDF support the CMYK model. c = 0 means TPostScript and TPDF will use RGB color model (default); c = 1 means TPostScript and TPDF will use CMYK color model . Definition at line 1275 of file TStyle.cxx. ◆ SetDateX(). void TStyle::SetDateX ; (; Float_t ; x = 0.01). inline . Definition at line 337 of file TStyle.h. ◆ SetDateY(). void TStyle::SetDateY ; (; Float_t ; y = 0.01). inline . Definition at line 338 of file TStyle.h. ◆ SetDrawBorder(). void TStyle::SetDrawBorder ; (; Int_t ; drawborder = 1). inline . Definition at line 342 of file TStyle.h. ◆ SetEndErrorSize(). void TStyle::SetEndErrorSize ; (; Float_t ; np = 2). Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors). ; The default value is 2 pixels. Set np=0 to remove these lines ; Definition at line 1340 of file TStyle.cxx. ◆ SetErrorX(). void TStyle::SetErrorX ; (; Float_t ; errorx = 0.5). inline . Definition at line 340 of file TStyle.h. ◆ SetExponentOffset(). void TStyle::SetExponentOffset ; (; Float_t ; xoff = 0., . Float_t ; yoff = 0., . Option_t * ; axis = ""XY"" . ). Method set X and Y offset of the axis 10^n notation. ; It applies on axis belonging to an histogram (TAxis). It has no effect on standalone TGaxis. It is in % of the pad size. It can be negative. axis specifies which axis (""x"",""y""), default = ""x"" if axis=""xz"" set the two axes ; Definition at line 1836 of file TStyle.cxx. ◆ SetFitFormat(). void TStyle::SetFitFormat ; (; const char * ; format = ""5.4g""). inline . Definition at line 301 of file TStyle.h. ◆ SetFrameBorderMode(). void TStyle::SetFrameBorderMode ; (; Int_t ; mode = 1). inline . Definition at line 378 of file TStyle.h. ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:69404,Availability,error,errorx,69404,"b.Definition TMathBase.h:198; CMYK adds the black component which allows better quality for black printing. PostScript and PDF support the CMYK model. c = 0 means TPostScript and TPDF will use RGB color model (default); c = 1 means TPostScript and TPDF will use CMYK color model . Definition at line 1275 of file TStyle.cxx. ◆ SetDateX(). void TStyle::SetDateX ; (; Float_t ; x = 0.01). inline . Definition at line 337 of file TStyle.h. ◆ SetDateY(). void TStyle::SetDateY ; (; Float_t ; y = 0.01). inline . Definition at line 338 of file TStyle.h. ◆ SetDrawBorder(). void TStyle::SetDrawBorder ; (; Int_t ; drawborder = 1). inline . Definition at line 342 of file TStyle.h. ◆ SetEndErrorSize(). void TStyle::SetEndErrorSize ; (; Float_t ; np = 2). Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors). ; The default value is 2 pixels. Set np=0 to remove these lines ; Definition at line 1340 of file TStyle.cxx. ◆ SetErrorX(). void TStyle::SetErrorX ; (; Float_t ; errorx = 0.5). inline . Definition at line 340 of file TStyle.h. ◆ SetExponentOffset(). void TStyle::SetExponentOffset ; (; Float_t ; xoff = 0., . Float_t ; yoff = 0., . Option_t * ; axis = ""XY"" . ). Method set X and Y offset of the axis 10^n notation. ; It applies on axis belonging to an histogram (TAxis). It has no effect on standalone TGaxis. It is in % of the pad size. It can be negative. axis specifies which axis (""x"",""y""), default = ""x"" if axis=""xz"" set the two axes ; Definition at line 1836 of file TStyle.cxx. ◆ SetFitFormat(). void TStyle::SetFitFormat ; (; const char * ; format = ""5.4g""). inline . Definition at line 301 of file TStyle.h. ◆ SetFrameBorderMode(). void TStyle::SetFrameBorderMode ; (; Int_t ; mode = 1). inline . Definition at line 378 of file TStyle.h. ◆ SetFrameBorderSize(). void TStyle::SetFrameBorderSize ; (; Width_t ; size = 1). inline . Definition at line 377 of file TStyle.h. ◆ SetFrameFillColor(). void TStyle::SetFrameFillColor ; (; Color_t ; ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:81514,Availability,error,errors,81514,"xt.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TStyle::GetAttDateTAttText * GetAttDate()Definition TStyle.h:168; The current date attributes can be obtained via: gStyle->GetAttDate()->GetTextxxxx();; When the date option is active, a text object is created when the pad paint its list of primitives. The text object is named ""DATE"". The DATE attributes can also be edited interactively (position and attributes) via the normal context menu. ; Definition at line 1546 of file TStyle.cxx. ◆ SetOptFile(). void TStyle::SetOptFile ; (; Int_t ; file = 1). inline . Definition at line 327 of file TStyle.h. ◆ SetOptFit(). void TStyle::SetOptFit ; (; Int_t ; mode = 1). The type of information about fit parameters printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = pcev:; p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyl",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:81667,Availability,error,errors,81667,"xt.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TStyle::GetAttDateTAttText * GetAttDate()Definition TStyle.h:168; The current date attributes can be obtained via: gStyle->GetAttDate()->GetTextxxxx();; When the date option is active, a text object is created when the pad paint its list of primitives. The text object is named ""DATE"". The DATE attributes can also be edited interactively (position and attributes) via the normal context menu. ; Definition at line 1546 of file TStyle.cxx. ◆ SetOptFile(). void TStyle::SetOptFile ; (; Int_t ; file = 1). inline . Definition at line 327 of file TStyle.h. ◆ SetOptFit(). void TStyle::SetOptFit ; (; Int_t ; mode = 1). The type of information about fit parameters printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = pcev:; p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyl",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:82917,Availability,error,error,82917,"sulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:82986,Availability,error,error,82986,"sulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:83199,Availability,error,error,83199,"sulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:83262,Availability,error,error,83262,"sulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:84268,Availability,error,error,84268,"e->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆ SetOptStat() [2/2]. void TStyle::SetOptStat ; (; Option_t * ; stat). The parameter mode can be any combination of kKsSiourRmMen. . k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. Example: gStyle->SetOptStat(""ne""); print only name of histogram and number of entries. gStyle->SetOptStat(""n"") print only the name of the histogram; gStyle->SetOptStat(""nemr"") is the default . Definition at line 1676 of file TStyle.cxx. ◆ SetOptTitle(). void TStyle::SetOptTitle ; (; Int_t ; tit = 1). inline . Definition at line 334 of file TStyle.h. ◆ SetOrthoCamera(). void TStyle::SetOrthoCamera ; (; Bool_t ; on = kTRUE). inline . Definition at line 427 of file TStyle.h. ◆ SetPadBorderMode(). void TStyle::SetPadBorderMode ; (; Int_t ; mode = 1). inline . Definition at line 357 of file TStyle.h. ◆ SetPadBorderSize(). void TStyle::SetPadBorderSize ; (; Width_t ; size = 1). inline . Definition at line 356 of file TStyle.h. ◆ SetPadBottomMargin(). void TStyle::SetPa",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:84331,Availability,error,error,84331,"e->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆ SetOptStat() [2/2]. void TStyle::SetOptStat ; (; Option_t * ; stat). The parameter mode can be any combination of kKsSiourRmMen. . k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. Example: gStyle->SetOptStat(""ne""); print only name of histogram and number of entries. gStyle->SetOptStat(""n"") print only the name of the histogram; gStyle->SetOptStat(""nemr"") is the default . Definition at line 1676 of file TStyle.cxx. ◆ SetOptTitle(). void TStyle::SetOptTitle ; (; Int_t ; tit = 1). inline . Definition at line 334 of file TStyle.h. ◆ SetOrthoCamera(). void TStyle::SetOrthoCamera ; (; Bool_t ; on = kTRUE). inline . Definition at line 427 of file TStyle.h. ◆ SetPadBorderMode(). void TStyle::SetPadBorderMode ; (; Int_t ; mode = 1). inline . Definition at line 357 of file TStyle.h. ◆ SetPadBorderSize(). void TStyle::SetPadBorderSize ; (; Width_t ; size = 1). inline . Definition at line 356 of file TStyle.h. ◆ SetPadBottomMargin(). void TStyle::SetPa",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:84526,Availability,error,error,84526,"e->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆ SetOptStat() [2/2]. void TStyle::SetOptStat ; (; Option_t * ; stat). The parameter mode can be any combination of kKsSiourRmMen. . k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. Example: gStyle->SetOptStat(""ne""); print only name of histogram and number of entries. gStyle->SetOptStat(""n"") print only the name of the histogram; gStyle->SetOptStat(""nemr"") is the default . Definition at line 1676 of file TStyle.cxx. ◆ SetOptTitle(). void TStyle::SetOptTitle ; (; Int_t ; tit = 1). inline . Definition at line 334 of file TStyle.h. ◆ SetOrthoCamera(). void TStyle::SetOrthoCamera ; (; Bool_t ; on = kTRUE). inline . Definition at line 427 of file TStyle.h. ◆ SetPadBorderMode(). void TStyle::SetPadBorderMode ; (; Int_t ; mode = 1). inline . Definition at line 357 of file TStyle.h. ◆ SetPadBorderSize(). void TStyle::SetPadBorderSize ; (; Width_t ; size = 1). inline . Definition at line 356 of file TStyle.h. ◆ SetPadBottomMargin(). void TStyle::SetPa",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:84585,Availability,error,error,84585,"e->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(111), 000111 will be taken as an octal number !!; SetOptStat(1) is s shortcut allowing to set the most common case, and is taken as SetOptStat(1111) (for backward compatibility with older versions. If you want to print only the name of the histogram call SetOptStat(1000000001).; that in case of 2-D histograms, when selecting just underflow (10000) or overflow (100000), the stats box will show all combinations of underflow/overflows and not just one single number! . Definition at line 1640 of file TStyle.cxx. ◆ SetOptStat() [2/2]. void TStyle::SetOptStat ; (; Option_t * ; stat). The parameter mode can be any combination of kKsSiourRmMen. . k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. Example: gStyle->SetOptStat(""ne""); print only name of histogram and number of entries. gStyle->SetOptStat(""n"") print only the name of the histogram; gStyle->SetOptStat(""nemr"") is the default . Definition at line 1676 of file TStyle.cxx. ◆ SetOptTitle(). void TStyle::SetOptTitle ; (; Int_t ; tit = 1). inline . Definition at line 334 of file TStyle.h. ◆ SetOrthoCamera(). void TStyle::SetOrthoCamera ; (; Bool_t ; on = kTRUE). inline . Definition at line 427 of file TStyle.h. ◆ SetPadBorderMode(). void TStyle::SetPadBorderMode ; (; Int_t ; mode = 1). inline . Definition at line 357 of file TStyle.h. ◆ SetPadBorderSize(). void TStyle::SetPadBorderSize ; (; Width_t ; size = 1). inline . Definition at line 356 of file TStyle.h. ◆ SetPadBottomMargin(). void TStyle::SetPa",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:97612,Availability,error,error,97612,". private . Default canvas top Y position. ; Definition at line 91 of file TStyle.h. ◆ fCanvasPreferGL. Bool_t TStyle::fCanvasPreferGL. private . If true, rendering in canvas is with GL. ; Definition at line 84 of file TStyle.h. ◆ fCapLinePS. Int_t TStyle::fCapLinePS. private . Determines the appearance of line caps on PostScript, PDF and SVG. ; Definition at line 137 of file TStyle.h. ◆ fColorModelPS. Int_t TStyle::fColorModelPS. private . PostScript color model: 0 = RGB, 1 = CMYK. ; Definition at line 37 of file TStyle.h. ◆ fDateX. Float_t TStyle::fDateX. private . X position of the date in the canvas (in NDC) ; Definition at line 53 of file TStyle.h. ◆ fDateY. Float_t TStyle::fDateY. private . Y position of the date in the canvas (in NDC) ; Definition at line 54 of file TStyle.h. ◆ fDrawBorder. Int_t TStyle::fDrawBorder. private . Flag to draw border(=1) or not (0) ; Definition at line 38 of file TStyle.h. ◆ fEndErrorSize. Float_t TStyle::fEndErrorSize. private . Size of lines at the end of error bars. ; Definition at line 55 of file TStyle.h. ◆ fErrorX. Float_t TStyle::fErrorX. private . Per cent of bin width for errors along X. ; Definition at line 56 of file TStyle.h. ◆ fFitFormat. TString TStyle::fFitFormat. private . Printing format for fit parameters. ; Definition at line 133 of file TStyle.h. ◆ fFrameBorderMode. Int_t TStyle::fFrameBorderMode. private . Pad frame border mode. ; Definition at line 76 of file TStyle.h. ◆ fFrameBorderSize. Width_t TStyle::fFrameBorderSize. private . Pad frame border size. ; Definition at line 75 of file TStyle.h. ◆ fFrameFillColor. Color_t TStyle::fFrameFillColor. private . Pad frame fill color. ; Definition at line 70 of file TStyle.h. ◆ fFrameFillStyle. Style_t TStyle::fFrameFillStyle. private . Pad frame fill style. ; Definition at line 72 of file TStyle.h. ◆ fFrameLineColor. Color_t TStyle::fFrameLineColor. private . Pad frame line color. ; Definition at line 71 of file TStyle.h. ◆ fFrameLineStyle. Style_t TStyle::fFrameL",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:97738,Availability,error,errors,97738,"ferGL. private . If true, rendering in canvas is with GL. ; Definition at line 84 of file TStyle.h. ◆ fCapLinePS. Int_t TStyle::fCapLinePS. private . Determines the appearance of line caps on PostScript, PDF and SVG. ; Definition at line 137 of file TStyle.h. ◆ fColorModelPS. Int_t TStyle::fColorModelPS. private . PostScript color model: 0 = RGB, 1 = CMYK. ; Definition at line 37 of file TStyle.h. ◆ fDateX. Float_t TStyle::fDateX. private . X position of the date in the canvas (in NDC) ; Definition at line 53 of file TStyle.h. ◆ fDateY. Float_t TStyle::fDateY. private . Y position of the date in the canvas (in NDC) ; Definition at line 54 of file TStyle.h. ◆ fDrawBorder. Int_t TStyle::fDrawBorder. private . Flag to draw border(=1) or not (0) ; Definition at line 38 of file TStyle.h. ◆ fEndErrorSize. Float_t TStyle::fEndErrorSize. private . Size of lines at the end of error bars. ; Definition at line 55 of file TStyle.h. ◆ fErrorX. Float_t TStyle::fErrorX. private . Per cent of bin width for errors along X. ; Definition at line 56 of file TStyle.h. ◆ fFitFormat. TString TStyle::fFitFormat. private . Printing format for fit parameters. ; Definition at line 133 of file TStyle.h. ◆ fFrameBorderMode. Int_t TStyle::fFrameBorderMode. private . Pad frame border mode. ; Definition at line 76 of file TStyle.h. ◆ fFrameBorderSize. Width_t TStyle::fFrameBorderSize. private . Pad frame border size. ; Definition at line 75 of file TStyle.h. ◆ fFrameFillColor. Color_t TStyle::fFrameFillColor. private . Pad frame fill color. ; Definition at line 70 of file TStyle.h. ◆ fFrameFillStyle. Style_t TStyle::fFrameFillStyle. private . Pad frame fill style. ; Definition at line 72 of file TStyle.h. ◆ fFrameLineColor. Color_t TStyle::fFrameLineColor. private . Pad frame line color. ; Definition at line 71 of file TStyle.h. ◆ fFrameLineStyle. Style_t TStyle::fFrameLineStyle. private . Pad frame line style. ; Definition at line 73 of file TStyle.h. ◆ fFrameLineWidth. Width_t TStyle::fFrameLine",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:22207,Integrability,message,message,22207,"plement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:22748,Integrability,message,message,22748,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:23738,Integrability,message,message,23738,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:26581,Integrability,message,message,26581,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:26954,Integrability,message,message,26954,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:722,Modifiability,inherit,inherit,722,". ROOT: TStyle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStyle Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TStyle objects may be created to define special styles. ; By default ROOT creates a default style that can be accessed via the gStyle pointer.; This class includes functions to set some of the following object attributes.; Canvas; Pad; Histogram axis; Lines; Fill areas; Text; Markers; Functions; Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their default attributes are taken from the current style. The current style is an object of the classTStyle and can be referenced via the global variable gStyle (in TStyle.h).; ROOT provides two styles called ""Default"" and ""Plain"". The ""Default"" style is created simply by:; auto default = new TStyle(""Default"",""Default Style"");; TStyle::TStyleTStyle()Default constructor.Definition TStyle.cxx:145; The Plain style can be used if you are working on a monochrome display or if you want to get a ""conventional"" Postscript output. These are the instructions in the ROOT constructor to create the Plain style.; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");; ; plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; You can set the current style with:; gROOT->SetStyle(style_name);; gROOT#define gROOTDefinition TROOT.h:406; You can get a pointer to an existing style with:; auto style = gROOT->GetStyle(style_name);; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; You can create additional styles with:; TSty",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:988,Modifiability,variab,variable,988,". ROOT: TStyle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStyle Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TStyle objects may be created to define special styles. ; By default ROOT creates a default style that can be accessed via the gStyle pointer.; This class includes functions to set some of the following object attributes.; Canvas; Pad; Histogram axis; Lines; Fill areas; Text; Markers; Functions; Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their default attributes are taken from the current style. The current style is an object of the classTStyle and can be referenced via the global variable gStyle (in TStyle.h).; ROOT provides two styles called ""Default"" and ""Plain"". The ""Default"" style is created simply by:; auto default = new TStyle(""Default"",""Default Style"");; TStyle::TStyleTStyle()Default constructor.Definition TStyle.cxx:145; The Plain style can be used if you are working on a monochrome display or if you want to get a ""conventional"" Postscript output. These are the instructions in the ROOT constructor to create the Plain style.; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");; ; plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; You can set the current style with:; gROOT->SetStyle(style_name);; gROOT#define gROOTDefinition TROOT.h:406; You can get a pointer to an existing style with:; auto style = gROOT->GetStyle(style_name);; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; You can create additional styles with:; TSty",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:3698,Modifiability,extend,extended,3698,"inition TStyle.cxx:1413; TStyle::SetLabelOffsetvoid SetLabelOffset(Float_t offset=0.005, Option_t *axis=""X"")Set offset between axis and axis labels.Definition TStyle.cxx:1429; TStyle::SetStatWvoid SetStatW(Float_t w=0.19)Definition TStyle.h:399; Note that when an object is created, its attributes are taken from the current style. For example, you may have created an histogram in a previous session, saved it in a file. Meanwhile, if you have changed the style, the histogram will be drawn with the old attributes. You can force the current style attributes to be set when you read an object from a file by calling:; gROOT->ForceStyle();; before reading the objects from the file.; Let's assume you have a canvas or pad with your histogram or any other object, you can force these objects to get the attributes of the current style via:; canvas->UseCurrentStyle();; The description of the style functions should be clear from the name of the TStyle Setters or Getters. Some functions have an extended description, in particular:. TStyle:SetLabelFont.; TStyle:SetLineStyleString, to set the format of dashed lines.; TStyle:SetOptStat.; TStyle:SetPalette to change the colors palette.; TStyle:SetTitleOffset. . Definition at line 29 of file TStyle.h. Public Types; enum  EPaperSize { kA4; , kUSLetter; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStyle ();  Default construct",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:4026,Modifiability,inherit,inherited,4026,"stogram in a previous session, saved it in a file. Meanwhile, if you have changed the style, the histogram will be drawn with the old attributes. You can force the current style attributes to be set when you read an object from a file by calling:; gROOT->ForceStyle();; before reading the objects from the file.; Let's assume you have a canvas or pad with your histogram or any other object, you can force these objects to get the attributes of the current style via:; canvas->UseCurrentStyle();; The description of the style functions should be clear from the name of the TStyle Setters or Getters. Some functions have an extended description, in particular:. TStyle:SetLabelFont.; TStyle:SetLineStyleString, to set the format of dashed lines.; TStyle:SetOptStat.; TStyle:SetPalette to change the colors palette.; TStyle:SetTitleOffset. . Definition at line 29 of file TStyle.h. Public Types; enum  EPaperSize { kA4; , kUSLetter; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStyle ();  Default constructor. ;  ;  TStyle (const char *name, const char *title);  Create a new TStyle. ;  ;  TStyle (const TStyle &style);  Copy constructor. ;  ; virtual ~TStyle ();  Destructor. ;  ; Int_t AxisChoice (Option_t *axis) const;  ; void Browse (TBrowser *b) override;  Browse the style object. ;  ; virtual void cd ();  Change current style. ;  ; void Copy (TObject &style) const ov",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:19399,Modifiability,inherit,inherited,19399," ; void SetTitleH (Float_t h=0);  ; void SetTitleOffset (Float_t offset=1, Option_t *axis=""X"");  Specify a parameter offset to control the distance between the axis and the axis title. ;  ; void SetTitlePS (const char *pstitle);  Define a string to be used in the %Title of the Postscript files. ;  ; void SetTitleSize (Float_t size=0.02, Option_t *axis=""X"");  ; void SetTitleStyle (Style_t style=1001);  ; void SetTitleTextColor (Color_t color=1);  ; void SetTitleW (Float_t w=0);  ; void SetTitleX (Float_t x=0);  ; void SetTitleXOffset (Float_t offset=1);  ; void SetTitleXSize (Float_t size=0.02);  ; void SetTitleY (Float_t y=0.985);  ; void SetTitleYOffset (Float_t offset=1);  ; void SetTitleYSize (Float_t size=0.02);  ; void SetViolinScaled (Bool_t on=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void ToggleEditor ();  ; void ToggleEventStatus ();  ; void ToggleToolBar ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:20960,Modifiability,inherit,inherited,20960,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:21837,Modifiability,inherit,inheritance,21837,"ed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:23836,Modifiability,inherit,inherits,23836,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:23953,Modifiability,inherit,inherits,23953,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:27261,Modifiability,inherit,inherited,27261,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:28766,Modifiability,inherit,inherited,28766,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:30021,Modifiability,inherit,inherited,30021,"his fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attrib",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:31441,Modifiability,inherit,inherited,31441,"ize_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ost",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:33582,Modifiability,inherit,inherited,33582,"le (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void BuildStyles ();  Create some standard styles. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static P",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:33792,Modifiability,inherit,inherited,33792,"le (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void BuildStyles ();  Create some standard styles. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static P",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:34310,Modifiability,inherit,inherited,34310,"e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TAttText fAttDate;  Canvas date attribute. ;  ; Int_t fAxisMaxDigits;  Number of digits above which the 10^N notation is used for axis. ;  ; Float_t fBarOffset;  Offset of bar for graphs. ;  ; Float_t fBarWidth;  Width of bar for graphs. ;  ; Double_t fCandleBoxRange;  Candle plot, ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:34522,Modifiability,inherit,inherited,34522,"e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TAttText fAttDate;  Canvas date attribute. ;  ; Int_t fAxisMaxDigits;  Number of digits above which the 10^N notation is used for axis. ;  ; Float_t fBarOffset;  Offset of bar for graphs. ;  ; Float_t fBarWidth;  Width of bar for graphs. ;  ; Double_t fCandleBoxRange;  Candle plot, ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:34734,Modifiability,inherit,inherited,34734,"e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TAttText fAttDate;  Canvas date attribute. ;  ; Int_t fAxisMaxDigits;  Number of digits above which the 10^N notation is used for axis. ;  ; Float_t fBarOffset;  Offset of bar for graphs. ;  ; Float_t fBarWidth;  Width of bar for graphs. ;  ; Double_t fCandleBoxRange;  Candle plot, ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:35269,Modifiability,inherit,inherited,35269,"ic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TAttText fAttDate;  Canvas date attribute. ;  ; Int_t fAxisMaxDigits;  Number of digits above which the 10^N notation is used for axis. ;  ; Float_t fBarOffset;  Offset of bar for graphs. ;  ; Float_t fBarWidth;  Width of bar for graphs. ;  ; Double_t fCandleBoxRange;  Candle plot, The fraction which is covered by the box (0 < x < 1), default 0.5. ;  ; Bool_t fCandleScaled;  Candle plot, shall the box-width be scaled to each other by the integral of a box? ;  ; Double_t fCandleWhiskerRange;  Candle plot, the fraction which is covered by the whiskers (0 < x < 1), default 1. ;  ; Int_t fCanvasBorderMode;  Canvas border mode. ;  ; Width_t fCanvasBorderSize;  Canvas border size. ;  ; Color_t fCanvasColor;  Canvas color. ;  ; Int_t fCanvasDefH;  Default canvas height. ;  ; Int_t fCanvasDefW;  Default canvas width. ;  ; Int_t fCanvasDefX;  Default canvas top X posi",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:42638,Modifiability,inherit,inherited,42638,";  ; TString fTitlePS;  User defined Postscript file title. ;  ; Style_t fTitleStyle;  Fill area style of title PaveLabel. ;  ; Color_t fTitleTextColor;  Title text color. ;  ; Float_t fTitleW;  Width of title box. ;  ; Float_t fTitleX;  X position of top left corner of title box. ;  ; Float_t fTitleY;  Y position of top left corner of title box. ;  ; Bool_t fViolinScaled;  Violin plot, shall the violin or histos be scaled to each other by the maximum height? ;  ; TAttAxis fXaxis;  X axis attributes. ;  ; Float_t fXAxisExpXOffset;  X axis exponent label X offset. ;  ; Float_t fXAxisExpYOffset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diag",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:42737,Modifiability,inherit,inherited,42737,";  ; TString fTitlePS;  User defined Postscript file title. ;  ; Style_t fTitleStyle;  Fill area style of title PaveLabel. ;  ; Color_t fTitleTextColor;  Title text color. ;  ; Float_t fTitleW;  Width of title box. ;  ; Float_t fTitleX;  X position of top left corner of title box. ;  ; Float_t fTitleY;  Y position of top left corner of title box. ;  ; Bool_t fViolinScaled;  Violin plot, shall the violin or histos be scaled to each other by the maximum height? ;  ; TAttAxis fXaxis;  X axis attributes. ;  ; Float_t fXAxisExpXOffset;  X axis exponent label X offset. ;  ; Float_t fXAxisExpYOffset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diag",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:42942,Modifiability,inherit,inherited,42942,"on of top left corner of title box. ;  ; Float_t fTitleY;  Y position of top left corner of title box. ;  ; Bool_t fViolinScaled;  Violin plot, shall the violin or histos be scaled to each other by the maximum height? ;  ; TAttAxis fXaxis;  X axis attributes. ;  ; Float_t fXAxisExpXOffset;  X axis exponent label X offset. ;  ; Float_t fXAxisExpYOffset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diagram for TStyle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPaperSize. enum TStyle::EPaperSize. EnumeratorkA4 ; kUSLetter . Definition at line 153 of file ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:43024,Modifiability,inherit,inherited,43024,"on of top left corner of title box. ;  ; Float_t fTitleY;  Y position of top left corner of title box. ;  ; Bool_t fViolinScaled;  Violin plot, shall the violin or histos be scaled to each other by the maximum height? ;  ; TAttAxis fXaxis;  X axis attributes. ;  ; Float_t fXAxisExpXOffset;  X axis exponent label X offset. ;  ; Float_t fXAxisExpYOffset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diagram for TStyle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPaperSize. enum TStyle::EPaperSize. EnumeratorkA4 ; kUSLetter . Definition at line 153 of file ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:43185,Modifiability,inherit,inherited,43185,"? ;  ; TAttAxis fXaxis;  X axis attributes. ;  ; Float_t fXAxisExpXOffset;  X axis exponent label X offset. ;  ; Float_t fXAxisExpYOffset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diagram for TStyle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPaperSize. enum TStyle::EPaperSize. EnumeratorkA4 ; kUSLetter . Definition at line 153 of file TStyle.h. Constructor & Destructor Documentation. ◆ TStyle() [1/3]. TStyle::TStyle ; (; ). Default constructor. ; Definition at line 145 of file TStyle.cxx. ◆ TStyle() [2/3]. TStyle::TStyle ; (; const char * ; name, ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:43318,Modifiability,inherit,inherited,43318,"fset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diagram for TStyle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPaperSize. enum TStyle::EPaperSize. EnumeratorkA4 ; kUSLetter . Definition at line 153 of file TStyle.h. Constructor & Destructor Documentation. ◆ TStyle() [1/3]. TStyle::TStyle ; (; ). Default constructor. ; Definition at line 145 of file TStyle.cxx. ◆ TStyle() [2/3]. TStyle::TStyle ; (; const char * ; name, . const char * ; title . ). Create a new TStyle. ; The following names are reserved to create special styles:. Classic: Similar to Def",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:43490,Modifiability,inherit,inherited,43490,"set;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diagram for TStyle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPaperSize. enum TStyle::EPaperSize. EnumeratorkA4 ; kUSLetter . Definition at line 153 of file TStyle.h. Constructor & Destructor Documentation. ◆ TStyle() [1/3]. TStyle::TStyle ; (; ). Default constructor. ; Definition at line 145 of file TStyle.cxx. ◆ TStyle() [2/3]. TStyle::TStyle ; (; const char * ; name, . const char * ; title . ). Create a new TStyle. ; The following names are reserved to create special styles:. Classic: Similar to Default style set in TStyle::Reset; Plain: a black&white oriented style; Bold; Video; Pub; Modern: Used when ROOT starts; ATLAS: style used by the ATLAS experiment; BELLE2: s",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:74981,Performance,scalab,scalable,74981,"IsReading member to reading (default=kTRUE). ; fIsReading (used via gStyle->IsReading()) can be used in the functions myclass::UseCurrentStyle to read from the current style or write to the current style ; Definition at line 1374 of file TStyle.cxx. ◆ SetJoinLinePS(). void TStyle::SetJoinLinePS ; (; Int_t ; joinline = 0). inline . Set the line join method used for PostScript, PDF and SVG output. See TPostScript::SetLineJoin for details. ; Definition at line 306 of file TStyle.h. ◆ SetLabelColor(). void TStyle::SetLabelColor ; (; Color_t ; color = 1, . Option_t * ; axis = ""X"" . ). Set axis labels color. ; axis specifies which axis (""x"",""y"",""z""), default = ""x"" if axis=""xyz"" set all 3 axes ; Definition at line 1393 of file TStyle.cxx. ◆ SetLabelFont(). void TStyle::SetLabelFont ; (; Style_t ; font = 62, . Option_t * ; axis = ""X"" . ). Set font number used to draw axis labels. . font : Text font code = 10*fontnumber + precision; Font numbers must be between 1 and 14; precision = 1 fast hardware fonts (steps in the size); precision = 2 scalable and rotatable hardware fonts The default font number is 62. axis specifies which axis (""x"",""y"",""z""), default = ""x"" if axis=""xyz"" set all 3 axes . Definition at line 1413 of file TStyle.cxx. ◆ SetLabelOffset(). void TStyle::SetLabelOffset ; (; Float_t ; offset = 0.005, . Option_t * ; axis = ""X"" . ). Set offset between axis and axis labels. ; The offset is expressed as a percent of the pad height. axis specifies which axis (""x"",""y"",""z""), default = ""x"" if axis=""xyz"" set all 3 axes ; Definition at line 1429 of file TStyle.cxx. ◆ SetLabelSize(). void TStyle::SetLabelSize ; (; Float_t ; size = 0.04, . Option_t * ; axis = ""X"" . ). Set size of axis labels. ; The size is expressed as a percent of the pad height. axis specifies which axis (""x"",""y"",""z""), default = ""x"" if axis=""xyz"" set all 3 axes ; Definition at line 1444 of file TStyle.cxx. ◆ SetLegendBorderSize(). void TStyle::SetLegendBorderSize ; (; Width_t ; size = 4). inline . Definitio",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:463,Security,access,accessed,463,". ROOT: TStyle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStyle Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TStyle objects may be created to define special styles. ; By default ROOT creates a default style that can be accessed via the gStyle pointer.; This class includes functions to set some of the following object attributes.; Canvas; Pad; Histogram axis; Lines; Fill areas; Text; Markers; Functions; Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their default attributes are taken from the current style. The current style is an object of the classTStyle and can be referenced via the global variable gStyle (in TStyle.h).; ROOT provides two styles called ""Default"" and ""Plain"". The ""Default"" style is created simply by:; auto default = new TStyle(""Default"",""Default Style"");; TStyle::TStyleTStyle()Default constructor.Definition TStyle.cxx:145; The Plain style can be used if you are working on a monochrome display or if you want to get a ""conventional"" Postscript output. These are the instructions in the ROOT constructor to create the Plain style.; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");; ; plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; You can set the current style with:; gROOT->SetStyle(style_name);; gROOT#define gROOTDefinition TROOT.h:406; You can get a pointer to an existing style with:; auto style = gROOT->GetStyle(style_name);; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; You can create additional styles with:; TSty",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:20200,Security,hash,hash,20200,"ream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void ToggleEditor ();  ; void ToggleEventStatus ();  ; void ToggleToolBar ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:16054,Testability,log,logx,16054,"lor_t color=0);  ; void SetLegendFillStyle (Style_t style=1001);  ; void SetLegendFont (Style_t font=62);  ; void SetLegendTextSize (Double_t size=0.);  ; void SetLegoInnerR (Float_t rad=0.5);  ; void SetLineScalePS (Float_t scale=3);  ; void SetLineStyleString (Int_t i, const char *text);  Set line style string using the PostScript convention. ;  ; void SetNdivisions (Int_t n=510, Option_t *axis=""X"");  Set the number of divisions to draw an axis. ;  ; void SetNumberContours (Int_t number=20);  Set the default number of contour levels when drawing 2-d plots. ;  ; void SetOptDate (Int_t datefl=1);  If optdate is non null, the current date/time will be printed in the canvas. ;  ; void SetOptFile (Int_t file=1);  ; void SetOptFit (Int_t fit=1);  The type of information about fit parameters printed in the histogram statistics box can be selected via the parameter mode. ;  ; void SetOptLogx (Int_t logx=1);  ; void SetOptLogy (Int_t logy=1);  ; void SetOptLogz (Int_t logz=1);  ; void SetOptStat (Int_t stat=1);  The type of information printed in the histogram statistics box can be selected via the parameter mode. ;  ; void SetOptStat (Option_t *stat);  The parameter mode can be any combination of kKsSiourRmMen. ;  ; void SetOptTitle (Int_t tit=1);  ; void SetOrthoCamera (Bool_t on=kTRUE);  ; void SetPadBorderMode (Int_t mode=1);  ; void SetPadBorderSize (Width_t size=1);  ; void SetPadBottomMargin (Float_t margin=0.1);  ; void SetPadColor (Color_t color=19);  ; void SetPadGridX (Bool_t gridx);  ; void SetPadGridY (Bool_t gridy);  ; void SetPadLeftMargin (Float_t margin=0.1);  ; void SetPadRightMargin (Float_t margin=0.1);  ; void SetPadTickX (Int_t tickx);  ; void SetPadTickY (Int_t ticky);  ; void SetPadTopMargin (Float_t margin=0.1);  ; void SetPaintTextFormat (const char *format=""g"");  ; void SetPalette (Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.);  See TColor::SetPalette. ;  ; void SetPalette (TString fileName, Float_t alpha=1.);  ; void SetPaperSize ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:16089,Testability,log,logy,16089,"lor_t color=0);  ; void SetLegendFillStyle (Style_t style=1001);  ; void SetLegendFont (Style_t font=62);  ; void SetLegendTextSize (Double_t size=0.);  ; void SetLegoInnerR (Float_t rad=0.5);  ; void SetLineScalePS (Float_t scale=3);  ; void SetLineStyleString (Int_t i, const char *text);  Set line style string using the PostScript convention. ;  ; void SetNdivisions (Int_t n=510, Option_t *axis=""X"");  Set the number of divisions to draw an axis. ;  ; void SetNumberContours (Int_t number=20);  Set the default number of contour levels when drawing 2-d plots. ;  ; void SetOptDate (Int_t datefl=1);  If optdate is non null, the current date/time will be printed in the canvas. ;  ; void SetOptFile (Int_t file=1);  ; void SetOptFit (Int_t fit=1);  The type of information about fit parameters printed in the histogram statistics box can be selected via the parameter mode. ;  ; void SetOptLogx (Int_t logx=1);  ; void SetOptLogy (Int_t logy=1);  ; void SetOptLogz (Int_t logz=1);  ; void SetOptStat (Int_t stat=1);  The type of information printed in the histogram statistics box can be selected via the parameter mode. ;  ; void SetOptStat (Option_t *stat);  The parameter mode can be any combination of kKsSiourRmMen. ;  ; void SetOptTitle (Int_t tit=1);  ; void SetOrthoCamera (Bool_t on=kTRUE);  ; void SetPadBorderMode (Int_t mode=1);  ; void SetPadBorderSize (Width_t size=1);  ; void SetPadBottomMargin (Float_t margin=0.1);  ; void SetPadColor (Color_t color=19);  ; void SetPadGridX (Bool_t gridx);  ; void SetPadGridY (Bool_t gridy);  ; void SetPadLeftMargin (Float_t margin=0.1);  ; void SetPadRightMargin (Float_t margin=0.1);  ; void SetPadTickX (Int_t tickx);  ; void SetPadTickY (Int_t ticky);  ; void SetPadTopMargin (Float_t margin=0.1);  ; void SetPaintTextFormat (const char *format=""g"");  ; void SetPalette (Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.);  See TColor::SetPalette. ;  ; void SetPalette (TString fileName, Float_t alpha=1.);  ; void SetPaperSize ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:16124,Testability,log,logz,16124,"lor_t color=0);  ; void SetLegendFillStyle (Style_t style=1001);  ; void SetLegendFont (Style_t font=62);  ; void SetLegendTextSize (Double_t size=0.);  ; void SetLegoInnerR (Float_t rad=0.5);  ; void SetLineScalePS (Float_t scale=3);  ; void SetLineStyleString (Int_t i, const char *text);  Set line style string using the PostScript convention. ;  ; void SetNdivisions (Int_t n=510, Option_t *axis=""X"");  Set the number of divisions to draw an axis. ;  ; void SetNumberContours (Int_t number=20);  Set the default number of contour levels when drawing 2-d plots. ;  ; void SetOptDate (Int_t datefl=1);  If optdate is non null, the current date/time will be printed in the canvas. ;  ; void SetOptFile (Int_t file=1);  ; void SetOptFit (Int_t fit=1);  The type of information about fit parameters printed in the histogram statistics box can be selected via the parameter mode. ;  ; void SetOptLogx (Int_t logx=1);  ; void SetOptLogy (Int_t logy=1);  ; void SetOptLogz (Int_t logz=1);  ; void SetOptStat (Int_t stat=1);  The type of information printed in the histogram statistics box can be selected via the parameter mode. ;  ; void SetOptStat (Option_t *stat);  The parameter mode can be any combination of kKsSiourRmMen. ;  ; void SetOptTitle (Int_t tit=1);  ; void SetOrthoCamera (Bool_t on=kTRUE);  ; void SetPadBorderMode (Int_t mode=1);  ; void SetPadBorderSize (Width_t size=1);  ; void SetPadBottomMargin (Float_t margin=0.1);  ; void SetPadColor (Color_t color=19);  ; void SetPadGridX (Bool_t gridx);  ; void SetPadGridY (Bool_t gridy);  ; void SetPadLeftMargin (Float_t margin=0.1);  ; void SetPadRightMargin (Float_t margin=0.1);  ; void SetPadTickX (Int_t tickx);  ; void SetPadTickY (Int_t ticky);  ; void SetPadTopMargin (Float_t margin=0.1);  ; void SetPaintTextFormat (const char *format=""g"");  ; void SetPalette (Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.);  See TColor::SetPalette. ;  ; void SetPalette (TString fileName, Float_t alpha=1.);  ; void SetPaperSize ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:39396,Testability,log,log,39396," definition bitmap images. ;  ; Bool_t fIsReading;  ! Set to FALSE when userclass::UseCurrentStyle is called by the style manager ;  ; Int_t fJoinLinePS;  Determines the appearance of joining lines on PostScript, PDF and SVG. ;  ; Width_t fLegendBorderSize;  Legend box border size. ;  ; Color_t fLegendFillColor;  Legend fill color. ;  ; Style_t fLegendFillStyle;  Legend fill style. ;  ; Style_t fLegendFont;  Legend font style. ;  ; Double_t fLegendTextSize;  Legend text size. If 0 the size is computed automatically. ;  ; Float_t fLegoInnerR;  Inner radius for cylindrical legos. ;  ; Float_t fLineScalePS;  Line scale factor when drawing lines on Postscript. ;  ; TString fLineStyle [30];  String describing line style i (for postScript) ;  ; Int_t fNumberContours;  Default number of contours for 2-d plots. ;  ; Int_t fOptDate;  True if date option is selected. ;  ; Int_t fOptFile;  True if option File is selected. ;  ; Int_t fOptFit;  True if option Fit is selected. ;  ; Int_t fOptLogx;  True if log scale in X. ;  ; Int_t fOptLogy;  True if log scale in y. ;  ; Int_t fOptLogz;  True if log scale in z. ;  ; Int_t fOptStat;  True if option Stat is selected. ;  ; Int_t fOptTitle;  True if option Title is selected. ;  ; Bool_t fOrthoCamera;  Use orthographic camera with web display. ;  ; Int_t fPadBorderMode;  Pad border mode. ;  ; Width_t fPadBorderSize;  Pad border size. ;  ; Float_t fPadBottomMargin;  Pad bottom margin. ;  ; Color_t fPadColor;  Pad color. ;  ; Bool_t fPadGridX;  True to get the grid along X. ;  ; Bool_t fPadGridY;  True to get the grid along Y. ;  ; Float_t fPadLeftMargin;  Pad left margin. ;  ; Float_t fPadRightMargin;  Pad right margin. ;  ; Int_t fPadTickX;  True to set special pad ticks along X. ;  ; Int_t fPadTickY;  True to set special pad ticks along Y. ;  ; Float_t fPadTopMargin;  Pad top margin. ;  ; TString fPaintTextFormat;  Printing format for TH2::PaintText. ;  ; Float_t fPaperSizeX;  PostScript paper size along X. ;  ; Float_t fPaperSizeY;",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:39442,Testability,log,log,39442,"ing;  ! Set to FALSE when userclass::UseCurrentStyle is called by the style manager ;  ; Int_t fJoinLinePS;  Determines the appearance of joining lines on PostScript, PDF and SVG. ;  ; Width_t fLegendBorderSize;  Legend box border size. ;  ; Color_t fLegendFillColor;  Legend fill color. ;  ; Style_t fLegendFillStyle;  Legend fill style. ;  ; Style_t fLegendFont;  Legend font style. ;  ; Double_t fLegendTextSize;  Legend text size. If 0 the size is computed automatically. ;  ; Float_t fLegoInnerR;  Inner radius for cylindrical legos. ;  ; Float_t fLineScalePS;  Line scale factor when drawing lines on Postscript. ;  ; TString fLineStyle [30];  String describing line style i (for postScript) ;  ; Int_t fNumberContours;  Default number of contours for 2-d plots. ;  ; Int_t fOptDate;  True if date option is selected. ;  ; Int_t fOptFile;  True if option File is selected. ;  ; Int_t fOptFit;  True if option Fit is selected. ;  ; Int_t fOptLogx;  True if log scale in X. ;  ; Int_t fOptLogy;  True if log scale in y. ;  ; Int_t fOptLogz;  True if log scale in z. ;  ; Int_t fOptStat;  True if option Stat is selected. ;  ; Int_t fOptTitle;  True if option Title is selected. ;  ; Bool_t fOrthoCamera;  Use orthographic camera with web display. ;  ; Int_t fPadBorderMode;  Pad border mode. ;  ; Width_t fPadBorderSize;  Pad border size. ;  ; Float_t fPadBottomMargin;  Pad bottom margin. ;  ; Color_t fPadColor;  Pad color. ;  ; Bool_t fPadGridX;  True to get the grid along X. ;  ; Bool_t fPadGridY;  True to get the grid along Y. ;  ; Float_t fPadLeftMargin;  Pad left margin. ;  ; Float_t fPadRightMargin;  Pad right margin. ;  ; Int_t fPadTickX;  True to set special pad ticks along X. ;  ; Int_t fPadTickY;  True to set special pad ticks along Y. ;  ; Float_t fPadTopMargin;  Pad top margin. ;  ; TString fPaintTextFormat;  Printing format for TH2::PaintText. ;  ; Float_t fPaperSizeX;  PostScript paper size along X. ;  ; Float_t fPaperSizeY;  PostScript paper size along Y. ;  ; Float_t ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:39488,Testability,log,log,39488,"tStyle is called by the style manager ;  ; Int_t fJoinLinePS;  Determines the appearance of joining lines on PostScript, PDF and SVG. ;  ; Width_t fLegendBorderSize;  Legend box border size. ;  ; Color_t fLegendFillColor;  Legend fill color. ;  ; Style_t fLegendFillStyle;  Legend fill style. ;  ; Style_t fLegendFont;  Legend font style. ;  ; Double_t fLegendTextSize;  Legend text size. If 0 the size is computed automatically. ;  ; Float_t fLegoInnerR;  Inner radius for cylindrical legos. ;  ; Float_t fLineScalePS;  Line scale factor when drawing lines on Postscript. ;  ; TString fLineStyle [30];  String describing line style i (for postScript) ;  ; Int_t fNumberContours;  Default number of contours for 2-d plots. ;  ; Int_t fOptDate;  True if date option is selected. ;  ; Int_t fOptFile;  True if option File is selected. ;  ; Int_t fOptFit;  True if option Fit is selected. ;  ; Int_t fOptLogx;  True if log scale in X. ;  ; Int_t fOptLogy;  True if log scale in y. ;  ; Int_t fOptLogz;  True if log scale in z. ;  ; Int_t fOptStat;  True if option Stat is selected. ;  ; Int_t fOptTitle;  True if option Title is selected. ;  ; Bool_t fOrthoCamera;  Use orthographic camera with web display. ;  ; Int_t fPadBorderMode;  Pad border mode. ;  ; Width_t fPadBorderSize;  Pad border size. ;  ; Float_t fPadBottomMargin;  Pad bottom margin. ;  ; Color_t fPadColor;  Pad color. ;  ; Bool_t fPadGridX;  True to get the grid along X. ;  ; Bool_t fPadGridY;  True to get the grid along Y. ;  ; Float_t fPadLeftMargin;  Pad left margin. ;  ; Float_t fPadRightMargin;  Pad right margin. ;  ; Int_t fPadTickX;  True to set special pad ticks along X. ;  ; Int_t fPadTickY;  True to set special pad ticks along Y. ;  ; Float_t fPadTopMargin;  Pad top margin. ;  ; TString fPaintTextFormat;  Printing format for TH2::PaintText. ;  ; Float_t fPaperSizeX;  PostScript paper size along X. ;  ; Float_t fPaperSizeY;  PostScript paper size along Y. ;  ; Float_t fScreenFactor;  Multiplication factor for canv",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:82359,Testability,log,logx,82359,"can be selected via the parameter mode. ; The parameter mode can be = pcev:; p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:82473,Testability,log,logy,82473,"t Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:82587,Testability,log,logz,82587,"arameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:103019,Testability,log,log,103019,tyle.h. ◆ fLegoInnerR. Float_t TStyle::fLegoInnerR. private . Inner radius for cylindrical legos. ; Definition at line 129 of file TStyle.h. ◆ fLineScalePS. Float_t TStyle::fLineScalePS. private . Line scale factor when drawing lines on Postscript. ; Definition at line 135 of file TStyle.h. ◆ fLineStyle. TString TStyle::fLineStyle[30]. private . String describing line style i (for postScript) ; Definition at line 130 of file TStyle.h. ◆ fNumberContours. Int_t TStyle::fNumberContours. private . Default number of contours for 2-d plots. ; Definition at line 51 of file TStyle.h. ◆ fOptDate. Int_t TStyle::fOptDate. private . True if date option is selected. ; Definition at line 42 of file TStyle.h. ◆ fOptFile. Int_t TStyle::fOptFile. private . True if option File is selected. ; Definition at line 45 of file TStyle.h. ◆ fOptFit. Int_t TStyle::fOptFit. private . True if option Fit is selected. ; Definition at line 46 of file TStyle.h. ◆ fOptLogx. Int_t TStyle::fOptLogx. private . True if log scale in X. ; Definition at line 39 of file TStyle.h. ◆ fOptLogy. Int_t TStyle::fOptLogy. private . True if log scale in y. ; Definition at line 40 of file TStyle.h. ◆ fOptLogz. Int_t TStyle::fOptLogz. private . True if log scale in z. ; Definition at line 41 of file TStyle.h. ◆ fOptStat. Int_t TStyle::fOptStat. private . True if option Stat is selected. ; Definition at line 43 of file TStyle.h. ◆ fOptTitle. Int_t TStyle::fOptTitle. private . True if option Title is selected. ; Definition at line 44 of file TStyle.h. ◆ fOrthoCamera. Bool_t TStyle::fOrthoCamera. private . Use orthographic camera with web display. ; Definition at line 150 of file TStyle.h. ◆ fPadBorderMode. Int_t TStyle::fPadBorderMode. private . Pad border mode. ; Definition at line 94 of file TStyle.h. ◆ fPadBorderSize. Width_t TStyle::fPadBorderSize. private . Pad border size. ; Definition at line 93 of file TStyle.h. ◆ fPadBottomMargin. Float_t TStyle::fPadBottomMargin. private . Pad bottom margin. ; Definition at l,MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:103131,Testability,log,log,103131,t line 129 of file TStyle.h. ◆ fLineScalePS. Float_t TStyle::fLineScalePS. private . Line scale factor when drawing lines on Postscript. ; Definition at line 135 of file TStyle.h. ◆ fLineStyle. TString TStyle::fLineStyle[30]. private . String describing line style i (for postScript) ; Definition at line 130 of file TStyle.h. ◆ fNumberContours. Int_t TStyle::fNumberContours. private . Default number of contours for 2-d plots. ; Definition at line 51 of file TStyle.h. ◆ fOptDate. Int_t TStyle::fOptDate. private . True if date option is selected. ; Definition at line 42 of file TStyle.h. ◆ fOptFile. Int_t TStyle::fOptFile. private . True if option File is selected. ; Definition at line 45 of file TStyle.h. ◆ fOptFit. Int_t TStyle::fOptFit. private . True if option Fit is selected. ; Definition at line 46 of file TStyle.h. ◆ fOptLogx. Int_t TStyle::fOptLogx. private . True if log scale in X. ; Definition at line 39 of file TStyle.h. ◆ fOptLogy. Int_t TStyle::fOptLogy. private . True if log scale in y. ; Definition at line 40 of file TStyle.h. ◆ fOptLogz. Int_t TStyle::fOptLogz. private . True if log scale in z. ; Definition at line 41 of file TStyle.h. ◆ fOptStat. Int_t TStyle::fOptStat. private . True if option Stat is selected. ; Definition at line 43 of file TStyle.h. ◆ fOptTitle. Int_t TStyle::fOptTitle. private . True if option Title is selected. ; Definition at line 44 of file TStyle.h. ◆ fOrthoCamera. Bool_t TStyle::fOrthoCamera. private . Use orthographic camera with web display. ; Definition at line 150 of file TStyle.h. ◆ fPadBorderMode. Int_t TStyle::fPadBorderMode. private . Pad border mode. ; Definition at line 94 of file TStyle.h. ◆ fPadBorderSize. Width_t TStyle::fPadBorderSize. private . Pad border size. ; Definition at line 93 of file TStyle.h. ◆ fPadBottomMargin. Float_t TStyle::fPadBottomMargin. private . Pad bottom margin. ; Definition at line 95 of file TStyle.h. ◆ fPadColor. Color_t TStyle::fPadColor. private . Pad color. ; Definition at line 92 of,MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:103243,Testability,log,log,103243,ing lines on Postscript. ; Definition at line 135 of file TStyle.h. ◆ fLineStyle. TString TStyle::fLineStyle[30]. private . String describing line style i (for postScript) ; Definition at line 130 of file TStyle.h. ◆ fNumberContours. Int_t TStyle::fNumberContours. private . Default number of contours for 2-d plots. ; Definition at line 51 of file TStyle.h. ◆ fOptDate. Int_t TStyle::fOptDate. private . True if date option is selected. ; Definition at line 42 of file TStyle.h. ◆ fOptFile. Int_t TStyle::fOptFile. private . True if option File is selected. ; Definition at line 45 of file TStyle.h. ◆ fOptFit. Int_t TStyle::fOptFit. private . True if option Fit is selected. ; Definition at line 46 of file TStyle.h. ◆ fOptLogx. Int_t TStyle::fOptLogx. private . True if log scale in X. ; Definition at line 39 of file TStyle.h. ◆ fOptLogy. Int_t TStyle::fOptLogy. private . True if log scale in y. ; Definition at line 40 of file TStyle.h. ◆ fOptLogz. Int_t TStyle::fOptLogz. private . True if log scale in z. ; Definition at line 41 of file TStyle.h. ◆ fOptStat. Int_t TStyle::fOptStat. private . True if option Stat is selected. ; Definition at line 43 of file TStyle.h. ◆ fOptTitle. Int_t TStyle::fOptTitle. private . True if option Title is selected. ; Definition at line 44 of file TStyle.h. ◆ fOrthoCamera. Bool_t TStyle::fOrthoCamera. private . Use orthographic camera with web display. ; Definition at line 150 of file TStyle.h. ◆ fPadBorderMode. Int_t TStyle::fPadBorderMode. private . Pad border mode. ; Definition at line 94 of file TStyle.h. ◆ fPadBorderSize. Width_t TStyle::fPadBorderSize. private . Pad border size. ; Definition at line 93 of file TStyle.h. ◆ fPadBottomMargin. Float_t TStyle::fPadBottomMargin. private . Pad bottom margin. ; Definition at line 95 of file TStyle.h. ◆ fPadColor. Color_t TStyle::fPadColor. private . Pad color. ; Definition at line 92 of file TStyle.h. ◆ fPadGridX. Bool_t TStyle::fPadGridX. private . True to get the grid along X. ; Definition at l,MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:1106,Usability,simpl,simply,1106,"ypes |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStyle Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TStyle objects may be created to define special styles. ; By default ROOT creates a default style that can be accessed via the gStyle pointer.; This class includes functions to set some of the following object attributes.; Canvas; Pad; Histogram axis; Lines; Fill areas; Text; Markers; Functions; Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their default attributes are taken from the current style. The current style is an object of the classTStyle and can be referenced via the global variable gStyle (in TStyle.h).; ROOT provides two styles called ""Default"" and ""Plain"". The ""Default"" style is created simply by:; auto default = new TStyle(""Default"",""Default Style"");; TStyle::TStyleTStyle()Default constructor.Definition TStyle.cxx:145; The Plain style can be used if you are working on a monochrome display or if you want to get a ""conventional"" Postscript output. These are the instructions in the ROOT constructor to create the Plain style.; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");; ; plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; You can set the current style with:; gROOT->SetStyle(style_name);; gROOT#define gROOTDefinition TROOT.h:406; You can get a pointer to an existing style with:; auto style = gROOT->GetStyle(style_name);; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; You can create additional styles with:; TStyle *st1 = new TStyle(""st1"",""my style"");; st1->Set....; st1->cd(); this becomes now the current style gStyle; gStyleR__EXTERN TStyle * gStyleDefi",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTStyle.html:3621,Usability,clear,clear,3621,"StatXvoid SetStatX(Float_t x=0)Definition TStyle.h:397; TStyle::SetLabelFontvoid SetLabelFont(Style_t font=62, Option_t *axis=""X"")Set font number used to draw axis labels.Definition TStyle.cxx:1413; TStyle::SetLabelOffsetvoid SetLabelOffset(Float_t offset=0.005, Option_t *axis=""X"")Set offset between axis and axis labels.Definition TStyle.cxx:1429; TStyle::SetStatWvoid SetStatW(Float_t w=0.19)Definition TStyle.h:399; Note that when an object is created, its attributes are taken from the current style. For example, you may have created an histogram in a previous session, saved it in a file. Meanwhile, if you have changed the style, the histogram will be drawn with the old attributes. You can force the current style attributes to be set when you read an object from a file by calling:; gROOT->ForceStyle();; before reading the objects from the file.; Let's assume you have a canvas or pad with your histogram or any other object, you can force these objects to get the attributes of the current style via:; canvas->UseCurrentStyle();; The description of the style functions should be clear from the name of the TStyle Setters or Getters. Some functions have an extended description, in particular:. TStyle:SetLabelFont.; TStyle:SetLineStyleString, to set the format of dashed lines.; TStyle:SetOptStat.; TStyle:SetPalette to change the colors palette.; TStyle:SetTitleOffset. . Definition at line 29 of file TStyle.h. Public Types; enum  EPaperSize { kA4; , kUSLetter; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 ",MatchSource.WIKI,doc/master/classTStyle.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTStyle.html
https://root.cern/doc/master/classTSVDUnfold.html:1169,Availability,error,errors,1169,"...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; List of all members ; TSVDUnfold Class ReferenceHistogram Library. ; SVD Approach to Data Unfolding. ; Reference: Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] ; TSVDUnfold implements the singular value decomposition based unfolding method (see reference). Currently, the unfolding of one-dimensional histograms is supported, with the same number of bins for the measured and the unfolded spectrum. ; The unfolding procedure is based on singular value decomposition of the response matrix. The regularisation of the unfolding is implemented via a discrete minimum-curvature condition. ; Monte Carlo inputs: . xini: true underlying spectrum (TH1D, n bins) . bini: reconstructed spectrum (TH1D, n bins) . Adet: response matrix (TH2D, nxn bins) . Consider the unfolding of a measured spectrum bdat with covariance matrix Bcov (if not passed explicitly, a diagonal covariance will be built given the errors of bdat). The corresponding spectrum in the Monte Carlo is given by bini, with the true underlying spectrum given by xini. The detector response is described by Adet, with Adet filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis. ; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of xini and Adet. The unfolding can be performed by TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TSVDUnfoldSVD Approach to Data Unfolding.Definition TSVDUnfold.h:46; TSVDUnfold::UnfoldTH1D * Unfold(Int_t kreg)Perform the unfolding with regularisation parameter kreg.Definition TSVDUnfold.cxx:237; where kreg determ",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:4947,Availability,error,error,4947,"uble_t ComputeChiSquared (const TH1D &truspec, const TH1D &unfspec);  Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ;  ; TH2D * GetAdetCovMatrix (Int_t ntoys, Int_t seed=1);  Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments. ;  ; TH2D * GetBCov () const;  Returns the covariance matrix. ;  ; TH1D * GetD () const;  Returns d vector (for choosing appropriate regularisation) ;  ; Int_t GetKReg () const;  ; TH1D * GetSV () const;  Returns singular values vector. ;  ; TH2D * GetUnfoldCovMatrix (const TH2D *cov, Int_t ntoys, Int_t seed=1);  Determine for given input error matrix covariance matrix of unfolded spectrum from toy simulation given the passed covariance matrix on measured spectrum ""cov"" - covariance matrix on the measured spectrum, to be propagated ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments Note that this covariance matrix will contain effects of forced normalisation if spectrum is normalised to unit area. ;  ; TH2D * GetXinv () const;  Returns the computed inverse of the covariance matrix. ;  ; TH2D * GetXtau () const;  Returns the computed regularized covariance matrix corresponding to total uncertainties on measured spectrum as passed in the constructor. ;  ; TClass * IsA () const override;  ; void SetNormalize (Bool_t normalize);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TH1D * Unfold (Int_t kreg);  Perform the unfolding with regularisation parameter kreg. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:7720,Availability,error,error,7720,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:7809,Availability,error,error,7809,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:7964,Availability,error,error,7964,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:8261,Availability,error,error,8261,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:12825,Availability,error,error,12825," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:14811,Availability,error,errors,14811,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void FillCurvatureMatrix (TMatrixD &tCurv, TMatrixD &tC) const;  ; void InitHistos ();  . Static Private Member Functions; static TVectorD CompProd (const TVectorD &vec1, const TVectorD &vec2);  Multiply entries of two vectors. ;  ; static Double_t GetCurvature (const TVectorD &vec, const TMatrixD &curv);  Compute curvature of vector. ;  ; static void H2M (const TH2D *histo, TMatrixD &mat);  Fill 2D histogram into matrix. ;  ; static void H2V (const TH1D *histo, TVectorD &vec);  Fill 1D histogram into vector. ;  ; static void H2Verr (const TH1D *histo, TVectorD &vec);  Fill 1D histogram errors into vector. ;  ; static void M2H (const TMatrixD &mat, TH2D &histo);  Fill 2D histogram into matrix. ;  ; static TMatrixD MatDivVec (const TMatrixD &mat, const TVectorD &vec, Int_t zero=0);  Divide matrix entries by vector. ;  ; static void RegularisedSymMatInvert (TMatrixDSym &mat, Double_t eps=1e-3);  naive regularised inversion cuts off small elements ;  ; static void V2H (const TVectorD &vec, TH1D &histo);  Fill vector into 1D histogram. ;  ; static TVectorD VecDiv (const TVectorD &vec1, const TVectorD &vec2, Int_t zero=0);  Divide entries of two vectors. ;  . Private Attributes; Class members; Int_t fNdim;  ! Truth and reconstructed dimensions ;  ; Int_t fDdim;  ! Derivative for curvature matrix ;  ; Bool_t fNormalize;  ! Normalize unfolded spectrum to 1 ;  ; Int_t fKReg;  ! Regularisation parameter ;  ; TH1D * fDHist;  ! Distribution of d (for checking regularization) ;  ; TH1D * fSVHist;  ! Distribution of singular values ;  ; TH2D * fXtau; ",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:21289,Availability,error,error,21289," ; Definition at line 612 of file TSVDUnfold.cxx. ◆ GetCurvature(). Double_t TSVDUnfold::GetCurvature ; (; const TVectorD & ; vec, . const TMatrixD & ; curv . ). staticprivate . Compute curvature of vector. ; Definition at line 712 of file TSVDUnfold.cxx. ◆ GetD(). TH1D * TSVDUnfold::GetD ; (; ); const. Returns d vector (for choosing appropriate regularisation) ; Definition at line 576 of file TSVDUnfold.cxx. ◆ GetKReg(). Int_t TSVDUnfold::GetKReg ; (; ); const. inline . Definition at line 86 of file TSVDUnfold.h. ◆ GetSV(). TH1D * TSVDUnfold::GetSV ; (; ); const. Returns singular values vector. ; Definition at line 587 of file TSVDUnfold.cxx. ◆ GetUnfoldCovMatrix(). TH2D * TSVDUnfold::GetUnfoldCovMatrix ; (; const TH2D * ; cov, . Int_t ; ntoys, . Int_t ; seed = 1 . ). Determine for given input error matrix covariance matrix of unfolded spectrum from toy simulation given the passed covariance matrix on measured spectrum ""cov"" - covariance matrix on the measured spectrum, to be propagated ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments Note that this covariance matrix will contain effects of forced normalisation if spectrum is normalised to unit area. ; Definition at line 405 of file TSVDUnfold.cxx. ◆ GetXinv(). TH2D * TSVDUnfold::GetXinv ; (; ); const. Returns the computed inverse of the covariance matrix. ; Definition at line 604 of file TSVDUnfold.cxx. ◆ GetXtau(). TH2D * TSVDUnfold::GetXtau ; (; ); const. Returns the computed regularized covariance matrix corresponding to total uncertainties on measured spectrum as passed in the constructor. ; Note that this covariance matrix will not contain the effects of forced normalization if spectrum is normalized to unit area. ; Definition at line 596 of file TSVDUnfold.cxx. ◆ H2M(). void TSVDUnfold::H2M ; (; const TH2D * ; histo, . TMatrixD & ; mat . ). staticprivate . Fill 2D histogram into matrix. ; Definition at line 644 of file TSVDUnfold.cxx. ◆ H2V(). void TSVDUnfo",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:22759,Availability,error,errors,22759,"Xinv(). TH2D * TSVDUnfold::GetXinv ; (; ); const. Returns the computed inverse of the covariance matrix. ; Definition at line 604 of file TSVDUnfold.cxx. ◆ GetXtau(). TH2D * TSVDUnfold::GetXtau ; (; ); const. Returns the computed regularized covariance matrix corresponding to total uncertainties on measured spectrum as passed in the constructor. ; Note that this covariance matrix will not contain the effects of forced normalization if spectrum is normalized to unit area. ; Definition at line 596 of file TSVDUnfold.cxx. ◆ H2M(). void TSVDUnfold::H2M ; (; const TH2D * ; histo, . TMatrixD & ; mat . ). staticprivate . Fill 2D histogram into matrix. ; Definition at line 644 of file TSVDUnfold.cxx. ◆ H2V(). void TSVDUnfold::H2V ; (; const TH1D * ; histo, . TVectorD & ; vec . ). staticprivate . Fill 1D histogram into vector. ; Definition at line 620 of file TSVDUnfold.cxx. ◆ H2Verr(). void TSVDUnfold::H2Verr ; (; const TH1D * ; histo, . TVectorD & ; vec . ). staticprivate . Fill 1D histogram errors into vector. ; Definition at line 628 of file TSVDUnfold.cxx. ◆ InitHistos(). void TSVDUnfold::InitHistos ; (; ). private . Definition at line 807 of file TSVDUnfold.cxx. ◆ IsA(). TClass * TSVDUnfold::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 156 of file TSVDUnfold.h. ◆ M2H(). void TSVDUnfold::M2H ; (; const TMatrixD & ; mat, . TH2D & ; histo . ). staticprivate . Fill 2D histogram into matrix. ; Definition at line 656 of file TSVDUnfold.cxx. ◆ MatDivVec(). TMatrixD TSVDUnfold::MatDivVec ; (; const TMatrixD & ; mat, . const TVectorD & ; vec, . Int_t ; zero = 0 . ). staticprivate . Divide matrix entries by vector. ; Definition at line 684 of file TSVDUnfold.cxx. ◆ RegularisedSymMatInvert(). void TSVDUnfold::RegularisedSymMatInvert ; (; TMatrixDSym & ; mat, . Double_t ; eps = 1e-3 . ). staticprivate . naive regularised inversion cuts off small elements ; Definition at line 827 of file TSVDUnf",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:4179,Integrability,rout,routine,4179,"f->GetXinv(). The distribution of singular values can be retrieved using tsvdunf->GetSV(). ; See also the tutorial for a toy example. ; Definition at line 46 of file TSVDUnfold.h. Public Member Functions;  TSVDUnfold (const TH1D *bdat, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ;  ;  TSVDUnfold (const TH1D *bdat, TH2D *Bcov, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ;  ;  TSVDUnfold (const TSVDUnfold &other);  Copy constructor. ;  ;  ~TSVDUnfold () override;  Destructor. ;  ; Double_t ComputeChiSquared (const TH1D &truspec, const TH1D &unfspec);  Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ;  ; TH2D * GetAdetCovMatrix (Int_t ntoys, Int_t seed=1);  Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments. ;  ; TH2D * GetBCov () const;  Returns the covariance matrix. ;  ; TH1D * GetD () const;  Returns d vector (for choosing appropriate regularisation) ;  ; Int_t GetKReg () const;  ; TH1D * GetSV () const;  Returns singular values vector. ;  ; TH2D * GetUnfoldCovMatrix (const TH2D *cov, Int_t ntoys, Int_t seed=1);  Determine for given input error matrix covariance matrix of unfolded spectrum from toy simulation given the passed covariance matrix on measured spectrum ""cov"" - covariance matrix on the measured spectrum, to be propagated ""ntoys"" - number of pseudo experiments used for the propagation ""se",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:7726,Integrability,message,message,7726,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:8267,Integrability,message,message,8267,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:9469,Integrability,message,message,9469,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:12831,Integrability,message,message,12831," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:13204,Integrability,message,message,13204," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:19466,Integrability,rout,routine,19466," constructor. ; Definition at line 171 of file TSVDUnfold.cxx. ◆ ~TSVDUnfold(). TSVDUnfold::~TSVDUnfold ; (; ). override . Destructor. ; Definition at line 196 of file TSVDUnfold.cxx. Member Function Documentation. ◆ Class(). static TClass * TSVDUnfold::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSVDUnfold::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSVDUnfold::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 156 of file TSVDUnfold.h. ◆ CompProd(). TVectorD TSVDUnfold::CompProd ; (; const TVectorD & ; vec1, . const TVectorD & ; vec2 . ). staticprivate . Multiply entries of two vectors. ; Definition at line 702 of file TSVDUnfold.cxx. ◆ ComputeChiSquared(). Double_t TSVDUnfold::ComputeChiSquared ; (; const TH1D & ; truspec, . const TH1D & ; unfspec . ). Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ; Definition at line 880 of file TSVDUnfold.cxx. ◆ DeclFileName(). static const char * TSVDUnfold::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 156 of file TSVDUnfold.h. ◆ FillCurvatureMatrix(). void TSVDUnfold::FillCurvatureMatrix ; (; TMatrixD & ; tCurv, . TMatrixD & ; tC . ); const. private . Definition at line 719 of file TSVDUnfold.cxx. ◆ GetAdetCovMatrix(). TH2D * TSVDUnfold::GetAdetCovMatrix ; (; Int_t ; ntoys, . Int_t ; seed = 1 . ). Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments. ; Definition at line 511 of file TSVDUnfold.cxx. ◆ GetBCov(). TH2D * TSVDUnfold::GetBCov ; (; ); const. Returns the covariance matrix. ; Definition at line 612 of file TSVDUnfold.cxx. ◆ Ge",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:5959,Modifiability,inherit,inherited,5959,"atrix of unfolded spectrum from toy simulation given the passed covariance matrix on measured spectrum ""cov"" - covariance matrix on the measured spectrum, to be propagated ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments Note that this covariance matrix will contain effects of forced normalisation if spectrum is normalised to unit area. ;  ; TH2D * GetXinv () const;  Returns the computed inverse of the covariance matrix. ;  ; TH2D * GetXtau () const;  Returns the computed regularized covariance matrix corresponding to total uncertainties on measured spectrum as passed in the constructor. ;  ; TClass * IsA () const override;  ; void SetNormalize (Bool_t normalize);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TH1D * Unfold (Int_t kreg);  Perform the unfolding with regularisation parameter kreg. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:7356,Modifiability,inherit,inheritance,7356,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:9567,Modifiability,inherit,inherits,9567,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:9684,Modifiability,inherit,inherits,9684,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:13705,Modifiability,inherit,inherited,13705,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void FillCurvatureMatrix (TMatrixD &tCurv, TMatrixD &tC) const;  ; void InitHistos ();  . Static Private Member Functions; static TVectorD CompProd (const TVectorD &vec1, const TVectorD &vec2);  Multiply entries of two vectors. ;  ; static Double_t GetCurvature (const TVectorD &vec, const TMatrixD &curv);  Compute curvature of vector. ;  ; static void H2M (const TH2D *histo, TMatrixD &mat);  Fill 2D histogram into matrix. ;  ; static void H2V (const TH1D *histo, TVectorD &vec);  Fill 1D histogr",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:16549,Modifiability,inherit,inherited,16549,"egularisation parameter ;  ; TH1D * fDHist;  ! Distribution of d (for checking regularization) ;  ; TH1D * fSVHist;  ! Distribution of singular values ;  ; TH2D * fXtau;  ! Computed regularized covariance matrix ;  ; TH2D * fXinv;  ! Computed inverse of covariance matrix ;  ; Input histos; const TH1D * fBdat;  Measured distribution (data) ;  ; TH2D * fBcov;  Covariance matrix of measured distribution (data) ;  ; const TH1D * fBini;  Reconstructed distribution (MC) ;  ; const TH1D * fXini;  Truth distribution (MC) ;  ; const TH2D * fAdet;  Detector response matrix. ;  ; Evaluation of covariance matrices; TH1D * fToyhisto;  ! Toy MC histogram ;  ; TH2D * fToymat;  ! Toy MC detector response matrix ;  ; Bool_t fToyMode;  ! Internal switch for covariance matrix propagation ;  ; Bool_t fMatToyMode;  ! Internal switch for evaluation of statistical uncertainties from response matrix ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:17190,Modifiability,inherit,inherited,17190,"onse matrix ;  ; Bool_t fToyMode;  ! Internal switch for covariance matrix propagation ;  ; Bool_t fMatToyMode;  ! Internal switch for evaluation of statistical uncertainties from response matrix ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test sp",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:17289,Modifiability,inherit,inherited,17289,"onse matrix ;  ; Bool_t fToyMode;  ! Internal switch for covariance matrix propagation ;  ; Bool_t fMatToyMode;  ! Internal switch for evaluation of statistical uncertainties from response matrix ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test sp",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:1667,Performance,perform,performed,1667,". The regularisation of the unfolding is implemented via a discrete minimum-curvature condition. ; Monte Carlo inputs: . xini: true underlying spectrum (TH1D, n bins) . bini: reconstructed spectrum (TH1D, n bins) . Adet: response matrix (TH2D, nxn bins) . Consider the unfolding of a measured spectrum bdat with covariance matrix Bcov (if not passed explicitly, a diagonal covariance will be built given the errors of bdat). The corresponding spectrum in the Monte Carlo is given by bini, with the true underlying spectrum given by xini. The detector response is described by Adet, with Adet filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis. ; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of xini and Adet. The unfolding can be performed by TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TSVDUnfoldSVD Approach to Data Unfolding.Definition TSVDUnfold.h:46; TSVDUnfold::UnfoldTH1D * Unfold(Int_t kreg)Perform the unfolding with regularisation parameter kreg.Definition TSVDUnfold.cxx:237; where kreg determines the regularisation of the unfolding. In general, overregularisation (too small kreg) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large kreg) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be determined following guidelines in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] using the distribution of the |d_i| that can be obtained by tsvdunf->GetD() and/or using pseudo-experiments. ; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:1303,Safety,detect,detector,1303,"rum. Meth. A372, 469 (1996) [hep-ph/9509307] ; TSVDUnfold implements the singular value decomposition based unfolding method (see reference). Currently, the unfolding of one-dimensional histograms is supported, with the same number of bins for the measured and the unfolded spectrum. ; The unfolding procedure is based on singular value decomposition of the response matrix. The regularisation of the unfolding is implemented via a discrete minimum-curvature condition. ; Monte Carlo inputs: . xini: true underlying spectrum (TH1D, n bins) . bini: reconstructed spectrum (TH1D, n bins) . Adet: response matrix (TH2D, nxn bins) . Consider the unfolding of a measured spectrum bdat with covariance matrix Bcov (if not passed explicitly, a diagonal covariance will be built given the errors of bdat). The corresponding spectrum in the Monte Carlo is given by bini, with the true underlying spectrum given by xini. The detector response is described by Adet, with Adet filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis. ; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of xini and Adet. The unfolding can be performed by TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TSVDUnfoldSVD Approach to Data Unfolding.Definition TSVDUnfold.h:46; TSVDUnfold::UnfoldTH1D * Unfold(Int_t kreg)Perform the unfolding with regularisation parameter kreg.Definition TSVDUnfold.cxx:237; where kreg determines the regularisation of the unfolding. In general, overregularisation (too small kreg) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large kreg) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:3578,Safety,detect,detector,3578,"->GetD() and/or using pseudo-experiments. ; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the GetUnfoldCovMatrix method, which uses pseudo experiments for the propagation. In addition, GetAdetCovMatrix allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to Bcov is also computed as described in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] and can be obtained from tsvdunf->GetXtau() and its (regularisation independent) inverse from tsvdunf->GetXinv(). The distribution of singular values can be retrieved using tsvdunf->GetSV(). ; See also the tutorial for a toy example. ; Definition at line 46 of file TSVDUnfold.h. Public Member Functions;  TSVDUnfold (const TH1D *bdat, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ;  ;  TSVDUnfold (const TH1D *bdat, TH2D *Bcov, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ;  ;  TSVDUnfold (const TSVDUnfold &other);  Copy constructor. ;  ;  ~TSVDUnfold () override;  Destructor. ;  ; Double_t ComputeChiSquared (const TH1D &truspec, const TH1D &unfspec);  Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ;  ; TH2D * GetAdetCovMatrix (Int_t ntoys, Int_t seed=1);  Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments use",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:3907,Safety,detect,detector,3907,"ddition, GetAdetCovMatrix allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to Bcov is also computed as described in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] and can be obtained from tsvdunf->GetXtau() and its (regularisation independent) inverse from tsvdunf->GetXinv(). The distribution of singular values can be retrieved using tsvdunf->GetSV(). ; See also the tutorial for a toy example. ; Definition at line 46 of file TSVDUnfold.h. Public Member Functions;  TSVDUnfold (const TH1D *bdat, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ;  ;  TSVDUnfold (const TH1D *bdat, TH2D *Bcov, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ;  ;  TSVDUnfold (const TSVDUnfold &other);  Copy constructor. ;  ;  ~TSVDUnfold () override;  Destructor. ;  ; Double_t ComputeChiSquared (const TH1D &truspec, const TH1D &unfspec);  Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ;  ; TH2D * GetAdetCovMatrix (Int_t ntoys, Int_t seed=1);  Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments. ;  ; TH2D * GetBCov () const;  Returns the covariance matrix. ;  ; TH1D * GetD () const;  Returns d vector (for choosing appropriate regularisation) ;  ; Int_t GetKReg () const;  ; TH1D * GetSV () const;  Returns singular values vector. ; ",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:16291,Safety,detect,detector,16291,"t zero=0);  Divide entries of two vectors. ;  . Private Attributes; Class members; Int_t fNdim;  ! Truth and reconstructed dimensions ;  ; Int_t fDdim;  ! Derivative for curvature matrix ;  ; Bool_t fNormalize;  ! Normalize unfolded spectrum to 1 ;  ; Int_t fKReg;  ! Regularisation parameter ;  ; TH1D * fDHist;  ! Distribution of d (for checking regularization) ;  ; TH1D * fSVHist;  ! Distribution of singular values ;  ; TH2D * fXtau;  ! Computed regularized covariance matrix ;  ; TH2D * fXinv;  ! Computed inverse of covariance matrix ;  ; Input histos; const TH1D * fBdat;  Measured distribution (data) ;  ; TH2D * fBcov;  Covariance matrix of measured distribution (data) ;  ; const TH1D * fBini;  Reconstructed distribution (MC) ;  ; const TH1D * fXini;  Truth distribution (MC) ;  ; const TH2D * fAdet;  Detector response matrix. ;  ; Evaluation of covariance matrices; TH1D * fToyhisto;  ! Toy MC histogram ;  ; TH2D * fToymat;  ! Toy MC detector response matrix ;  ; Bool_t fToyMode;  ! Internal switch for covariance matrix propagation ;  ; Bool_t fMatToyMode;  ! Internal switch for evaluation of statistical uncertainties from response matrix ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int leve",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:17889,Safety,detect,detector,17889,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ; Definition at line 127 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [3/3]. TSVDUnfold::TSVDUnfold ; (; const TSVDUnfold & ; other). Copy constructor. ; Definition at line 171 of file TSVDUnfold.cxx. ◆ ~TSVDUnfold(). TSVDUnfold::~TSVDUnfold ; (; ). override . Destructor. ; Definition at line 196 of file TSVDUnfold.cxx. Member Function Documentation. ◆ Class(). static TClass * TSVDUnfold::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSVDUnfold::Class_Name ; (",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:18323,Safety,detect,detector,18323," virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ; Definition at line 127 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [3/3]. TSVDUnfold::TSVDUnfold ; (; const TSVDUnfold & ; other). Copy constructor. ; Definition at line 171 of file TSVDUnfold.cxx. ◆ ~TSVDUnfold(). TSVDUnfold::~TSVDUnfold ; (; ). override . Destructor. ; Definition at line 196 of file TSVDUnfold.cxx. Member Function Documentation. ◆ Class(). static TClass * TSVDUnfold::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSVDUnfold::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSVDUnfold::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 156 of file TSVDUnfold.h. ◆ CompProd(). TVectorD TSVDUnfold::CompProd ; (; const TVectorD & ; vec1, . const TVectorD & ; vec2 . ). staticprivate . Multiply entries of two vectors. ; Definition at line 702",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:26446,Safety,detect,detector,26446, private . ! Derivative for curvature matrix ; Definition at line 129 of file TSVDUnfold.h. ◆ fDHist. TH1D* TSVDUnfold::fDHist. private . ! Distribution of d (for checking regularization) ; Definition at line 132 of file TSVDUnfold.h. ◆ fKReg. Int_t TSVDUnfold::fKReg. private . ! Regularisation parameter ; Definition at line 131 of file TSVDUnfold.h. ◆ fMatToyMode. Bool_t TSVDUnfold::fMatToyMode. private . ! Internal switch for evaluation of statistical uncertainties from response matrix ; Definition at line 152 of file TSVDUnfold.h. ◆ fNdim. Int_t TSVDUnfold::fNdim. private . ! Truth and reconstructed dimensions ; Definition at line 128 of file TSVDUnfold.h. ◆ fNormalize. Bool_t TSVDUnfold::fNormalize. private . ! Normalize unfolded spectrum to 1 ; Definition at line 130 of file TSVDUnfold.h. ◆ fSVHist. TH1D* TSVDUnfold::fSVHist. private . ! Distribution of singular values ; Definition at line 133 of file TSVDUnfold.h. ◆ fToyhisto. TH1D* TSVDUnfold::fToyhisto. private . ! Toy MC histogram ; Definition at line 149 of file TSVDUnfold.h. ◆ fToymat. TH2D* TSVDUnfold::fToymat. private . ! Toy MC detector response matrix ; Definition at line 150 of file TSVDUnfold.h. ◆ fToyMode. Bool_t TSVDUnfold::fToyMode. private . ! Internal switch for covariance matrix propagation ; Definition at line 151 of file TSVDUnfold.h. ◆ fXini. const TH1D* TSVDUnfold::fXini. private . Truth distribution (MC) ; Definition at line 143 of file TSVDUnfold.h. ◆ fXinv. TH2D* TSVDUnfold::fXinv. private . ! Computed inverse of covariance matrix ; Definition at line 135 of file TSVDUnfold.h. ◆ fXtau. TH2D* TSVDUnfold::fXtau. private . ! Computed regularized covariance matrix ; Definition at line 134 of file TSVDUnfold.h. Libraries for TSVDUnfold:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TSVDUnfold.h; hist/hist/src/TSVDUnfold.cxx. TSVDUnfold. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:9198,Security,hash,hash,9198," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:3553,Testability,test,test,3553,"->GetD() and/or using pseudo-experiments. ; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the GetUnfoldCovMatrix method, which uses pseudo experiments for the propagation. In addition, GetAdetCovMatrix allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to Bcov is also computed as described in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] and can be obtained from tsvdunf->GetXtau() and its (regularisation independent) inverse from tsvdunf->GetXinv(). The distribution of singular values can be retrieved using tsvdunf->GetSV(). ; See also the tutorial for a toy example. ; Definition at line 46 of file TSVDUnfold.h. Public Member Functions;  TSVDUnfold (const TH1D *bdat, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ;  ;  TSVDUnfold (const TH1D *bdat, TH2D *Bcov, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ;  ;  TSVDUnfold (const TSVDUnfold &other);  Copy constructor. ;  ;  ~TSVDUnfold () override;  Destructor. ;  ; Double_t ComputeChiSquared (const TH1D &truspec, const TH1D &unfspec);  Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ;  ; TH2D * GetAdetCovMatrix (Int_t ntoys, Int_t seed=1);  Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments use",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:3882,Testability,test,test,3882,"ddition, GetAdetCovMatrix allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to Bcov is also computed as described in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] and can be obtained from tsvdunf->GetXtau() and its (regularisation independent) inverse from tsvdunf->GetXinv(). The distribution of singular values can be retrieved using tsvdunf->GetSV(). ; See also the tutorial for a toy example. ; Definition at line 46 of file TSVDUnfold.h. Public Member Functions;  TSVDUnfold (const TH1D *bdat, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ;  ;  TSVDUnfold (const TH1D *bdat, TH2D *Bcov, const TH1D *bini, const TH1D *xini, const TH2D *Adet);  Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ;  ;  TSVDUnfold (const TSVDUnfold &other);  Copy constructor. ;  ;  ~TSVDUnfold () override;  Destructor. ;  ; Double_t ComputeChiSquared (const TH1D &truspec, const TH1D &unfspec);  Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper. ;  ; TH2D * GetAdetCovMatrix (Int_t ntoys, Int_t seed=1);  Determine covariance matrix of unfolded spectrum from finite statistics in response matrix using pseudo experiments ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments. ;  ; TH2D * GetBCov () const;  Returns the covariance matrix. ;  ; TH1D * GetD () const;  Returns d vector (for choosing appropriate regularisation) ;  ; Int_t GetKReg () const;  ; TH1D * GetSV () const;  Returns singular values vector. ; ",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:17864,Testability,test,test,17864,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ; Definition at line 127 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [3/3]. TSVDUnfold::TSVDUnfold ; (; const TSVDUnfold & ; other). Copy constructor. ; Definition at line 171 of file TSVDUnfold.cxx. ◆ ~TSVDUnfold(). TSVDUnfold::~TSVDUnfold ; (; ). override . Destructor. ; Definition at line 196 of file TSVDUnfold.cxx. Member Function Documentation. ◆ Class(). static TClass * TSVDUnfold::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSVDUnfold::Class_Name ; (",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:18298,Testability,test,test,18298," virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ; Definition at line 127 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [3/3]. TSVDUnfold::TSVDUnfold ; (; const TSVDUnfold & ; other). Copy constructor. ; Definition at line 171 of file TSVDUnfold.cxx. ◆ ~TSVDUnfold(). TSVDUnfold::~TSVDUnfold ; (; ). override . Destructor. ; Definition at line 196 of file TSVDUnfold.cxx. Member Function Documentation. ◆ Class(). static TClass * TSVDUnfold::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSVDUnfold::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSVDUnfold::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 156 of file TSVDUnfold.h. ◆ CompProd(). TVectorD TSVDUnfold::CompProd ; (; const TVectorD & ; vec1, . const TVectorD & ; vec2 . ). staticprivate . Multiply entries of two vectors. ; Definition at line 702",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVDUnfold.html:2410,Usability,guid,guidelines,2410," with the true observable on the y-axis and the reconstructed observable on the x-axis. ; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of xini and Adet. The unfolding can be performed by TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TSVDUnfoldSVD Approach to Data Unfolding.Definition TSVDUnfold.h:46; TSVDUnfold::UnfoldTH1D * Unfold(Int_t kreg)Perform the unfolding with regularisation parameter kreg.Definition TSVDUnfold.cxx:237; where kreg determines the regularisation of the unfolding. In general, overregularisation (too small kreg) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large kreg) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be determined following guidelines in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] using the distribution of the |d_i| that can be obtained by tsvdunf->GetD() and/or using pseudo-experiments. ; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the GetUnfoldCovMatrix method, which uses pseudo experiments for the propagation. In addition, GetAdetCovMatrix allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to Bcov is also computed as described in Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307] and can be obtained from tsvdunf->GetXtau() and its (regularisation independent) inverse from tsvdunf->GetXinv(). The distribution of singular values can be retrieved using tsvdunf->GetSV(). ; See also the tutorial for a toy example. ; Definition at line 46 of file TSVDUnfold.h. P",MatchSource.WIKI,doc/master/classTSVDUnfold.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html
https://root.cern/doc/master/classTSVG.html:9806,Availability,error,error,9806,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:9895,Availability,error,error,9895,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:10050,Availability,error,error,10050,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:10347,Availability,error,error,10347,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:14431,Availability,error,error,14431,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:31041,Energy Efficiency,power,power,31041,"lPS.; Definition at line 1402 of file TSVG.cxx. ◆ DrawPS() [2/2]. void TSVG::DrawPS ; (; Int_t ; n, . Float_t * ; xw, . Float_t * ; yw . ). overridevirtual . Not needed in SVG case. ; Implements TVirtualPS.; Definition at line 2064 of file TSVG.cxx. ◆ Initialize(). void TSVG::Initialize ; (; ). Initialize the SVG file. ; The main task of the function is to output the SVG header file which consist in <title>, <desc> and <defs>. The HeaderPS provided by the user program is written in the <defs> part. ; Definition at line 1508 of file TSVG.cxx. ◆ IsA(). TClass * TSVG::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 80 of file TSVG.h. ◆ MovePS(). void TSVG::MovePS ; (; Double_t ; ix, . Double_t ; iy . ). Move to a new position (ix, iy). ; The move is done in relative coordinates which allows to have short numbers which decrease the size of the file. This function use the full power of the SVG's paths by using the horizontal and vertical move whenever it is possible. ; Definition at line 1543 of file TSVG.cxx. ◆ NewPage(). void TSVG::NewPage ; (; ). overridevirtual . Start the SVG page. ; This function initialize the pad conversion coefficients and output the <svg> directive which is close later in the the function Close. ; Implements TVirtualPS.; Definition at line 1564 of file TSVG.cxx. ◆ Off(). void TSVG::Off ; (; ). Deactivate an already open SVG file. ; Definition at line 203 of file TSVG.cxx. ◆ On(). void TSVG::On ; (; ). Activate an already open SVG file. ; Definition at line 187 of file TSVG.cxx. ◆ Open(). void TSVG::Open ; (; const char * ; filename, . Int_t ; type = -111 . ). overridevirtual . Open a SVG file. ; Implements TVirtualPS.; Definition at line 113 of file TSVG.cxx. ◆ Range(). void TSVG::Range ; (; Float_t ; xrange, . Float_t ; yrange . ). Set the range for the paper in centimetres. ; Definition at line 1596 of file TSVG.cxx. ◆ SetColor() [1/2]. void TSVG::SetColor ; (;",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:32208,Energy Efficiency,green,green,32208,"; ). overridevirtual . Start the SVG page. ; This function initialize the pad conversion coefficients and output the <svg> directive which is close later in the the function Close. ; Implements TVirtualPS.; Definition at line 1564 of file TSVG.cxx. ◆ Off(). void TSVG::Off ; (; ). Deactivate an already open SVG file. ; Definition at line 203 of file TSVG.cxx. ◆ On(). void TSVG::On ; (; ). Activate an already open SVG file. ; Definition at line 187 of file TSVG.cxx. ◆ Open(). void TSVG::Open ; (; const char * ; filename, . Int_t ; type = -111 . ). overridevirtual . Open a SVG file. ; Implements TVirtualPS.; Definition at line 113 of file TSVG.cxx. ◆ Range(). void TSVG::Range ; (; Float_t ; xrange, . Float_t ; yrange . ). Set the range for the paper in centimetres. ; Definition at line 1596 of file TSVG.cxx. ◆ SetColor() [1/2]. void TSVG::SetColor ; (; Float_t ; r, . Float_t ; g, . Float_t ; b . ). overridevirtual . Set color with its R G B components. . r: % of red in [0,1] –g: % of green in [0,1]; b: % of blue in [0,1] . Implements TVirtualPS.; Definition at line 1733 of file TSVG.cxx. ◆ SetColor() [2/2]. void TSVG::SetColor ; (; Int_t ; color = 1). Set RGB (without alpha channel) color with its color index. ; Definition at line 1715 of file TSVG.cxx. ◆ SetColorAlpha(). void TSVG::SetColorAlpha ; (; Int_t ; color = 1). Set RGBa color with its color index. ; Definition at line 1699 of file TSVG.cxx. ◆ SetFillColor(). void TSVG::SetFillColor ; (; Color_t ; cindex = 1). overridevirtual . Set color index for fill areas. ; Reimplemented from TAttFill.; Definition at line 1606 of file TSVG.cxx. ◆ SetLineCap(). void TSVG::SetLineCap ; (; Int_t ; linecap = 0). Set the value of the global parameter TSVG::fgLineCap. ; This parameter determines the appearance of line caps in a SVG output. It takes one argument which may be:; 0 (butt caps); 1 (round caps); 2 (projecting caps) The default value is 0 (butt caps). To change the line cap behaviour just do: gStyle->SetCapLinePS(2); /",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:2173,Integrability,interface,interface,2173,"st char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t heightDefinition TGWin32VirtualXProxy.cxx:164; It is best viewed with Internet Explorer and you need the Adobe SVG Viewer; To zoom using the Adobe SVG Viewer, position the mouse over the area you want to zoom and click the right button.; To define the zoom area, use Control+drag to mark the boundaries of the zoom area.; To pan, use Alt+drag. By clicking with the right mouse button on the SVG graphics you will get a pop-up menu giving other ways to interact with the image.; SVG files can be used directly in compressed mode to minimize the time transfer over the network. Compressed SVG files should be created using gzip on a normal ASCII SVG file and should then be renamed using the file extension .svgz. ; Definition at line 20 of file TSVG.h. Public Member Functions;  TSVG ();  Default SVG constructor. ;  ;  TSVG (const char *filename, Int_t type=-113);  Initialize the SVG interface. ;  ;  ~TSVG () override;  Default SVG destructor. ;  ; void CellArrayBegin (Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2) override;  Begin the Cell Array painting. ;  ; void CellArrayEnd () override;  End the Cell Array painting. ;  ; void CellArrayFill (Int_t r, Int_t g, Int_t b) override;  Paint the Cell Array. ;  ; void Close (Option_t *opt="""") override;  Close a SVG file. ;  ; Double_t CMtoSVG (Double_t u);  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Draw a Box. ;  ; void DrawFrame (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light) override;  Draw a Frame around a box. ;  ; void DrawPolyLine (Int_t n, TPoints *xy);  Draw a PolyLine. ;  ; void DrawPolyLineNDC (Int_t n, TPoints *uv);  Draw a PolyLine in NDC space. ;  ; void DrawPolyMarker (Int_t n, Double_t *x, Double_t *y) override;  Paint PolyMarker. ;  ; void DrawPolyMarker (Int",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:9812,Integrability,message,message,9812,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:10353,Integrability,message,message,10353,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:11343,Integrability,message,message,11343,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:14437,Integrability,message,message,14437,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:14810,Integrability,message,message,14810," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:25921,Integrability,interface,interface,25921,"tusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVG.h>. Inheritance diagram for TSVG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVG() [1/2]. TSVG::TSVG ; (; ). Default SVG constructor. ; Definition at line 81 of file TSVG.cxx. ◆ TSVG() [2/2]. TSVG::TSVG ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the SVG interface. . fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the SVG case). . Definition at line 103 of file TSVG.cxx. ◆ ~TSVG(). TSVG::~TSVG ; (; ). override . Default SVG destructor. ; Definition at line 163 of file TSVG.cxx. Member Function Documentation. ◆ CellArrayBegin(). void TSVG::CellArrayBegin ; (; Int_t ; W, . Int_t ; H, . Double_t ; x1, . Double_t ; x2, . Double_t ; y1, . Double_t ; y2 . ). overridevirtual . Begin the Cell Array painting. ; Implements TVirtualPS.; Definition at line 2039 of file TSVG.cxx. ◆ CellArrayEnd(). void TSVG::CellArrayEnd ; (; ). overridevirtual . End the Cell Array painting. ; Implements TVirtualPS.; Definition at line 2056 of file TSVG.cxx. ◆ CellArrayFill(). void TSVG::CellArrayFill ; (; Int_t ; r, . Int_t ; g, . Int_t ; b . ). overrid",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:5702,Modifiability,inherit,inherited,5702,"inewidth=1) override;  Set the lines width. ;  ; void SetMarkerColor (Color_t cindex=1) override;  Set color index for markers. ;  ; void SetTextColor (Color_t cindex=1) override;  Set color index for text. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Text (Double_t x, Double_t y, const char *string) override;  Draw text. ;  ; void Text (Double_t, Double_t, const wchar_t *) override;  ; void TextNDC (Double_t u, Double_t v, const char *string);  Write a string of characters in NDC. ;  ; void TextNDC (Double_t, Double_t, const wchar_t *);  ; Double_t UtoSVG (Double_t u);  Convert U from NDC coordinate to SVG. ;  ; Double_t VtoSVG (Double_t v);  Convert V from NDC coordinate to SVG. ;  ; Double_t XtoSVG (Double_t x);  Convert X from world coordinate to SVG. ;  ; Double_t YtoSVG (Double_t y);  Convert Y from world coordinate to SVG. ;  ;  Public Member Functions inherited from TVirtualPS;  TVirtualPS ();  VirtualPS default constructor. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetStream (std::ofstream *os);  ; virtual void SetType (Int_t=-111);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteInteger (Int_t i, Bool_t space=kTRUE);  Write one Integer to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inh",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:6721,Modifiability,inherit,inherited,6721,"r. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetStream (std::ofstream *os);  ; virtual void SetType (Int_t=-111);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteInteger (Int_t i, Bool_t space=kTRUE);  Write one Integer to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:8349,Modifiability,inherit,inherited,8349,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:9442,Modifiability,inherit,inheritance,9442,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:11441,Modifiability,inherit,inherits,11441,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:11558,Modifiability,inherit,inherits,11558,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:15117,Modifiability,inherit,inherited,15117,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:16412,Modifiability,inherit,inherited,16412,"o a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:17592,Modifiability,inherit,inherited,17592," ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attrib",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:18936,Modifiability,inherit,inherited,18936,"al Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ost",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:20942,Modifiability,inherit,inherited,20942,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:21156,Modifiability,inherit,inherited,21156,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:21366,Modifiability,inherit,inherited,21366,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:21884,Modifiability,inherit,inherited,21884,e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t ,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:22096,Modifiability,inherit,inherited,22096,e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t ,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:22308,Modifiability,inherit,inherited,22308,e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t ,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:22843,Modifiability,inherit,inherited,22843,ic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttF,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:23393,Modifiability,inherit,inherited,23393,ns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional In,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:23651,Modifiability,inherit,inherited,23651,ns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional In,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:23733,Modifiability,inherit,inherited,23733,ns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional In,MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:23894,Modifiability,inherit,inherited,23894,"har * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecat",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:24027,Modifiability,inherit,inherited,24027," Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << (",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:24199,Modifiability,inherit,inherited,24199,"e SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL <",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:24609,Modifiability,inherit,inherited,24609,"d; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVG.h>. Inheritance diagram for TSVG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [leg",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:25250,Modifiability,inherit,inherited,25250,"t font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVG.h>. Inheritance diagram for TSVG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVG() [1/2]. TSVG::TSVG ; (; ). Default SVG constructor. ; Definition at line 81 of file TSVG.cxx. ◆ TSVG() [2/2]. TSVG::TSVG ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the SVG interface. . fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the SVG case). . Definition at line 103 of file TSVG.cxx. ◆ ~TSVG(). TSVG::~TSVG ; (; ). override . Default SVG destructor. ; Definition at line 163 of file TSVG.cxx. Member",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:25349,Modifiability,inherit,inherited,25349,"t font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVG.h>. Inheritance diagram for TSVG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVG() [1/2]. TSVG::TSVG ; (; ). Default SVG constructor. ; Definition at line 81 of file TSVG.cxx. ◆ TSVG() [2/2]. TSVG::TSVG ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the SVG interface. . fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the SVG case). . Definition at line 103 of file TSVG.cxx. ◆ ~TSVG(). TSVG::~TSVG ; (; ). override . Default SVG destructor. ; Definition at line 163 of file TSVG.cxx. Member",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:26027,Modifiability,inherit,inherits,26027,"< ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVG.h>. Inheritance diagram for TSVG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVG() [1/2]. TSVG::TSVG ; (; ). Default SVG constructor. ; Definition at line 81 of file TSVG.cxx. ◆ TSVG() [2/2]. TSVG::TSVG ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the SVG interface. . fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the SVG case). . Definition at line 103 of file TSVG.cxx. ◆ ~TSVG(). TSVG::~TSVG ; (; ). override . Default SVG destructor. ; Definition at line 163 of file TSVG.cxx. Member Function Documentation. ◆ CellArrayBegin(). void TSVG::CellArrayBegin ; (; Int_t ; W, . Int_t ; H, . Double_t ; x1, . Double_t ; x2, . Double_t ; y1, . Double_t ; y2 . ). overridevirtual . Begin the Cell Array painting. ; Implements TVirtualPS.; Definition at line 2039 of file TSVG.cxx. ◆ CellArrayEnd(). void TSVG::CellArrayEnd ; (; ). overridevirtual . End the Cell Array painting. ; Implements TVirtualPS.; Definition at line 2056 of file TSVG.cxx. ◆ CellArrayFill(). void TSVG::CellArrayFill ; (; Int_t ; r, . Int_t ; g, . Int_t ; b . ). overridevirtual . Paint the Cell Array. ; Implements TVirtualPS.; Definition at line 2048 of file TSVG.cxx. ◆ Class(). static TClass ",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:7589,Security,hash,hash,7589,"ger to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSVG.html:555,Usability,simpl,simply,555,". ROOT: TSVG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TSVG Class ReferenceGraphics » 2D Graphics » Graphics file output. ; Interface to SVG. ; SVG (Scalable Vector Graphics) is a language for describing two-dimensional graphics in XML. SVG allows high quality vector graphics in HTML pages.; To print a ROOT canvas ""c1"" into an SVG file simply do: c1->Print(""c1.svg"");; c1return c1Definition legend1.C:41; The result is the ASCII file c1.svg.; It can be open directly using a web browser or included in a html document the following way: <embed width=""95%"" height=""500"" src=""c1.svg"">; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; srcOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t srcDefinition TGWin32VirtualXProxy.cxx:164; heightOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t heightDefinition TGWin32VirtualXProxy.cxx:164; It is best viewed with Internet Explorer and you need the Adobe SVG Viewer; To zoom using the Adobe SVG Viewer, position the mouse over the area you want to zoom and click the right button.; To define the zoom area, use Control+drag to mark the boundaries of the zoom area.; To pan, use Alt+drag. By clicking with the right mouse button on the SVG graphics you will get a pop-up menu giving other ways to interact with the image.; SVG files can be used directly in compressed mode to minimize the time transfer over the network. Compressed SVG files should be created using gzip on a normal ASCII SVG file and should then be renamed using the file extension .svgz. ;",MatchSource.WIKI,doc/master/classTSVG.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSVG.html
https://root.cern/doc/master/classTSynapse.html:748,Availability,error,error,748,". ROOT: TSynapse Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSynapse Class Reference. ; This is a simple weighted bidirectional connection between two neurons. ; A network is built connecting two neurons by a synapse. In addition to the value, the synapse can return the DeDw ; Definition at line 20 of file TSynapse.h. Public Member Functions;  TSynapse ();  Default constructor. ;  ;  TSynapse (TNeuron *, TNeuron *, Double_t w=1);  Constructor that connects two neurons. ;  ;  ~TSynapse () override;  ; Double_t GetDeDw () const;  Computes the derivative of the error wrt the synapse weight. ;  ; Double_t GetDEDw () const;  ; TNeuron * GetPost () const;  ; TNeuron * GetPre () const;  ; Double_t GetValue () const;  Returns the value: weighted input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the synapse weight. ;  ; void SetPost (TNeuron *post);  Sets the post-neuron. ;  ; void SetPre (TNeuron *pre);  Sets the pre-neuron. ;  ; void SetWeight (Double_t w);  Sets the weight of the synapse. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:1072,Availability,error,error,1072,"ass Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSynapse Class Reference. ; This is a simple weighted bidirectional connection between two neurons. ; A network is built connecting two neurons by a synapse. In addition to the value, the synapse can return the DeDw ; Definition at line 20 of file TSynapse.h. Public Member Functions;  TSynapse ();  Default constructor. ;  ;  TSynapse (TNeuron *, TNeuron *, Double_t w=1);  Constructor that connects two neurons. ;  ;  ~TSynapse () override;  ; Double_t GetDeDw () const;  Computes the derivative of the error wrt the synapse weight. ;  ; Double_t GetDEDw () const;  ; TNeuron * GetPost () const;  ; TNeuron * GetPre () const;  ; Double_t GetValue () const;  Returns the value: weighted input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the synapse weight. ;  ; void SetPost (TNeuron *post);  Sets the post-neuron. ;  ; void SetPre (TNeuron *pre);  Sets the pre-neuron. ;  ; void SetWeight (Double_t w);  Sets the weight of the synapse. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether th",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:3215,Availability,error,error,3215,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:3304,Availability,error,error,3304,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:3459,Availability,error,error,3459,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:3756,Availability,error,error,3756,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:8320,Availability,error,error,8320," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:9753,Availability,error,error,9753," to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fDEDw;  ! the derivative of the total error wrt the synapse weight ;  ; TNeuron * fpost;  the neuron after the synapse ;  ; TNeuron * fpre;  the neuron before the synapse ;  ; Double_t fweight;  the weight of the synapse ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const cha",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:12190,Availability,error,error,12190,"at line 29 of file TSynapse.cxx. ◆ TSynapse() [2/2]. TSynapse::TSynapse ; (; TNeuron * ; pre, . TNeuron * ; post, . Double_t ; w = 1 . ). Constructor that connects two neurons. ; Definition at line 40 of file TSynapse.cxx. ◆ ~TSynapse(). TSynapse::~TSynapse ; (; ). inlineoverride . Definition at line 24 of file TSynapse.h. Member Function Documentation. ◆ Class(). static TClass * TSynapse::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSynapse::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSynapse::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 42 of file TSynapse.h. ◆ DeclFileName(). static const char * TSynapse::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 42 of file TSynapse.h. ◆ GetDeDw(). Double_t TSynapse::GetDeDw ; (; ); const. Computes the derivative of the error wrt the synapse weight. ; Definition at line 89 of file TSynapse.cxx. ◆ GetDEDw(). Double_t TSynapse::GetDEDw ; (; ); const. inline . Definition at line 34 of file TSynapse.h. ◆ GetPost(). TNeuron * TSynapse::GetPost ; (; ); const. inline . Definition at line 28 of file TSynapse.h. ◆ GetPre(). TNeuron * TSynapse::GetPre ; (; ); const. inline . Definition at line 27 of file TSynapse.h. ◆ GetValue(). Double_t TSynapse::GetValue ; (; ); const. Returns the value: weighted input. ; Definition at line 79 of file TSynapse.cxx. ◆ GetWeight(). Double_t TSynapse::GetWeight ; (; ); const. inline . Definition at line 30 of file TSynapse.h. ◆ IsA(). TClass * TSynapse::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 42 of file TSynapse.h. ◆ SetDEDw(). void TSynapse::SetDEDw ; (; Double_t ; in). Sets the derivative of the total error wrt the synapse weight. ; Definition at line 110 of file TSynapse.cxx. ◆ SetP",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:13106,Availability,error,error,13106, ◆ GetDeDw(). Double_t TSynapse::GetDeDw ; (; ); const. Computes the derivative of the error wrt the synapse weight. ; Definition at line 89 of file TSynapse.cxx. ◆ GetDEDw(). Double_t TSynapse::GetDEDw ; (; ); const. inline . Definition at line 34 of file TSynapse.h. ◆ GetPost(). TNeuron * TSynapse::GetPost ; (; ); const. inline . Definition at line 28 of file TSynapse.h. ◆ GetPre(). TNeuron * TSynapse::GetPre ; (; ); const. inline . Definition at line 27 of file TSynapse.h. ◆ GetValue(). Double_t TSynapse::GetValue ; (; ); const. Returns the value: weighted input. ; Definition at line 79 of file TSynapse.cxx. ◆ GetWeight(). Double_t TSynapse::GetWeight ; (; ); const. inline . Definition at line 30 of file TSynapse.h. ◆ IsA(). TClass * TSynapse::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 42 of file TSynapse.h. ◆ SetDEDw(). void TSynapse::SetDEDw ; (; Double_t ; in). Sets the derivative of the total error wrt the synapse weight. ; Definition at line 110 of file TSynapse.cxx. ◆ SetPost(). void TSynapse::SetPost ; (; TNeuron * ; post). Sets the post-neuron. ; Definition at line 66 of file TSynapse.cxx. ◆ SetPre(). void TSynapse::SetPre ; (; TNeuron * ; pre). Sets the pre-neuron. ; Definition at line 53 of file TSynapse.cxx. ◆ SetWeight(). void TSynapse::SetWeight ; (; Double_t ; w). Sets the weight of the synapse. ; This weight is the multiplying factor applied on the output of a neuron in the linear combination given as input of another neuron. ; Definition at line 102 of file TSynapse.cxx. ◆ Streamer(). void TSynapse::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TSynapse::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 42 of file TSynapse.h. Member Data Documentation. ◆ fDEDw. Double_t TSynapse::fDEDw. private . ! the derivative of the tot,MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:14107,Availability,error,error,14107,file TSynapse.h. ◆ IsA(). TClass * TSynapse::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 42 of file TSynapse.h. ◆ SetDEDw(). void TSynapse::SetDEDw ; (; Double_t ; in). Sets the derivative of the total error wrt the synapse weight. ; Definition at line 110 of file TSynapse.cxx. ◆ SetPost(). void TSynapse::SetPost ; (; TNeuron * ; post). Sets the post-neuron. ; Definition at line 66 of file TSynapse.cxx. ◆ SetPre(). void TSynapse::SetPre ; (; TNeuron * ; pre). Sets the pre-neuron. ; Definition at line 53 of file TSynapse.cxx. ◆ SetWeight(). void TSynapse::SetWeight ; (; Double_t ; w). Sets the weight of the synapse. ; This weight is the multiplying factor applied on the output of a neuron in the linear combination given as input of another neuron. ; Definition at line 102 of file TSynapse.cxx. ◆ Streamer(). void TSynapse::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TSynapse::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 42 of file TSynapse.h. Member Data Documentation. ◆ fDEDw. Double_t TSynapse::fDEDw. private . ! the derivative of the total error wrt the synapse weight ; Definition at line 40 of file TSynapse.h. ◆ fpost. TNeuron* TSynapse::fpost. private . the neuron after the synapse ; Definition at line 38 of file TSynapse.h. ◆ fpre. TNeuron* TSynapse::fpre. private . the neuron before the synapse ; Definition at line 37 of file TSynapse.h. ◆ fweight. Double_t TSynapse::fweight. private . the weight of the synapse ; Definition at line 39 of file TSynapse.h. Libraries for TSynapse:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/TSynapse.h; math/mlp/src/TSynapse.cxx. TSynapse. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:3221,Integrability,message,message,3221,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:3762,Integrability,message,message,3762,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:4964,Integrability,message,message,4964,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:8326,Integrability,message,message,8326," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:8699,Integrability,message,message,8699," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:1454,Modifiability,inherit,inherited,1454,"pse can return the DeDw ; Definition at line 20 of file TSynapse.h. Public Member Functions;  TSynapse ();  Default constructor. ;  ;  TSynapse (TNeuron *, TNeuron *, Double_t w=1);  Constructor that connects two neurons. ;  ;  ~TSynapse () override;  ; Double_t GetDeDw () const;  Computes the derivative of the error wrt the synapse weight. ;  ; Double_t GetDEDw () const;  ; TNeuron * GetPost () const;  ; TNeuron * GetPre () const;  ; Double_t GetValue () const;  Returns the value: weighted input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the synapse weight. ;  ; void SetPost (TNeuron *post);  Sets the post-neuron. ;  ; void SetPre (TNeuron *pre);  Sets the pre-neuron. ;  ; void SetWeight (Double_t w);  Sets the weight of the synapse. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:2851,Modifiability,inherit,inheritance,2851,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:5062,Modifiability,inherit,inherits,5062,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:5179,Modifiability,inherit,inherits,5179,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:9200,Modifiability,inherit,inherited,9200,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fDEDw;  ! the derivative of the total error wrt the synapse weight ;  ; TNeuron * fpost;  the neuron after the synapse ;  ; TNeuron * fpre;  the neuron before the synapse ;  ; Double_t fweight;  the weight of the synapse ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrit",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:9985,Modifiability,inherit,inherited,9985,"c const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fDEDw;  ! the derivative of the total error wrt the synapse weight ;  ; TNeuron * fpost;  the neuron after the synapse ;  ; TNeuron * fpre;  the neuron before the synapse ;  ; Double_t fweight;  the weight of the synapse ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/TSynapse.h>. Inheritance diagram for TSynapse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera i",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:10626,Modifiability,inherit,inherited,10626,"of the total error wrt the synapse weight ;  ; TNeuron * fpost;  the neuron after the synapse ;  ; TNeuron * fpre;  the neuron before the synapse ;  ; Double_t fweight;  the weight of the synapse ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/TSynapse.h>. Inheritance diagram for TSynapse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSynapse() [1/2]. TSynapse::TSynapse ; (; ). Default constructor. ; Definition at line 29 of file TSynapse.cxx. ◆ TSynapse() [2/2]. TSynapse::TSynapse ; (; TNeuron * ; pre, . TNeuron * ; post, . Double_t ; w = 1 . ). Constructor that connects two neurons. ; Definition at line 40 of file TSynapse.cxx. ◆ ~TSynapse(). TSynapse::~TSynapse ; (; ). inlineoverride . Definition at line 24 of file TSynapse.h. Member Function Documentation. ◆ Class(). static TClass * TSynapse::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSynapse::Class_Name ; (; ). static . ReturnsName of this class",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:10725,Modifiability,inherit,inherited,10725,"of the total error wrt the synapse weight ;  ; TNeuron * fpost;  the neuron after the synapse ;  ; TNeuron * fpre;  the neuron before the synapse ;  ; Double_t fweight;  the weight of the synapse ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/TSynapse.h>. Inheritance diagram for TSynapse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSynapse() [1/2]. TSynapse::TSynapse ; (; ). Default constructor. ; Definition at line 29 of file TSynapse.cxx. ◆ TSynapse() [2/2]. TSynapse::TSynapse ; (; TNeuron * ; pre, . TNeuron * ; post, . Double_t ; w = 1 . ). Constructor that connects two neurons. ; Definition at line 40 of file TSynapse.cxx. ◆ ~TSynapse(). TSynapse::~TSynapse ; (; ). inlineoverride . Definition at line 24 of file TSynapse.h. Member Function Documentation. ◆ Class(). static TClass * TSynapse::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSynapse::Class_Name ; (; ). static . ReturnsName of this class",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:4693,Security,hash,hash,4693," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSynapse.html:281,Usability,simpl,simple,281,". ROOT: TSynapse Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSynapse Class Reference. ; This is a simple weighted bidirectional connection between two neurons. ; A network is built connecting two neurons by a synapse. In addition to the value, the synapse can return the DeDw ; Definition at line 20 of file TSynapse.h. Public Member Functions;  TSynapse ();  Default constructor. ;  ;  TSynapse (TNeuron *, TNeuron *, Double_t w=1);  Constructor that connects two neurons. ;  ;  ~TSynapse () override;  ; Double_t GetDeDw () const;  Computes the derivative of the error wrt the synapse weight. ;  ; Double_t GetDEDw () const;  ; TNeuron * GetPost () const;  ; TNeuron * GetPre () const;  ; Double_t GetValue () const;  Returns the value: weighted input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the synapse weight. ;  ; void SetPost (TNeuron *post);  Sets the post-neuron. ;  ; void SetPre (TNeuron *pre);  Sets the pre-neuron. ;  ; void SetWeight (Double_t w);  Sets the weight of the synapse. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and",MatchSource.WIKI,doc/master/classTSynapse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSynapse.html
https://root.cern/doc/master/classTSysEvtHandler.html:2984,Availability,error,error,2984,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:3073,Availability,error,error,3073,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:3228,Availability,error,error,3228,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:3525,Availability,error,error,3525,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:7960,Availability,error,error,7960," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:2990,Integrability,message,message,2990,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:3531,Integrability,message,message,3531,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:4733,Integrability,message,message,4733,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:7966,Integrability,message,message,7966," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:8339,Integrability,message,message,8339," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:1223,Modifiability,inherit,inherited,1223," Private Member Functions |; Private Attributes |; List of all members ; TSysEvtHandler Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Abstract base class for handling system events. ; Definition at line 28 of file TSysEvtHandler.h. Public Member Functions;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Add ()=0;  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual Bool_t Notify () override=0;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual void Remove ()=0;  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:2620,Modifiability,inherit,inheritance,2620,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:4831,Modifiability,inherit,inherits,4831,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:4948,Modifiability,inherit,inherits,4948,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:8646,Modifiability,inherit,inherited,8646," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:10808,Modifiability,inherit,inherited,10808," TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:11326,Modifiability,inherit,inherited,11326,"rOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:12613,Modifiability,inherit,inherited,12613,"l_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; void * GetSender () override;  . Private Attributes; Bool_t fIsActive;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:13254,Modifiability,inherit,inherited,13254," char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; void * GetSender () override;  . Private Attributes; Bool_t fIsActive;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:13353,Modifiability,inherit,inherited,13353," char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; void * GetSender () override;  . Private Attributes; Bool_t fIsActive;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:13564,Modifiability,inherit,inherited,13564," kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this objec",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:13677,Modifiability,inherit,inherited,13677," kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this objec",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:14526,Modifiability,inherit,inherited,14526,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSysEvtHandler.h>. Inheritance diagram for TSysEvtHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSysEvtHandler(). TSysEvtHandler::TSysEvtHandler ; (; ). inline . Definition at line 36 of file TSysEvtHandler.h. ◆ ~TSysEvtHandler(). virtual TSysEvtHandler::~TSysEvtHandler ; (; ). inlinevirtual . Definition at line 37 of file TSysEvtHandler.h. Member Function Documentation. ◆ Activate(). void TSysEvtHandler::Activate ; (; ). Activate a system event handler. ; All handlers are by default activated. Use this method to activate a de-activated handler. ; Definition at line 32 of file TSysEvtHandler.cxx. ◆ Activated(). virtual void TSysEvtHandler::Activated ; (; ). inlinevirtual . Definition at line 47 of file",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:14739,Modifiability,inherit,inherited,14739,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSysEvtHandler.h>. Inheritance diagram for TSysEvtHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSysEvtHandler(). TSysEvtHandler::TSysEvtHandler ; (; ). inline . Definition at line 36 of file TSysEvtHandler.h. ◆ ~TSysEvtHandler(). virtual TSysEvtHandler::~TSysEvtHandler ; (; ). inlinevirtual . Definition at line 37 of file TSysEvtHandler.h. Member Function Documentation. ◆ Activate(). void TSysEvtHandler::Activate ; (; ). Activate a system event handler. ; All handlers are by default activated. Use this method to activate a de-activated handler. ; Definition at line 32 of file TSysEvtHandler.cxx. ◆ Activated(). virtual void TSysEvtHandler::Activated ; (; ). inlinevirtual . Definition at line 47 of file",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:18143,Performance,load,load,18143,"eimplemented from TQObject.; Definition at line 33 of file TSysEvtHandler.h. ◆ IsA(). TClass * TSysEvtHandler::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TTimer.; Definition at line 53 of file TSysEvtHandler.h. ◆ IsActive(). Bool_t TSysEvtHandler::IsActive ; (; ); const. inline . Definition at line 41 of file TSysEvtHandler.h. ◆ Notified(). virtual void TSysEvtHandler::Notified ; (; ). inlinevirtual . Definition at line 49 of file TSysEvtHandler.h. ◆ Notify(). virtual Bool_t TSysEvtHandler::Notify ; (; ). overridepure virtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Implemented in TFileHandler, TSignalHandler, TStdExceptionHandler, TProcessEventTimer, TTimer, TIdleTimer, TSingleShotCleaner, TBrowserTimer, TInterruptHandler, TTermInputHandler, TThreadTimer, TGLRedrawTimer, TViewTimer, TGContainerKeyboardTimer, TGContainerScrollTimer, TGInputHandler, TViewUpdateTimer, TPopupDelayTimer, TRepeatTimer, TSBRepeatTimer, TBlinkTimer, TTipDelayTimer, TGuiBldDragManagerRepeatTimer, TARInterruptHandler, TASLogHandler, TASInterruptHandler, TASSigPipeHandler, TASInputHandler, TSocketHandler, TTimeOutTimer, TProofInterruptHandler, TProofInputHandler, TProofServLogHandler, TShutdownTimer, TReaperTimer, TIdleTOTimer, TProofServTerminationHandler, TProofServInterruptHandler, TProofServSigPipeHandler, TProofServInputHandler, TProofServLiteInterruptHandler, TProofServLiteSigPipeHandler, TProofServLiteTerminatio",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:18181,Performance,load,load,18181,"eimplemented from TQObject.; Definition at line 33 of file TSysEvtHandler.h. ◆ IsA(). TClass * TSysEvtHandler::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TTimer.; Definition at line 53 of file TSysEvtHandler.h. ◆ IsActive(). Bool_t TSysEvtHandler::IsActive ; (; ); const. inline . Definition at line 41 of file TSysEvtHandler.h. ◆ Notified(). virtual void TSysEvtHandler::Notified ; (; ). inlinevirtual . Definition at line 49 of file TSysEvtHandler.h. ◆ Notify(). virtual Bool_t TSysEvtHandler::Notify ; (; ). overridepure virtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchRef to load contents of referenced branches TBranchRef; most notably, based on Notify, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Implemented in TFileHandler, TSignalHandler, TStdExceptionHandler, TProcessEventTimer, TTimer, TIdleTimer, TSingleShotCleaner, TBrowserTimer, TInterruptHandler, TTermInputHandler, TThreadTimer, TGLRedrawTimer, TViewTimer, TGContainerKeyboardTimer, TGContainerScrollTimer, TGInputHandler, TViewUpdateTimer, TPopupDelayTimer, TRepeatTimer, TSBRepeatTimer, TBlinkTimer, TTipDelayTimer, TGuiBldDragManagerRepeatTimer, TARInterruptHandler, TASLogHandler, TASInterruptHandler, TASSigPipeHandler, TASInputHandler, TSocketHandler, TTimeOutTimer, TProofInterruptHandler, TProofInputHandler, TProofServLogHandler, TShutdownTimer, TReaperTimer, TIdleTOTimer, TProofServTerminationHandler, TProofServInterruptHandler, TProofServSigPipeHandler, TProofServInputHandler, TProofServLiteInterruptHandler, TProofServLiteSigPipeHandler, TProofServLiteTerminatio",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:16507,Safety,avoid,avoid,16507,"-activated handler. ; Definition at line 32 of file TSysEvtHandler.cxx. ◆ Activated(). virtual void TSysEvtHandler::Activated ; (; ). inlinevirtual . Definition at line 47 of file TSysEvtHandler.h. ◆ Add(). virtual void TSysEvtHandler::Add ; (; ). pure virtual . Implemented in TFileHandler, TSignalHandler, TStdExceptionHandler, and TTimer. ◆ Added(). virtual void TSysEvtHandler::Added ; (; ). inlinevirtual . Definition at line 50 of file TSysEvtHandler.h. ◆ Class(). static TClass * TSysEvtHandler::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSysEvtHandler::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSysEvtHandler::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 53 of file TSysEvtHandler.h. ◆ DeActivate(). void TSysEvtHandler::DeActivate ; (; ). De-activate a system event handler. ; Use this method to temporarily disable an event handler to avoid it from being recursively called. Use DeActivate() / Activate() instead of Remove() / Add() for this purpose, since the Add() will add the handler back to the end of the list of handlers and cause it to be called again for the same, already handled, event. ; Definition at line 46 of file TSysEvtHandler.cxx. ◆ DeActivated(). virtual void TSysEvtHandler::DeActivated ; (; ). inlinevirtual . Definition at line 48 of file TSysEvtHandler.h. ◆ DeclFileName(). static const char * TSysEvtHandler::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 53 of file TSysEvtHandler.h. ◆ GetSender(). void * TSysEvtHandler::GetSender ; (; ). inlineoverrideprivatevirtual . Reimplemented from TQObject.; Definition at line 33 of file TSysEvtHandler.h. ◆ IsA(). TClass * TSysEvtHandler::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TTimer.; Definiti",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSysEvtHandler.html:4462,Security,hash,hash,4462," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTSysEvtHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html
https://root.cern/doc/master/classTSystem-members.html:3308,Availability,error,error,3308,"ual; DoBeep(Int_t=-1, Int_t=-1) constTSysteminlineprotectedvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; DynamicPathName(const char *lib, Bool_t quiet=kFALSE)TSystem; DynFindSymbol(const char *module, const char *entry)TSystemvirtual; EAclicMode enum nameTSystem; EAclicProperties enum nameTSystem; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Exec(const char *shellcmd)TSystemvirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exit(int code, Bool_t mode=kTRUE)TSystemvirtual; ExitLoop()TSystemvirtual; ExpandFileName(const char *fname)TSystemprotectedvirtual; ExpandFileName(TString &fname)TSystemprotectedvirtual; ExpandFileName(const char *fname, char *xname, const int kBufSize)TSystemprivate; ExpandPathName(TString &path)TSystemvirtual; ExpandPathName(const char *path)TSystemvirtual; fAclicModeTSystemprotected; fAclicPropertiesTSystemprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBeepDurationTSystemprotected; fBeepFreqTSystemprotected; fBitsTObjectprivate; fBuildArchTSystemprotected; fBuildCompilerTSystemprotected; fBuildCompilerVersionTSystemprotected; fBuildCompilerVersionStrTSystemprotected; fBuildDirTSystemprotected; fBuildNodeTSystemprotected; fCompiledTSystemprotected; fDoneTSystemprotected; fFileHandlerTSystemprotected; fFlagsDebugTSystemprotected; fFlagsOptTSystemprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fHelpersTSystemprotected; fHostnameTSystemprotected; FillBuffer(char *&buffer)TNamedvirtual; fIncludeP",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:3389,Availability,error,error,3389,"ual; DoBeep(Int_t=-1, Int_t=-1) constTSysteminlineprotectedvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; DynamicPathName(const char *lib, Bool_t quiet=kFALSE)TSystem; DynFindSymbol(const char *module, const char *entry)TSystemvirtual; EAclicMode enum nameTSystem; EAclicProperties enum nameTSystem; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Exec(const char *shellcmd)TSystemvirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exit(int code, Bool_t mode=kTRUE)TSystemvirtual; ExitLoop()TSystemvirtual; ExpandFileName(const char *fname)TSystemprotectedvirtual; ExpandFileName(TString &fname)TSystemprotectedvirtual; ExpandFileName(const char *fname, char *xname, const int kBufSize)TSystemprivate; ExpandPathName(TString &path)TSystemvirtual; ExpandPathName(const char *path)TSystemvirtual; fAclicModeTSystemprotected; fAclicPropertiesTSystemprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBeepDurationTSystemprotected; fBeepFreqTSystemprotected; fBitsTObjectprivate; fBuildArchTSystemprotected; fBuildCompilerTSystemprotected; fBuildCompilerVersionTSystemprotected; fBuildCompilerVersionStrTSystemprotected; fBuildDirTSystemprotected; fBuildNodeTSystemprotected; fCompiledTSystemprotected; fDoneTSystemprotected; fFileHandlerTSystemprotected; fFlagsDebugTSystemprotected; fFlagsOptTSystemprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fHelpersTSystemprotected; fHostnameTSystemprotected; FillBuffer(char *&buffer)TNamedvirtual; fIncludeP",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:14274,Availability,mask,mask,14274,"r(TTimer *)TSysteminlinevirtual; Run()TSystemvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; Select(TList *active, Long_t timeout)TSystemvirtual; Select(TFileHandler *fh, Long_t timeout)TSystemvirtual; SendBuf(int sock, const void *buffer, int length)TSystemvirtual; SendRaw(int sock, const void *buffer, int length, int flag)TSystemvirtual; SetAclicMode(EAclicMode mode)TSystemvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetBuildDir(const char *build_dir, Bool_t isflat=kFALSE)TSystemvirtual; SetDisplay()TSystemvirtual; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetDynamicPath(const char *pathname)TSystemvirtual; Setenv(const char *name, const char *value)TSystemvirtual; SetErrorStr(const char *errstr)TSystem; SetFlagsDebug(const char *)TSystemvirtual; SetFlagsOpt(const char *)TSystemvirtual; SetFPEMask(Int_t mask=kDefaultMask)TSystemvirtual; SetIncludePath(const char *includePath)TSystemvirtual; SetLinkdefSuffix(const char *suffix)TSystemvirtual; SetLinkedLibs(const char *linkedLibs)TSystemvirtual; SetMakeExe(const char *directives)TSystemvirtual; SetMakeSharedLib(const char *directives)TSystemvirtual; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetObjExt(const char *objExt)TSystemvirtual; SetProgname(const char *name)TSystemvirtual; SetSockOpt(int sock, int kind, int val)TSystemvirtual; SetSoExt(const char *soExt)TSystemvirtual; SetTitle(const char *title="""")TNamedvirtual; SetUniqueID(UInt_t uid)TObjectvirtual; ShowOutput(RedirectHandle_t *h)TSystemvirtual; SigAlarmInterruptsSyscalls(Bool_t)TSysteminlineprotectedvirtual; Sizeof() constTNamedvirtual; Sleep(UInt_t milliSec)TSystemvirtual; SplitAclicMode(const char *filename, TString &mode, TString &args, TString &io) constTSystemvirtual; StackT",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:16269,Availability,mask,mask,16269,"eof() constTNamedvirtual; Sleep(UInt_t milliSec)TSystemvirtual; SplitAclicMode(const char *filename, TString &mode, TString &args, TString &io) constTSystemvirtual; StackTrace()TSystemvirtual; Streamer(TBuffer &) overrideTSystemvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TSysteminline; StripOffProto(const char *path, const char *proto)TSystemprotectedstatic; Symlink(const char *from, const char *to)TSystemvirtual; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; Syslog(ELogLevel level, const char *mess)TSystemvirtual; TempDirectory() constTSystemvirtual; TempFileName(TString &base, const char *dir=nullptr, const char *suffix=nullptr)TSystemvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TSystem(const TSystem &)=deleteTSystemprivate; TSystem(const char *name=""Generic"", const char *title=""Generic System"")TSystem; Umask(Int_t mask)TSystemvirtual; UnixPathName(const char *unixpathname)TSystemvirtual; Unlink(const char *name)TSystemvirtual; Unload(const char *module)TSystemvirtual; Unsetenv(const char *name)TSystemvirtual; UseCurrentStyle()TObjectvirtual; Utime(const char *file, Long_t modtime, Long_t actime)TSystemvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Which(const char *search, const char *file, EAccessMode mode=kFileExists)TSystemvirtual; WorkingDirectory()TSystemvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual; ~TSystem()TSystemvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:36 (GVA Time) using Doxygen 1.9.8 ",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:11565,Integrability,protocol,protocol,11565,"eTObjectprotected; kOpt enum valueTSystem; kOverwrite enum valueTObject; kSingleKey enum valueTObject; kWriteDelete enum valueTObject; kZombie enum valueTObject; Link(const char *from, const char *to)TSystemvirtual; ListLibraries(const char *regexp="""")TSystemvirtual; ListSymbols(const char *module, const char *re="""")TSystemvirtual; Load(const char *module, const char *entry="""", Bool_t system=kFALSE)TSystemvirtual; LoadAllLibraries()TSystemvirtual; ls(Option_t *option="""") const overrideTNamedvirtual; MakeDirectory(const char *name)TSystemvirtual; MakeZombie()TObjectinlineprotected; MayNotUse(const char *method) constTObject; mkdir(const char *name, Bool_t recursive=kFALSE)TSystemvirtual; NextTimeOut(Bool_t mode)TSystemvirtual; Notify()TObjectvirtual; NotifyApplicationCreated()TSystemvirtual; Now()TSystemvirtual; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; OpenConnection(const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"")TSystemvirtual; OpenDirectory(const char *name)TSystemvirtual; Openlog(const char *name, Int_t options, ELogFacility facility)TSystemvirtual; OpenPipe(const char *command, const char *mode)TSystemvirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TSystem &)=deleteTSystemprivate; TNamed::operator=(const TNamed &rhs)TNamed; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; Pop()TObjectvirtual; PrependPathName(const char *dir, TString &name)TSystemvirtual; Print(Option_t *option="""") const overrideTNamedvirtual; ProcessEvents()TSystemvirtual; pwd()TSysteminline; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:187,Modifiability,inherit,inherited,187,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSystem Member List. This is the complete list of members for TSystem, including all inherited members. Abort(int code=0)TSystemvirtual; AbstractMethod(const char *method) constTObject; AcceptConnection(int sock)TSystemvirtual; AccessPathName(const char *path, EAccessMode mode=kFileExists)TSystemvirtual; AddDynamicPath(const char *pathname)TSystemvirtual; AddFileHandler(TFileHandler *fh)TSystemvirtual; AddIncludePath(const char *includePath)TSystemvirtual; AddLinkedLibs(const char *linkedLib)TSystemvirtual; AddSignalHandler(TSignalHandler *sh)TSystemvirtual; AddStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; AddTimer(TTimer *t)TSystemvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize=-1)TSystemvirtual; AnnounceUdpService(int port, int backlog)TSystemvirtual; AnnounceUnixService(int port, int backlog)TSystemvirtual; AnnounceUnixService(const char *sockpath, int backlog)TSystemvirtual; AppendPad(Option_t *option="""")TObjectvirtual; BaseName(const char *pathname)TSystemvirtual; Beep(Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE)TSystem; Browse(TBrowser *b)TObjectvirtual; cd(const char *path)TSysteminline; ChangeDirectory(const char *path)TSystemvirtual; CheckedHash()TObjectinline; Chmod(const char *file, UInt_t mode)TSystemvirtual; Class()TSystemstatic; Class_Name()TSystemstatic; Class_Version()TSysteminlinestatic; ClassName() constTObjectvirtual; CleanCompiledMacros()TSystemvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloseConnection(int sock, Bool_t force=kFALSE)TSystemvirtual; Closelog()TSystemvirtual; ClosePipe(FILE *pipe)TSystemvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompileMacro(const char *filename, Option_t *opt="""", const char *library_name="""", const char *bui",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:13502,Safety,timeout,timeout,13502,"ad(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RecvBuf(int sock, void *buffer, int length)TSystemvirtual; RecvRaw(int sock, void *buffer, int length, int flag)TSystemvirtual; RedirectOutput(const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr)TSystemvirtual; RemoveFileHandler(TFileHandler *fh)TSystemvirtual; RemoveOnExit(TObject *obj)TSystem; RemoveSignalHandler(TSignalHandler *sh)TSystemvirtual; RemoveStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; RemoveTimer(TTimer *t)TSystemvirtual; Rename(const char *from, const char *to)TSystemvirtual; ResetBit(UInt_t f)TObjectinline; ResetErrno()TSystemstatic; ResetSignal(ESignals sig, Bool_t reset=kTRUE)TSystemvirtual; ResetSignals()TSystemvirtual; ResetTimer(TTimer *)TSysteminlinevirtual; Run()TSystemvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; Select(TList *active, Long_t timeout)TSystemvirtual; Select(TFileHandler *fh, Long_t timeout)TSystemvirtual; SendBuf(int sock, const void *buffer, int length)TSystemvirtual; SendRaw(int sock, const void *buffer, int length, int flag)TSystemvirtual; SetAclicMode(EAclicMode mode)TSystemvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetBuildDir(const char *build_dir, Bool_t isflat=kFALSE)TSystemvirtual; SetDisplay()TSystemvirtual; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetDynamicPath(const char *pathname)TSystemvirtual; Setenv(const char *name, const char *value)TSystemvirtual; SetErrorStr(const char *errstr)TSystem; SetFlagsDebug(const char *)TSystemvirtual; SetFlagsOpt(const char *)TSystemvirtual; SetFPEMask(Int_t mask=kDefaultMask)TSystemvirtual; SetIncludePath(const char *includePath)TSystemvirtual; SetLinkdefSuffix(const char *suffix)TSystemvirtual; SetLinkedLibs(const char *linkedLibs)TSystemvirtual; SetMakeExe(const char *directives)TSys",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem-members.html:13558,Safety,timeout,timeout,13558,"ect *obj)TObjectvirtual; RecvBuf(int sock, void *buffer, int length)TSystemvirtual; RecvRaw(int sock, void *buffer, int length, int flag)TSystemvirtual; RedirectOutput(const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr)TSystemvirtual; RemoveFileHandler(TFileHandler *fh)TSystemvirtual; RemoveOnExit(TObject *obj)TSystem; RemoveSignalHandler(TSignalHandler *sh)TSystemvirtual; RemoveStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; RemoveTimer(TTimer *t)TSystemvirtual; Rename(const char *from, const char *to)TSystemvirtual; ResetBit(UInt_t f)TObjectinline; ResetErrno()TSystemstatic; ResetSignal(ESignals sig, Bool_t reset=kTRUE)TSystemvirtual; ResetSignals()TSystemvirtual; ResetTimer(TTimer *)TSysteminlinevirtual; Run()TSystemvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; Select(TList *active, Long_t timeout)TSystemvirtual; Select(TFileHandler *fh, Long_t timeout)TSystemvirtual; SendBuf(int sock, const void *buffer, int length)TSystemvirtual; SendRaw(int sock, const void *buffer, int length, int flag)TSystemvirtual; SetAclicMode(EAclicMode mode)TSystemvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetBuildDir(const char *build_dir, Bool_t isflat=kFALSE)TSystemvirtual; SetDisplay()TSystemvirtual; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetDynamicPath(const char *pathname)TSystemvirtual; Setenv(const char *name, const char *value)TSystemvirtual; SetErrorStr(const char *errstr)TSystem; SetFlagsDebug(const char *)TSystemvirtual; SetFlagsOpt(const char *)TSystemvirtual; SetFPEMask(Int_t mask=kDefaultMask)TSystemvirtual; SetIncludePath(const char *includePath)TSystemvirtual; SetLinkdefSuffix(const char *suffix)TSystemvirtual; SetLinkedLibs(const char *linkedLibs)TSystemvirtual; SetMakeExe(const char *directives)TSystemvirtual; SetMakeSharedLib(const char *directives)TSys",MatchSource.WIKI,doc/master/classTSystem-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem-members.html
https://root.cern/doc/master/classTSystem.html:3718,Availability,error,error,3718,"ndler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int backlog);  Announce UDP service. ;  ; virtual int AnnounceUnixService (const char *sockpath, int backlog);  Announce unix domain service. ;  ; virtual int AnnounceUnixService (int port, int backlog);  Announce unix domain service. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory nam",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:7024,Availability,error,error,7024,"es whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that t",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:7650,Availability,error,error,7650," * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virt",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:17011,Availability,error,error,17011," descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and lis",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:17386,Availability,mask,mask,17386,"clicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set o",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:19895,Availability,mask,mask,19895,"bed by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:19938,Availability,mask,mask,19938,"bed by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:23717,Availability,error,error,23717,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:23806,Availability,error,error,23806,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:23961,Availability,error,error,23961,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:24258,Availability,error,error,24258,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:28342,Availability,error,error,28342,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error nu",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:29250,Availability,error,error,29250,"etUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWit",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:29330,Availability,error,error,29330,"char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) c",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:30824,Availability,error,error,30824,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:30942,Availability,error,error,30942,"flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:39418,Availability,error,error,39418,"Reimplemented in TWinNTSystem.; Definition at line 934 of file TSystem.cxx. ◆ Beep(). void TSystem::Beep ; (; Int_t ; freq = -1, . Int_t ; duration = -1, . Bool_t ; setDefault = kFALSE . ). Beep for duration milliseconds with a tone of frequency freq. ; Defaults to printing the \a character to stdout. If freq or duration is <0 respectively, use default value. If setDefault is set, only set the frequency and duration as new defaults, but don't beep. If default freq or duration is <0, never beep (silence) ; Definition at line 324 of file TSystem.cxx. ◆ cd(). Bool_t TSystem::cd ; (; const char * ; path). inline . Definition at line 423 of file TSystem.h. ◆ ChangeDirectory(). Bool_t TSystem::ChangeDirectory ; (; const char * ; path). virtual . Change directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 862 of file TSystem.cxx. ◆ Chmod(). int TSystem::Chmod ; (; const char * ; file, . UInt_t ; mode . ). virtual . Set the file permission bits. Returns -1 in case or error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1508 of file TSystem.cxx. ◆ Class(). static TClass * TSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 558 of file TSystem.h. ◆ CleanCompiledMacros(). void TSystem::CleanCompiledMacros ; (; ). virtual . Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ; Definition at line 4369 of file TSystem.cxx. ◆ CloseConnection(). void TSystem::CloseConnection ; (; int ; sock, . Bool_t ; force = kFALSE . ). virtual . Close socket connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2390 of file TSystem.cxx. ◆ Closelog(). v",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:41133,Availability,error,error,41133,"nd some more on Windows). ; Definition at line 4369 of file TSystem.cxx. ◆ CloseConnection(). void TSystem::CloseConnection ; (; int ; sock, . Bool_t ; force = kFALSE . ). virtual . Close socket connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2390 of file TSystem.cxx. ◆ Closelog(). void TSystem::Closelog ; (; ). virtual . Close connection to system log daemon. ; Reimplemented in TUnixSystem.; Definition at line 1694 of file TSystem.cxx. ◆ ClosePipe(). int TSystem::ClosePipe ; (; FILE * ; pipe). virtual . Close the pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 671 of file TSystem.cxx. ◆ CompileMacro(). int TSystem::CompileMacro ; (; const char * ; filename, . Option_t * ; opt = """", . const char * ; library_specified = """", . const char * ; build_dir = """", . UInt_t ; dirmode = 0 . ). virtual . This method compiles and loads a shared library containing the code from the file ""filename"". ; The return value is true (1) in case of success and false (0) in case of error.; The possible options are:; k : keep the shared library after the session end.; f : force recompilation.; g : compile with debug symbol; O : optimized the code; c : compile only, do not attempt to load the library.; s : silence all informational output; v : output all information output; d : debug ACLiC, keep all the output files.; - : if buildir is set, use a flat structure (see buildir below). If library_specified is specified, CompileMacro generates the file ""library_specified"".soext where soext is the shared library extension for the current platform.; If build_dir is specified, it is used as an alternative 'root' for the generation of the shared library. The library is stored in a sub-directories of 'build_dir' including the full pathname of the script unless a flat directory structure is requested ('-' option). With the '-' option the libraries are created directly in the directory 'build_dir'; in particular this means that 2 scripts with",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:44280,Availability,avail,available,44280,"feature:; Synopsis:; The purpose of this addition is to allow the user to use an external compiler to create a shared library from its C++ macro (scripts). Currently in order to execute a script, a user has to type at the root prompt .X myfunc.C(arg1,arg2); We allow them to type: .X myfunc.C++(arg1,arg2); or .X myfunc.C+(arg1,arg2); In which case an external compiler will be called to create a shared library. This shared library will then be loaded and the function myfunc will be called with the two arguments. With '++' the shared library is always recompiled. With '+' the shared library is recompiled only if it does not exist yet or the macro file is newer than the shared library.; Of course the + and ++ notation is supported in similar way for .x and .L.; Through the function TSystem::SetMakeSharedLib(), the user will be able to indicate, with shell commands, how to build a shared library (a good default will be provided). The most common change, namely where to find header files, will be available through the function TSystem::SetIncludePath(). A good default will be provided so that a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executabl",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45335,Availability,avail,available,45335,"TSystem::SetIncludePath(). A good default will be provided so that a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45623,Availability,avail,available,45623,"Path should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros() is called in the TROOT destructor. The default behavior of .L script.C+ is the opposite one, leaving things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes. ; Definition at line 2836 of file TSystem.cxx. ◆ ConcatFileName(). char * TSystem::ConcatFileName ; (; const char * ; dir, . const char * ; name . ). virt",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:47389,Availability,failure,failure,47389,"things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes. ; Definition at line 2836 of file TSystem.cxx. ◆ ConcatFileName(). char * TSystem::ConcatFileName ; (; const char * ; dir, . const char * ; name . ). virtual . Concatenate a directory and a file name. User must delete returned string. ; Definition at line 1071 of file TSystem.cxx. ◆ ConsistentWith(). Bool_t TSystem::ConsistentWith ; (; const char * ; path, . void * ; dirptr = nullptr . ). protectedvirtual . Check consistency of this helper with the one required by 'path' or 'dirptr'. ; Reimplemented in TDavixSystem, TNetSystem, and TNetXNGSystem.; Definition at line 804 of file TSystem.cxx. ◆ CopyFile(). int TSystem::CopyFile ; (; const char * ; from, . const char * ; to, . Bool_t ; overwrite = kFALSE . ). virtual . Copy a file. ; If overwrite is true and file already exists the file will be overwritten. Returns 0 when successful, -1 in case of file open failure, -2 in case the file already exists and overwrite was false and -3 in case of error during copy. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1341 of file TSystem.cxx. ◆ DeclFileName(). static const char * TSystem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 558 of file TSystem.h. ◆ DirName(). const char * TSystem::DirName ; (; const char * ; pathname). virtual . Return the directory name in pathname. ; DirName of /user/root is /user. In case no dirname is specified ""."" is returned. ; Reimplemented in TWinNTSystem.; Definition at line 1006 of file TSystem.cxx. ◆ DispatchOneEvent(). void TSystem::DispatchOneEvent ; (; Bool_t ; pendingOnly = kFALSE). virtual . Dispatch a single event. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 429 of file TSystem.cxx. ◆ DoBeep(). virtual void TSystem::DoBeep ; (; Int_t ; = -1, . Int_t ; = -1 . ); const. inlineprotectedvirtual . Reimpleme",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:47475,Availability,error,error,47475,"things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes. ; Definition at line 2836 of file TSystem.cxx. ◆ ConcatFileName(). char * TSystem::ConcatFileName ; (; const char * ; dir, . const char * ; name . ). virtual . Concatenate a directory and a file name. User must delete returned string. ; Definition at line 1071 of file TSystem.cxx. ◆ ConsistentWith(). Bool_t TSystem::ConsistentWith ; (; const char * ; path, . void * ; dirptr = nullptr . ). protectedvirtual . Check consistency of this helper with the one required by 'path' or 'dirptr'. ; Reimplemented in TDavixSystem, TNetSystem, and TNetXNGSystem.; Definition at line 804 of file TSystem.cxx. ◆ CopyFile(). int TSystem::CopyFile ; (; const char * ; from, . const char * ; to, . Bool_t ; overwrite = kFALSE . ). virtual . Copy a file. ; If overwrite is true and file already exists the file will be overwritten. Returns 0 when successful, -1 in case of file open failure, -2 in case the file already exists and overwrite was false and -3 in case of error during copy. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1341 of file TSystem.cxx. ◆ DeclFileName(). static const char * TSystem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 558 of file TSystem.h. ◆ DirName(). const char * TSystem::DirName ; (; const char * ; pathname). virtual . Return the directory name in pathname. ; DirName of /user/root is /user. In case no dirname is specified ""."" is returned. ; Reimplemented in TWinNTSystem.; Definition at line 1006 of file TSystem.cxx. ◆ DispatchOneEvent(). void TSystem::DispatchOneEvent ; (; Bool_t ; pendingOnly = kFALSE). virtual . Dispatch a single event. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 429 of file TSystem.cxx. ◆ DoBeep(). virtual void TSystem::DoBeep ; (; Int_t ; = -1, . Int_t ; = -1 . ); const. inlineprotectedvirtual . Reimpleme",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:50120,Availability,error,error,50120,"xec ; (; const char * ; shellcmd). virtual . Execute a command. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 653 of file TSystem.cxx. ◆ Exit(). void TSystem::Exit ; (; int ; code, . Bool_t ; mode = kTRUE . ). virtual . Exit the application. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 716 of file TSystem.cxx. ◆ ExitLoop(). void TSystem::ExitLoop ; (; ). virtual . Exit from event loop. ; Reimplemented in TWinNTSystem.; Definition at line 392 of file TSystem.cxx. ◆ ExpandFileName() [1/3]. const char * TSystem::ExpandFileName ; (; const char * ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. This is a protected function called from the OS specific system classes, like TUnixSystem and TWinNTSystem. Returns the expanded filename or 0 in case of error. ; Definition at line 1098 of file TSystem.cxx. ◆ ExpandFileName() [2/3]. Bool_t TSystem::ExpandFileName ; (; const char * ; fname, . char * ; xname, . const int ; kBufSize . ). private . Private method for pathname expansion. ; Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1132 of file TSystem.cxx. ◆ ExpandFileName() [3/3]. Bool_t TSystem::ExpandFileName ; (; TString & ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. This function is analogous to ExpandFileName(const char *), except that it receives a TString reference of the pathname to be expanded. Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1116 of file TSystem.cxx. ◆ ExpandPathName() [1/2]. char * TSystem::ExpandPathName ; (; const char * ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using en",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:50380,Availability,error,error,50380,"d in TUnixSystem, and TWinNTSystem.; Definition at line 716 of file TSystem.cxx. ◆ ExitLoop(). void TSystem::ExitLoop ; (; ). virtual . Exit from event loop. ; Reimplemented in TWinNTSystem.; Definition at line 392 of file TSystem.cxx. ◆ ExpandFileName() [1/3]. const char * TSystem::ExpandFileName ; (; const char * ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. This is a protected function called from the OS specific system classes, like TUnixSystem and TWinNTSystem. Returns the expanded filename or 0 in case of error. ; Definition at line 1098 of file TSystem.cxx. ◆ ExpandFileName() [2/3]. Bool_t TSystem::ExpandFileName ; (; const char * ; fname, . char * ; xname, . const int ; kBufSize . ). private . Private method for pathname expansion. ; Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1132 of file TSystem.cxx. ◆ ExpandFileName() [3/3]. Bool_t TSystem::ExpandFileName ; (; TString & ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. This function is analogous to ExpandFileName(const char *), except that it receives a TString reference of the pathname to be expanded. Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1116 of file TSystem.cxx. ◆ ExpandPathName() [1/2]. char * TSystem::ExpandPathName ; (; const char * ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. The user must delete returned string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1285 of file TSystem.cxx. ◆ ExpandPathName() [2/2]. Bool_t TSystem::E",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:50793,Availability,error,error,50793,"$, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. This is a protected function called from the OS specific system classes, like TUnixSystem and TWinNTSystem. Returns the expanded filename or 0 in case of error. ; Definition at line 1098 of file TSystem.cxx. ◆ ExpandFileName() [2/3]. Bool_t TSystem::ExpandFileName ; (; const char * ; fname, . char * ; xname, . const int ; kBufSize . ). private . Private method for pathname expansion. ; Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1132 of file TSystem.cxx. ◆ ExpandFileName() [3/3]. Bool_t TSystem::ExpandFileName ; (; TString & ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. This function is analogous to ExpandFileName(const char *), except that it receives a TString reference of the pathname to be expanded. Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1116 of file TSystem.cxx. ◆ ExpandPathName() [1/2]. char * TSystem::ExpandPathName ; (; const char * ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. The user must delete returned string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1285 of file TSystem.cxx. ◆ ExpandPathName() [2/2]. Bool_t TSystem::ExpandPathName ; (; TString & ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1274 of file TSystem.cxx. ◆ FindDynamicLibrary(). const",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:55154,Availability,error,error,55154,"const. virtual . Return the build compiler. ; Definition at line 3883 of file TSystem.cxx. ◆ GetBuildCompilerVersion(). const char * TSystem::GetBuildCompilerVersion ; (; ); const. virtual . Return the build compiler version. ; Definition at line 3891 of file TSystem.cxx. ◆ GetBuildCompilerVersionStr(). const char * TSystem::GetBuildCompilerVersionStr ; (; ); const. virtual . Return the build compiler version identifier string. ; Definition at line 3899 of file TSystem.cxx. ◆ GetBuildDir(). const char * TSystem::GetBuildDir ; (; ); const. virtual . Return the path of the build directory. ; Definition at line 3915 of file TSystem.cxx. ◆ GetBuildNode(). const char * TSystem::GetBuildNode ; (; ); const. virtual . Return the build node name. ; Definition at line 3907 of file TSystem.cxx. ◆ GetCpuInfo(). int TSystem::GetCpuInfo ; (; CpuInfo_t * ; info, . Int_t ; sampleTime = 1000 . ); const. virtual . Returns cpu load average and load info into the CpuInfo_t structure. ; Returns -1 in case of error, 0 otherwise. Use sampleTime to set the interval over which the CPU load will be measured, in ms (default 1000). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2469 of file TSystem.cxx. ◆ GetCryptoRandom(). Int_t TSystem::GetCryptoRandom ; (; void * ; buf, . Int_t ; len . ). virtual . Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 266 of file TSystem.cxx. ◆ GetDirEntry(). const char * TSystem::GetDirEntry ; (; void * ; dirp). virtual . Get a directory entry. Returns 0 if no more entries. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 853 of file TSystem.cxx. ◆ GetDirName(). TString TSystem::GetDirName ; (; const char * ; pathname). virtual . Return the directory name in pathname. ; DirName of /user/root ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:55603,Availability,error,error,55603,"he build compiler version identifier string. ; Definition at line 3899 of file TSystem.cxx. ◆ GetBuildDir(). const char * TSystem::GetBuildDir ; (; ); const. virtual . Return the path of the build directory. ; Definition at line 3915 of file TSystem.cxx. ◆ GetBuildNode(). const char * TSystem::GetBuildNode ; (; ); const. virtual . Return the build node name. ; Definition at line 3907 of file TSystem.cxx. ◆ GetCpuInfo(). int TSystem::GetCpuInfo ; (; CpuInfo_t * ; info, . Int_t ; sampleTime = 1000 . ); const. virtual . Returns cpu load average and load info into the CpuInfo_t structure. ; Returns -1 in case of error, 0 otherwise. Use sampleTime to set the interval over which the CPU load will be measured, in ms (default 1000). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2469 of file TSystem.cxx. ◆ GetCryptoRandom(). Int_t TSystem::GetCryptoRandom ; (; void * ; buf, . Int_t ; len . ). virtual . Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 266 of file TSystem.cxx. ◆ GetDirEntry(). const char * TSystem::GetDirEntry ; (; void * ; dirp). virtual . Get a directory entry. Returns 0 if no more entries. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 853 of file TSystem.cxx. ◆ GetDirName(). TString TSystem::GetDirName ; (; const char * ; pathname). virtual . Return the directory name in pathname. ; DirName of /user/root is /user. DirName of /user/root/ is also /user. In case no dirname is specified ""."" is returned. ; Reimplemented in TWinNTSystem.; Definition at line 1032 of file TSystem.cxx. ◆ GetDirPtr(). virtual void * TSystem::GetDirPtr ; (; ); const. inlinevirtual . Reimplemented in TDCacheSystem, TNetSystem, and TWebSystem.; Definition at line 416 of file TSystem.h. ◆ GetDynamicPath(). const cha",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:57580,Availability,error,error,57580,"(; ). virtual . Return the dynamic path (used to find shared libraries). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1795 of file TSystem.cxx. ◆ GetEffectiveGid(). Int_t TSystem::GetEffectiveGid ; (; ). virtual . Returns the effective group id. ; The effective group id corresponds to the set id bit on the file being executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1591 of file TSystem.cxx. ◆ GetEffectiveUid(). Int_t TSystem::GetEffectiveUid ; (; ). virtual . Returns the effective user id. ; The effective id corresponds to the set id bit on the file being executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1572 of file TSystem.cxx. ◆ Getenv(). const char * TSystem::Getenv ; (; const char * ; env). virtual . Get environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1665 of file TSystem.cxx. ◆ GetErrno(). Int_t TSystem::GetErrno ; (; ). static . Static function returning system error number. ; Definition at line 276 of file TSystem.cxx. ◆ GetError(). const char * TSystem::GetError ; (; ). virtual . Return system error string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 254 of file TSystem.cxx. ◆ GetErrorStr(). const char * TSystem::GetErrorStr ; (; ); const. inline . Definition at line 350 of file TSystem.h. ◆ GetFlagsDebug(). const char * TSystem::GetFlagsDebug ; (; ); const. virtual . Return the debug flags. ; Definition at line 3927 of file TSystem.cxx. ◆ GetFlagsOpt(). const char * TSystem::GetFlagsOpt ; (; ); const. virtual . Return the optimization flags. ; Definition at line 3935 of file TSystem.cxx. ◆ GetFPEMask(). Int_t TSystem::GetFPEMask ; (; ). virtual . Return the bitmap of conditions that trigger a floating point exception. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 632 of file TSystem.cxx. ◆ GetFromPipe(). TString TSystem::GetFromPipe ; (; const char * ; command). virtual . Execute ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:57717,Availability,error,error,57717," of file TSystem.cxx. ◆ GetEffectiveGid(). Int_t TSystem::GetEffectiveGid ; (; ). virtual . Returns the effective group id. ; The effective group id corresponds to the set id bit on the file being executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1591 of file TSystem.cxx. ◆ GetEffectiveUid(). Int_t TSystem::GetEffectiveUid ; (; ). virtual . Returns the effective user id. ; The effective id corresponds to the set id bit on the file being executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1572 of file TSystem.cxx. ◆ Getenv(). const char * TSystem::Getenv ; (; const char * ; env). virtual . Get environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1665 of file TSystem.cxx. ◆ GetErrno(). Int_t TSystem::GetErrno ; (; ). static . Static function returning system error number. ; Definition at line 276 of file TSystem.cxx. ◆ GetError(). const char * TSystem::GetError ; (; ). virtual . Return system error string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 254 of file TSystem.cxx. ◆ GetErrorStr(). const char * TSystem::GetErrorStr ; (; ); const. inline . Definition at line 350 of file TSystem.h. ◆ GetFlagsDebug(). const char * TSystem::GetFlagsDebug ; (; ); const. virtual . Return the debug flags. ; Definition at line 3927 of file TSystem.cxx. ◆ GetFlagsOpt(). const char * TSystem::GetFlagsOpt ; (; ); const. virtual . Return the optimization flags. ; Definition at line 3935 of file TSystem.cxx. ◆ GetFPEMask(). Int_t TSystem::GetFPEMask ; (; ). virtual . Return the bitmap of conditions that trigger a floating point exception. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 632 of file TSystem.cxx. ◆ GetFromPipe(). TString TSystem::GetFromPipe ; (; const char * ; command). virtual . Execute command and return output in TString. ; Definition at line 680 of file TSystem.cxx. ◆ GetFsInfo(). int TSystem::GetFsInfo ; (; const char * ; path",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:59602,Availability,error,error,59602,". ; Definition at line 680 of file TSystem.cxx. ◆ GetFsInfo(). int TSystem::GetFsInfo ; (; const char * ; path, . Long_t * ; id, . Long_t * ; bsize, . Long_t * ; blocks, . Long_t * ; bfree . ). virtual . Get info about a file system: fs type, block size, number of blocks, number of free blocks. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1472 of file TSystem.cxx. ◆ GetGid(). Int_t TSystem::GetGid ; (; const char * ; group = nullptr). virtual . Returns the group's id. If group = 0, returns current user's group. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1581 of file TSystem.cxx. ◆ GetGroupInfo() [1/2]. UserGroup_t * TSystem::GetGroupInfo ; (; const char * ; group = nullptr). virtual . Returns all group info in the UserGroup_t structure. ; The only active fields in the UserGroup_t structure for this call are:; fGid and fGroup If group = 0, returns current user's group. The returned structure must be deleted by the user. In case of error 0 is returned. . Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1638 of file TSystem.cxx. ◆ GetGroupInfo() [2/2]. UserGroup_t * TSystem::GetGroupInfo ; (; Int_t ; gid). virtual . Returns all group info in the UserGroup_t structure. ; The only active fields in the UserGroup_t structure for this call are:; fGid and fGroup The returned structure must be deleted by the user. In case of error 0 is returned. . Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1625 of file TSystem.cxx. ◆ GetHomeDirectory(). std::string TSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. virtual . Return the user's home directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 895 of file TSystem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:60014,Availability,error,error,60014,"ystem::GetGid ; (; const char * ; group = nullptr). virtual . Returns the group's id. If group = 0, returns current user's group. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1581 of file TSystem.cxx. ◆ GetGroupInfo() [1/2]. UserGroup_t * TSystem::GetGroupInfo ; (; const char * ; group = nullptr). virtual . Returns all group info in the UserGroup_t structure. ; The only active fields in the UserGroup_t structure for this call are:; fGid and fGroup If group = 0, returns current user's group. The returned structure must be deleted by the user. In case of error 0 is returned. . Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1638 of file TSystem.cxx. ◆ GetGroupInfo() [2/2]. UserGroup_t * TSystem::GetGroupInfo ; (; Int_t ; gid). virtual . Returns all group info in the UserGroup_t structure. ; The only active fields in the UserGroup_t structure for this call are:; fGid and fGroup The returned structure must be deleted by the user. In case of error 0 is returned. . Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1625 of file TSystem.cxx. ◆ GetHomeDirectory(). std::string TSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. virtual . Return the user's home directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 895 of file TSystem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem.cxx. ◆ GetIncludePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSyste",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:60904,Availability,error,error,60904,"s in the UserGroup_t structure for this call are:; fGid and fGroup The returned structure must be deleted by the user. In case of error 0 is returned. . Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1625 of file TSystem.cxx. ◆ GetHomeDirectory(). std::string TSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. virtual . Return the user's home directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 895 of file TSystem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem.cxx. ◆ GetIncludePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 213",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:61119,Availability,error,error,61119," line 1625 of file TSystem.cxx. ◆ GetHomeDirectory(). std::string TSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. virtual . Return the user's home directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 895 of file TSystem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem.cxx. ◆ GetIncludePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; De",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:61791,Availability,avail,available,61791," TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; Definition at line 4001 of file TSystem.cxx. ◆ GetLinkedLibraries(). const char * TSystem::GetLinkedLibraries ; (; ). protectedvirtual . Get list of shared libraries loaded at the start of the executable. ; Returns 0 in case list cannot be obtained or in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2120 of file TSystem.cxx. ◆ GetLinkedLibs(). const char * TSystem::GetLinkedLibs ; (; ); const. virtual . Return the list of library linked to this executable. ; See TSystem::CompileMacro for more details. ; Definition at line 3992 of file TSystem.cxx. ◆ GetListOfFileHandlers(). virtual TSeqCollection * TSystem::GetListOfFileHandlers ; (; ); const. inli",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:62361,Availability,error,error,62361,"tual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; Definition at line 4001 of file TSystem.cxx. ◆ GetLinkedLibraries(). const char * TSystem::GetLinkedLibraries ; (; ). protectedvirtual . Get list of shared libraries loaded at the start of the executable. ; Returns 0 in case list cannot be obtained or in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2120 of file TSystem.cxx. ◆ GetLinkedLibs(). const char * TSystem::GetLinkedLibs ; (; ); const. virtual . Return the list of library linked to this executable. ; See TSystem::CompileMacro for more details. ; Definition at line 3992 of file TSystem.cxx. ◆ GetListOfFileHandlers(). virtual TSeqCollection * TSystem::GetListOfFileHandlers ; (; ); const. inlinevirtual . Definition at line 382 of file TSystem.h. ◆ GetListOfSignalHandlers(). virtual TSeqCollection * TSystem::GetListOfSignalHandlers ; (; ); const. inlinevirtual . Definition at line 379 of file TSystem.h. ◆ GetListOfStdExceptionHandlers(). virtual TSeqCollection * TSystem::GetListOfStdExceptionHandlers ; (; ); const. inlinevirtual . Definition at line 385 of file TSystem.h. ◆ GetListOfTimers(). virtual TList * TSystem::GetListOfTimers ; (; ); const. inlinevirtual . Definition at line 393 of file TSystem.h. ◆ GetMakeExe(). const",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:63941,Availability,error,error,63941," ); const. inlinevirtual . Definition at line 379 of file TSystem.h. ◆ GetListOfStdExceptionHandlers(). virtual TSeqCollection * TSystem::GetListOfStdExceptionHandlers ; (; ); const. inlinevirtual . Definition at line 385 of file TSystem.h. ◆ GetListOfTimers(). virtual TList * TSystem::GetListOfTimers ; (; ); const. inlinevirtual . Definition at line 393 of file TSystem.h. ◆ GetMakeExe(). const char * TSystem::GetMakeExe ; (; ); const. virtual . Return the command line use to make an executable. ; See TSystem::CompileMacro for more details. ; Definition at line 3965 of file TSystem.cxx. ◆ GetMakeSharedLib(). const char * TSystem::GetMakeSharedLib ; (; ); const. virtual . Return the command line use to make a shared library. ; See TSystem::CompileMacro for more details. ; Definition at line 3956 of file TSystem.cxx. ◆ GetMemInfo(). int TSystem::GetMemInfo ; (; MemInfo_t * ; info); const. virtual . Returns ram and swap memory usage info into the MemInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2479 of file TSystem.cxx. ◆ GetObjExt(). const char * TSystem::GetObjExt ; (; ); const. virtual . Get the object file extension. ; Definition at line 4021 of file TSystem.cxx. ◆ GetPathInfo() [1/3]. int TSystem::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf . ). virtual . Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1462 of file TSystem.cxx. ◆ GetPathInfo() [2/3]. int TSystem::GetPathInfo ; (; const char * ; path, . Long_t * ; id, . Long64_t * ; size, . Long_t * ; flags, . Long_t * ; modtime . ). Get info about a file: id, size, flags, modification time. . Id is (statbuf.st_dev << 24) + statbuf.st_ino; Size is the ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:66401,Availability,error,error,66401,"t info about a file: id, size, flags, modification time. . Id is (statbuf.st_dev << 24) + statbuf.st_ino; Size is the file size; Flags is file type: 0 is regular file, bit 0 set executable, bit 1 set directory, bit 2 set special file (socket, fifo, pipe, etc.) Modtime is modification time. The function returns 0 in case of success and 1 if the file could not be stat'ed. . Definition at line 1398 of file TSystem.cxx. ◆ GetPeerName(). TInetAddress TSystem::GetPeerName ; (; int ; sock). virtual . Get Internet Protocol (IP) address of remote host and port #. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2300 of file TSystem.cxx. ◆ GetPid(). int TSystem::GetPid ; (; ). virtual . Get process id. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 707 of file TSystem.cxx. ◆ GetProcInfo(). int TSystem::GetProcInfo ; (; ProcInfo_t * ; info); const. virtual . Returns cpu and memory used by this process into the ProcInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2489 of file TSystem.cxx. ◆ GetServiceByName(). int TSystem::GetServiceByName ; (; const char * ; service). virtual . Get port # of internet service. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2318 of file TSystem.cxx. ◆ GetServiceByPort(). char * TSystem::GetServiceByPort ; (; int ; port). virtual . Get name of internet service. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2327 of file TSystem.cxx. ◆ GetSockName(). TInetAddress TSystem::GetSockName ; (; int ; sock). virtual . Get Internet Protocol (IP) address of host and port #. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2309 of file TSystem.cxx. ◆ GetSockOpt(). int TSystem::GetSockOpt ; (; int ; sock, . int ; kind, . int * ; val . ). virtual . Get socket option. ; Reimplemented in TWinNTSystem, and TUnixSystem.; Definition at line 2445 of file TSystem.cxx. ◆ GetSo",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:67760,Availability,error,error,67760,". char * TSystem::GetServiceByPort ; (; int ; port). virtual . Get name of internet service. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2327 of file TSystem.cxx. ◆ GetSockName(). TInetAddress TSystem::GetSockName ; (; int ; sock). virtual . Get Internet Protocol (IP) address of host and port #. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2309 of file TSystem.cxx. ◆ GetSockOpt(). int TSystem::GetSockOpt ; (; int ; sock, . int ; kind, . int * ; val . ). virtual . Get socket option. ; Reimplemented in TWinNTSystem, and TUnixSystem.; Definition at line 2445 of file TSystem.cxx. ◆ GetSoExt(). const char * TSystem::GetSoExt ; (; ); const. virtual . Get the shared library extension. ; Definition at line 4013 of file TSystem.cxx. ◆ GetSysInfo(). int TSystem::GetSysInfo ; (; SysInfo_t * ; info); const. virtual . Returns static system info, like OS type, CPU type, number of CPUs RAM size, etc into the SysInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2458 of file TSystem.cxx. ◆ GetUid(). Int_t TSystem::GetUid ; (; const char * ; user = nullptr). virtual . Returns the user's id. If user = 0, returns current user's id. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1562 of file TSystem.cxx. ◆ GetUserInfo() [1/2]. UserGroup_t * TSystem::GetUserInfo ; (; const char * ; user = nullptr). virtual . Returns all user info in the UserGroup_t structure. ; If user = 0, returns current user's id info. The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1612 of file TSystem.cxx. ◆ GetUserInfo() [2/2]. UserGroup_t * TSystem::GetUserInfo ; (; Int_t ; uid). virtual . Returns all user info in the UserGroup_t structure. ; The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented in TUnixSystem, ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:68383,Availability,error,error,68383,"xx. ◆ GetSoExt(). const char * TSystem::GetSoExt ; (; ); const. virtual . Get the shared library extension. ; Definition at line 4013 of file TSystem.cxx. ◆ GetSysInfo(). int TSystem::GetSysInfo ; (; SysInfo_t * ; info); const. virtual . Returns static system info, like OS type, CPU type, number of CPUs RAM size, etc into the SysInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2458 of file TSystem.cxx. ◆ GetUid(). Int_t TSystem::GetUid ; (; const char * ; user = nullptr). virtual . Returns the user's id. If user = 0, returns current user's id. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1562 of file TSystem.cxx. ◆ GetUserInfo() [1/2]. UserGroup_t * TSystem::GetUserInfo ; (; const char * ; user = nullptr). virtual . Returns all user info in the UserGroup_t structure. ; If user = 0, returns current user's id info. The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1612 of file TSystem.cxx. ◆ GetUserInfo() [2/2]. UserGroup_t * TSystem::GetUserInfo ; (; Int_t ; uid). virtual . Returns all user info in the UserGroup_t structure. ; The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1601 of file TSystem.cxx. ◆ GetVolumes(). virtual TList * TSystem::GetVolumes ; (; Option_t * ; ); const. inlinevirtual . Reimplemented in TWinNTSystem.; Definition at line 455 of file TSystem.h. ◆ GetWorkingDirectory(). std::string TSystem::GetWorkingDirectory ; (; ); const. virtual . Return working directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 879 of file TSystem.cxx. ◆ HomeDirectory(). const char * TSystem::HomeDirectory ; (; const char * ; userName = nullptr). virtual . Return the user's home directory. ; Reimplemented in TWinNTSystem, and TUnixSy",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:68704,Availability,error,error,68704,"to the SysInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2458 of file TSystem.cxx. ◆ GetUid(). Int_t TSystem::GetUid ; (; const char * ; user = nullptr). virtual . Returns the user's id. If user = 0, returns current user's id. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1562 of file TSystem.cxx. ◆ GetUserInfo() [1/2]. UserGroup_t * TSystem::GetUserInfo ; (; const char * ; user = nullptr). virtual . Returns all user info in the UserGroup_t structure. ; If user = 0, returns current user's id info. The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1612 of file TSystem.cxx. ◆ GetUserInfo() [2/2]. UserGroup_t * TSystem::GetUserInfo ; (; Int_t ; uid). virtual . Returns all user info in the UserGroup_t structure. ; The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1601 of file TSystem.cxx. ◆ GetVolumes(). virtual TList * TSystem::GetVolumes ; (; Option_t * ; ); const. inlinevirtual . Reimplemented in TWinNTSystem.; Definition at line 455 of file TSystem.h. ◆ GetWorkingDirectory(). std::string TSystem::GetWorkingDirectory ; (; ); const. virtual . Return working directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 879 of file TSystem.cxx. ◆ HomeDirectory(). const char * TSystem::HomeDirectory ; (; const char * ; userName = nullptr). virtual . Return the user's home directory. ; Reimplemented in TWinNTSystem, and TUnixSystem.; Definition at line 887 of file TSystem.cxx. ◆ HostName(). const char * TSystem::HostName ; (; ). virtual . Return the system's host name. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 303 of file TSystem.cxx. ◆ IgnoreInterrupt(). void TSystem::IgnoreInterrupt ; (; Bool_t ; ignore = kTRUE).",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:73215,Availability,error,error,73215,"egexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system flag is kTRUE, the library is considered a permanent system library that should not be unloaded during the course of the session. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1857 of file TSystem.cxx. ◆ LoadAllLibraries(). UInt_t TSystem::LoadAllLibraries ; (; ). virtual . Load all libraries known to ROOT via the rootmap system. ; Returns the number of top level libraries successfully loaded. ; Definition at line 1970 of file TSystem.cxx. ◆ MakeDirectory(). int TSystem::MakeDirectory ; (; const char * ; name). virtual . Make a directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, T",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:78824,Availability,error,error,78824," ; Use opt to receive out-of-band data or to have a peek at what is in the buffer (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2399 of file TSystem.cxx. ◆ RedirectOutput(). Int_t TSystem::RedirectOutput ; (; const char * ; name, . const char * ; mode = ""a"", . RedirectHandle_t * ; h = nullptr . ). virtual . Redirect standard output (stdout, stderr) to the specified file. ; If the file argument is 0 the output is set again to stderr, stdout. The second argument specifies whether the output should be added to the file (""a"", default) or the file be truncated before (""w""). The implementations of this function save internally the current state into a static structure.; The call can be made reentrant by specifying the opaque structure pointed by 'h', which is filled with the relevant information. The handle 'h' obtained on the first call must then be used in any subsequent call, included ShowOutput, to display the redirected output. Returns 0 on success, -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1715 of file TSystem.cxx. ◆ RemoveFileHandler(). TFileHandler * TSystem::RemoveFileHandler ; (; TFileHandler * ; h). virtual . Remove a file handler from the list of file handlers. ; Returns the handler or 0 if the handler was not in the list of file handlers. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 564 of file TSystem.cxx. ◆ RemoveOnExit(). void TSystem::RemoveOnExit ; (; TObject * ; obj). Objects that should be deleted on exit of the OS interface. ; Definition at line 292 of file TSystem.cxx. ◆ RemoveSignalHandler(). TSignalHandler * TSystem::RemoveSignalHandler ; (; TSignalHandler * ; h). virtual . Remove a signal handler from list of signal handlers. ; Returns the handler or 0 if the handler was not in the list of signal handlers. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 542 of file TSystem.cxx. ◆ RemoveStdExceptionHan",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:80675,Availability,error,error,80675,"e list of signal handlers. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 542 of file TSystem.cxx. ◆ RemoveStdExceptionHandler(). TStdExceptionHandler * TSystem::RemoveStdExceptionHandler ; (; TStdExceptionHandler * ; eh). virtual . Remove an exception handler from list of exception handlers. ; Returns the handler or 0 if the handler was not in the list of exception handlers. ; Definition at line 621 of file TSystem.cxx. ◆ RemoveTimer(). TTimer * TSystem::RemoveTimer ; (; TTimer * ; ti). virtual . Remove timer from list of system timers. ; Returns removed timer or 0 if timer was not active. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 481 of file TSystem.cxx. ◆ Rename(). int TSystem::Rename ; (; const char * ; from, . const char * ; to . ). virtual . Rename a file. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1350 of file TSystem.cxx. ◆ ResetErrno(). void TSystem::ResetErrno ; (; ). static . Static function resetting system error number. ; Definition at line 284 of file TSystem.cxx. ◆ ResetSignal(). void TSystem::ResetSignal ; (; ESignals ; sig, . Bool_t ; reset = kTRUE . ). virtual . If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 576 of file TSystem.cxx. ◆ ResetSignals(). void TSystem::ResetSignals ; (; ). virtual . Reset signals handlers to previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 584 of file TSystem.cxx. ◆ ResetTimer(). virtual void TSystem::ResetTimer ; (; TTimer * ; ). inlinevirtual . Reimplemented in TUnixSystem.; Definition at line 396 of file TSystem.h. ◆ Run(). void TSystem::Run ; (; ). virtual . System event loop. ; Definition at line 343 of file TSystem.cxx. ◆ Select() [1/2]. Int_t TSystem::Select ; (; TFileHandler * ; fh, . Long_t ; timeout . ). virtual . Select on active file descriptors (c",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:84720,Availability,error,error,84720," in different source directory will over-write each other. . NoteThis build_dir can also be controlled via ACLiC.BuildDir in your .rootrc. ; Definition at line 4043 of file TSystem.cxx. ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). virtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented in TUnixSystem, and TWinNTSystem",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:84835,Availability,error,error,84835,"trolled via ACLiC.BuildDir in your .rootrc. ; Definition at line 4043 of file TSystem.cxx. ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). virtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 642 of file TSystem.cxx. ◆ SetIncludePath(). void TSystem::SetIncludePat",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:84862,Availability,error,error,84862,". ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). virtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 642 of file TSystem.cxx. ◆ SetIncludePath(). void TSystem::SetIncludePath ; (; const char * ; includePath). virtual . IncludePath should contain the list of comp",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:85541,Availability,mask,mask,85541,"able. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). virtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 642 of file TSystem.cxx. ◆ SetIncludePath(). void TSystem::SetIncludePath ; (; const char * ; includePath). virtual . IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ; It is used to expand $IncludePath in the directives given to SetMakeSharedLib() and SetMakeExe(), e.g.: gSystem->SetInclude(""-I$ROOTSYS/include -Imydirectory/include"");; the default value of IncludePath on Unix is: ""-I$ROOTSYS/include ""; and on Windows: ""/I%ROOTSYS%/include "". Definition at line 4194 of file TSystem.cxx. ◆ SetLinkdefSuffix(). void TSystem::SetLinkdefSuffix ; (; const char * ; suffix). virtual . The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC shoul",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:95312,Availability,error,error,95312,"g daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no-op). ; Reimplemented in TUnixSystem, TWinNTSystem, TDavixSystem, TNetSystem, TWebSy",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:95458,Availability,mask,mask,95458,"line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no-op). ; Reimplemented in TUnixSystem, TWinNTSystem, TDavixSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1381 of file TSystem.cxx. ◆ Unload(). void TSystem::Unload ; (; const char * ; module). virtual ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:95510,Availability,mask,mask,95510,"const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no-op). ; Reimplemented in TUnixSystem, TWinNTSystem, TDavixSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1381 of file TSystem.cxx. ◆ Unload(). void TSystem::Unload ; (; const char * ; module). virtual . Unload a shared library. ; Reimplemented in TUni",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:96972,Availability,error,error,96972,"move, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no-op). ; Reimplemented in TUnixSystem, TWinNTSystem, TDavixSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1381 of file TSystem.cxx. ◆ Unload(). void TSystem::Unload ; (; const char * ; module). virtual . Unload a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2052 of file TSystem.cxx. ◆ Unsetenv(). void TSystem::Unsetenv ; (; const char * ; name). virtual . Unset environment variable. ; Reimplemented in TUnixSystem.; Definition at line 1657 of file TSystem.cxx. ◆ Utime(). int TSystem::Utime ; (; const char * ; file, . Long_t ; modtime, . Long_t ; actime . ). virtual . Set the a files modification and access times. ; If actime = 0 it will be set to the modtime. Returns 0 on success and -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1527 of file TSystem.cxx. ◆ Which(). char * TSystem::Which ; (; const char * ; search, . const char * ; wfil, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; User must delete returned string. Returns 0 in case file is not found. ; Definition at line 1548 of file TSystem.cxx. ◆ WorkingDirectory(). const char * TSystem::WorkingDirectory ; (; ). virtual . Return working directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 871 of file TSystem.cxx. Member Data Documentation. ◆ fAclicMode. EAclicMode TSystem::fAclicMode {kDefault}. protected . Definition at line 315 of file TSystem.h. ◆ fAclicProperties. Int_t TSystem::fAclicProperties {0}. protected . Definition at line 319 of file TSystem.h. ◆ fBeepDuration. Int_t TSystem::fBeepDuration {0}. protected . Definition at line 288 of file TSystem.h. ◆ fBeepFreq. Int_t TSystem::fBee",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:51961,Deployability,update,updated,51961,"e getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. The user must delete returned string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1285 of file TSystem.cxx. ◆ ExpandPathName() [2/2]. Bool_t TSystem::ExpandPathName ; (; TString & ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1274 of file TSystem.cxx. ◆ FindDynamicLibrary(). const char * TSystem::FindDynamicLibrary ; (; TString & ; lib, . Bool_t ; quiet = kFALSE . ). virtual . Find a dynamic library using the system search paths. ; lib will be updated to contain the absolute filename if found. Returns lib if found, or NULL if a library called lib was not found. This function does not open the library. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2034 of file TSystem.cxx. ◆ FindFile(). const char * TSystem::FindFile ; (; const char * ; search, . TString & ; file, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; Return value points to TString for compatibility with Which(const char *, const char *, EAccessMode). Returns 0 in case file is not found. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1538 of file TSystem.cxx. ◆ FindHelper(). TSystem * TSystem::FindHelper ; (; const char * ; path, . void * ; dirptr = nullptr . ). protected . Create helper TSystem to handle file and directory operations that might be special for remote file access. ; Definition at line 746 of file TSystem.cxx. ◆ FreeDirectory(). void TSystem::FreeDirectory ; (; void * ; dirp). vi",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:458,Integrability,interface,interface,458,". ROOT: TSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSystem Class ReferenceCore ROOT classes » Base ROOT classes. ; Abstract base class defining a generic interface to the underlying Operating System. ; This is not an ABC in the strict sense of the (C++) word. For every member function there is an implementation (often not more than a call to AbstractMethod() which prints a warning saying that the method should be overridden in a derived class), which allows a simple partial implementation for new OS'es. ; Definition at line 266 of file TSystem.h. Public Types; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:1743,Integrability,interface,interface,1743,"aying that the method should be overridden in a derived class), which allows a simple partial implementation for new OS'es. ; Definition at line 266 of file TSystem.h. Public Types; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:1795,Integrability,interface,interface,1795,"ial implementation for new OS'es. ; Definition at line 266 of file TSystem.h. Public Types; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void A",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:12263,Integrability,interface,interface,12263,"nfo_t structure. ;  ; virtual Int_t GetUid (const char *user=nullptr);  Returns the user's id. If user = 0, returns current user's id. ;  ; virtual UserGroup_t * GetUserInfo (const char *user=nullptr);  Returns all user info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetUserInfo (Int_t uid);  Returns all user info in the UserGroup_t structure. ;  ; virtual TList * GetVolumes (Option_t *) const;  ; virtual std::string GetWorkingDirectory () const;  Return working directory. ;  ; virtual const char * HomeDirectory (const char *userName=nullptr);  Return the user's home directory. ;  ; virtual const char * HostName ();  Return the system's host name. ;  ; virtual void IgnoreInterrupt (Bool_t ignore=kTRUE);  If ignore is true ignore the interrupt signal, else restore previous behaviour. ;  ; virtual void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual Bool_t Init ();  Initialize the OS interface. ;  ; virtual void InnerLoop ();  Inner event loop. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual int Link (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libr",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:13882,Integrability,protocol,protocol,13882,"le2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int MakeDirectory (const char *name);  Make a directory. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void * OpenDirectory (const char *name);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:15090,Integrability,interface,interface,15090,"; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (T",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:23723,Integrability,message,message,23723,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:24264,Integrability,message,message,24264,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:25254,Integrability,message,message,25254,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:28348,Integrability,message,message,28348,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error nu",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:28721,Integrability,message,message,28721," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Clas",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:30830,Integrability,message,message,30830,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:30948,Integrability,message,message,30948,"flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:31463,Integrability,protocol,protocol,31463,"acters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeq",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:34089,Integrability,interface,interface,34089,"System (const TSystem &)=delete;  ; Bool_t ExpandFileName (const char *fname, char *xname, const int kBufSize);  Private method for pathname expansion. ;  ; TSystem & operator= (const TSystem &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystem.h>. Inheritance diagram for TSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAclicMode. enum TSystem::EAclicMode. EnumeratorkDefault ; kDebug ; kOpt . Definition at line 269 of file TSystem.h. ◆ EAclicProperties. enum TSystem::EAclicProperties. EnumeratorkFlatBuildDir . Definition at line 270 of file TSystem.h. Constructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name = ""Generic"", . const char * ; title = ""Generic System"" . ). Create a new OS interface. ; Definition at line 125 of file TSystem.cxx. ◆ ~TSystem(). TSystem::~TSystem ; (; ). virtual . Delete the OS interface. ; Definition at line 139 of file TSystem.cxx. Member Function Documentation. ◆ Abort(). void TSystem::Abort ; (; int ; code = 0). virtual . Abort the application. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 725 of file TSystem.cxx. ◆ AcceptConnection(). int TSystem::AcceptConnection ; (; int ; sock). virtual . Accept a connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2381 of file TSystem.cxx. ◆ AccessPathName(). Bool_t TSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists . ). virtual . Returns FALSE if one can access a file using the specified access mode. ; The file name must not contain any special shell characters line ~ or $, in those cases first call ExpandPathName(). Attention, bizarre convention of return value!! ; Reimplemented in TDCacheSystem, TNetSystem",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:34210,Integrability,interface,interface,34210,"ethod for pathname expansion. ;  ; TSystem & operator= (const TSystem &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystem.h>. Inheritance diagram for TSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAclicMode. enum TSystem::EAclicMode. EnumeratorkDefault ; kDebug ; kOpt . Definition at line 269 of file TSystem.h. ◆ EAclicProperties. enum TSystem::EAclicProperties. EnumeratorkFlatBuildDir . Definition at line 270 of file TSystem.h. Constructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name = ""Generic"", . const char * ; title = ""Generic System"" . ). Create a new OS interface. ; Definition at line 125 of file TSystem.cxx. ◆ ~TSystem(). TSystem::~TSystem ; (; ). virtual . Delete the OS interface. ; Definition at line 139 of file TSystem.cxx. Member Function Documentation. ◆ Abort(). void TSystem::Abort ; (; int ; code = 0). virtual . Abort the application. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 725 of file TSystem.cxx. ◆ AcceptConnection(). int TSystem::AcceptConnection ; (; int ; sock). virtual . Accept a connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2381 of file TSystem.cxx. ◆ AccessPathName(). Bool_t TSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists . ). virtual . Returns FALSE if one can access a file using the specified access mode. ; The file name must not contain any special shell characters line ~ or $, in those cases first call ExpandPathName(). Attention, bizarre convention of return value!! ; Reimplemented in TDCacheSystem, TNetSystem, TWebSystem, TUnixSystem, and TWinNTSystem.; Definition at line 1296 of file TSystem.cxx. ◆ AddDynamicPath(). void TSyste",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:35939,Integrability,interface,interface,35939,"PathName(). Attention, bizarre convention of return value!! ; Reimplemented in TDCacheSystem, TNetSystem, TWebSystem, TUnixSystem, and TWinNTSystem.; Definition at line 1296 of file TSystem.cxx. ◆ AddDynamicPath(). void TSystem::AddDynamicPath ; (; const char * ; pathname). virtual . Add a new directory to the dynamic path. ; Reimplemented in TWinNTSystem, and TUnixSystem.; Definition at line 1787 of file TSystem.cxx. ◆ AddFileHandler(). void TSystem::AddFileHandler ; (; TFileHandler * ; h). virtual . Add a file handler to the list of system file handlers. ; Only adds the handler if it is not already in the list of file handlers. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 554 of file TSystem.cxx. ◆ AddIncludePath(). void TSystem::AddIncludePath ; (; const char * ; includePath). virtual . Add a directory to the already set include path. ; Parameters. [in]includePathThe path to the directory. . NoteThis interface is mostly relevant for ACLiC and it does not inform gInterpreter for this include path. If the TInterpreter needs to know about the include path please use TInterpreter::AddIncludePath() . ; WarningThe path should start with the -I prefix, i.e. gSystem->AddIncludePath(""-I /path/to/my/includes""). ; Definition at line 4159 of file TSystem.cxx. ◆ AddLinkedLibs(). void TSystem::AddLinkedLibs ; (; const char * ; linkedLib). virtual . Add linkedLib to already set linked libs. ; Definition at line 4170 of file TSystem.cxx. ◆ AddSignalHandler(). void TSystem::AddSignalHandler ; (; TSignalHandler * ; h). virtual . Add a signal handler to list of system signal handlers. ; Only adds the handler if it is not already in the list of signal handlers. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 532 of file TSystem.cxx. ◆ AddStdExceptionHandler(). void TSystem::AddStdExceptionHandler ; (; TStdExceptionHandler * ; eh). virtual . Add an exception handler to list of system exception handlers. ; Only adds the hand",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:60910,Integrability,message,message,60910,"s in the UserGroup_t structure for this call are:; fGid and fGroup The returned structure must be deleted by the user. In case of error 0 is returned. . Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1625 of file TSystem.cxx. ◆ GetHomeDirectory(). std::string TSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. virtual . Return the user's home directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 895 of file TSystem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem.cxx. ◆ GetIncludePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 213",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:61125,Integrability,message,message,61125," line 1625 of file TSystem.cxx. ◆ GetHomeDirectory(). std::string TSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. virtual . Return the user's home directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 895 of file TSystem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem.cxx. ◆ GetIncludePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; De",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:70359,Integrability,interface,interface,70359,"nted in TWinNTSystem, and TUnixSystem.; Definition at line 887 of file TSystem.cxx. ◆ HostName(). const char * TSystem::HostName ; (; ). virtual . Return the system's host name. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 303 of file TSystem.cxx. ◆ IgnoreInterrupt(). void TSystem::IgnoreInterrupt ; (; Bool_t ; ignore = kTRUE). virtual . If ignore is true ignore the interrupt signal, else restore previous behaviour. ; Typically call ignore interrupt before writing to disk. ; Definition at line 602 of file TSystem.cxx. ◆ IgnoreSignal(). void TSystem::IgnoreSignal ; (; ESignals ; sig, . Bool_t ; ignore = kTRUE . ). virtual . If ignore is true ignore the specified signal, else restore previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 593 of file TSystem.cxx. ◆ InControl(). Bool_t TSystem::InControl ; (; ); const. inline . Definition at line 367 of file TSystem.h. ◆ Init(). Bool_t TSystem::Init ; (; ). virtual . Initialize the OS interface. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 183 of file TSystem.cxx. ◆ InnerLoop(). void TSystem::InnerLoop ; (; ). virtual . Inner event loop. ; Definition at line 400 of file TSystem.cxx. ◆ IsA(). TClass * TSystem::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Reimplemented in TUnixSystem, TWinNTSystem, and TWebSystem.; Definition at line 558 of file TSystem.h. ◆ IsAbsoluteFileName(). Bool_t TSystem::IsAbsoluteFileName ; (; const char * ; dir). virtual . Return true if dir is an absolute pathname. ; Reimplemented in TWinNTSystem.; Definition at line 951 of file TSystem.cxx. ◆ IsFileInIncludePath(). Bool_t TSystem::IsFileInIncludePath ; (; const char * ; name, . char ** ; fullpath = nullptr . ). virtual . Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ; If 'name' contains any ACLiC style information (e.g. trailing +[+][g|O]),",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:75424,Integrability,protocol,protocol,75424,"e directory could not be created (either already exists or illegal path name). If 'recursive' is true, makes parent directories as needed. ; Reimplemented in TWinNTSystem.; Definition at line 906 of file TSystem.cxx. ◆ NextTimeOut(). Long_t TSystem::NextTimeOut ; (; Bool_t ; mode). virtual . Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ; Definition at line 494 of file TSystem.cxx. ◆ NotifyApplicationCreated(). void TSystem::NotifyApplicationCreated ; (; ). virtual . Hook to tell TSystem that the TApplication object has been created. ; Reimplemented in TWinNTSystem.; Definition at line 311 of file TSystem.cxx. ◆ Now(). TTime TSystem::Now ; (; ). virtual . Get current time in milliseconds since 0:00 Jan 1 1995. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 463 of file TSystem.cxx. ◆ OpenConnection(). int TSystem::OpenConnection ; (; const char * ; server, . int ; port, . int ; tcpwindowsize = -1, . const char * ; protocol = ""tcp"" . ). virtual . Open a connection to another host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2336 of file TSystem.cxx. ◆ OpenDirectory(). void * TSystem::OpenDirectory ; (; const char * ; name). virtual . Open a directory. Returns 0 if directory does not exist. ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TNetSystem, and TWebSystem.; Definition at line 836 of file TSystem.cxx. ◆ Openlog(). void TSystem::Openlog ; (; const char * ; name, . Int_t ; options, . ELogFacility ; facility . ). virtual . Open connection to system log daemon. ; For the use of the options and facility see the Unix openlog man page. ; Reimplemented in TUnixSystem.; Definition at line 1677 of file TSystem.cxx. ◆ OpenPipe(). FILE * TSystem::OpenPipe ; (; const char * ; command, . const char * ; mode . ). virtual . Open a pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 662 of file TSystem.cxx. ◆ operato",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:77109,Integrability,depend,depending,77109,"ility see the Unix openlog man page. ; Reimplemented in TUnixSystem.; Definition at line 1677 of file TSystem.cxx. ◆ OpenPipe(). FILE * TSystem::OpenPipe ; (; const char * ; command, . const char * ; mode . ). virtual . Open a pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 662 of file TSystem.cxx. ◆ operator=(). TSystem & TSystem::operator= ; (; const TSystem & ; ). privatedelete . ◆ PrependPathName(). const char * TSystem::PrependPathName ; (; const char * ; dir, . TString & ; name . ). virtual . Concatenate a directory and a file name. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1081 of file TSystem.cxx. ◆ ProcessEvents(). Bool_t TSystem::ProcessEvents ; (; ). virtual . Process pending events (GUI, timers, sockets). ; Returns the result of TROOT::IsInterrupted(). The interrupt flag (TROOT::SetInterrupt()) can be set during the handling of the events. This mechanism allows macros running in tight calculating loops to be interrupted by some GUI event (depending on the interval with which this method is called). For example hitting ctrl-c in a canvas will set the interrupt flag. ; Reimplemented in TWinNTSystem.; Definition at line 416 of file TSystem.cxx. ◆ pwd(). const char * TSystem::pwd ; (; ). inline . Definition at line 424 of file TSystem.h. ◆ RecvBuf(). int TSystem::RecvBuf ; (; int ; sock, . void * ; buffer, . int ; length . ). virtual . Receive a buffer headed by a length indicator. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2418 of file TSystem.cxx. ◆ RecvRaw(). int TSystem::RecvRaw ; (; int ; sock, . void * ; buffer, . int ; length, . int ; flag . ). virtual . Receive exactly length bytes into buffer. ; Use opt to receive out-of-band data or to have a peek at what is in the buffer (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2399 of file TSystem.cxx. ◆ RedirectOutput(). Int_t TSystem::RedirectOutput ; (; const char * ; name, . const cha",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:79389,Integrability,interface,interface,79389,"(""a"", default) or the file be truncated before (""w""). The implementations of this function save internally the current state into a static structure.; The call can be made reentrant by specifying the opaque structure pointed by 'h', which is filled with the relevant information. The handle 'h' obtained on the first call must then be used in any subsequent call, included ShowOutput, to display the redirected output. Returns 0 on success, -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1715 of file TSystem.cxx. ◆ RemoveFileHandler(). TFileHandler * TSystem::RemoveFileHandler ; (; TFileHandler * ; h). virtual . Remove a file handler from the list of file handlers. ; Returns the handler or 0 if the handler was not in the list of file handlers. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 564 of file TSystem.cxx. ◆ RemoveOnExit(). void TSystem::RemoveOnExit ; (; TObject * ; obj). Objects that should be deleted on exit of the OS interface. ; Definition at line 292 of file TSystem.cxx. ◆ RemoveSignalHandler(). TSignalHandler * TSystem::RemoveSignalHandler ; (; TSignalHandler * ; h). virtual . Remove a signal handler from list of signal handlers. ; Returns the handler or 0 if the handler was not in the list of signal handlers. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 542 of file TSystem.cxx. ◆ RemoveStdExceptionHandler(). TStdExceptionHandler * TSystem::RemoveStdExceptionHandler ; (; TStdExceptionHandler * ; eh). virtual . Remove an exception handler from list of exception handlers. ; Returns the handler or 0 if the handler was not in the list of exception handlers. ; Definition at line 621 of file TSystem.cxx. ◆ RemoveTimer(). TTimer * TSystem::RemoveTimer ; (; TTimer * ; ti). virtual . Remove timer from list of system timers. ; Returns removed timer or 0 if timer was not active. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 481 of file TS",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:89102,Integrability,depend,depends,89102," -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; namechar name[80]Definition TGX11.cxx:110; extensionconst char * extensionDefinition civetweb.c:8025; TSystem::fFlagsOptTString fFlagsOptDefinition TSystem.h:309; TSystem::fLinkedLibsTString fLinkedLibsDefinition TSystem.h:312; TSystem::",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:93874,Integrability,protocol,protocol,93874,"inition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; g#define g(i)Definition RSha256.hxx:105; v@ vDefinition rootcling_impl.cxx:3699; It stores the ACliC mode [+|++[options]] in 'mode', the arguments (including parenthesis) in arg and the I/O indirection in io ; Definition at line 4258 of file TSystem.cxx. ◆ StackTrace(). void TSystem::StackTrace ; (; ). virtual . Print a stack trace. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 734 of file TSystem.cxx. ◆ Streamer(). void TSystem::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed.; Reimplemented in TUnixSystem, TWinNTSystem, and TWebSystem. ◆ StreamerNVirtual(). void TSystem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 558 of file TSystem.h. ◆ StripOffProto(). const char * TSystem::StripOffProto ; (; const char * ; path, . const char * ; proto . ). staticprotected . Strip off protocol string from specified path. ; Definition at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:94356,Integrability,message,message,94356,"ne 734 of file TSystem.cxx. ◆ Streamer(). void TSystem::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed.; Reimplemented in TUnixSystem, TWinNTSystem, and TWebSystem. ◆ StreamerNVirtual(). void TSystem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 558 of file TSystem.h. ◆ StripOffProto(). const char * TSystem::StripOffProto ; (; const char * ; path, . const char * ; proto . ). staticprotected . Strip off protocol string from specified path. ; Definition at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:1002,Modifiability,inherit,inherited,1002,"m Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSystem Class ReferenceCore ROOT classes » Base ROOT classes. ; Abstract base class defining a generic interface to the underlying Operating System. ; This is not an ABC in the strict sense of the (C++) word. For every member function there is an implementation (often not more than a call to AbstractMethod() which prints a warning saying that the method should be overridden in a derived class), which allows a simple partial implementation for new OS'es. ; Definition at line 266 of file TSystem.h. Public Types; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileEx",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:7586,Modifiability,variab,variable,7586,"() const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (In",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:16720,Modifiability,variab,variable,16720,"se restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' wi",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:16941,Modifiability,variab,variable,16941,"  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:19618,Modifiability,config,configured,19618,"pt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Me",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:20259,Modifiability,variab,variable,20259,"er (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:20632,Modifiability,inherit,inherited,20632," ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:22260,Modifiability,inherit,inherited,22260,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:23353,Modifiability,inherit,inheritance,23353,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:25352,Modifiability,inherit,inherits,25352,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:25469,Modifiability,inherit,inherits,25469,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:29381,Modifiability,inherit,inherited,29381," or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:29591,Modifiability,inherit,inherited,29591," or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:31161,Modifiability,inherit,inherited,31161,"y of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fL",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:32997,Modifiability,inherit,inherited,32997,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TSystem (const TSystem &)=delete;  ; Bool_t ExpandFileName (const char *fname, char *xname, const int kBufSize);  Private method for pathname expansion. ;  ; TSystem & operator= (const TSystem &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystem.h>. Inheritance diagram for TSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAclicMode. enum TSystem::EAclicMode. EnumeratorkDefault ; kDebug ; kOpt . Definition at line 269 of file TSystem.h. ◆ EAclicProperties. enum TSystem::EAclicProperties. EnumeratorkFlatBuildDir . Definition at line 270 of file TSystem.h. Constructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:33338,Modifiability,inherit,inherited,33338,"nt_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TSystem (const TSystem &)=delete;  ; Bool_t ExpandFileName (const char *fname, char *xname, const int kBufSize);  Private method for pathname expansion. ;  ; TSystem & operator= (const TSystem &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystem.h>. Inheritance diagram for TSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAclicMode. enum TSystem::EAclicMode. EnumeratorkDefault ; kDebug ; kOpt . Definition at line 269 of file TSystem.h. ◆ EAclicProperties. enum TSystem::EAclicProperties. EnumeratorkFlatBuildDir . Definition at line 270 of file TSystem.h. Constructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name = ""Generic"", . const char * ; title = ""Generic System"" . ). Create a new OS interface. ; Definition at line 125 of file TSystem.cxx. ◆ ~TSystem(). TSystem::~TSystem ; (; ). virtual . Delete the OS interface. ; Definition at line 139 of file TSystem.cxx. Member Function Documentation. ◆ Abort(). void TSystem::Abort ; (; int ; code = 0)",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:43052,Modifiability,variab,variables,43052,"his means that 2 scripts with the same name in different source directory will over-write each other's library. See also TSystem::SetBuildDir.; If dirmode is not zero and we need to create the target directory, the file mode bit will be change to 'dirmode' using chmod.; If library_specified is not specified, CompileMacro generate a default name for library by taking the name of the file ""filename"" but replacing the dot before the extension by an underscore and by adding the shared library extension for the current platform. For example on most platform, hsimple.cxx will generate hsimple_cxx.so; It uses the directive fMakeSharedLibs to create a shared library. If loading the shared library fails, it tries to output a list of missing symbols by creating an executable (on some platforms like OSF, this does not HAVE to be an executable) containing the script. It uses the directive fMakeExe to do so. For both directives, before passing them to TSystem::Exec, it expands the variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs, $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more information on those variables.; This method is used to implement the following feature:; Synopsis:; The purpose of this addition is to allow the user to use an external compiler to create a shared library from its C++ macro (scripts). Currently in order to execute a script, a user has to type at the root prompt .X myfunc.C(arg1,arg2); We allow them to type: .X myfunc.C++(arg1,arg2); or .X myfunc.C+(arg1,arg2); In which case an external compiler will be called to create a shared library. This shared library will then be loaded and the function myfunc will be called with the two arguments. With '++' the shared library is always recompiled. With '+' the shared library is recompiled only if it does not exist yet or the macro file is newer than the shared library.; Of course the + and ++ notation is supported in similar way for .x and .L.; Through the function TSyste",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:43215,Modifiability,variab,variables,43215,"stem::SetBuildDir.; If dirmode is not zero and we need to create the target directory, the file mode bit will be change to 'dirmode' using chmod.; If library_specified is not specified, CompileMacro generate a default name for library by taking the name of the file ""filename"" but replacing the dot before the extension by an underscore and by adding the shared library extension for the current platform. For example on most platform, hsimple.cxx will generate hsimple_cxx.so; It uses the directive fMakeSharedLibs to create a shared library. If loading the shared library fails, it tries to output a list of missing symbols by creating an executable (on some platforms like OSF, this does not HAVE to be an executable) containing the script. It uses the directive fMakeExe to do so. For both directives, before passing them to TSystem::Exec, it expands the variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs, $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more information on those variables.; This method is used to implement the following feature:; Synopsis:; The purpose of this addition is to allow the user to use an external compiler to create a shared library from its C++ macro (scripts). Currently in order to execute a script, a user has to type at the root prompt .X myfunc.C(arg1,arg2); We allow them to type: .X myfunc.C++(arg1,arg2); or .X myfunc.C+(arg1,arg2); In which case an external compiler will be called to create a shared library. This shared library will then be loaded and the function myfunc will be called with the two arguments. With '++' the shared library is always recompiled. With '+' the shared library is recompiled only if it does not exist yet or the macro file is newer than the shared library.; Of course the + and ++ notation is supported in similar way for .x and .L.; Through the function TSystem::SetMakeSharedLib(), the user will be able to indicate, with shell commands, how to build a shared library (a good default",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45819,Modifiability,variab,variables,45819,"sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros() is called in the TROOT destructor. The default behavior of .L script.C+ is the opposite one, leaving things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes. ; Definition at line 2836 of file TSystem.cxx. ◆ ConcatFileName(). char * TSystem::ConcatFileName ; (; const char * ; dir, . const char * ; name . ). virtual . Concatenate a directory and a file name. User must delete returned string. ; Definition at line 1071 of file TSystem.cxx. ◆ Consisten",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:49873,Modifiability,variab,variables,49873," * ; module, . const char * ; entry . ). virtual . Find specific entry point in specified library. ; Specify ""*"" for lib to search in all libraries. ; Reimplemented in TUnixSystem.; Definition at line 2044 of file TSystem.cxx. ◆ Exec(). int TSystem::Exec ; (; const char * ; shellcmd). virtual . Execute a command. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 653 of file TSystem.cxx. ◆ Exit(). void TSystem::Exit ; (; int ; code, . Bool_t ; mode = kTRUE . ). virtual . Exit the application. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 716 of file TSystem.cxx. ◆ ExitLoop(). void TSystem::ExitLoop ; (; ). virtual . Exit from event loop. ; Reimplemented in TWinNTSystem.; Definition at line 392 of file TSystem.cxx. ◆ ExpandFileName() [1/3]. const char * TSystem::ExpandFileName ; (; const char * ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. This is a protected function called from the OS specific system classes, like TUnixSystem and TWinNTSystem. Returns the expanded filename or 0 in case of error. ; Definition at line 1098 of file TSystem.cxx. ◆ ExpandFileName() [2/3]. Bool_t TSystem::ExpandFileName ; (; const char * ; fname, . char * ; xname, . const int ; kBufSize . ). private . Private method for pathname expansion. ; Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1132 of file TSystem.cxx. ◆ ExpandFileName() [3/3]. Bool_t TSystem::ExpandFileName ; (; TString & ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. This function is analogous to ExpandFileName(const char *), except that it receives a TString reference of the pathname to be expanded. Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1116 of",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:51110,Modifiability,variab,variables,51110," expanded filename or 0 in case of error. ; Definition at line 1098 of file TSystem.cxx. ◆ ExpandFileName() [2/3]. Bool_t TSystem::ExpandFileName ; (; const char * ; fname, . char * ; xname, . const int ; kBufSize . ). private . Private method for pathname expansion. ; Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1132 of file TSystem.cxx. ◆ ExpandFileName() [3/3]. Bool_t TSystem::ExpandFileName ; (; TString & ; fname). protectedvirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. This function is analogous to ExpandFileName(const char *), except that it receives a TString reference of the pathname to be expanded. Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1116 of file TSystem.cxx. ◆ ExpandPathName() [1/2]. char * TSystem::ExpandPathName ; (; const char * ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. The user must delete returned string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1285 of file TSystem.cxx. ◆ ExpandPathName() [2/2]. Bool_t TSystem::ExpandPathName ; (; TString & ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1274 of file TSystem.cxx. ◆ FindDynamicLibrary(). const char * TSystem::FindDynamicLibrary ; (; TString & ; lib, . Bool_t ; quiet = kFALSE . ). virtual . Find a dynamic library using the system search paths. ; lib will be updated to contain the absolute filename if found. Returns lib if found, or NULL if a library called lib was not found. This ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:51576,Modifiability,variab,variables,51576,"al . Expand a pathname getting rid of special shell characters like ~. ; $, etc. This function is analogous to ExpandFileName(const char *), except that it receives a TString reference of the pathname to be expanded. Returns kTRUE in case of error and kFALSE otherwise. ; Definition at line 1116 of file TSystem.cxx. ◆ ExpandPathName() [1/2]. char * TSystem::ExpandPathName ; (; const char * ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. The user must delete returned string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1285 of file TSystem.cxx. ◆ ExpandPathName() [2/2]. Bool_t TSystem::ExpandPathName ; (; TString & ; path). virtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1274 of file TSystem.cxx. ◆ FindDynamicLibrary(). const char * TSystem::FindDynamicLibrary ; (; TString & ; lib, . Bool_t ; quiet = kFALSE . ). virtual . Find a dynamic library using the system search paths. ; lib will be updated to contain the absolute filename if found. Returns lib if found, or NULL if a library called lib was not found. This function does not open the library. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2034 of file TSystem.cxx. ◆ FindFile(). const char * TSystem::FindFile ; (; const char * ; search, . TString & ; file, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; Return value points to TString for compatibility with Which(const char *, const char *, EAccessMode). Returns 0 in case file is not found. ; Reimplem",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:57386,Modifiability,variab,variable,57386,"; const. inlinevirtual . Reimplemented in TDCacheSystem, TNetSystem, and TWebSystem.; Definition at line 416 of file TSystem.h. ◆ GetDynamicPath(). const char * TSystem::GetDynamicPath ; (; ). virtual . Return the dynamic path (used to find shared libraries). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1795 of file TSystem.cxx. ◆ GetEffectiveGid(). Int_t TSystem::GetEffectiveGid ; (; ). virtual . Returns the effective group id. ; The effective group id corresponds to the set id bit on the file being executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1591 of file TSystem.cxx. ◆ GetEffectiveUid(). Int_t TSystem::GetEffectiveUid ; (; ). virtual . Returns the effective user id. ; The effective id corresponds to the set id bit on the file being executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1572 of file TSystem.cxx. ◆ Getenv(). const char * TSystem::Getenv ; (; const char * ; env). virtual . Get environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1665 of file TSystem.cxx. ◆ GetErrno(). Int_t TSystem::GetErrno ; (; ). static . Static function returning system error number. ; Definition at line 276 of file TSystem.cxx. ◆ GetError(). const char * TSystem::GetError ; (; ). virtual . Return system error string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 254 of file TSystem.cxx. ◆ GetErrorStr(). const char * TSystem::GetErrorStr ; (; ); const. inline . Definition at line 350 of file TSystem.h. ◆ GetFlagsDebug(). const char * TSystem::GetFlagsDebug ; (; ); const. virtual . Return the debug flags. ; Definition at line 3927 of file TSystem.cxx. ◆ GetFlagsOpt(). const char * TSystem::GetFlagsOpt ; (; ); const. virtual . Return the optimization flags. ; Definition at line 3935 of file TSystem.cxx. ◆ GetFPEMask(). Int_t TSystem::GetFPEMask ; (; ). virtual . Return the bitmap of conditions that trigger a floating point exception. ;",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:83987,Modifiability,variab,variable,83987," ; (; const char * ; build_dir, . Bool_t ; isflat = kFALSE . ). virtual . Set the location where ACLiC will create libraries and use as a scratch area. ; If unset, libraries will be created at the same location than the script.; Parameters. build_dirthe name of the build directory ; isflatIf false (default), then the libraries are actually stored in sub-directories of 'build_dir' including the full pathname of the script. If the script is located at /full/path/name/macro.C the library will be located at build_dir+/full/path/name/macro_C.so If 'isflat' is true, then no subdirectory is created and the library is created directly in the directory 'build_dir'. Note that in this mode there is a risk than 2 script of the same in different source directory will over-write each other. . NoteThis build_dir can also be controlled via ACLiC.BuildDir in your .rootrc. ; Definition at line 4043 of file TSystem.cxx. ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSys",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:84527,Modifiability,variab,variable,84527,"/macro_C.so If 'isflat' is true, then no subdirectory is created and the library is created directly in the directory 'build_dir'. Note that in this mode there is a risk than 2 script of the same in different source directory will over-write each other. . NoteThis build_dir can also be controlled via ACLiC.BuildDir in your .rootrc. ; Definition at line 4043 of file TSystem.cxx. ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPE",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:87414,Modifiability,config,config,87414,"rtual . The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ; So by default, when doing .L MyScript.cxx, ACLiC will look for a file name MyScript_linkdef and having one of the .h (.hpp, etc.) extensions. If such a file exist, it will be added to the end of the linkdef file used to created the ACLiC dictionary. This effectively enable the full customization of the creation of the dictionary. It should be noted that the file is intended as a linkdef fragment, so usually you would not list the typical: #pragma link off .... Definition at line 4227 of file TSystem.cxx. ◆ SetLinkedLibs(). void TSystem::SetLinkedLibs ; (; const char * ; linkedLibs). virtual . LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ; It is used to expand $LinkedLibs in the directives given to SetMakeSharedLib() and SetMakeExe() The default value on Unix is: root-config --glibs ; Definition at line 4205 of file TSystem.cxx. ◆ SetMakeExe(). void TSystem::SetMakeExe ; (; const char * ; directives). virtual . Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to com",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:87794,Modifiability,variab,variable,87794,"ionary. This effectively enable the full customization of the creation of the dictionary. It should be noted that the file is intended as a linkdef fragment, so usually you would not list the typical: #pragma link off .... Definition at line 4227 of file TSystem.cxx. ◆ SetLinkedLibs(). void TSystem::SetLinkedLibs ; (; const char * ; linkedLibs). virtual . LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ; It is used to expand $LinkedLibs in the directives given to SetMakeSharedLib() and SetMakeExe() The default value on Unix is: root-config --glibs ; Definition at line 4205 of file TSystem.cxx. ◆ SetMakeExe(). void TSystem::SetMakeExe ; (; const char * ; directives). virtual . Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:88622,Modifiability,variab,variables,88622,"aredLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAli",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:88686,Modifiability,variab,variables,88686," -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; namechar name[80]Definition TGX11.cxx:110; extensionconst char * extensionDefinition civetweb.c:8025; TSystem::fFlagsOptTString fFlagsOptDefinition TSystem.h:309; TSystem::fLinkedLibsTString fLinkedLibsDefinition TSystem.h:312; TSystem::",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:94569,Modifiability,config,configured,94569,"merNVirtual(). void TSystem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 558 of file TSystem.h. ◆ StripOffProto(). const char * TSystem::StripOffProto ; (; const char * ; path, . const char * ; proto . ). staticprotected . Strip off protocol string from specified path. ; Definition at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:96642,Modifiability,variab,variable,96642,"har * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no-op). ; Reimplemented in TUnixSystem, TWinNTSystem, TDavixSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1381 of file TSystem.cxx. ◆ Unload(). void TSystem::Unload ; (; const char * ; module). virtual . Unload a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2052 of file TSystem.cxx. ◆ Unsetenv(). void TSystem::Unsetenv ; (; const char * ; name). virtual . Unset environment variable. ; Reimplemented in TUnixSystem.; Definition at line 1657 of file TSystem.cxx. ◆ Utime(). int TSystem::Utime ; (; const char * ; file, . Long_t ; modtime, . Long_t ; actime . ). virtual . Set the a files modification and access times. ; If actime = 0 it will be set to the modtime. Returns 0 on success and -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1527 of file TSystem.cxx. ◆ Which(). char * TSystem::Which ; (; const char * ; search, . const char * ; wfil, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; User must delete returned string. Returns 0 in case file is not found. ; Definition at line 1548 of file TSystem.cxx. ◆ WorkingDirectory(). const char * TSystem::WorkingDirectory ; (; ). virtual . Return working directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 871 of file TSystem.cxx. Member Data Documentation. ◆ fAclicMode. EAclicMode TSystem::fAclicM",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:4315,Performance,load,loads,4315,"ar * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void DispatchOneEvent (Bool_t pendingOnly=kFALSE);  Dispatch a single event. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry point in specified library. ;  ; virtual Int_t Exec (const char *shellcmd);  Execute a command. ;  ; virtual void Exit (int code, Bool_t mode=kTRUE);  Exit the application. ;  ; virtual void ExitLoop ();  Exit fr",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:5985,Performance,optimiz,optimized,5985," the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry point in specified library. ;  ; virtual Int_t Exec (const char *shellcmd);  Execute a command. ;  ; virtual void Exit (int code, Bool_t mode=kTRUE);  Exit the application. ;  ; virtual void ExitLoop ();  Exit from event loop. ;  ; virtual char * ExpandPathName (const char *path);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandPathName (TString &path);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE);  Find a dynamic library using the system search paths. ;  ; virtual const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual void FreeDirectory (void *dirp);  Free a directory. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:6773,Performance,load,load,6773,";  Find location of file in a search path. ;  ; virtual void FreeDirectory (void *dirp);  Free a directory. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Ret",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:6790,Performance,load,load,6790,";  Find location of file in a search path. ;  ; virtual void FreeDirectory (void *dirp);  Free a directory. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Ret",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:7837,Performance,optimiz,optimization,7837,"_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virtual std::string GetHomeDirectory (const char *userName=nullptr) const;  Return the user's home directory. ;  ; virtual TInetAddress GetHostByName (const char *server);  Get Internet Proto",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:9062,Performance,load,loaded,9062,"nst char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virtual std::string GetHomeDirectory (const char *userName=nullptr) const;  Return the user's home directory. ;  ; virtual TInetAddress GetHostByName (const char *server);  Get Internet Protocol (IP) address of host. ;  ; virtual const char * GetIncludePath ();  Get the list of include path. ;  ; virtual const char * GetLibraries (const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE);  Return a space separated list of loaded shared libraries. ;  ; virtual const char * GetLinkdefSuffix () const;  Return the linkdef suffix chosen by the user for ACLiC. ;  ; virtual const char * GetLinkedLibs () const;  Return the list of library linked to this executable. ;  ; virtual TSeqCollection * GetListOfFileHandlers () const;  ; virtual TSeqCollection * GetListOfSignalHandlers () const;  ; virtual TSeqCollection * GetListOfStdExceptionHandlers () const;  ; virtual TList * GetListOfTimers () const;  ; virtual const char * GetMakeExe () const;  Return the command line use to make an executable. ;  ; virtual const char * GetMakeSharedLib () const;  Return the command line use to make a shared library. ;  ; virtual int GetMemInfo (MemInfo_t *info) const;  Returns ram and swap memory usage info into the MemInfo_t structure. ;  ; virtual const char * GetObjExt () const;  Get the object file extension. ;  ; virtual int GetPathInfo (const char *path, FileStat_",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:12931,Performance,load,loaded,12931,"l void IgnoreInterrupt (Bool_t ignore=kTRUE);  If ignore is true ignore the interrupt signal, else restore previous behaviour. ;  ; virtual void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual Bool_t Init ();  Initialize the OS interface. ;  ; virtual void InnerLoop ();  Inner event loop. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual int Link (const char *from, const char *to);  Create a link from file1 to file2. ;  ; virtual void ListLibraries (const char *regexp="""");  List the loaded shared libraries. ;  ; virtual void ListSymbols (const char *module, const char *re="""");  List symbols in a shared library. ;  ; virtual int Load (const char *module, const char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int MakeDirectory (const char *name);  Make a directory. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a co",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:16495,Performance,optimiz,optimized,16495,"mer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:17333,Performance,optimiz,optimized,17333,"t SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:17744,Performance,load,loaded,17744,"nly for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual Int_t SetFPEMask (Int_t mask=kDefaultMask);  Set which conditions trigger a floating point exception. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set object files extension, should be either .o, .obj, etc. ;  ; virtual void SetProgname (const char *name);  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; virtual int SetSockOpt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, sh",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:31036,Performance,load,loaded,31036,");  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TStri",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:40989,Performance,load,loads,40989,"uced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ; Definition at line 4369 of file TSystem.cxx. ◆ CloseConnection(). void TSystem::CloseConnection ; (; int ; sock, . Bool_t ; force = kFALSE . ). virtual . Close socket connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2390 of file TSystem.cxx. ◆ Closelog(). void TSystem::Closelog ; (; ). virtual . Close connection to system log daemon. ; Reimplemented in TUnixSystem.; Definition at line 1694 of file TSystem.cxx. ◆ ClosePipe(). int TSystem::ClosePipe ; (; FILE * ; pipe). virtual . Close the pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 671 of file TSystem.cxx. ◆ CompileMacro(). int TSystem::CompileMacro ; (; const char * ; filename, . Option_t * ; opt = """", . const char * ; library_specified = """", . const char * ; build_dir = """", . UInt_t ; dirmode = 0 . ). virtual . This method compiles and loads a shared library containing the code from the file ""filename"". ; The return value is true (1) in case of success and false (0) in case of error.; The possible options are:; k : keep the shared library after the session end.; f : force recompilation.; g : compile with debug symbol; O : optimized the code; c : compile only, do not attempt to load the library.; s : silence all informational output; v : output all information output; d : debug ACLiC, keep all the output files.; - : if buildir is set, use a flat structure (see buildir below). If library_specified is specified, CompileMacro generates the file ""library_specified"".soext where soext is the shared library extension for the current platform.; If build_dir is specified, it is used as an alternative 'root' for the generation of the shared library. The library is stored in a sub-directories of 'build_dir' including the full pathname of the script unless a flat directory structure is requested ('-' option). With the '-' option the libraries are cre",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:41281,Performance,optimiz,optimized,41281,"tion. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2390 of file TSystem.cxx. ◆ Closelog(). void TSystem::Closelog ; (; ). virtual . Close connection to system log daemon. ; Reimplemented in TUnixSystem.; Definition at line 1694 of file TSystem.cxx. ◆ ClosePipe(). int TSystem::ClosePipe ; (; FILE * ; pipe). virtual . Close the pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 671 of file TSystem.cxx. ◆ CompileMacro(). int TSystem::CompileMacro ; (; const char * ; filename, . Option_t * ; opt = """", . const char * ; library_specified = """", . const char * ; build_dir = """", . UInt_t ; dirmode = 0 . ). virtual . This method compiles and loads a shared library containing the code from the file ""filename"". ; The return value is true (1) in case of success and false (0) in case of error.; The possible options are:; k : keep the shared library after the session end.; f : force recompilation.; g : compile with debug symbol; O : optimized the code; c : compile only, do not attempt to load the library.; s : silence all informational output; v : output all information output; d : debug ACLiC, keep all the output files.; - : if buildir is set, use a flat structure (see buildir below). If library_specified is specified, CompileMacro generates the file ""library_specified"".soext where soext is the shared library extension for the current platform.; If build_dir is specified, it is used as an alternative 'root' for the generation of the shared library. The library is stored in a sub-directories of 'build_dir' including the full pathname of the script unless a flat directory structure is requested ('-' option). With the '-' option the libraries are created directly in the directory 'build_dir'; in particular this means that 2 scripts with the same name in different source directory will over-write each other's library. See also TSystem::SetBuildDir.; If dirmode is not zero and we need to create the target directory, the file mode bit w",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:41337,Performance,load,load,41337,"tion. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2390 of file TSystem.cxx. ◆ Closelog(). void TSystem::Closelog ; (; ). virtual . Close connection to system log daemon. ; Reimplemented in TUnixSystem.; Definition at line 1694 of file TSystem.cxx. ◆ ClosePipe(). int TSystem::ClosePipe ; (; FILE * ; pipe). virtual . Close the pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 671 of file TSystem.cxx. ◆ CompileMacro(). int TSystem::CompileMacro ; (; const char * ; filename, . Option_t * ; opt = """", . const char * ; library_specified = """", . const char * ; build_dir = """", . UInt_t ; dirmode = 0 . ). virtual . This method compiles and loads a shared library containing the code from the file ""filename"". ; The return value is true (1) in case of success and false (0) in case of error.; The possible options are:; k : keep the shared library after the session end.; f : force recompilation.; g : compile with debug symbol; O : optimized the code; c : compile only, do not attempt to load the library.; s : silence all informational output; v : output all information output; d : debug ACLiC, keep all the output files.; - : if buildir is set, use a flat structure (see buildir below). If library_specified is specified, CompileMacro generates the file ""library_specified"".soext where soext is the shared library extension for the current platform.; If build_dir is specified, it is used as an alternative 'root' for the generation of the shared library. The library is stored in a sub-directories of 'build_dir' including the full pathname of the script unless a flat directory structure is requested ('-' option). With the '-' option the libraries are created directly in the directory 'build_dir'; in particular this means that 2 scripts with the same name in different source directory will over-write each other's library. See also TSystem::SetBuildDir.; If dirmode is not zero and we need to create the target directory, the file mode bit w",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:42740,Performance,load,loading,42740,"ub-directories of 'build_dir' including the full pathname of the script unless a flat directory structure is requested ('-' option). With the '-' option the libraries are created directly in the directory 'build_dir'; in particular this means that 2 scripts with the same name in different source directory will over-write each other's library. See also TSystem::SetBuildDir.; If dirmode is not zero and we need to create the target directory, the file mode bit will be change to 'dirmode' using chmod.; If library_specified is not specified, CompileMacro generate a default name for library by taking the name of the file ""filename"" but replacing the dot before the extension by an underscore and by adding the shared library extension for the current platform. For example on most platform, hsimple.cxx will generate hsimple_cxx.so; It uses the directive fMakeSharedLibs to create a shared library. If loading the shared library fails, it tries to output a list of missing symbols by creating an executable (on some platforms like OSF, this does not HAVE to be an executable) containing the script. It uses the directive fMakeExe to do so. For both directives, before passing them to TSystem::Exec, it expands the variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs, $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more information on those variables.; This method is used to implement the following feature:; Synopsis:; The purpose of this addition is to allow the user to use an external compiler to create a shared library from its C++ macro (scripts). Currently in order to execute a script, a user has to type at the root prompt .X myfunc.C(arg1,arg2); We allow them to type: .X myfunc.C++(arg1,arg2); or .X myfunc.C+(arg1,arg2); In which case an external compiler will be called to create a shared library. This shared library will then be loaded and the function myfunc will be called with the two arguments. With '++' the shared library is always recompi",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:43720,Performance,load,loaded,43720,"If loading the shared library fails, it tries to output a list of missing symbols by creating an executable (on some platforms like OSF, this does not HAVE to be an executable) containing the script. It uses the directive fMakeExe to do so. For both directives, before passing them to TSystem::Exec, it expands the variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs, $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more information on those variables.; This method is used to implement the following feature:; Synopsis:; The purpose of this addition is to allow the user to use an external compiler to create a shared library from its C++ macro (scripts). Currently in order to execute a script, a user has to type at the root prompt .X myfunc.C(arg1,arg2); We allow them to type: .X myfunc.C++(arg1,arg2); or .X myfunc.C+(arg1,arg2); In which case an external compiler will be called to create a shared library. This shared library will then be loaded and the function myfunc will be called with the two arguments. With '++' the shared library is always recompiled. With '+' the shared library is recompiled only if it does not exist yet or the macro file is newer than the shared library.; Of course the + and ++ notation is supported in similar way for .x and .L.; Through the function TSystem::SetMakeSharedLib(), the user will be able to indicate, with shell commands, how to build a shared library (a good default will be provided). The most common change, namely where to find header files, will be available through the function TSystem::SetIncludePath(). A good default will be provided so that a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate whe",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:44863,Performance,load,loaded,44863,"+' the shared library is recompiled only if it does not exist yet or the macro file is newer than the shared library.; Of course the + and ++ notation is supported in similar way for .x and .L.; Through the function TSystem::SetMakeSharedLib(), the user will be able to indicate, with shell commands, how to build a shared library (a good default will be provided). The most common change, namely where to find header files, will be available through the function TSystem::SetIncludePath(). A good default will be provided so that a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.Includ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:44993,Performance,load,loading,44993,".; Through the function TSystem::SetMakeSharedLib(), the user will be able to indicate, with shell commands, how to build a shared library (a good default will be provided). The most common change, namely where to find header files, will be available through the function TSystem::SetIncludePath(). A good default will be provided so that a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#d",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45282,Performance,load,loader,45282,"TSystem::SetIncludePath(). A good default will be provided so that a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45396,Performance,load,loaded,45396,"t a typical user session should be at most: root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros() is called in the TROOT destructor. The default behavior of .L ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:53326,Performance,optimiz,optimized,53326,"String & ; file, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; Return value points to TString for compatibility with Which(const char *, const char *, EAccessMode). Returns 0 in case file is not found. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1538 of file TSystem.cxx. ◆ FindHelper(). TSystem * TSystem::FindHelper ; (; const char * ; path, . void * ; dirptr = nullptr . ). protected . Create helper TSystem to handle file and directory operations that might be special for remote file access. ; Definition at line 746 of file TSystem.cxx. ◆ FreeDirectory(). void TSystem::FreeDirectory ; (; void * ; dirp). virtual . Free a directory. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 845 of file TSystem.cxx. ◆ GetAclicMode(). TSystem::EAclicMode TSystem::GetAclicMode ; (; ); const. virtual . AclicMode indicates whether the library should be built in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debug mode; TSystem::kOpt : optimized the library . Definition at line 3947 of file TSystem.cxx. ◆ GetAclicProperties(). Int_t TSystem::GetAclicProperties ; (; ); const. virtual . Return the ACLiC properties field. ; See EAclicProperties for details on the semantic of each bit. ; Definition at line 3867 of file TSystem.cxx. ◆ GetBeepDefaults(). void TSystem::GetBeepDefaults ; (; Int_t & ; freq, . Int_t & ; duration . ); const. inline . Definition at line 360 of file TSystem.h. ◆ GetBuildArch(). const char * TSystem::GetBuildArch ; (; ); const. virtual . Return the build architecture. ; Definition at line 3875 of file TSystem.cxx. ◆ GetBuildCompiler(). const char * TSystem::GetBuildCompiler ; (; ); const. virtual . Return the build compiler. ; Definition at line 3883 of file TSystem.cxx. ◆ GetBuildCompilerVersion(). const char * TSystem::G",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:53472,Performance,optimiz,optimized,53472," points to TString for compatibility with Which(const char *, const char *, EAccessMode). Returns 0 in case file is not found. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1538 of file TSystem.cxx. ◆ FindHelper(). TSystem * TSystem::FindHelper ; (; const char * ; path, . void * ; dirptr = nullptr . ). protected . Create helper TSystem to handle file and directory operations that might be special for remote file access. ; Definition at line 746 of file TSystem.cxx. ◆ FreeDirectory(). void TSystem::FreeDirectory ; (; void * ; dirp). virtual . Free a directory. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 845 of file TSystem.cxx. ◆ GetAclicMode(). TSystem::EAclicMode TSystem::GetAclicMode ; (; ); const. virtual . AclicMode indicates whether the library should be built in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debug mode; TSystem::kOpt : optimized the library . Definition at line 3947 of file TSystem.cxx. ◆ GetAclicProperties(). Int_t TSystem::GetAclicProperties ; (; ); const. virtual . Return the ACLiC properties field. ; See EAclicProperties for details on the semantic of each bit. ; Definition at line 3867 of file TSystem.cxx. ◆ GetBeepDefaults(). void TSystem::GetBeepDefaults ; (; Int_t & ; freq, . Int_t & ; duration . ); const. inline . Definition at line 360 of file TSystem.h. ◆ GetBuildArch(). const char * TSystem::GetBuildArch ; (; ); const. virtual . Return the build architecture. ; Definition at line 3875 of file TSystem.cxx. ◆ GetBuildCompiler(). const char * TSystem::GetBuildCompiler ; (; ); const. virtual . Return the build compiler. ; Definition at line 3883 of file TSystem.cxx. ◆ GetBuildCompilerVersion(). const char * TSystem::GetBuildCompilerVersion ; (; ); const. virtual . Return the build compiler version. ; Definition at line 3891 of file TSyst",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:55073,Performance,load,load,55073,"mpiler(). const char * TSystem::GetBuildCompiler ; (; ); const. virtual . Return the build compiler. ; Definition at line 3883 of file TSystem.cxx. ◆ GetBuildCompilerVersion(). const char * TSystem::GetBuildCompilerVersion ; (; ); const. virtual . Return the build compiler version. ; Definition at line 3891 of file TSystem.cxx. ◆ GetBuildCompilerVersionStr(). const char * TSystem::GetBuildCompilerVersionStr ; (; ); const. virtual . Return the build compiler version identifier string. ; Definition at line 3899 of file TSystem.cxx. ◆ GetBuildDir(). const char * TSystem::GetBuildDir ; (; ); const. virtual . Return the path of the build directory. ; Definition at line 3915 of file TSystem.cxx. ◆ GetBuildNode(). const char * TSystem::GetBuildNode ; (; ); const. virtual . Return the build node name. ; Definition at line 3907 of file TSystem.cxx. ◆ GetCpuInfo(). int TSystem::GetCpuInfo ; (; CpuInfo_t * ; info, . Int_t ; sampleTime = 1000 . ); const. virtual . Returns cpu load average and load info into the CpuInfo_t structure. ; Returns -1 in case of error, 0 otherwise. Use sampleTime to set the interval over which the CPU load will be measured, in ms (default 1000). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2469 of file TSystem.cxx. ◆ GetCryptoRandom(). Int_t TSystem::GetCryptoRandom ; (; void * ; buf, . Int_t ; len . ). virtual . Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 266 of file TSystem.cxx. ◆ GetDirEntry(). const char * TSystem::GetDirEntry ; (; void * ; dirp). virtual . Get a directory entry. Returns 0 if no more entries. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 853 of file TSystem.cxx. ◆ GetDirName(). TString TSystem::GetDirName ; (; const char * ; pathname). virtual . Return ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:55090,Performance,load,load,55090,"mpiler(). const char * TSystem::GetBuildCompiler ; (; ); const. virtual . Return the build compiler. ; Definition at line 3883 of file TSystem.cxx. ◆ GetBuildCompilerVersion(). const char * TSystem::GetBuildCompilerVersion ; (; ); const. virtual . Return the build compiler version. ; Definition at line 3891 of file TSystem.cxx. ◆ GetBuildCompilerVersionStr(). const char * TSystem::GetBuildCompilerVersionStr ; (; ); const. virtual . Return the build compiler version identifier string. ; Definition at line 3899 of file TSystem.cxx. ◆ GetBuildDir(). const char * TSystem::GetBuildDir ; (; ); const. virtual . Return the path of the build directory. ; Definition at line 3915 of file TSystem.cxx. ◆ GetBuildNode(). const char * TSystem::GetBuildNode ; (; ); const. virtual . Return the build node name. ; Definition at line 3907 of file TSystem.cxx. ◆ GetCpuInfo(). int TSystem::GetCpuInfo ; (; CpuInfo_t * ; info, . Int_t ; sampleTime = 1000 . ); const. virtual . Returns cpu load average and load info into the CpuInfo_t structure. ; Returns -1 in case of error, 0 otherwise. Use sampleTime to set the interval over which the CPU load will be measured, in ms (default 1000). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2469 of file TSystem.cxx. ◆ GetCryptoRandom(). Int_t TSystem::GetCryptoRandom ; (; void * ; buf, . Int_t ; len . ). virtual . Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 266 of file TSystem.cxx. ◆ GetDirEntry(). const char * TSystem::GetDirEntry ; (; void * ; dirp). virtual . Get a directory entry. Returns 0 if no more entries. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 853 of file TSystem.cxx. ◆ GetDirName(). TString TSystem::GetDirName ; (; const char * ; pathname). virtual . Return ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:55228,Performance,load,load,55228,"f file TSystem.cxx. ◆ GetBuildCompilerVersion(). const char * TSystem::GetBuildCompilerVersion ; (; ); const. virtual . Return the build compiler version. ; Definition at line 3891 of file TSystem.cxx. ◆ GetBuildCompilerVersionStr(). const char * TSystem::GetBuildCompilerVersionStr ; (; ); const. virtual . Return the build compiler version identifier string. ; Definition at line 3899 of file TSystem.cxx. ◆ GetBuildDir(). const char * TSystem::GetBuildDir ; (; ); const. virtual . Return the path of the build directory. ; Definition at line 3915 of file TSystem.cxx. ◆ GetBuildNode(). const char * TSystem::GetBuildNode ; (; ); const. virtual . Return the build node name. ; Definition at line 3907 of file TSystem.cxx. ◆ GetCpuInfo(). int TSystem::GetCpuInfo ; (; CpuInfo_t * ; info, . Int_t ; sampleTime = 1000 . ); const. virtual . Returns cpu load average and load info into the CpuInfo_t structure. ; Returns -1 in case of error, 0 otherwise. Use sampleTime to set the interval over which the CPU load will be measured, in ms (default 1000). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2469 of file TSystem.cxx. ◆ GetCryptoRandom(). Int_t TSystem::GetCryptoRandom ; (; void * ; buf, . Int_t ; len . ). virtual . Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 266 of file TSystem.cxx. ◆ GetDirEntry(). const char * TSystem::GetDirEntry ; (; void * ; dirp). virtual . Get a directory entry. Returns 0 if no more entries. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 853 of file TSystem.cxx. ◆ GetDirName(). TString TSystem::GetDirName ; (; const char * ; pathname). virtual . Return the directory name in pathname. ; DirName of /user/root is /user. DirName of /user/root/ is also /user. In case no dirname is sp",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:58181,Performance,optimiz,optimization,58181,"ng executed. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1572 of file TSystem.cxx. ◆ Getenv(). const char * TSystem::Getenv ; (; const char * ; env). virtual . Get environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1665 of file TSystem.cxx. ◆ GetErrno(). Int_t TSystem::GetErrno ; (; ). static . Static function returning system error number. ; Definition at line 276 of file TSystem.cxx. ◆ GetError(). const char * TSystem::GetError ; (; ). virtual . Return system error string. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 254 of file TSystem.cxx. ◆ GetErrorStr(). const char * TSystem::GetErrorStr ; (; ); const. inline . Definition at line 350 of file TSystem.h. ◆ GetFlagsDebug(). const char * TSystem::GetFlagsDebug ; (; ); const. virtual . Return the debug flags. ; Definition at line 3927 of file TSystem.cxx. ◆ GetFlagsOpt(). const char * TSystem::GetFlagsOpt ; (; ); const. virtual . Return the optimization flags. ; Definition at line 3935 of file TSystem.cxx. ◆ GetFPEMask(). Int_t TSystem::GetFPEMask ; (; ). virtual . Return the bitmap of conditions that trigger a floating point exception. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 632 of file TSystem.cxx. ◆ GetFromPipe(). TString TSystem::GetFromPipe ; (; const char * ; command). virtual . Execute command and return output in TString. ; Definition at line 680 of file TSystem.cxx. ◆ GetFsInfo(). int TSystem::GetFsInfo ; (; const char * ; path, . Long_t * ; id, . Long_t * ; bsize, . Long_t * ; blocks, . Long_t * ; bfree . ). virtual . Get info about a file system: fs type, block size, number of blocks, number of free blocks. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1472 of file TSystem.cxx. ◆ GetGid(). Int_t TSystem::GetGid ; (; const char * ; group = nullptr). virtual . Returns the group's id. If group = 0, returns current user's group. ; Reimplemented in TUnixSystem, and T",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:61374,Performance,load,loaded,61374,"tem.cxx. ◆ GetHostByName(). TInetAddress TSystem::GetHostByName ; (; const char * ; server). virtual . Get Internet Protocol (IP) address of host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2291 of file TSystem.cxx. ◆ GetIncludePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; Definition at line 4001 of file TSystem.cxx. ◆ GetLinkedLibraries(). const char * TSystem::GetLinkedLibraries ; (; ). protectedvirtual . Get list of shared libraries loaded at the start of the executable. ; Returns 0 in case list cannot be obtained or in case of error. ;",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:61602,Performance,load,loaded,61602,"dePath(). const char * TSystem::GetIncludePath ; (; ). virtual . Get the list of include path. ; Definition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; Definition at line 4001 of file TSystem.cxx. ◆ GetLinkedLibraries(). const char * TSystem::GetLinkedLibraries ; (; ). protectedvirtual . Get list of shared libraries loaded at the start of the executable. ; Returns 0 in case list cannot be obtained or in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2120 of file TSystem.cxx. ◆ GetLinkedLibs(). const char * TSystem::GetLinkedLibs ; (; ); const. virtual . Return the list of library linked to this executable. ; See TSystem::CompileMa",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:61720,Performance,load,loaded,61720,"inition at line 3973 of file TSystem.cxx. ◆ GetLastErrorString() [1/2]. TString & TSystem::GetLastErrorString ; (; ). protected . Return the thread local storage for the custom last error message. ; Definition at line 2102 of file TSystem.cxx. ◆ GetLastErrorString() [2/2]. const TString & TSystem::GetLastErrorString ; (; ); const. protected . Return the thread local storage for the custom last error message. ; Definition at line 2111 of file TSystem.cxx. ◆ GetLibraries(). const char * TSystem::GetLibraries ; (; const char * ; regexp = """", . const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; Definition at line 4001 of file TSystem.cxx. ◆ GetLinkedLibraries(). const char * TSystem::GetLinkedLibraries ; (; ). protectedvirtual . Get list of shared libraries loaded at the start of the executable. ; Returns 0 in case list cannot be obtained or in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2120 of file TSystem.cxx. ◆ GetLinkedLibs(). const char * TSystem::GetLinkedLibs ; (; ); const. virtual . Return the list of library linked to this executable. ; See TSystem::CompileMacro for more details. ; Definition at line 3992 of file TSystem.cxx. ◆ GetListOfFileHandlers(). virt",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:62264,Performance,load,loaded,62264," const char * ; options = """", . Bool_t ; isRegexp = kTRUE . ). virtual . Return a space separated list of loaded shared libraries. ; Regexp is a wildcard expression, see TRegexp::MakeWildcard. This list is of a format suitable for a linker, i.e it may contain -Lpathname and/or -lNameOfLib. Option can be any of:; S: shared libraries loaded at the start of the executable, because they were specified on the link line.; D: shared libraries dynamically loaded after the start of the program.; L: this option is ignored, and available for backward compatibility. . Reimplemented in TWinNTSystem.; Definition at line 2136 of file TSystem.cxx. ◆ GetLinkdefSuffix(). const char * TSystem::GetLinkdefSuffix ; (; ); const. virtual . Return the linkdef suffix chosen by the user for ACLiC. ; See TSystem::CompileMacro for more details. ; Definition at line 4001 of file TSystem.cxx. ◆ GetLinkedLibraries(). const char * TSystem::GetLinkedLibraries ; (; ). protectedvirtual . Get list of shared libraries loaded at the start of the executable. ; Returns 0 in case list cannot be obtained or in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2120 of file TSystem.cxx. ◆ GetLinkedLibs(). const char * TSystem::GetLinkedLibs ; (; ); const. virtual . Return the list of library linked to this executable. ; See TSystem::CompileMacro for more details. ; Definition at line 3992 of file TSystem.cxx. ◆ GetListOfFileHandlers(). virtual TSeqCollection * TSystem::GetListOfFileHandlers ; (; ); const. inlinevirtual . Definition at line 382 of file TSystem.h. ◆ GetListOfSignalHandlers(). virtual TSeqCollection * TSystem::GetListOfSignalHandlers ; (; ); const. inlinevirtual . Definition at line 379 of file TSystem.h. ◆ GetListOfStdExceptionHandlers(). virtual TSeqCollection * TSystem::GetListOfStdExceptionHandlers ; (; ); const. inlinevirtual . Definition at line 385 of file TSystem.h. ◆ GetListOfTimers(). virtual TList * TSystem::GetListOfTimers ; (; ); const. inlinevirtua",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:72210,Performance,load,loaded,72210,"an be found in the ROOT include path or the current directory. ; If 'name' contains any ACLiC style information (e.g. trailing +[+][g|O]), it will be striped off 'name'. If fullpath is != 0, the full path to the file is returned in *fullpath, which must be deleted by the caller. ; Definition at line 966 of file TSystem.cxx. ◆ IsPathLocal(). Bool_t TSystem::IsPathLocal ; (; const char * ; path). virtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, and TNetXNGSystem.; Definition at line 1305 of file TSystem.cxx. ◆ Link(). int TSystem::Link ; (; const char * ; from, . const char * ; to . ). virtual . Create a link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1359 of file TSystem.cxx. ◆ ListLibraries(). void TSystem::ListLibraries ; (; const char * ; regexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of er",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:72362,Performance,load,loaded,72362," is != 0, the full path to the file is returned in *fullpath, which must be deleted by the caller. ; Definition at line 966 of file TSystem.cxx. ◆ IsPathLocal(). Bool_t TSystem::IsPathLocal ; (; const char * ; path). virtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, and TNetXNGSystem.; Definition at line 1305 of file TSystem.cxx. ◆ Link(). int TSystem::Link ; (; const char * ; from, . const char * ; to . ). virtual . Create a link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1359 of file TSystem.cxx. ◆ ListLibraries(). void TSystem::ListLibraries ; (; const char * ; regexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system f",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:72476,Performance,load,loaded,72476," is != 0, the full path to the file is returned in *fullpath, which must be deleted by the caller. ; Definition at line 966 of file TSystem.cxx. ◆ IsPathLocal(). Bool_t TSystem::IsPathLocal ; (; const char * ; path). virtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, and TNetXNGSystem.; Definition at line 1305 of file TSystem.cxx. ◆ Link(). int TSystem::Link ; (; const char * ; from, . const char * ; to . ). virtual . Create a link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1359 of file TSystem.cxx. ◆ ListLibraries(). void TSystem::ListLibraries ; (; const char * ; regexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system f",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:72582,Performance,load,loaded,72582,"hLocal ; (; const char * ; path). virtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, and TNetXNGSystem.; Definition at line 1305 of file TSystem.cxx. ◆ Link(). int TSystem::Link ; (; const char * ; from, . const char * ; to . ). virtual . Create a link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1359 of file TSystem.cxx. ◆ ListLibraries(). void TSystem::ListLibraries ; (; const char * ; regexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system flag is kTRUE, the library is considered a permanent system library that should not be unloaded during the course of the session. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Def",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:73128,Performance,load,loading,73128,"egexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system flag is kTRUE, the library is considered a permanent system library that should not be unloaded during the course of the session. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1857 of file TSystem.cxx. ◆ LoadAllLibraries(). UInt_t TSystem::LoadAllLibraries ; (; ). virtual . Load all libraries known to ROOT via the rootmap system. ; Returns the number of top level libraries successfully loaded. ; Definition at line 1970 of file TSystem.cxx. ◆ MakeDirectory(). int TSystem::MakeDirectory ; (; const char * ; name). virtual . Make a directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, T",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:73163,Performance,load,loaded,73163,"egexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system flag is kTRUE, the library is considered a permanent system library that should not be unloaded during the course of the session. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1857 of file TSystem.cxx. ◆ LoadAllLibraries(). UInt_t TSystem::LoadAllLibraries ; (; ). virtual . Load all libraries known to ROOT via the rootmap system. ; Returns the number of top level libraries successfully loaded. ; Definition at line 1970 of file TSystem.cxx. ◆ MakeDirectory(). int TSystem::MakeDirectory ; (; const char * ; name). virtual . Make a directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, T",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:73285,Performance,load,loaded,73285,"wing line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx. ◆ ListSymbols(). void TSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system flag is kTRUE, the library is considered a permanent system library that should not be unloaded during the course of the session. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1857 of file TSystem.cxx. ◆ LoadAllLibraries(). UInt_t TSystem::LoadAllLibraries ; (; ). virtual . Load all libraries known to ROOT via the rootmap system. ; Returns the number of top level libraries successfully loaded. ; Definition at line 1970 of file TSystem.cxx. ◆ MakeDirectory(). int TSystem::MakeDirectory ; (; const char * ; name). virtual . Make a directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TNetSystem, and TWebSystem.; Definition at line 827 of file TSystem.cxx. ◆ mkdir(). int TSystem::mkdir ; (; const char * ; name, . Bool_t ; ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:73810,Performance,load,loaded,73810,"har * ; module, . const char * ; re = """" . ). virtual . List symbols in a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2064 of file TSystem.cxx. ◆ Load(). int TSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). virtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded, -1 in case lib does not exist or in case of error and -2 in case of version mismatch. When entry is specified the loaded lib is searched for this entry point (return -1 when entry does not exist, 0 otherwise). When the system flag is kTRUE, the library is considered a permanent system library that should not be unloaded during the course of the session. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1857 of file TSystem.cxx. ◆ LoadAllLibraries(). UInt_t TSystem::LoadAllLibraries ; (; ). virtual . Load all libraries known to ROOT via the rootmap system. ; Returns the number of top level libraries successfully loaded. ; Definition at line 1970 of file TSystem.cxx. ◆ MakeDirectory(). int TSystem::MakeDirectory ; (; const char * ; name). virtual . Make a directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TNetSystem, and TWebSystem.; Definition at line 827 of file TSystem.cxx. ◆ mkdir(). int TSystem::mkdir ; (; const char * ; name, . Bool_t ; recursive = kFALSE . ). virtual . Make a file system directory. ; Returns 0 in case of success and -1 if the directory could not be created (either already exists or illegal path name). If 'recursive' is true, makes parent directories as needed. ; Reimplemented in TWinNTSystem.; Definition at line 906 of file TSystem.cxx. ◆ NextTimeOut(). Long_t TSystem::NextTimeOut ; (; Bool_t ; mode). virtual . Time when next timer of mode (synchronous=kTRUE or asynchronous=kFA",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:82732,Performance,optimiz,optimized,82732," in TUnixSystem, and TWinNTSystem.; Definition at line 453 of file TSystem.cxx. ◆ Select() [2/2]. Int_t TSystem::Select ; (; TList * ; active, . Long_t ; timeout . ). virtual . Select on active file descriptors (called by TMonitor). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 445 of file TSystem.cxx. ◆ SendBuf(). int TSystem::SendBuf ; (; int ; sock, . const void * ; buffer, . int ; length . ). virtual . Send a buffer headed by a length indicator. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2427 of file TSystem.cxx. ◆ SendRaw(). int TSystem::SendRaw ; (; int ; sock, . const void * ; buffer, . int ; length, . int ; flag . ). virtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2409 of file TSystem.cxx. ◆ SetAclicMode(). void TSystem::SetAclicMode ; (; EAclicMode ; mode). virtual . AclicMode indicates whether the library should be built in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debug mode; TSystem::kOpt : optimized the library . Definition at line 4077 of file TSystem.cxx. ◆ SetBuildDir(). void TSystem::SetBuildDir ; (; const char * ; build_dir, . Bool_t ; isflat = kFALSE . ). virtual . Set the location where ACLiC will create libraries and use as a scratch area. ; If unset, libraries will be created at the same location than the script.; Parameters. build_dirthe name of the build directory ; isflatIf false (default), then the libraries are actually stored in sub-directories of 'build_dir' including the full pathname of the script. If the script is located at /full/path/name/macro.C the library will be located at build_dir+/full/path/name/macro_C.so If 'isflat' is true, then no subdirectory is created and the library is created directly in the directory 'build_dir'. Note that in this mode there is a risk than 2 ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:82878,Performance,optimiz,optimized,82878," (; TList * ; active, . Long_t ; timeout . ). virtual . Select on active file descriptors (called by TMonitor). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 445 of file TSystem.cxx. ◆ SendBuf(). int TSystem::SendBuf ; (; int ; sock, . const void * ; buffer, . int ; length . ). virtual . Send a buffer headed by a length indicator. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2427 of file TSystem.cxx. ◆ SendRaw(). int TSystem::SendRaw ; (; int ; sock, . const void * ; buffer, . int ; length, . int ; flag . ). virtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2409 of file TSystem.cxx. ◆ SetAclicMode(). void TSystem::SetAclicMode ; (; EAclicMode ; mode). virtual . AclicMode indicates whether the library should be built in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debug mode; TSystem::kOpt : optimized the library . Definition at line 4077 of file TSystem.cxx. ◆ SetBuildDir(). void TSystem::SetBuildDir ; (; const char * ; build_dir, . Bool_t ; isflat = kFALSE . ). virtual . Set the location where ACLiC will create libraries and use as a scratch area. ; If unset, libraries will be created at the same location than the script.; Parameters. build_dirthe name of the build directory ; isflatIf false (default), then the libraries are actually stored in sub-directories of 'build_dir' including the full pathname of the script. If the script is located at /full/path/name/macro.C the library will be located at build_dir+/full/path/name/macro_C.so If 'isflat' is true, then no subdirectory is created and the library is created directly in the directory 'build_dir'. Note that in this mode there is a risk than 2 script of the same in different source directory will over-write each other. . NoteThis build_dir can also be controlled v",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:85423,Performance,optimiz,optimized,85423,"at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). virtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 642 of file TSystem.cxx. ◆ SetIncludePath(). void TSystem::SetIncludePath ; (; const char * ; includePath). virtual . IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ; It is used to expand $IncludePath in the directives given to SetMakeSharedLib() and SetMakeExe(), e.g.: gSystem->SetInclude(""-I$ROOTSYS/include -Imydirectory/include"");; the default value of IncludePath on Unix is: ""-I$ROOTSYS/include ""; and on Windows: ""/I%ROOTSYS%/include "". Definition at line 4194 of file TSystem.cxx. ◆ SetLinkdefSuffix(). void TSystem::SetLinkdefSuffix ; (; const char * ; suffix). virtual ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:86437,Performance,load,loaded,86437,"TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). virtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 642 of file TSystem.cxx. ◆ SetIncludePath(). void TSystem::SetIncludePath ; (; const char * ; includePath). virtual . IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ; It is used to expand $IncludePath in the directives given to SetMakeSharedLib() and SetMakeExe(), e.g.: gSystem->SetInclude(""-I$ROOTSYS/include -Imydirectory/include"");; the default value of IncludePath on Unix is: ""-I$ROOTSYS/include ""; and on Windows: ""/I%ROOTSYS%/include "". Definition at line 4194 of file TSystem.cxx. ◆ SetLinkdefSuffix(). void TSystem::SetLinkdefSuffix ; (; const char * ; suffix). virtual . The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ; So by default, when doing .L MyScript.cxx, ACLiC will look for a file name MyScript_linkdef and having one of the .h (.hpp, etc.) extensions. If such a file exist, it will be added to the end of the linkdef file used to created the ACLiC dictionary. This effectively enable the full customization of the creation of the dictionary. It should be noted that the file is intended as a linkdef fragment, so usually you would not list the typical: #pragma link off .... Definition at line 4227 of file TSystem.cxx. ◆ SetLinkedLibs(). void TSystem::SetLinkedLibs ; (; const char * ; linkedLibs). virtual . LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ; It is used to expand $LinkedLibs in the directives given to SetMakeSharedLib() and SetMakeExe() The default value on Unix is: root-config --glibs ; Definition at line 4205 of file TSystem.cxx",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:87744,Performance,load,loading,87744,"ile exist, it will be added to the end of the linkdef file used to created the ACLiC dictionary. This effectively enable the full customization of the creation of the dictionary. It should be noted that the file is intended as a linkdef fragment, so usually you would not list the typical: #pragma link off .... Definition at line 4227 of file TSystem.cxx. ◆ SetLinkedLibs(). void TSystem::SetLinkedLibs ; (; const char * ; linkedLibs). virtual . LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ; It is used to expand $LinkedLibs in the directives given to SetMakeSharedLib() and SetMakeExe() The default value on Unix is: root-config --glibs ; Definition at line 4205 of file TSystem.cxx. ◆ SetMakeExe(). void TSystem::SetMakeExe ; (; const char * ; directives). virtual . Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before ex",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:89229,Performance,optimiz,optimization,89229,"tain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; namechar name[80]Definition TGX11.cxx:110; extensionconst char * extensionDefinition civetweb.c:8025; TSystem::fFlagsOptTString fFlagsOptDefinition TSystem.h:309; TSystem::fLinkedLibsTString fLinkedLibsDefinition TSystem.h:312; TSystem::fIncludePathTString fIncludePathDefinition TSystem.h:311; TSystem::fFlagsDebugTString fFlagsDebugDefinition TSystem.h:308; e.g.: gSystem->SetMakeSharedLib(; ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; --no_exceptions --signed_chars --display_error_number; --diag_suppress 68 -o $SharedLib"");; ; gSystem->setMakeSharedLib(; ""Cxx $IncludePath -c $SourceFile;; ld -L/usr/lib/cmplrs/cxx -rpath /usr/l",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:15955,Safety,timeout,timeout,15955,"handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void S",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:16071,Safety,timeout,timeout,16071," of the OS interface. ;  ; virtual TSignalHandler * RemoveSignalHandler (TSignalHandler *sh);  Remove a signal handler from list of signal handlers. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual TTimer * RemoveTimer (TTimer *t);  Remove timer from list of system timers. ;  ; virtual int Rename (const char *from, const char *to);  Rename a file. ;  ; virtual void ResetSignal (ESignals sig, Bool_t reset=kTRUE);  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; virtual void ResetSignals ();  Reset signals handlers to previous behaviour. ;  ; virtual void ResetTimer (TTimer *);  ; virtual void Run ();  System event loop. ;  ; virtual Int_t Select (TFileHandler *fh, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual Int_t Select (TList *active, Long_t timeout);  Select on active file descriptors (called by TMonitor). ;  ; virtual int SendBuf (int sock, const void *buffer, int length);  Send a buffer headed by a length indicator. ;  ; virtual int SendRaw (int sock, const void *buffer, int length, int flag);  Send exactly length bytes from buffer. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; virtual void SetDisplay ();  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; virtual void SetDynamicPath (const char *pathname);  Set the dynamic path to a new value. ;  ; virtual void Setenv (const char *name, const char *value);  Set environment variable. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  Flags",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:71710,Safety,avoid,avoid,71710,"eimplemented in TUnixSystem, TWinNTSystem, and TWebSystem.; Definition at line 558 of file TSystem.h. ◆ IsAbsoluteFileName(). Bool_t TSystem::IsAbsoluteFileName ; (; const char * ; dir). virtual . Return true if dir is an absolute pathname. ; Reimplemented in TWinNTSystem.; Definition at line 951 of file TSystem.cxx. ◆ IsFileInIncludePath(). Bool_t TSystem::IsFileInIncludePath ; (; const char * ; name, . char ** ; fullpath = nullptr . ). virtual . Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ; If 'name' contains any ACLiC style information (e.g. trailing +[+][g|O]), it will be striped off 'name'. If fullpath is != 0, the full path to the file is returned in *fullpath, which must be deleted by the caller. ; Definition at line 966 of file TSystem.cxx. ◆ IsPathLocal(). Bool_t TSystem::IsPathLocal ; (; const char * ; path). virtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, and TNetXNGSystem.; Definition at line 1305 of file TSystem.cxx. ◆ Link(). int TSystem::Link ; (; const char * ; from, . const char * ; to . ). virtual . Create a link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1359 of file TSystem.cxx. ◆ ListLibraries(). void TSystem::ListLibraries ; (; const char * ; regexp = """"). virtual . List the loaded shared libraries. ; regexp is a regular expression allowing to filter the list.; Examples:; The following line lists all the libraries currently loaded: gSystem->ListLibraries(); TSystem::ListLibrariesvirtual void ListLibraries(const char *regexp="""")List the loaded shared libraries.Definition TSystem.cxx:2085; The following line lists all the libraries currently loaded having ""RIO"" in their names: gSystem->ListLibraries("".*RIO.*""). Reimplemented in TUnixSystem.; Definition at line 2085 of file TSystem.cxx.",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:81606,Safety,timeout,timeout,81606,"TSystem::ResetErrno ; (; ). static . Static function resetting system error number. ; Definition at line 284 of file TSystem.cxx. ◆ ResetSignal(). void TSystem::ResetSignal ; (; ESignals ; sig, . Bool_t ; reset = kTRUE . ). virtual . If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 576 of file TSystem.cxx. ◆ ResetSignals(). void TSystem::ResetSignals ; (; ). virtual . Reset signals handlers to previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 584 of file TSystem.cxx. ◆ ResetTimer(). virtual void TSystem::ResetTimer ; (; TTimer * ; ). inlinevirtual . Reimplemented in TUnixSystem.; Definition at line 396 of file TSystem.h. ◆ Run(). void TSystem::Run ; (; ). virtual . System event loop. ; Definition at line 343 of file TSystem.cxx. ◆ Select() [1/2]. Int_t TSystem::Select ; (; TFileHandler * ; fh, . Long_t ; timeout . ). virtual . Select on active file descriptors (called by TMonitor). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 453 of file TSystem.cxx. ◆ Select() [2/2]. Int_t TSystem::Select ; (; TList * ; active, . Long_t ; timeout . ). virtual . Select on active file descriptors (called by TMonitor). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 445 of file TSystem.cxx. ◆ SendBuf(). int TSystem::SendBuf ; (; int ; sock, . const void * ; buffer, . int ; length . ). virtual . Send a buffer headed by a length indicator. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2427 of file TSystem.cxx. ◆ SendRaw(). int TSystem::SendRaw ; (; int ; sock, . const void * ; buffer, . int ; length, . int ; flag . ). virtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2409 of file TSystem.cxx. ◆ SetAclicMode(). void TSys",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:81854,Safety,timeout,timeout,81854,"ue reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 576 of file TSystem.cxx. ◆ ResetSignals(). void TSystem::ResetSignals ; (; ). virtual . Reset signals handlers to previous behaviour. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 584 of file TSystem.cxx. ◆ ResetTimer(). virtual void TSystem::ResetTimer ; (; TTimer * ; ). inlinevirtual . Reimplemented in TUnixSystem.; Definition at line 396 of file TSystem.h. ◆ Run(). void TSystem::Run ; (; ). virtual . System event loop. ; Definition at line 343 of file TSystem.cxx. ◆ Select() [1/2]. Int_t TSystem::Select ; (; TFileHandler * ; fh, . Long_t ; timeout . ). virtual . Select on active file descriptors (called by TMonitor). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 453 of file TSystem.cxx. ◆ Select() [2/2]. Int_t TSystem::Select ; (; TList * ; active, . Long_t ; timeout . ). virtual . Select on active file descriptors (called by TMonitor). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 445 of file TSystem.cxx. ◆ SendBuf(). int TSystem::SendBuf ; (; int ; sock, . const void * ; buffer, . int ; length . ). virtual . Send a buffer headed by a length indicator. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2427 of file TSystem.cxx. ◆ SendRaw(). int TSystem::SendRaw ; (; int ; sock, . const void * ; buffer, . int ; length, . int ; flag . ). virtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2409 of file TSystem.cxx. ◆ SetAclicMode(). void TSystem::SetAclicMode ; (; EAclicMode ; mode). virtual . AclicMode indicates whether the library should be built in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debu",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:83688,Safety,risk,risk,83688," in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debug mode; TSystem::kOpt : optimized the library . Definition at line 4077 of file TSystem.cxx. ◆ SetBuildDir(). void TSystem::SetBuildDir ; (; const char * ; build_dir, . Bool_t ; isflat = kFALSE . ). virtual . Set the location where ACLiC will create libraries and use as a scratch area. ; If unset, libraries will be created at the same location than the script.; Parameters. build_dirthe name of the build directory ; isflatIf false (default), then the libraries are actually stored in sub-directories of 'build_dir' including the full pathname of the script. If the script is located at /full/path/name/macro.C the library will be located at build_dir+/full/path/name/macro_C.so If 'isflat' is true, then no subdirectory is created and the library is created directly in the directory 'build_dir'. Note that in this mode there is a risk than 2 script of the same in different source directory will over-write each other. . NoteThis build_dir can also be controlled via ACLiC.BuildDir in your .rootrc. ; Definition at line 4043 of file TSystem.cxx. ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the sy",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:88558,Safety,avoid,avoided,88558,"rectives). virtual . Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; valueOption_t Option_t TPoint TPoint const char Ge",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:95223,Safety,safe,safely,95223,"slog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:95256,Safety,avoid,avoids,95256,"slog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:2047,Security,access,access,2047,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int bac",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:2081,Security,access,access,2081,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual void AddTimer (TTimer *t);  Add timer to list of system timers. ;  ; virtual int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1);  Announce TCP/IP service. ;  ; virtual int AnnounceUdpService (int port, int bac",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:19796,Security,secur,secure,19796,"sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:20377,Security,access,access,20377,"lassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:21500,Security,hash,hash,21500,"nd location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:30725,Security,access,access,30725," static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0}; ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:34828,Security,access,access,34828,"tructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name = ""Generic"", . const char * ; title = ""Generic System"" . ). Create a new OS interface. ; Definition at line 125 of file TSystem.cxx. ◆ ~TSystem(). TSystem::~TSystem ; (; ). virtual . Delete the OS interface. ; Definition at line 139 of file TSystem.cxx. Member Function Documentation. ◆ Abort(). void TSystem::Abort ; (; int ; code = 0). virtual . Abort the application. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 725 of file TSystem.cxx. ◆ AcceptConnection(). int TSystem::AcceptConnection ; (; int ; sock). virtual . Accept a connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2381 of file TSystem.cxx. ◆ AccessPathName(). Bool_t TSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists . ). virtual . Returns FALSE if one can access a file using the specified access mode. ; The file name must not contain any special shell characters line ~ or $, in those cases first call ExpandPathName(). Attention, bizarre convention of return value!! ; Reimplemented in TDCacheSystem, TNetSystem, TWebSystem, TUnixSystem, and TWinNTSystem.; Definition at line 1296 of file TSystem.cxx. ◆ AddDynamicPath(). void TSystem::AddDynamicPath ; (; const char * ; pathname). virtual . Add a new directory to the dynamic path. ; Reimplemented in TWinNTSystem, and TUnixSystem.; Definition at line 1787 of file TSystem.cxx. ◆ AddFileHandler(). void TSystem::AddFileHandler ; (; TFileHandler * ; h). virtual . Add a file handler to the list of system file handlers. ; Only adds the handler if it is not already in the list of file handlers. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 554 of file TSystem.cxx. ◆ AddIncludePath(). void TSystem::AddIncludePath ; (; const char * ; includePath). virtual . Add a directory",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:34862,Security,access,access,34862,"tructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name = ""Generic"", . const char * ; title = ""Generic System"" . ). Create a new OS interface. ; Definition at line 125 of file TSystem.cxx. ◆ ~TSystem(). TSystem::~TSystem ; (; ). virtual . Delete the OS interface. ; Definition at line 139 of file TSystem.cxx. Member Function Documentation. ◆ Abort(). void TSystem::Abort ; (; int ; code = 0). virtual . Abort the application. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 725 of file TSystem.cxx. ◆ AcceptConnection(). int TSystem::AcceptConnection ; (; int ; sock). virtual . Accept a connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2381 of file TSystem.cxx. ◆ AccessPathName(). Bool_t TSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists . ). virtual . Returns FALSE if one can access a file using the specified access mode. ; The file name must not contain any special shell characters line ~ or $, in those cases first call ExpandPathName(). Attention, bizarre convention of return value!! ; Reimplemented in TDCacheSystem, TNetSystem, TWebSystem, TUnixSystem, and TWinNTSystem.; Definition at line 1296 of file TSystem.cxx. ◆ AddDynamicPath(). void TSystem::AddDynamicPath ; (; const char * ; pathname). virtual . Add a new directory to the dynamic path. ; Reimplemented in TWinNTSystem, and TUnixSystem.; Definition at line 1787 of file TSystem.cxx. ◆ AddFileHandler(). void TSystem::AddFileHandler ; (; TFileHandler * ; h). virtual . Add a file handler to the list of system file handlers. ; Only adds the handler if it is not already in the list of file handlers. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 554 of file TSystem.cxx. ◆ AddIncludePath(). void TSystem::AddIncludePath ; (; const char * ; includePath). virtual . Add a directory",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45432,Security,access,accessible,45432,">SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::SetIncludePathvirtual void SetIncludePath(const char *includePath)IncludePath should contain the list of compiler flags to indicate where to find user defined header f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros() is called in the TROOT destructor. The default behavior of .L script.C+ is the opposite one, leaving things after closing, ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:52855,Security,access,access,52855,"m::FindDynamicLibrary ; (; TString & ; lib, . Bool_t ; quiet = kFALSE . ). virtual . Find a dynamic library using the system search paths. ; lib will be updated to contain the absolute filename if found. Returns lib if found, or NULL if a library called lib was not found. This function does not open the library. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2034 of file TSystem.cxx. ◆ FindFile(). const char * TSystem::FindFile ; (; const char * ; search, . TString & ; file, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; Return value points to TString for compatibility with Which(const char *, const char *, EAccessMode). Returns 0 in case file is not found. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1538 of file TSystem.cxx. ◆ FindHelper(). TSystem * TSystem::FindHelper ; (; const char * ; path, . void * ; dirptr = nullptr . ). protected . Create helper TSystem to handle file and directory operations that might be special for remote file access. ; Definition at line 746 of file TSystem.cxx. ◆ FreeDirectory(). void TSystem::FreeDirectory ; (; void * ; dirp). virtual . Free a directory. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TWebSystem, TNetXNGSystem, and TNetSystem.; Definition at line 845 of file TSystem.cxx. ◆ GetAclicMode(). TSystem::EAclicMode TSystem::GetAclicMode ; (; ); const. virtual . AclicMode indicates whether the library should be built in debug mode or optimized. ; The values are:; TSystem::kDefault : compile the same as the current ROOT; TSystem::kDebug : compiled in debug mode; TSystem::kOpt : optimized the library . Definition at line 3947 of file TSystem.cxx. ◆ GetAclicProperties(). Int_t TSystem::GetAclicProperties ; (; ); const. virtual . Return the ACLiC properties field. ; See EAclicProperties for details on the semantic of each bit. ; Definition at line 3867 of file TSystem.cxx. ◆ GetBeepDefaults(). void TSystem::Get",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:94890,Security,secur,secure,94890,"tion at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:95271,Security,secur,security,95271,"slog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:96872,Security,access,access,96872,"em.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no-op). ; Reimplemented in TUnixSystem, TWinNTSystem, TDavixSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1381 of file TSystem.cxx. ◆ Unload(). void TSystem::Unload ; (; const char * ; module). virtual . Unload a shared library. ; Reimplemented in TUnixSystem.; Definition at line 2052 of file TSystem.cxx. ◆ Unsetenv(). void TSystem::Unsetenv ; (; const char * ; name). virtual . Unset environment variable. ; Reimplemented in TUnixSystem.; Definition at line 1657 of file TSystem.cxx. ◆ Utime(). int TSystem::Utime ; (; const char * ; file, . Long_t ; modtime, . Long_t ; actime . ). virtual . Set the a files modification and access times. ; If actime = 0 it will be set to the modtime. Returns 0 on success and -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1527 of file TSystem.cxx. ◆ Which(). char * TSystem::Which ; (; const char * ; search, . const char * ; wfil, . EAccessMode ; mode = kFileExists . ). virtual . Find location of file in a search path. ; User must delete returned string. Returns 0 in case file is not found. ; Definition at line 1548 of file TSystem.cxx. ◆ WorkingDirectory(). const char * TSystem::WorkingDirectory ; (; ). virtual . Return working directory. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 871 of file TSystem.cxx. Member Data Documentation. ◆ fAclicMode. EAclicMode TSystem::fAclicMode {kDefault}. protected . Definition at line 315 of file TSystem.h. ◆ fAclicProperties. Int_t TSystem::fAclicProperties {0}. protected . Definition at line 319 of file TSystem.h. ◆ fBeepDuration. Int_t TSystem::fBeepDuratio",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:4074,Testability,log,log,4074,"virtual int AnnounceUnixService (const char *sockpath, int backlog);  Announce unix domain service. ;  ; virtual int AnnounceUnixService (int port, int backlog);  Announce unix domain service. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual Bool_t ChangeDirectory (const char *path);  Change directory. ;  ; virtual int Chmod (const char *file, UInt_t mode);  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void CloseConnection (int sock, Bool_t force=kFALSE);  Close socket connection. ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int ClosePipe (FILE *pipe);  Close the pipe. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE);  Copy a file. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void DispatchOneEvent (Bool_t pendingOnly=kFALSE);  Dispatch a single event. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual Func_t DynFindSymbol (const char *module, const char *entry);  Find specific entry",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:14158,Testability,log,log,14158,"nst char *entry="""", Bool_t system=kFALSE);  Load a shared library. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int MakeDirectory (const char *name);  Make a directory. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual TTime Now ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; virtual int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"");  Open a connection to another host. ;  ; virtual void * OpenDirectory (const char *name);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Openlog (const char *name, Int_t options, ELogFacility facility);  Open connection to system log daemon. ;  ; virtual FILE * OpenPipe (const char *command, const char *mode);  Open a pipe. ;  ; virtual const char * PrependPathName (const char *dir, TString &name);  Concatenate a directory and a file name. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; virtual int RecvBuf (int sock, void *buffer, int length);  Receive a buffer headed by a length indicator. ;  ; virtual int RecvRaw (int sock, void *buffer, int length, int flag);  Receive exactly length bytes into buffer. ;  ; virtual Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr);  Redirect standard output (stdout, stderr) to the specified file. ;  ; virtual TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; vi",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:40483,Testability,log,log,40483,"TWinNTSystem.; Definition at line 1508 of file TSystem.cxx. ◆ Class(). static TClass * TSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 558 of file TSystem.h. ◆ CleanCompiledMacros(). void TSystem::CleanCompiledMacros ; (; ). virtual . Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ; Definition at line 4369 of file TSystem.cxx. ◆ CloseConnection(). void TSystem::CloseConnection ; (; int ; sock, . Bool_t ; force = kFALSE . ). virtual . Close socket connection. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2390 of file TSystem.cxx. ◆ Closelog(). void TSystem::Closelog ; (; ). virtual . Close connection to system log daemon. ; Reimplemented in TUnixSystem.; Definition at line 1694 of file TSystem.cxx. ◆ ClosePipe(). int TSystem::ClosePipe ; (; FILE * ; pipe). virtual . Close the pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 671 of file TSystem.cxx. ◆ CompileMacro(). int TSystem::CompileMacro ; (; const char * ; filename, . Option_t * ; opt = """", . const char * ; library_specified = """", . const char * ; build_dir = """", . UInt_t ; dirmode = 0 . ). virtual . This method compiles and loads a shared library containing the code from the file ""filename"". ; The return value is true (1) in case of success and false (0) in case of error.; The possible options are:; k : keep the shared library after the session end.; f : force recompilation.; g : compile with debug symbol; O : optimized the code; c : compile only, do not attempt to load the library.; s : silence all informational output; v : output all information output; d : debug ACLiC, keep all the output files.; -",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:76040,Testability,log,log,76040," TWinNTSystem.; Definition at line 311 of file TSystem.cxx. ◆ Now(). TTime TSystem::Now ; (; ). virtual . Get current time in milliseconds since 0:00 Jan 1 1995. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 463 of file TSystem.cxx. ◆ OpenConnection(). int TSystem::OpenConnection ; (; const char * ; server, . int ; port, . int ; tcpwindowsize = -1, . const char * ; protocol = ""tcp"" . ). virtual . Open a connection to another host. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2336 of file TSystem.cxx. ◆ OpenDirectory(). void * TSystem::OpenDirectory ; (; const char * ; name). virtual . Open a directory. Returns 0 if directory does not exist. ; Reimplemented in TDavixSystem, TNetXNGSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TNetSystem, and TWebSystem.; Definition at line 836 of file TSystem.cxx. ◆ Openlog(). void TSystem::Openlog ; (; const char * ; name, . Int_t ; options, . ELogFacility ; facility . ). virtual . Open connection to system log daemon. ; For the use of the options and facility see the Unix openlog man page. ; Reimplemented in TUnixSystem.; Definition at line 1677 of file TSystem.cxx. ◆ OpenPipe(). FILE * TSystem::OpenPipe ; (; const char * ; command, . const char * ; mode . ). virtual . Open a pipe. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 662 of file TSystem.cxx. ◆ operator=(). TSystem & TSystem::operator= ; (; const TSystem & ; ). privatedelete . ◆ PrependPathName(). const char * TSystem::PrependPathName ; (; const char * ; dir, . TString & ; name . ). virtual . Concatenate a directory and a file name. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1081 of file TSystem.cxx. ◆ ProcessEvents(). Bool_t TSystem::ProcessEvents ; (; ). virtual . Process pending events (GUI, timers, sockets). ; Returns the result of TROOT::IsInterrupted(). The interrupt flag (TROOT::SetInterrupt()) can be set during the handling of the events. This mechanism allows ma",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:94329,Testability,log,logging,94329,"ne 734 of file TSystem.cxx. ◆ Streamer(). void TSystem::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed.; Reimplemented in TUnixSystem, TWinNTSystem, and TWebSystem. ◆ StreamerNVirtual(). void TSystem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 558 of file TSystem.h. ◆ StripOffProto(). const char * TSystem::StripOffProto ; (; const char * ; path, . const char * ; proto . ). staticprotected . Strip off protocol string from specified path. ; Definition at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:94392,Testability,log,log,94392,"ne 734 of file TSystem.cxx. ◆ Streamer(). void TSystem::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed.; Reimplemented in TUnixSystem, TWinNTSystem, and TWebSystem. ◆ StreamerNVirtual(). void TSystem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 558 of file TSystem.h. ◆ StripOffProto(). const char * TSystem::StripOffProto ; (; const char * ; path, . const char * ; proto . ). staticprotected . Strip off protocol string from specified path. ; Definition at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and ",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:768,Usability,simpl,simple,768,". ROOT: TSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSystem Class ReferenceCore ROOT classes » Base ROOT classes. ; Abstract base class defining a generic interface to the underlying Operating System. ; This is not an ABC in the strict sense of the (C++) word. For every member function there is an implementation (often not more than a call to AbstractMethod() which prints a warning saying that the method should be overridden in a derived class), which allows a simple partial implementation for new OS'es. ; Definition at line 266 of file TSystem.h. Public Types; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystem.html:45747,Usability,simpl,simplify,45747,"f...Definition TSystem.cxx:4194; The user may sometimes try to compile a script before it has loaded all the needed shared libraries. In this case we want to be helpful and output a list of the unresolved symbols. So if the loading of the created shared library fails, we will try to build a executable that contains the script. The linker should then output a list of missing symbols.; To support this we provide a TSystem::SetMakeExe() function, that sets the directive telling how to create an executable. The loader will need to be informed of all the libraries available. The information about the libraries that has been loaded by .L and TSystem::Load() is accessible to the script compiler. However, the information about the libraries that have been selected at link time by the application builder (like the root libraries for root.exe) are not available and need to be explicitly listed in fLinkedLibs (either by default or by a call to TSystem::SetLinkedLibs()).; To simplify customization we could also add to the .rootrc support for the variables Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ; Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; I#define I(x, y, z); And also support for MakeSharedLibs() and MakeExe().; (the ... have to be replaced by the actual values and are here only to shorten this comment).; Note that the default behavior is to remove libraries when closing ROOT, ie TSystem::CleanCompiledMacros() is called in the TROOT destructor. The default behavior of .L script.C+ is the opposite one, leaving things after closing, without removing. In other words, .L always passes the 'k' option behind the scenes. ; Definition at line 2836 of file TSystem.cxx. ◆ ConcatFileName(). char * TSystem::ConcatFileName ; (; const char * ; dir, . const char * ; name . ). virtual . Concatenate a directory and a file name. User must delete returned string. ; Definition",MatchSource.WIKI,doc/master/classTSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystem.html
https://root.cern/doc/master/classTSystemDirectory.html:6159,Availability,error,error,6159,"eamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:6248,Availability,error,error,6248,"onstructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the ",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:6403,Availability,error,error,6403,"od) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:6700,Availability,error,error,6700,"h/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns k",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:10385,Availability,error,error,10385,"d must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:18271,Availability,error,errors,18271,"ion at line 64 of file TSystemDirectory.h. ◆ Edit(). void TSystemDirectory::Edit ; (; ). inlineoverridevirtual . Invoke text editor on this file. ; Reimplemented from TSystemFile.; Definition at line 55 of file TSystemDirectory.h. ◆ FindDirObj(). TSystemDirectory * TSystemDirectory::FindDirObj ; (; const char * ; name). protected . Method that returns system directory object if it exists in list, 0 otherwise. ; Definition at line 175 of file TSystemDirectory.cxx. ◆ FindFileObj(). TSystemFile * TSystemDirectory::FindFileObj ; (; const char * ; name, . const char * ; dir . ). protected . Method that returns system file object if it exists in list, 0 otherwise. ; Definition at line 190 of file TSystemDirectory.cxx. ◆ GetListOfFiles(). TList * TSystemDirectory::GetListOfFiles ; (; ); const. virtual . Returns a TList of TSystemFile objects representing the contents of the directory. ; It's the responsibility of the user to delete the list (the list owns the contained objects). Returns 0 in case of errors. ; Definition at line 57 of file TSystemDirectory.cxx. ◆ IsA(). TClass * TSystemDirectory::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 71 of file TSystemDirectory.h. ◆ IsDirectory(). Bool_t TSystemDirectory::IsDirectory ; (; const char * ; dir = nullptr); const. inlineoverridevirtual . Check if object is a directory. ; Reimplemented from TSystemFile.; Definition at line 52 of file TSystemDirectory.h. ◆ IsFolder(). Bool_t TSystemDirectory::IsFolder ; (; ); const. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at line 51 of file TSystemDirectory.h. ◆ IsItDirectory(). Bool_t TSystemDirectory::IsItDirectory ; (; const char * ; name); const. protected . Check if name is a directory. ; Definition at line 98 of file TSystemDirectory.cxx. ◆ Move(). void TSystemDirectory::Move",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:16339,Energy Efficiency,allocate,allocated,16339,"ystemDirectory.h. ◆ Copy() [1/2]. void TSystemDirectory::Copy ; (; const char * ; to). inlineoverridevirtual . copy this file ; Reimplemented from TSystemFile.; Definition at line 59 of file TSystemDirectory.h. ◆ Copy() [2/2]. void TSystemDirectory::Copy ; (; TObject & ; named); const. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TNamed.; Definition at line 69 of file TSystemDirectory.h. ◆ DeclFileName(). static const char * TSystemDirectory::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 71 of file TSystemDirectory.h. ◆ Delete() [1/2]. void TSystemDirectory::Delete ; (; ). inlineoverridevirtual . delete this file ; Reimplemented from TSystemFile.; Definition at line 58 of file TSystemDirectory.h. ◆ Delete() [2/2]. void TSystemDirectory::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 68 of file TSystemDirectory.h. ◆ DrawClass(). void TSystemDirectory::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 63 of file TSystemDirectory.h. ◆ DrawClone(). TObject * TSystemDirectory::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 64 of file TSystemDirectory.h. ◆ Edit(). void TSy",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:6165,Integrability,message,message,6165,"eamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:6706,Integrability,message,message,6706,"h/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns k",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:7613,Integrability,message,message,7613,"py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Ob",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:10391,Integrability,message,message,10391,"d must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:10764,Integrability,message,message,10764,"Int_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const ",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:1064,Modifiability,inherit,inheritance,1064,"ence Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSystemDirectory Class ReferenceCore ROOT classes » Base ROOT classes. ; Describes an Operating System directory for the browser. ; Definition at line 32 of file TSystemDirectory.h. Public Member Functions;  TSystemDirectory ();  Create a system directory object. ;  ;  TSystemDirectory (const char *dirname, const char *path);  Create a system directory object. ;  ; virtual ~TSystemDirectory ();  Delete system directory object. ;  ; void Browse (TBrowser *b) override;  Browse OS system directories. ;  ; void Copy (const char *) override;  copy this file ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; void Delete () override;  delete this file ;  ; void Delete (Option_t *) override;  Delete this object. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Edit () override;  Invoke text editor on this file. ;  ; virtual TList * GetListOfFiles () const;  Returns a TList of TSystemFile objects representing the contents of the directory. ;  ; TClass * IsA () const override;  ; Bool_t IsDirectory (const char *=nullptr) const override;  Check if object is a directory. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void Move (const char *) override;  move this file ;  ; virtual void SetDirectory (const char *name);  Create a system directory object. ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title)",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:2281,Modifiability,inherit,inherited,2281," void Edit () override;  Invoke text editor on this file. ;  ; virtual TList * GetListOfFiles () const;  Returns a TList of TSystemFile objects representing the contents of the directory. ;  ; TClass * IsA () const override;  ; Bool_t IsDirectory (const char *=nullptr) const override;  Check if object is a directory. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void Move (const char *) override;  move this file ;  ; virtual void SetDirectory (const char *name);  Create a system directory object. ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystemFile;  TSystemFile ();  TSystemFile default constructor. ;  ;  TSystemFile (const char *filename, const char *dirname);  TSystemFile normal constructor. ;  ; virtual ~TSystemFile ();  Delete TSystemFile object. ;  ; void Browse (TBrowser *b) override;  Execute default action for this system file (action is specified in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; void Delete (Option_t *) override;  Delete this object. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Dump () const override;  dump this file ;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; void Inspect () const override;  inspect this file ;  ; TClass * IsA () cons",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:2853,Modifiability,inherit,inheritance,2853," directory object. ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSystemFile;  TSystemFile ();  TSystemFile default constructor. ;  ;  TSystemFile (const char *filename, const char *dirname);  TSystemFile normal constructor. ;  ; virtual ~TSystemFile ();  Delete TSystemFile object. ;  ; void Browse (TBrowser *b) override;  Execute default action for this system file (action is specified in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; void Delete (Option_t *) override;  Delete this object. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Dump () const override;  dump this file ;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; void Inspect () const override;  inspect this file ;  ; TClass * IsA () const override;  ; virtual void Rename (const char *name);  rename this file ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; virtual void SetIconName (const char *name);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char ",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:3799,Modifiability,inherit,inherited,3799,"ss () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Dump () const override;  dump this file ;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; void Inspect () const override;  inspect this file ;  ; TClass * IsA () const override;  ; virtual void Rename (const char *name);  rename this file ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; virtual void SetIconName (const char *name);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:5204,Modifiability,inherit,inherited,5204,"ride;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtua",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:7711,Modifiability,inherit,inherits,7711,"nst;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVe",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:7828,Modifiability,inherit,inherits,7828,"derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:11265,Modifiability,inherit,inherited,11265,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system fi",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:11480,Modifiability,inherit,inherited,11480,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system fi",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:11690,Modifiability,inherit,inherited,11690,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system fi",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:12716,Modifiability,inherit,inherited,12716," static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system file object if it exists in list, 0 otherwise. ;  ; Bool_t IsItDirectory (const char *name) const;  Check if name is a directory. ;  ; TSystemDirectory & operator= (const TSystemDirectory &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TOrdCollection * fDirsInBrowser {nullptr};  ; TOrdCollection * fFilesInBrowser {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1U",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:13036,Modifiability,inherit,inherited,13036,"flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system file object if it exists in list, 0 otherwise. ;  ; Bool_t IsItDirectory (const char *name) const;  Check if name is a directory. ;  ; TSystemDirectory & operator= (const TSystemDirectory &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TOrdCollection * fDirsInBrowser {nullptr};  ; TOrdCollection * fFilesInBrowser {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystemDirectory.h>. Inheritance diagram for TSystemDirectory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or O",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:13140,Modifiability,inherit,inherited,13140,";  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system file object if it exists in list, 0 otherwise. ;  ; Bool_t IsItDirectory (const char *name) const;  Check if name is a directory. ;  ; TSystemDirectory & operator= (const TSystemDirectory &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TOrdCollection * fDirsInBrowser {nullptr};  ; TOrdCollection * fFilesInBrowser {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystemDirectory.h>. Inheritance diagram for TSystemDirectory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSystemDirectory() [1/3]. TSystemDirectory::TSystemDirectory ; (; const TSystemDirectory & ; ). protecteddelete . ◆ TSystemDirectory() [2/3",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:13781,Modifiability,inherit,inherited,13781,"r *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TOrdCollection * fDirsInBrowser {nullptr};  ; TOrdCollection * fFilesInBrowser {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystemDirectory.h>. Inheritance diagram for TSystemDirectory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSystemDirectory() [1/3]. TSystemDirectory::TSystemDirectory ; (; const TSystemDirectory & ; ). protecteddelete . ◆ TSystemDirectory() [2/3]. TSystemDirectory::TSystemDirectory ; (; ). Create a system directory object. ; Definition at line 30 of file TSystemDirectory.cxx. ◆ TSystemDirectory() [3/3]. TSystemDirectory::TSystemDirectory ; (; const char * ; dirname, . const char * ; path . ). Create a system directory object. ; Definition at line 37 of file TSystemDirectory.cxx. ◆ ~TSystemDirectory(). TSystemDirectory::~TSystemDirectory ; (; ). virtual . Delete system directory object. ; Definition at line 45 of file TSystemDirectory.cxx. Member Function Documentation. ◆ Browse(). void TSystemDirectory::Browse ; (; TBrowser * ; b). ov",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:16541,Modifiability,inherit,inheritance,16541,"rectory::Copy ; (; TObject & ; named); const. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TNamed.; Definition at line 69 of file TSystemDirectory.h. ◆ DeclFileName(). static const char * TSystemDirectory::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 71 of file TSystemDirectory.h. ◆ Delete() [1/2]. void TSystemDirectory::Delete ; (; ). inlineoverridevirtual . delete this file ; Reimplemented from TSystemFile.; Definition at line 58 of file TSystemDirectory.h. ◆ Delete() [2/2]. void TSystemDirectory::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 68 of file TSystemDirectory.h. ◆ DrawClass(). void TSystemDirectory::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 63 of file TSystemDirectory.h. ◆ DrawClone(). TObject * TSystemDirectory::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 64 of file TSystemDirectory.h. ◆ Edit(). void TSystemDirectory::Edit ; (; ). inlineoverridevirtual . Invoke text editor on this file. ; Reimplemented from TSystemFile.; Definition at line 55 of file TSystemDirectory.h. ◆ FindDirObj(). TSystemDirectory * TSystemDirectory::FindDirObj ; (; co",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:16616,Modifiability,inherit,inherits,16616,"; Reimplemented from TNamed.; Definition at line 69 of file TSystemDirectory.h. ◆ DeclFileName(). static const char * TSystemDirectory::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 71 of file TSystemDirectory.h. ◆ Delete() [1/2]. void TSystemDirectory::Delete ; (; ). inlineoverridevirtual . delete this file ; Reimplemented from TSystemFile.; Definition at line 58 of file TSystemDirectory.h. ◆ Delete() [2/2]. void TSystemDirectory::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 68 of file TSystemDirectory.h. ◆ DrawClass(). void TSystemDirectory::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 63 of file TSystemDirectory.h. ◆ DrawClone(). TObject * TSystemDirectory::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 64 of file TSystemDirectory.h. ◆ Edit(). void TSystemDirectory::Edit ; (; ). inlineoverridevirtual . Invoke text editor on this file. ; Reimplemented from TSystemFile.; Definition at line 55 of file TSystemDirectory.h. ◆ FindDirObj(). TSystemDirectory * TSystemDirectory::FindDirObj ; (; const char * ; name). protected . Method that returns system directory object if it exists",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:16860,Modifiability,inherit,inheritance,16860,"e class declaration ; Definition at line 71 of file TSystemDirectory.h. ◆ Delete() [1/2]. void TSystemDirectory::Delete ; (; ). inlineoverridevirtual . delete this file ; Reimplemented from TSystemFile.; Definition at line 58 of file TSystemDirectory.h. ◆ Delete() [2/2]. void TSystemDirectory::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 68 of file TSystemDirectory.h. ◆ DrawClass(). void TSystemDirectory::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 63 of file TSystemDirectory.h. ◆ DrawClone(). TObject * TSystemDirectory::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 64 of file TSystemDirectory.h. ◆ Edit(). void TSystemDirectory::Edit ; (; ). inlineoverridevirtual . Invoke text editor on this file. ; Reimplemented from TSystemFile.; Definition at line 55 of file TSystemDirectory.h. ◆ FindDirObj(). TSystemDirectory * TSystemDirectory::FindDirObj ; (; const char * ; name). protected . Method that returns system directory object if it exists in list, 0 otherwise. ; Definition at line 175 of file TSystemDirectory.cxx. ◆ FindFileObj(). TSystemFile * TSystemDirectory::FindFileObj ; (; const char * ; name, . const char * ; dir . ). protected . Metho",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemDirectory.html:4600,Security,hash,hash,4600,"rride;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics obje",MatchSource.WIKI,doc/master/classTSystemDirectory.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html
https://root.cern/doc/master/classTSystemFile.html:4663,Availability,error,error,4663,"eamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:4752,Availability,error,error,4752,"onstructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:4907,Availability,error,error,4907,"od) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:5204,Availability,error,error,5204,"h/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns k",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:9030,Availability,error,error,9030,"d must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:13995,Energy Efficiency,allocate,allocated,13995," . ReturnsVersion of this class ; Definition at line 61 of file TSystemFile.h. ◆ Copy() [1/2]. void TSystemFile::Copy ; (; const char * ; to). virtual . copy this file ; Reimplemented in TSystemDirectory.; Definition at line 102 of file TSystemFile.cxx. ◆ Copy() [2/2]. void TSystemFile::Copy ; (; TObject & ; named); const. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TNamed.; Definition at line 59 of file TSystemFile.h. ◆ DeclFileName(). static const char * TSystemFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 61 of file TSystemFile.h. ◆ Delete() [1/2]. void TSystemFile::Delete ; (; ). virtual . delete this file ; Reimplemented in TSystemDirectory.; Definition at line 154 of file TSystemFile.cxx. ◆ Delete() [2/2]. void TSystemFile::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 58 of file TSystemFile.h. ◆ DrawClass(). void TSystemFile::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 53 of file TSystemFile.h. ◆ DrawClone(). TObject * TSystemFile::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 54 of file TSystemFile.h. ◆ Dump(). void TSystemFile::Dump ; (; ); co",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:4669,Integrability,message,message,4669,"eamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:5210,Integrability,message,message,5210,"h/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns k",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:6117,Integrability,message,message,6117,"py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:9036,Integrability,message,message,9036,"d must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:9409,Integrability,message,message,9409,"Int_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:1141,Modifiability,inherit,inheritance,1141,"lic Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSystemFile Class ReferenceCore ROOT classes » Base ROOT classes. ; A TSystemFile describes an operating system file. ; The information is used by the browser (see TBrowser). ; Definition at line 29 of file TSystemFile.h. Public Member Functions;  TSystemFile ();  TSystemFile default constructor. ;  ;  TSystemFile (const char *filename, const char *dirname);  TSystemFile normal constructor. ;  ; virtual ~TSystemFile ();  Delete TSystemFile object. ;  ; void Browse (TBrowser *b) override;  Execute default action for this system file (action is specified in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. ;  ; virtual void Copy (const char *to);  copy this file ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual void Delete ();  delete this file ;  ; void Delete (Option_t *) override;  Delete this object. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Dump () const override;  dump this file ;  ; virtual void Edit ();  Invoke text editor on this file. ;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; void Inspect () const override;  inspect this file ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDirectory (const char *dir=nullptr) const;  Check if object is a directory. ;  ; virtual void Move (const char *to);  move this file ;  ; virtual void Rename (const char *name);  rename this file ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; virtual void SetIconName (const char *name);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; void Stre",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:2303,Modifiability,inherit,inherited,2303,"->SetSelectedPad(c1). ;  ; void Dump () const override;  dump this file ;  ; virtual void Edit ();  Invoke text editor on this file. ;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; void Inspect () const override;  inspect this file ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDirectory (const char *dir=nullptr) const;  Check if object is a directory. ;  ; virtual void Move (const char *to);  move this file ;  ; virtual void Rename (const char *name);  rename this file ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; virtual void SetIconName (const char *name);  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:3708,Modifiability,inherit,inherited,3708,"ride;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtua",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:6215,Modifiability,inherit,inherits,6215,"nst;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle ob",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:6332,Modifiability,inherit,inherits,6332,"derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:9910,Modifiability,inherit,inherited,9910,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fIconName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:10120,Modifiability,inherit,inherited,10120,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fIconName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:10692,Modifiability,inherit,inherited,10692,"atic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fIconName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSystemFile.h>. Inheritance diagram for TSystemF",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:11333,Modifiability,inherit,inherited,11333,"d SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fIconName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSystemFile.h>. Inheritance diagram for TSystemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSystemFile() [1/2]. TSystemFile::TSystemFile ; (; ). TSystemFile default constructor. ; Definition at line 30 of file TSystemFile.cxx. ◆ TSystemFile() [2/2]. TSystemFile::TSystemFile ; (; const char * ; filename, . const char * ; dirname . ). TSystemFile normal constructor. ; Definition at line 37 of file TSystemFile.cxx. ◆ ~TSystemFile(). TSystemFile::~TSystemFile ; (; ). virtual . Delete TSystemFile object. ; Definition at line 46 of file TSystemFile.cxx. Member Function Documentation. ◆ Browse(). void TSystemFile::Browse ; (; TBrowser * ; ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:11432,Modifiability,inherit,inherited,11432,"d SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fIconName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSystemFile.h>. Inheritance diagram for TSystemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSystemFile() [1/2]. TSystemFile::TSystemFile ; (; ). TSystemFile default constructor. ; Definition at line 30 of file TSystemFile.cxx. ◆ TSystemFile() [2/2]. TSystemFile::TSystemFile ; (; const char * ; filename, . const char * ; dirname . ). TSystemFile normal constructor. ; Definition at line 37 of file TSystemFile.cxx. ◆ ~TSystemFile(). TSystemFile::~TSystemFile ; (; ). virtual . Delete TSystemFile object. ; Definition at line 46 of file TSystemFile.cxx. Member Function Documentation. ◆ Browse(). void TSystemFile::Browse ; (; TBrowser * ; ",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:11637,Modifiability,inherit,inherited,11637,"me;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSystemFile.h>. Inheritance diagram for TSystemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSystemFile() [1/2]. TSystemFile::TSystemFile ; (; ). TSystemFile default constructor. ; Definition at line 30 of file TSystemFile.cxx. ◆ TSystemFile() [2/2]. TSystemFile::TSystemFile ; (; const char * ; filename, . const char * ; dirname . ). TSystemFile normal constructor. ; Definition at line 37 of file TSystemFile.cxx. ◆ ~TSystemFile(). TSystemFile::~TSystemFile ; (; ). virtual . Delete TSystemFile object. ; Definition at line 46 of file TSystemFile.cxx. Member Function Documentation. ◆ Browse(). void TSystemFile::Browse ; (; TBrowser * ; b). overridevirtual . Execute default action for this system file (action is specified in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. ; Reimplemented from TObject.; Definition at lin",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:14187,Modifiability,inherit,inheritance,14187," file TSystemFile.cxx. ◆ Copy() [2/2]. void TSystemFile::Copy ; (; TObject & ; named); const. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TNamed.; Definition at line 59 of file TSystemFile.h. ◆ DeclFileName(). static const char * TSystemFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 61 of file TSystemFile.h. ◆ Delete() [1/2]. void TSystemFile::Delete ; (; ). virtual . delete this file ; Reimplemented in TSystemDirectory.; Definition at line 154 of file TSystemFile.cxx. ◆ Delete() [2/2]. void TSystemFile::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 58 of file TSystemFile.h. ◆ DrawClass(). void TSystemFile::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 53 of file TSystemFile.h. ◆ DrawClone(). TObject * TSystemFile::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 54 of file TSystemFile.h. ◆ Dump(). void TSystemFile::Dump ; (; ); const. overridevirtual . dump this file ; Reimplemented from TObject.; Definition at line 177 of file TSystemFile.cxx. ◆ Edit(). void TSystemFile::Edit ; (; ). virtual . Invoke text editor on this file. ; Reimplemented in TSystemDire",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:14262,Modifiability,inherit,inherits,14262,"onst. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TNamed.; Definition at line 59 of file TSystemFile.h. ◆ DeclFileName(). static const char * TSystemFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 61 of file TSystemFile.h. ◆ Delete() [1/2]. void TSystemFile::Delete ; (; ). virtual . delete this file ; Reimplemented in TSystemDirectory.; Definition at line 154 of file TSystemFile.cxx. ◆ Delete() [2/2]. void TSystemFile::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 58 of file TSystemFile.h. ◆ DrawClass(). void TSystemFile::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 53 of file TSystemFile.h. ◆ DrawClone(). TObject * TSystemFile::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 54 of file TSystemFile.h. ◆ Dump(). void TSystemFile::Dump ; (; ); const. overridevirtual . dump this file ; Reimplemented from TObject.; Definition at line 177 of file TSystemFile.cxx. ◆ Edit(). void TSystemFile::Edit ; (; ). virtual . Invoke text editor on this file. ; Reimplemented in TSystemDirectory.; Definition at line 78 of file TSystemFile.cxx. ◆ GetIconName(). const char * TSy",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:14506,Modifiability,inherit,inheritance,14506," ReturnsName of the file containing the class declaration ; Definition at line 61 of file TSystemFile.h. ◆ Delete() [1/2]. void TSystemFile::Delete ; (; ). virtual . delete this file ; Reimplemented in TSystemDirectory.; Definition at line 154 of file TSystemFile.cxx. ◆ Delete() [2/2]. void TSystemFile::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 58 of file TSystemFile.h. ◆ DrawClass(). void TSystemFile::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 53 of file TSystemFile.h. ◆ DrawClone(). TObject * TSystemFile::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 54 of file TSystemFile.h. ◆ Dump(). void TSystemFile::Dump ; (; ); const. overridevirtual . dump this file ; Reimplemented from TObject.; Definition at line 177 of file TSystemFile.cxx. ◆ Edit(). void TSystemFile::Edit ; (; ). virtual . Invoke text editor on this file. ; Reimplemented in TSystemDirectory.; Definition at line 78 of file TSystemFile.cxx. ◆ GetIconName(). const char * TSystemFile::GetIconName ; (; ); const. inlineoverridevirtual . Returns mime type name of object. ; Used by the TBrowser (via TGMimeTypes class). Override for class of which you would like to have different icon",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTSystemFile.html:3104,Security,hash,hash,3104,"rride;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics obje",MatchSource.WIKI,doc/master/classTSystemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTSystemFile.html
https://root.cern/doc/master/classTTabCom.html:4438,Availability,error,errorLevel,4438," void RehashGlobalFunctions ();  Reload global functions. ;  ; void RehashGlobals ();  Reload globals. ;  ; void RehashPragmas ();  Reload pragmas. ;  ; void RehashSysIncFiles ();  Reload system include files. ;  ; void RehashUsers ();  Reload users. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Char_t AllAgreeOnChar (int i, const TSeqCollection *pList, Int_t &nGoodStrings);  [static utility function]/////////////////////////////////////////// ;  ; static void AppendListOfFilesInDirectory (const char dirName[], TSeqCollection *pList);  [static utility function]///////////////////////////// ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString DetermineClass (const char varName[]);  [static utility function]///////////////////////////// ;  ; static Bool_t ExcludedByFignore (TString s);  [static utility function]///////////////////////////// ;  ; static TString GetSysIncludePath ();  [static utility function]///////////////////////////// ;  ; static Bool_t IsDirectory (const char fileName[]);  [static utility function]///////////////////////////// ;  ; static TSeqCollection * NewListOfFilesInPath (const char path[]);  [static utility function]///////////////////////////// ;  ; static void NoMsg (Int_t errorLevel);  [static utility function]///////////////////////////// ;  ; static Bool_t PathIsSpecifiedInFileName (const TString &fileName);  [static utility function]///////////////////////////// ;  . Private Member Functions;  TTabCom (const TTabCom &)=delete;  ; Int_t Complete (const TRegexp &re, const TSeqCollection *pListOfCandidates, const char appendage[], std::ostream &out, TString::ECaseCompare cmp=TString::kExact);  [private] ;  ; void CopyMatch (char *dest, int dest_len, const char *localName, const char *appendage=nullptr, const char *fullNa",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:5403,Availability,error,error,5403,"//////////////// ;  ; static TString GetSysIncludePath ();  [static utility function]///////////////////////////// ;  ; static Bool_t IsDirectory (const char fileName[]);  [static utility function]///////////////////////////// ;  ; static TSeqCollection * NewListOfFilesInPath (const char path[]);  [static utility function]///////////////////////////// ;  ; static void NoMsg (Int_t errorLevel);  [static utility function]///////////////////////////// ;  ; static Bool_t PathIsSpecifiedInFileName (const TString &fileName);  [static utility function]///////////////////////////// ;  . Private Member Functions;  TTabCom (const TTabCom &)=delete;  ; Int_t Complete (const TRegexp &re, const TSeqCollection *pListOfCandidates, const char appendage[], std::ostream &out, TString::ECaseCompare cmp=TString::kExact);  [private] ;  ; void CopyMatch (char *dest, int dest_len, const char *localName, const char *appendage=nullptr, const char *fullName=nullptr) const;  [private] ;  ; EContext_t DetermineContext () const;  [private] ;  ; TString DeterminePath (const TString &fileName, const char defaultPath[]) const;  [private] ;  ; TString ExtendPath (const char originalPath[], TString newBase) const;  [private] ;  ; void InitPatterns ();  [private] ;  ; TClass * MakeClassFromClassName (const char className[]) const;  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ;  ; TClass * MakeClassFromVarName (const char varName[], EContext_t &context, int iter=0);  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ;  ; TTabCom & operator= (const TTabCom &)=delete;  ; int ParseReverse (const char *var_str, int start);  Returns the place in the string where to put the \0, starting the search from ""start"". ;  ; void SetPattern (EContext_t handle, const char regexp[]);  [private] ;  ; TClass * TryMakeC",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:5644,Availability,error,error,5644,"/////////////////// ;  . Private Member Functions;  TTabCom (const TTabCom &)=delete;  ; Int_t Complete (const TRegexp &re, const TSeqCollection *pListOfCandidates, const char appendage[], std::ostream &out, TString::ECaseCompare cmp=TString::kExact);  [private] ;  ; void CopyMatch (char *dest, int dest_len, const char *localName, const char *appendage=nullptr, const char *fullName=nullptr) const;  [private] ;  ; EContext_t DetermineContext () const;  [private] ;  ; TString DeterminePath (const TString &fileName, const char defaultPath[]) const;  [private] ;  ; TString ExtendPath (const char originalPath[], TString newBase) const;  [private] ;  ; void InitPatterns ();  [private] ;  ; TClass * MakeClassFromClassName (const char className[]) const;  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ;  ; TClass * MakeClassFromVarName (const char varName[], EContext_t &context, int iter=0);  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ;  ; TTabCom & operator= (const TTabCom &)=delete;  ; int ParseReverse (const char *var_str, int start);  Returns the place in the string where to put the \0, starting the search from ""start"". ;  ; void SetPattern (EContext_t handle, const char regexp[]);  [private] ;  ; TClass * TryMakeClassFromClassName (const char className[]) const;  Same as above but does not print the error message. ;  . Private Attributes; char * fBuf;  ; Int_t fLastIter;  ; Pattern_t fPat [kNUM_PAT][1024];  ; TSeqCollection * fpClasses;  ; TSeqCollection * fpDirectives;  ; TSeqCollection * fpEnvVars;  ; TSeqCollection * fpFiles;  ; TSeqCollection * fpGlobals;  ; int * fpLoc;  ; TSeqCollection * fpPragmas;  ; ULong64_t fPrevInterpMarker;  ; TSeqCollection * fpSysIncFiles;  ; TSeqCollection * fpUsers;  ; const char * fRegExp [kNUM_PAT];  ; Bool_t fVarIsPointer;  . #",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:6142,Availability,error,error,6142,"ext () const;  [private] ;  ; TString DeterminePath (const TString &fileName, const char defaultPath[]) const;  [private] ;  ; TString ExtendPath (const char originalPath[], TString newBase) const;  [private] ;  ; void InitPatterns ();  [private] ;  ; TClass * MakeClassFromClassName (const char className[]) const;  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ;  ; TClass * MakeClassFromVarName (const char varName[], EContext_t &context, int iter=0);  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ;  ; TTabCom & operator= (const TTabCom &)=delete;  ; int ParseReverse (const char *var_str, int start);  Returns the place in the string where to put the \0, starting the search from ""start"". ;  ; void SetPattern (EContext_t handle, const char regexp[]);  [private] ;  ; TClass * TryMakeClassFromClassName (const char className[]) const;  Same as above but does not print the error message. ;  . Private Attributes; char * fBuf;  ; Int_t fLastIter;  ; Pattern_t fPat [kNUM_PAT][1024];  ; TSeqCollection * fpClasses;  ; TSeqCollection * fpDirectives;  ; TSeqCollection * fpEnvVars;  ; TSeqCollection * fpFiles;  ; TSeqCollection * fpGlobals;  ; int * fpLoc;  ; TSeqCollection * fpPragmas;  ; ULong64_t fPrevInterpMarker;  ; TSeqCollection * fpSysIncFiles;  ; TSeqCollection * fpUsers;  ; const char * fRegExp [kNUM_PAT];  ; Bool_t fVarIsPointer;  . #include <TTabCom.h>; Member Typedef Documentation. ◆ TContainer. typedef TList TTabCom::TContainer. Definition at line 59 of file TTabCom.h. ◆ TContIter. typedef TListIter TTabCom::TContIter. Definition at line 60 of file TTabCom.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDebug . Definition at line 111 of file TTabCom.h. ◆ EContext_t. enum TTabCom::EContext_t. EnumeratorkUNKNOWN_CONTEXT ; kSYS_UserNa",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:11642,Availability,failure,failure,11642,"le TTabCom.cxx. ◆ ClearUsers(). void TTabCom::ClearUsers ; (; ). Forget all user seen so far. ; Definition at line 306 of file TTabCom.cxx. ◆ Complete(). Int_t TTabCom::Complete ; (; const TRegexp & ; re, . const TSeqCollection * ; pListOfCandidates, . const char ; appendage[], . std::ostream & ; out, . TString::ECaseCompare ; cmp = TString::kExact . ). private . [private] ; Definition at line 1163 of file TTabCom.cxx. ◆ CopyMatch(). void TTabCom::CopyMatch ; (; char * ; dest, . int ; dest_len, . const char * ; localName, . const char * ; appendage = nullptr, . const char * ; fullName = nullptr . ); const. private . [private] ; Definition at line 1415 of file TTabCom.cxx. ◆ DeclFileName(). static const char * TTabCom::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 226 of file TTabCom.h. ◆ DetermineClass(). TString TTabCom::DetermineClass ; (; const char ; varName[]). static . [static utility function]///////////////////////////// ; returns empty string on failure. otherwise returns something like this: ""TROOT*"". fails for non-class types (ie, int, char, etc). fails for pointers to functions. ; Definition at line 799 of file TTabCom.cxx. ◆ DetermineContext(). TTabCom::EContext_t TTabCom::DetermineContext ; (; ); const. private . [private] ; Definition at line 1468 of file TTabCom.cxx. ◆ DeterminePath(). TString TTabCom::DeterminePath ; (; const TString & ; fileName, . const char ; defaultPath[] . ); const. private . [private] ; Definition at line 1492 of file TTabCom.cxx. ◆ ExcludedByFignore(). Bool_t TTabCom::ExcludedByFignore ; (; TString ; s). static . [static utility function]///////////////////////////// ; returns true iff ""s"" ends with one of the strings listed in the ""TabCom.FileIgnore"" resource. ; Definition at line 892 of file TTabCom.cxx. ◆ ExtendPath(). TString TTabCom::ExtendPath ; (; const char ; originalPath[], . TString ; newBase . ); const. private . [private] ; Definition at line 1535",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:14433,Availability,failure,failure,14433,"n * TTabCom::GetListOfGlobalFunctions ; (; ). Return the list of global functions. ; Definition at line 588 of file TTabCom.cxx. ◆ GetListOfGlobals(). const TSeqCollection * TTabCom::GetListOfGlobals ; (; ). Return the list of globals. ; Definition at line 580 of file TTabCom.cxx. ◆ GetListOfPragmas(). const TSeqCollection * TTabCom::GetListOfPragmas ; (; ). Return the list of pragmas. ; Definition at line 596 of file TTabCom.cxx. ◆ GetListOfSysIncFiles(). const TSeqCollection * TTabCom::GetListOfSysIncFiles ; (; ). Return the list of system include files. ; Definition at line 627 of file TTabCom.cxx. ◆ GetListOfUsers(). const TSeqCollection * TTabCom::GetListOfUsers ; (; ). reads from ""/etc/passwd"" ; Definition at line 639 of file TTabCom.cxx. ◆ GetSysIncludePath(). TString TTabCom::GetSysIncludePath ; (; ). static . [static utility function]///////////////////////////// ; returns a colon-separated string of directories that CINT will search when you call #include<...>; returns empty string on failure. ; Definition at line 928 of file TTabCom.cxx. ◆ Hook(). Int_t TTabCom::Hook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). [private] ; Definition at line 1567 of file TTabCom.cxx. ◆ InitPatterns(). void TTabCom::InitPatterns ; (; ). private . [private] ; Definition at line 2139 of file TTabCom.cxx. ◆ IsA(). virtual TClass * TTabCom::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the n",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:15322,Availability,error,error,15322,"ing of directories that CINT will search when you call #include<...>; returns empty string on failure. ; Definition at line 928 of file TTabCom.cxx. ◆ Hook(). Int_t TTabCom::Hook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). [private] ; Definition at line 1567 of file TTabCom.cxx. ◆ InitPatterns(). void TTabCom::InitPatterns ; (; ). private . [private] ; Definition at line 2139 of file TTabCom.cxx. ◆ IsA(). virtual TClass * TTabCom::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated wi",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:15481,Availability,error,error,15481,"e TTabCom.cxx. ◆ Hook(). Int_t TTabCom::Hook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). [private] ; Definition at line 1567 of file TTabCom.cxx. ◆ InitPatterns(). void TTabCom::InitPatterns ; (; ). private . [private] ; Definition at line 2139 of file TTabCom.cxx. ◆ IsA(). virtual TClass * TTabCom::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:15717,Availability,error,error,15717,"39 of file TTabCom.cxx. ◆ IsA(). virtual TClass * TTabCom::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling t",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:15879,Availability,error,error,15879,"efinition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of ",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:16510,Availability,error,errorLevel,16510,"n at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user ",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:16605,Availability,error,errorLevel,16605,", . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:16649,Availability,error,errorLevel,16649,", . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:16675,Availability,error,errors,16675,", . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:16696,Availability,error,errorLevel,16696,", . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:19461,Availability,error,error,19461,"id TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 378 of file TTabCom.cxx. ◆ RehashPragmas(). void TTabCom::RehashPragmas ; (; ). Reload pragmas. ; Definition at line 387 of file TTabCom.cxx. ◆ RehashSysIncFiles(). void TTabCom::RehashSysIncFiles ; (; ). Reload system include files. ; Definition at line 396 of file TTabCom.cxx. ◆ RehashUsers(). void TTabCom::RehashUsers ; (; ). Reload users. ; Definition at line 405 of file TTabCom.cxx. ◆ SetPattern(). void TTabCom::SetPattern ; (; EContext_t ; handle, . const char ; regexp[] . ). private . [private] ; Definition at line 2543 of file TTabCom.cxx. ◆ Streamer(). virtual void TTabCom::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TTabCom::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 226 of file TTabCom.h. ◆ TryMakeClassFromClassName(). TClass * TTabCom::TryMakeClassFromClassName ; (; const char ; className[]); const. private . Same as above but does not print the error message. ; Definition at line 2235 of file TTabCom.cxx. Member Data Documentation. ◆ fBuf. char* TTabCom::fBuf. private . Definition at line 218 of file TTabCom.h. ◆ fLastIter. Int_t TTabCom::fLastIter. private . Definition at line 224 of file TTabCom.h. ◆ fPat. Pattern_t TTabCom::fPat[kNUM_PAT][ 1024]. private . Definition at line 221 of file TTabCom.h. ◆ fpClasses. TSeqCollection* TTabCom::fpClasses. private . Definition at line 208 of file TTabCom.h. ◆ fpDirectives. TSeqCollection* TTabCom::fpDirectives. private . Definition at line 210 of file TTabCom.h. ◆ fpEnvVars. TSeqCollection* TTabCom::fpEnvVars. private . Definition at line 211 of file TTabCom.h. ◆ fpFiles. TSeqCollection* TTabCom::fpFiles. private . Definition at line 212 of file TTabCom.h. ◆ fpGlobals. TSeqCollection* TTabCom::fpGlobals. private . Definition at line 213 of file TTabCom.h. ◆ fpLoc. int* TTabCom::fpLoc. private . Definition at line 219 of file TTabCom.h. ◆ fpPragmas. TSeqCollection* TTabCom",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:16328,Energy Efficiency,allocate,allocated,16328," . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; ",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:6148,Integrability,message,message,6148,"ext () const;  [private] ;  ; TString DeterminePath (const TString &fileName, const char defaultPath[]) const;  [private] ;  ; TString ExtendPath (const char originalPath[], TString newBase) const;  [private] ;  ; void InitPatterns ();  [private] ;  ; TClass * MakeClassFromClassName (const char className[]) const;  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ;  ; TClass * MakeClassFromVarName (const char varName[], EContext_t &context, int iter=0);  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ;  ; TTabCom & operator= (const TTabCom &)=delete;  ; int ParseReverse (const char *var_str, int start);  Returns the place in the string where to put the \0, starting the search from ""start"". ;  ; void SetPattern (EContext_t handle, const char regexp[]);  [private] ;  ; TClass * TryMakeClassFromClassName (const char className[]) const;  Same as above but does not print the error message. ;  . Private Attributes; char * fBuf;  ; Int_t fLastIter;  ; Pattern_t fPat [kNUM_PAT][1024];  ; TSeqCollection * fpClasses;  ; TSeqCollection * fpDirectives;  ; TSeqCollection * fpEnvVars;  ; TSeqCollection * fpFiles;  ; TSeqCollection * fpGlobals;  ; int * fpLoc;  ; TSeqCollection * fpPragmas;  ; ULong64_t fPrevInterpMarker;  ; TSeqCollection * fpSysIncFiles;  ; TSeqCollection * fpUsers;  ; const char * fRegExp [kNUM_PAT];  ; Bool_t fVarIsPointer;  . #include <TTabCom.h>; Member Typedef Documentation. ◆ TContainer. typedef TList TTabCom::TContainer. Definition at line 59 of file TTabCom.h. ◆ TContIter. typedef TListIter TTabCom::TContIter. Definition at line 60 of file TTabCom.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDebug . Definition at line 111 of file TTabCom.h. ◆ EContext_t. enum TTabCom::EContext_t. EnumeratorkUNKNOWN_CONTEXT ; kSYS_UserNa",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:19467,Integrability,message,message,19467,"id TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 378 of file TTabCom.cxx. ◆ RehashPragmas(). void TTabCom::RehashPragmas ; (; ). Reload pragmas. ; Definition at line 387 of file TTabCom.cxx. ◆ RehashSysIncFiles(). void TTabCom::RehashSysIncFiles ; (; ). Reload system include files. ; Definition at line 396 of file TTabCom.cxx. ◆ RehashUsers(). void TTabCom::RehashUsers ; (; ). Reload users. ; Definition at line 405 of file TTabCom.cxx. ◆ SetPattern(). void TTabCom::SetPattern ; (; EContext_t ; handle, . const char ; regexp[] . ). private . [private] ; Definition at line 2543 of file TTabCom.cxx. ◆ Streamer(). virtual void TTabCom::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TTabCom::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 226 of file TTabCom.h. ◆ TryMakeClassFromClassName(). TClass * TTabCom::TryMakeClassFromClassName ; (; const char ; className[]); const. private . Same as above but does not print the error message. ; Definition at line 2235 of file TTabCom.cxx. Member Data Documentation. ◆ fBuf. char* TTabCom::fBuf. private . Definition at line 218 of file TTabCom.h. ◆ fLastIter. Int_t TTabCom::fLastIter. private . Definition at line 224 of file TTabCom.h. ◆ fPat. Pattern_t TTabCom::fPat[kNUM_PAT][ 1024]. private . Definition at line 221 of file TTabCom.h. ◆ fpClasses. TSeqCollection* TTabCom::fpClasses. private . Definition at line 208 of file TTabCom.h. ◆ fpDirectives. TSeqCollection* TTabCom::fpDirectives. private . Definition at line 210 of file TTabCom.h. ◆ fpEnvVars. TSeqCollection* TTabCom::fpEnvVars. private . Definition at line 211 of file TTabCom.h. ◆ fpFiles. TSeqCollection* TTabCom::fpFiles. private . Definition at line 212 of file TTabCom.h. ◆ fpGlobals. TSeqCollection* TTabCom::fpGlobals. private . Definition at line 213 of file TTabCom.h. ◆ fpLoc. int* TTabCom::fpLoc. private . Definition at line 219 of file TTabCom.h. ◆ fpPragmas. TSeqCollection* TTabCom",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:1346,Modifiability,variab,variables,1346," 52 of file TTabCom.h. Public Types; enum  { kDebug = 17; };  ; enum  EContext_t { ;   kUNKNOWN_CONTEXT =-1; , kSYS_UserName; , kSYS_EnvVar; , kCINT_stdout; , ;   kCINT_stderr; , kCINT_stdin; , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:1535,Modifiability,variab,variables,1535," , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals. ;  ; const TSeqCollection * GetListOfPragmas ();  Return the list of pragmas. ;  ; const TSeqCollection * GetListOfSysIncFiles ();  Return the list of system include files. ;  ; const TSeqCo",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:2008,Modifiability,variab,variables,2008," TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals. ;  ; const TSeqCollection * GetListOfPragmas ();  Return the list of pragmas. ;  ; const TSeqCollection * GetListOfSysIncFiles ();  Return the list of system include files. ;  ; const TSeqCollection * GetListOfUsers ();  reads from ""/etc/passwd"" ;  ; Int_t Hook (char *buf, int *pLoc, std::ostream &out);  [private] ;  ; virtual TClass * IsA () const;  ; void RehashAll ();  clears and then rebuilds all lists except for user names and system include files. ;  ; void RehashClasses ();  Do the class rehash. ;  ; void RehashCppDirectives ();  Cpp rehashing. ;  ; void RehashEnvVars ();  Environemnt variables rehashing. ;  ",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:2932,Modifiability,variab,variables,2932," GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals. ;  ; const TSeqCollection * GetListOfPragmas ();  Return the list of pragmas. ;  ; const TSeqCollection * GetListOfSysIncFiles ();  Return the list of system include files. ;  ; const TSeqCollection * GetListOfUsers ();  reads from ""/etc/passwd"" ;  ; Int_t Hook (char *buf, int *pLoc, std::ostream &out);  [private] ;  ; virtual TClass * IsA () const;  ; void RehashAll ();  clears and then rebuilds all lists except for user names and system include files. ;  ; void RehashClasses ();  Do the class rehash. ;  ; void RehashCppDirectives ();  Cpp rehashing. ;  ; void RehashEnvVars ();  Environemnt variables rehashing. ;  ; void RehashFiles ();  Close files. ;  ; void RehashGlobalFunctions ();  Reload global functions. ;  ; void RehashGlobals ();  Reload globals. ;  ; void RehashPragmas ();  Reload pragmas. ;  ; void RehashSysIncFiles ();  Reload system include files. ;  ; void RehashUsers ();  Reload users. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Char_t AllAgreeOnChar (int i, const TSeqCollection *pList, Int_t &nGoodStrings);  [static utility function]/////////////////////////////////////////// ;  ; static void AppendListOfFilesInDirectory (const char dirName[], TSeqCollection *pList);  [static utility function]///////////////////////////// ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString DetermineClass (const char varName[]);  [static uti",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:5755,Modifiability,variab,variable,5755,", const TSeqCollection *pListOfCandidates, const char appendage[], std::ostream &out, TString::ECaseCompare cmp=TString::kExact);  [private] ;  ; void CopyMatch (char *dest, int dest_len, const char *localName, const char *appendage=nullptr, const char *fullName=nullptr) const;  [private] ;  ; EContext_t DetermineContext () const;  [private] ;  ; TString DeterminePath (const TString &fileName, const char defaultPath[]) const;  [private] ;  ; TString ExtendPath (const char originalPath[], TString newBase) const;  [private] ;  ; void InitPatterns ();  [private] ;  ; TClass * MakeClassFromClassName (const char className[]) const;  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ;  ; TClass * MakeClassFromVarName (const char varName[], EContext_t &context, int iter=0);  [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ;  ; TTabCom & operator= (const TTabCom &)=delete;  ; int ParseReverse (const char *var_str, int start);  Returns the place in the string where to put the \0, starting the search from ""start"". ;  ; void SetPattern (EContext_t handle, const char regexp[]);  [private] ;  ; TClass * TryMakeClassFromClassName (const char className[]) const;  Same as above but does not print the error message. ;  . Private Attributes; char * fBuf;  ; Int_t fLastIter;  ; Pattern_t fPat [kNUM_PAT][1024];  ; TSeqCollection * fpClasses;  ; TSeqCollection * fpDirectives;  ; TSeqCollection * fpEnvVars;  ; TSeqCollection * fpFiles;  ; TSeqCollection * fpGlobals;  ; int * fpLoc;  ; TSeqCollection * fpPragmas;  ; ULong64_t fPrevInterpMarker;  ; TSeqCollection * fpSysIncFiles;  ; TSeqCollection * fpUsers;  ; const char * fRegExp [kNUM_PAT];  ; Bool_t fVarIsPointer;  . #include <TTabCom.h>; Member Typedef Documentation. ◆ TContainer. typedef TList TTabCom::TContainer. Definition at line 59 ",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:9753,Modifiability,variab,variables,9753,"irName""; directories that do not exist are silently ignored. ; Definition at line 750 of file TTabCom.cxx. ◆ Class(). static TClass * TTabCom::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTabCom::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTabCom::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 226 of file TTabCom.h. ◆ ClearAll(). void TTabCom::ClearAll ; (; ). clears all lists except for user names and system include files. ; Definition at line 319 of file TTabCom.cxx. ◆ ClearClasses(). void TTabCom::ClearClasses ; (; ). Clear classes and namespace collections. ; Definition at line 218 of file TTabCom.cxx. ◆ ClearCppDirectives(). void TTabCom::ClearCppDirectives ; (; ). Forget all Cpp directives seen so far. ; Definition at line 230 of file TTabCom.cxx. ◆ ClearEnvVars(). void TTabCom::ClearEnvVars ; (; ). Forget all environment variables seen so far. ; Definition at line 242 of file TTabCom.cxx. ◆ ClearFiles(). void TTabCom::ClearFiles ; (; ). Close all files. ; Definition at line 254 of file TTabCom.cxx. ◆ ClearGlobalFunctions(). void TTabCom::ClearGlobalFunctions ; (; ). Forget all global functions seen so far. ; Not needed anymore. Use gROOT->GetListOfGlobalFunctions() ; Definition at line 267 of file TTabCom.cxx. ◆ ClearGlobals(). void TTabCom::ClearGlobals ; (; ). Forget all global variables seen so far. ; With teh new implamentation the list is gROOT->GetListOfGlobals(true). ; Definition at line 275 of file TTabCom.cxx. ◆ ClearPragmas(). void TTabCom::ClearPragmas ; (; ). Forget all pragmas seen so far. ; Definition at line 282 of file TTabCom.cxx. ◆ ClearSysIncFiles(). void TTabCom::ClearSysIncFiles ; (; ). Close system files. ; Definition at line 294 of file TTabCom.cxx. ◆ ClearUsers(). void TTabCom::ClearUsers ; (; ). Forget all user seen so far. ; Definition at line 306 of file TTabCom.cxx. ◆ Compl",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:10221,Modifiability,variab,variables,10221,"abCom.h. ◆ ClearAll(). void TTabCom::ClearAll ; (; ). clears all lists except for user names and system include files. ; Definition at line 319 of file TTabCom.cxx. ◆ ClearClasses(). void TTabCom::ClearClasses ; (; ). Clear classes and namespace collections. ; Definition at line 218 of file TTabCom.cxx. ◆ ClearCppDirectives(). void TTabCom::ClearCppDirectives ; (; ). Forget all Cpp directives seen so far. ; Definition at line 230 of file TTabCom.cxx. ◆ ClearEnvVars(). void TTabCom::ClearEnvVars ; (; ). Forget all environment variables seen so far. ; Definition at line 242 of file TTabCom.cxx. ◆ ClearFiles(). void TTabCom::ClearFiles ; (; ). Close all files. ; Definition at line 254 of file TTabCom.cxx. ◆ ClearGlobalFunctions(). void TTabCom::ClearGlobalFunctions ; (; ). Forget all global functions seen so far. ; Not needed anymore. Use gROOT->GetListOfGlobalFunctions() ; Definition at line 267 of file TTabCom.cxx. ◆ ClearGlobals(). void TTabCom::ClearGlobals ; (; ). Forget all global variables seen so far. ; With teh new implamentation the list is gROOT->GetListOfGlobals(true). ; Definition at line 275 of file TTabCom.cxx. ◆ ClearPragmas(). void TTabCom::ClearPragmas ; (; ). Forget all pragmas seen so far. ; Definition at line 282 of file TTabCom.cxx. ◆ ClearSysIncFiles(). void TTabCom::ClearSysIncFiles ; (; ). Close system files. ; Definition at line 294 of file TTabCom.cxx. ◆ ClearUsers(). void TTabCom::ClearUsers ; (; ). Forget all user seen so far. ; Definition at line 306 of file TTabCom.cxx. ◆ Complete(). Int_t TTabCom::Complete ; (; const TRegexp & ; re, . const TSeqCollection * ; pListOfCandidates, . const char ; appendage[], . std::ostream & ; out, . TString::ECaseCompare ; cmp = TString::kExact . ). private . [private] ; Definition at line 1163 of file TTabCom.cxx. ◆ CopyMatch(). void TTabCom::CopyMatch ; (; char * ; dest, . int ; dest_len, . const char * ; localName, . const char * ; appendage = nullptr, . const char * ; fullName = nullptr . ); const. priv",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:13095,Modifiability,variab,variables,13095," char ; defaultPath[] . ); const. private . [private] ; Definition at line 1492 of file TTabCom.cxx. ◆ ExcludedByFignore(). Bool_t TTabCom::ExcludedByFignore ; (; TString ; s). static . [static utility function]///////////////////////////// ; returns true iff ""s"" ends with one of the strings listed in the ""TabCom.FileIgnore"" resource. ; Definition at line 892 of file TTabCom.cxx. ◆ ExtendPath(). TString TTabCom::ExtendPath ; (; const char ; originalPath[], . TString ; newBase . ); const. private . [private] ; Definition at line 1535 of file TTabCom.cxx. ◆ GetListOfClasses(). const TSeqCollection * TTabCom::GetListOfClasses ; (; ). Return the list of classes. ; Definition at line 431 of file TTabCom.cxx. ◆ GetListOfCppDirectives(). const TSeqCollection * TTabCom::GetListOfCppDirectives ; (; ). Return the list of CPP directives. ; Definition at line 482 of file TTabCom.cxx. ◆ GetListOfEnvVars(). const TSeqCollection * TTabCom::GetListOfEnvVars ; (; ). Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ; Definition at line 527 of file TTabCom.cxx. ◆ GetListOfFilesInPath(). const TSeqCollection * TTabCom::GetListOfFilesInPath ; (; const char ; path[]). ""path"" should be initialized with a colon separated list of system directories ; Definition at line 508 of file TTabCom.cxx. ◆ GetListOfGlobalFunctions(). TCollection * TTabCom::GetListOfGlobalFunctions ; (; ). Return the list of global functions. ; Definition at line 588 of file TTabCom.cxx. ◆ GetListOfGlobals(). const TSeqCollection * TTabCom::GetListOfGlobals ; (; ). Return the list of globals. ; Definition at line 580 of file TTabCom.cxx. ◆ GetListOfPragmas(). const TSeqCollection * TTabCom::GetListOfPragmas ; (; ). Return the list of pragmas. ; Definition at line 596 of file TTabCom.cxx. ◆ GetListOfSysIncFiles(). const TSeqCollection * TTabCom::GetListOfSysIncFiles ; (; ). Return the list of system include files. ; Definition at line 627 of file TTabCom.cxx. ◆ GetListOfUsers(). const TSeqCollec",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:15828,Modifiability,variab,variable,15828,". inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgn",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:17543,Modifiability,variab,variable,17543,". static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(). void TTabCom::RehashAll ; (; ). clears and then rebuilds all lists except for user names and system include files. ; Definition at line 415 of file TTabCom.cxx. ◆ RehashClasses(). void TTabCom::RehashClasses ; (; ). Do the class rehash. ; Definition at line 335 of file TTabCom.cxx. ◆ RehashCppDirectives(). void TTabCom::RehashCppDirectives ; (; ). Cpp rehashing. ; Definition at line 344 of file TTabCom.cxx. ◆ RehashEnvVars(). void TTabCom::RehashEnvVars ; (; ). Environemnt variables rehashing. ; Definition at line 353 of file TTabCom.cxx. ◆ RehashFiles(). void TTabCom::RehashFiles ; (; ). Close files. ; Definition at line 362 of file TTabCom.cxx. ◆ RehashGlobalFunctions(). void TTabCom::RehashGlobalFunctions ; (; ). Reload global functions. ; Definition at line 370 of file TTabCom.cxx. ◆ RehashGlobals(). void TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 37",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:18109,Modifiability,variab,variables,18109,"re to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(). void TTabCom::RehashAll ; (; ). clears and then rebuilds all lists except for user names and system include files. ; Definition at line 415 of file TTabCom.cxx. ◆ RehashClasses(). void TTabCom::RehashClasses ; (; ). Do the class rehash. ; Definition at line 335 of file TTabCom.cxx. ◆ RehashCppDirectives(). void TTabCom::RehashCppDirectives ; (; ). Cpp rehashing. ; Definition at line 344 of file TTabCom.cxx. ◆ RehashEnvVars(). void TTabCom::RehashEnvVars ; (; ). Environemnt variables rehashing. ; Definition at line 353 of file TTabCom.cxx. ◆ RehashFiles(). void TTabCom::RehashFiles ; (; ). Close files. ; Definition at line 362 of file TTabCom.cxx. ◆ RehashGlobalFunctions(). void TTabCom::RehashGlobalFunctions ; (; ). Reload global functions. ; Definition at line 370 of file TTabCom.cxx. ◆ RehashGlobals(). void TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 378 of file TTabCom.cxx. ◆ RehashPragmas(). void TTabCom::RehashPragmas ; (; ). Reload pragmas. ; Definition at line 387 of file TTabCom.cxx. ◆ RehashSysIncFiles(). void TTabCom::RehashSysIncFiles ; (; ). Reload system include files. ; Definition at line 396 of file TTabCom.cxx. ◆ RehashUsers(). void TTabCom::RehashUsers ; (; ). Reload users. ; Definition at line 405 of file TTabCom.cxx. ◆ SetPattern(). void TTabCom::SetPattern ; (; EContext_t ; handle, . const char ; regexp[] . ). private . [private] ; Definition at line 2543 of file TTabCom.cxx. ◆ Streamer(). virtual void TTabCom::Str",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:17474,Testability,test,test,17474,". static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(). void TTabCom::RehashAll ; (; ). clears and then rebuilds all lists except for user names and system include files. ; Definition at line 415 of file TTabCom.cxx. ◆ RehashClasses(). void TTabCom::RehashClasses ; (; ). Do the class rehash. ; Definition at line 335 of file TTabCom.cxx. ◆ RehashCppDirectives(). void TTabCom::RehashCppDirectives ; (; ). Cpp rehashing. ; Definition at line 344 of file TTabCom.cxx. ◆ RehashEnvVars(). void TTabCom::RehashEnvVars ; (; ). Environemnt variables rehashing. ; Definition at line 353 of file TTabCom.cxx. ◆ RehashFiles(). void TTabCom::RehashFiles ; (; ). Close files. ; Definition at line 362 of file TTabCom.cxx. ◆ RehashGlobalFunctions(). void TTabCom::RehashGlobalFunctions ; (; ). Reload global functions. ; Definition at line 370 of file TTabCom.cxx. ◆ RehashGlobals(). void TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 37",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:1088,Usability,clear,clears,1088,"ng...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TTabCom Class Reference. . Definition at line 52 of file TTabCom.h. Public Types; enum  { kDebug = 17; };  ; enum  EContext_t { ;   kUNKNOWN_CONTEXT =-1; , kSYS_UserName; , kSYS_EnvVar; , kCINT_stdout; , ;   kCINT_stderr; , kCINT_stdin; , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path""",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:2708,Usability,clear,clears,2708,";  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals. ;  ; const TSeqCollection * GetListOfPragmas ();  Return the list of pragmas. ;  ; const TSeqCollection * GetListOfSysIncFiles ();  Return the list of system include files. ;  ; const TSeqCollection * GetListOfUsers ();  reads from ""/etc/passwd"" ;  ; Int_t Hook (char *buf, int *pLoc, std::ostream &out);  [private] ;  ; virtual TClass * IsA () const;  ; void RehashAll ();  clears and then rebuilds all lists except for user names and system include files. ;  ; void RehashClasses ();  Do the class rehash. ;  ; void RehashCppDirectives ();  Cpp rehashing. ;  ; void RehashEnvVars ();  Environemnt variables rehashing. ;  ; void RehashFiles ();  Close files. ;  ; void RehashGlobalFunctions ();  Reload global functions. ;  ; void RehashGlobals ();  Reload globals. ;  ; void RehashPragmas ();  Reload pragmas. ;  ; void RehashSysIncFiles ();  Reload system include files. ;  ; void RehashUsers ();  Reload users. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Char_t AllAgreeOnChar (int i, const TSeqCollection *pList, Int_t &nGoodStrings);  [static utility function]/////////////////////////////////////////// ;  ; static void AppendListOfFilesInDirectory (const char dirName[], TSeqCollection *pList);  [static ",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:9276,Usability,clear,clears,9276,"dByFignore()""; in addition, the number of strings which were not ""ExcludedByFignore()"" is returned in ""nGoodStrings"". ; Definition at line 685 of file TTabCom.cxx. ◆ AppendListOfFilesInDirectory(). void TTabCom::AppendListOfFilesInDirectory ; (; const char ; dirName[], . TSeqCollection * ; pList . ). static . [static utility function]///////////////////////////// ; adds a TObjString to ""*pList"" for each entry found in the system directory ""dirName""; directories that do not exist are silently ignored. ; Definition at line 750 of file TTabCom.cxx. ◆ Class(). static TClass * TTabCom::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTabCom::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTabCom::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 226 of file TTabCom.h. ◆ ClearAll(). void TTabCom::ClearAll ; (; ). clears all lists except for user names and system include files. ; Definition at line 319 of file TTabCom.cxx. ◆ ClearClasses(). void TTabCom::ClearClasses ; (; ). Clear classes and namespace collections. ; Definition at line 218 of file TTabCom.cxx. ◆ ClearCppDirectives(). void TTabCom::ClearCppDirectives ; (; ). Forget all Cpp directives seen so far. ; Definition at line 230 of file TTabCom.cxx. ◆ ClearEnvVars(). void TTabCom::ClearEnvVars ; (; ). Forget all environment variables seen so far. ; Definition at line 242 of file TTabCom.cxx. ◆ ClearFiles(). void TTabCom::ClearFiles ; (; ). Close all files. ; Definition at line 254 of file TTabCom.cxx. ◆ ClearGlobalFunctions(). void TTabCom::ClearGlobalFunctions ; (; ). Forget all global functions seen so far. ; Not needed anymore. Use gROOT->GetListOfGlobalFunctions() ; Definition at line 267 of file TTabCom.cxx. ◆ ClearGlobals(). void TTabCom::ClearGlobals ; (; ). Forget all global variables seen so far. ; With teh new implamentation the list is gROOT->GetListOfGlobal",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTabCom.html:17663,Usability,clear,clears,17663,"vel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(). void TTabCom::RehashAll ; (; ). clears and then rebuilds all lists except for user names and system include files. ; Definition at line 415 of file TTabCom.cxx. ◆ RehashClasses(). void TTabCom::RehashClasses ; (; ). Do the class rehash. ; Definition at line 335 of file TTabCom.cxx. ◆ RehashCppDirectives(). void TTabCom::RehashCppDirectives ; (; ). Cpp rehashing. ; Definition at line 344 of file TTabCom.cxx. ◆ RehashEnvVars(). void TTabCom::RehashEnvVars ; (; ). Environemnt variables rehashing. ; Definition at line 353 of file TTabCom.cxx. ◆ RehashFiles(). void TTabCom::RehashFiles ; (; ). Close files. ; Definition at line 362 of file TTabCom.cxx. ◆ RehashGlobalFunctions(). void TTabCom::RehashGlobalFunctions ; (; ). Reload global functions. ; Definition at line 370 of file TTabCom.cxx. ◆ RehashGlobals(). void TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 378 of file TTabCom.cxx. ◆ RehashPragmas(). void TTabCom::RehashPragmas ; (; ). Reload pragmas. ; Definition at line 387 of file TTabCom.cxx. ◆ RehashSysIncFiles(). void TTabCom::Rehas",MatchSource.WIKI,doc/master/classTTabCom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTabCom.html
https://root.cern/doc/master/classTTask.html:8385,Availability,error,error,8385,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:8474,Availability,error,error,8474,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:8629,Availability,error,error,8629,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:8926,Availability,error,error,8926,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:12869,Availability,error,error,12869,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:365,Integrability,interface,interface,365,". ROOT: TTask Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TTask Class ReferenceCore ROOT classes » Base ROOT classes. ; Legacy Code TTask is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TTask might still be a valid solution. ; TTask is a base class that can be used to build a complex tree of Tasks. Each TTask derived class may contain other TTasks that can be executed recursively, such that a complex program can be dynamically built and executed by invoking the services of the top level Task or one of its subtasks.; Use the TTask::Add function to add a subtask to an existing TTask. To execute a TTask, one calls the ExecuteTask function. ExecuteTask will call recursively:. the TTask::Exec function of the derived class; TTask::ExecuteTasks to execute for each task the list of its subtasks. If the top level task (see example below) is added to the list of Root browsable objects, the tree of tasks can be visualized by the Root browser. The browser can be used to start a task, set break points at the beginning of a task or when the task has completed. At a breakpoint, data structures generated by the execution up this point may be inspected asynchronously and then the execution can be resumed by selecting the ""Continue"" function of a task.; A Task may be active or inactive (controlled by TTask::SetActive). When a task is not active, its sub tasks are not executed.; A TTask tree may be made persistent, saving the status of all the tasks.; The Root browser's picture below has been generated by executing the following script: {; TTask *aliroot = new TTask(""aliroot"",""ALICE reconstruction main task"");; TTask *geominit = new TTask(""",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:506,Integrability,depend,depending,506,". ROOT: TTask Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TTask Class ReferenceCore ROOT classes » Base ROOT classes. ; Legacy Code TTask is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TTask might still be a valid solution. ; TTask is a base class that can be used to build a complex tree of Tasks. Each TTask derived class may contain other TTasks that can be executed recursively, such that a complex program can be dynamically built and executed by invoking the services of the top level Task or one of its subtasks.; Use the TTask::Add function to add a subtask to an existing TTask. To execute a TTask, one calls the ExecuteTask function. ExecuteTask will call recursively:. the TTask::Exec function of the derived class; TTask::ExecuteTasks to execute for each task the list of its subtasks. If the top level task (see example below) is added to the list of Root browsable objects, the tree of tasks can be visualized by the Root browser. The browser can be used to start a task, set break points at the beginning of a task or when the task has completed. At a breakpoint, data structures generated by the execution up this point may be inspected asynchronously and then the execution can be resumed by selecting the ""Continue"" function of a task.; A Task may be active or inactive (controlled by TTask::SetActive). When a task is not active, its sub tasks are not executed.; A TTask tree may be made persistent, saving the status of all the tasks.; The Root browser's picture below has been generated by executing the following script: {; TTask *aliroot = new TTask(""aliroot"",""ALICE reconstruction main task"");; TTask *geominit = new TTask(""",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:3434,Integrability,interface,interface,3434,"econstruction"");; TTask *phosrec = new TTask(""phosRec"",""Phos Reconstruction"");; TTask *richrec = new TTask(""richRec"",""Rich Reconstruction"");; TTask *trdrec = new TTask(""trdRec"",""TRD Reconstruction"");; TTask *globrec = new TTask(""globRec"",""Global Track Reconstruction"");; TTask *pstats = new TTask(""printStats"",""Print Run Statistics"");; TTask *run = new TTask(""run"",""Process one run"");; TTask *event = new TTask(""event"",""Process one event"");; aliroot->Add(geominit);; aliroot->Add(matinit);; aliroot->Add(physinit);; aliroot->Add(run);; run->Add(event);; event->Add(tracker);; event->Add(muonrec);; event->Add(phosrec);; event->Add(richrec);; event->Add(trdrec);; event->Add(globrec);; tracker->Add(tpcrec);; tracker->Add(itsrec);; run->Add(pstats);; ; gROOT->GetListOfBrowsables()->Add(aliroot,""aliroot"");; new TBrowser;; }; gROOT#define gROOTDefinition TROOT.h:406; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TTask<div class=""legacybox""><h2>Legacy Code</h2> TTask is a legacy interface: there will be no bug fixes n...Definition TTask.h:35; TTask::TTaskTTask()Default constructor invoked when reading a TTask object from a file.Definition TTask.cxx:98; TTask::Addvirtual void Add(TTask *task)Add TTask to this.Definition TTask.cxx:176; . Definition at line 35 of file TTask.h. Public Member Functions;  TTask ();  Default constructor invoked when reading a TTask object from a file. ;  ;  TTask (const char *name, const char *title);  Standard constructor. ;  ;  TTask (const TTask &task);  Copy constructor. ;  ; virtual ~TTask ();  Delete a task and its subtasks. ;  ; virtual void Abort ();  Abort current tree of tasks. ;  ; virtual void Add (TTask *task);  Add TTask to this. ;  ; void Browse (TBrowser *b) override;  Browse the list of tasks. ;  ; virtual void CleanTasks ();  Reset tasks state: breakpoints and execute flags also invokes the Clear function of each task to clear all data structures created by a previous execution of a task. ;  ; void C",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:8391,Integrability,message,message,8391,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:8932,Integrability,message,message,8932,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:9922,Integrability,message,message,9922,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:12875,Integrability,message,message,12875,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:13248,Integrability,message,message,13248," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:5573,Modifiability,inherit,inherited,5573,"point. ;  ; virtual void Exec (Option_t *option);  Dummy Execute. ;  ; virtual void ExecuteTask (Option_t *option=""0"");  Execute main task and its subtasks. ;  ; virtual void ExecuteTasks (Option_t *option);  Execute all the subtasks of a task. ;  ; Int_t GetBreakin () const;  ; Int_t GetBreakout () const;  ; TList * GetListOfTasks () const;  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void ls (Option_t *option=""*"") const override;  List the tree of tasks. ;  ; TTask & operator= (const TTask &tt);  Assignment operator. ;  ; void SetActive (Bool_t active=kTRUE);  ; void SetBreakin (Int_t breakin=1);  ; void SetBreakout (Int_t breakout=1);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:7030,Modifiability,inherit,inherited,7030,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:8021,Modifiability,inherit,inheritance,8021,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:10020,Modifiability,inherit,inherits,10020,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:10137,Modifiability,inherit,inherits,10137,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:13749,Modifiability,inherit,inherited,13749,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fActive;  ; Int_t fBreakin;  ; Int_t fBreakout;  ; Bool_t fHasExecuted;  ; TString fOption;  ; TList * fTasks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIs",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:13959,Modifiability,inherit,inherited,13959,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fActive;  ; Int_t fBreakin;  ; Int_t fBreakout;  ; Bool_t fHasExecuted;  ; TString fOption;  ; TList * fTasks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIs",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:14610,Modifiability,inherit,inherited,14610,"ions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fActive;  ; Int_t fBreakin;  ; Int_t fBreakout;  ; Bool_t fHasExecuted;  ; TString fOption;  ; TList * fTasks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member F",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:14826,Modifiability,inherit,inherited,14826,"tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fActive;  ; Int_t fBreakin;  ; Int_t fBreakout;  ; Bool_t fHasExecuted;  ; TString fOption;  ; TList * fTasks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTask.h>. Inheritance diagram for TTask:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [l",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:15467,Modifiability,inherit,inherited,15467,"ks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTask.h>. Inheritance diagram for TTask:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTask() [1/3]. TTask::TTask ; (; ). Default constructor invoked when reading a TTask object from a file. ; Definition at line 98 of file TTask.cxx. ◆ TTask() [2/3]. TTask::TTask ; (; const char * ; name, . const char * ; title . ). Standard constructor. ; Definition at line 110 of file TTask.cxx. ◆ ~TTask(). TTask::~TTask ; (; ). virtual . Delete a task and its subtasks. ; Definition at line 168 of file TTask.cxx. ◆ TTask() [3/3]. TTask::TTask ; (; const TTask & ; task). Copy constructor. ; Definition at line 150 of file TTask.cxx. Member Function Documentation. ◆ Abort(). void TTask::Abort ; (; ). virtual . Abort current tree of tasks",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:15566,Modifiability,inherit,inherited,15566,"ks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTask.h>. Inheritance diagram for TTask:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTask() [1/3]. TTask::TTask ; (; ). Default constructor invoked when reading a TTask object from a file. ; Definition at line 98 of file TTask.cxx. ◆ TTask() [2/3]. TTask::TTask ; (; const char * ; name, . const char * ; title . ). Standard constructor. ; Definition at line 110 of file TTask.cxx. ◆ ~TTask(). TTask::~TTask ; (; ). virtual . Delete a task and its subtasks. ; Definition at line 168 of file TTask.cxx. ◆ TTask() [3/3]. TTask::TTask ; (; const TTask & ; task). Copy constructor. ; Definition at line 150 of file TTask.cxx. Member Function Documentation. ◆ Abort(). void TTask::Abort ; (; ). virtual . Abort current tree of tasks",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:6350,Security,hash,hash,6350,"kin (Int_t breakin=1);  ; void SetBreakout (Int_t breakout=1);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:1551,Usability,resume,resumed,1551,"nding on the context, using TTask might still be a valid solution. ; TTask is a base class that can be used to build a complex tree of Tasks. Each TTask derived class may contain other TTasks that can be executed recursively, such that a complex program can be dynamically built and executed by invoking the services of the top level Task or one of its subtasks.; Use the TTask::Add function to add a subtask to an existing TTask. To execute a TTask, one calls the ExecuteTask function. ExecuteTask will call recursively:. the TTask::Exec function of the derived class; TTask::ExecuteTasks to execute for each task the list of its subtasks. If the top level task (see example below) is added to the list of Root browsable objects, the tree of tasks can be visualized by the Root browser. The browser can be used to start a task, set break points at the beginning of a task or when the task has completed. At a breakpoint, data structures generated by the execution up this point may be inspected asynchronously and then the execution can be resumed by selecting the ""Continue"" function of a task.; A Task may be active or inactive (controlled by TTask::SetActive). When a task is not active, its sub tasks are not executed.; A TTask tree may be made persistent, saving the status of all the tasks.; The Root browser's picture below has been generated by executing the following script: {; TTask *aliroot = new TTask(""aliroot"",""ALICE reconstruction main task"");; TTask *geominit = new TTask(""geomInit"",""Initialize ALICE geometry"");; TTask *matinit = new TTask(""matInit"",""Initialize ALICE materials"");; TTask *physinit = new TTask(""physInit"",""Initialize Physics processes"");; TTask *tracker = new TTask(""tracker"",""Track reconstruction manager"");; TTask *tpcrec = new TTask(""tpcrec"",""TPC reconstruction"");; TTask *itsrec = new TTask(""itsrec"",""ITS reconstruction"");; TTask *muonrec = new TTask(""muonRec"",""Muon Reconstruction"");; TTask *phosrec = new TTask(""phosRec"",""Phos Reconstruction"");; TTask *richre",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:4338,Usability,clear,clear,4338,"er one can browse all ROOT objects.Definition TBrowser.h:37; TTask<div class=""legacybox""><h2>Legacy Code</h2> TTask is a legacy interface: there will be no bug fixes n...Definition TTask.h:35; TTask::TTaskTTask()Default constructor invoked when reading a TTask object from a file.Definition TTask.cxx:98; TTask::Addvirtual void Add(TTask *task)Add TTask to this.Definition TTask.cxx:176; . Definition at line 35 of file TTask.h. Public Member Functions;  TTask ();  Default constructor invoked when reading a TTask object from a file. ;  ;  TTask (const char *name, const char *title);  Standard constructor. ;  ;  TTask (const TTask &task);  Copy constructor. ;  ; virtual ~TTask ();  Delete a task and its subtasks. ;  ; virtual void Abort ();  Abort current tree of tasks. ;  ; virtual void Add (TTask *task);  Add TTask to this. ;  ; void Browse (TBrowser *b) override;  Browse the list of tasks. ;  ; virtual void CleanTasks ();  Reset tasks state: breakpoints and execute flags also invokes the Clear function of each task to clear all data structures created by a previous execution of a task. ;  ; void Clear (Option_t *option="""") override;  Recursively call the Clear function of this task and its subtasks. ;  ; virtual void Continue ();  Resume execution at the current break point. ;  ; virtual void Exec (Option_t *option);  Dummy Execute. ;  ; virtual void ExecuteTask (Option_t *option=""0"");  Execute main task and its subtasks. ;  ; virtual void ExecuteTasks (Option_t *option);  Execute all the subtasks of a task. ;  ; Int_t GetBreakin () const;  ; Int_t GetBreakout () const;  ; TList * GetListOfTasks () const;  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void ls (Option_t *option=""*"") const override;  List the tree of tasks. ;  ; TTask & operator= (const TTask &tt);  Assignment operator. ;  ; void SetActive (Boo",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:17724,Usability,clear,clear,17724,"s created by previous executions. ; Definition at line 192 of file TTask.cxx. ◆ Add(). void TTask::Add ; (; TTask * ; task). virtual . Add TTask to this. ; Definition at line 176 of file TTask.cxx. ◆ Browse(). void TTask::Browse ; (; TBrowser * ; b). overridevirtual . Browse the list of tasks. ; It is recommended to add the top level task to the list of ROOT browsables by: gROOT->GetListOfBrowsables()->Add(myTopLevelTask). Reimplemented from TObject.; Definition at line 211 of file TTask.cxx. ◆ Class(). static TClass * TTask::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTask::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTask::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 76 of file TTask.h. ◆ CleanTasks(). void TTask::CleanTasks ; (; ). virtual . Reset tasks state: breakpoints and execute flags also invokes the Clear function of each task to clear all data structures created by a previous execution of a task. ; Definition at line 222 of file TTask.cxx. ◆ Clear(). void TTask::Clear ; (; Option_t * ; option = """"). overridevirtual . Recursively call the Clear function of this task and its subtasks. ; The Clear function must be implemented for each derived class to clear all data structures created by a previous execution of a task. This function is automatically called by the CleanTasks function. ; Reimplemented from TNamed.; Definition at line 240 of file TTask.cxx. ◆ Continue(). void TTask::Continue ; (; ). virtual . Resume execution at the current break point. ; Definition at line 247 of file TTask.cxx. ◆ DeclFileName(). static const char * TTask::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 76 of file TTask.h. ◆ Exec(). void TTask::Exec ; (; Option_t * ; option). virtual . Dummy Execute. ; This function must be redefined in the derived cla",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTask.html:18050,Usability,clear,clear,18050,"to the list of ROOT browsables by: gROOT->GetListOfBrowsables()->Add(myTopLevelTask). Reimplemented from TObject.; Definition at line 211 of file TTask.cxx. ◆ Class(). static TClass * TTask::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTask::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTask::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 76 of file TTask.h. ◆ CleanTasks(). void TTask::CleanTasks ; (; ). virtual . Reset tasks state: breakpoints and execute flags also invokes the Clear function of each task to clear all data structures created by a previous execution of a task. ; Definition at line 222 of file TTask.cxx. ◆ Clear(). void TTask::Clear ; (; Option_t * ; option = """"). overridevirtual . Recursively call the Clear function of this task and its subtasks. ; The Clear function must be implemented for each derived class to clear all data structures created by a previous execution of a task. This function is automatically called by the CleanTasks function. ; Reimplemented from TNamed.; Definition at line 240 of file TTask.cxx. ◆ Continue(). void TTask::Continue ; (; ). virtual . Resume execution at the current break point. ; Definition at line 247 of file TTask.cxx. ◆ DeclFileName(). static const char * TTask::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 76 of file TTask.h. ◆ Exec(). void TTask::Exec ; (; Option_t * ; option). virtual . Dummy Execute. ; This function must be redefined in the derived classes. ; Definition at line 267 of file TTask.cxx. ◆ ExecuteTask(). void TTask::ExecuteTask ; (; Option_t * ; option = ""0""). virtual . Execute main task and its subtasks. ; When calling this function, the Exec function of the corresponding class is invoked, then the list of its subtasks is executed calling recursively all the subtasks, etc.",MatchSource.WIKI,doc/master/classTTask.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTask.html
https://root.cern/doc/master/classTTermInputHandler.html:631,Availability,mask,mask,631,". ROOT: TTermInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TTermInputHandler Class Reference. . Definition at line 121 of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const ov",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:1287,Availability,mask,mask,1287,"of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:1308,Availability,mask,mask,1308,"of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:1317,Availability,mask,mask,1317,"of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:4026,Availability,error,error,4026,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:4115,Availability,error,error,4115,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:4270,Availability,error,error,4270,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:4567,Availability,error,error,4567,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:9002,Availability,error,error,9002," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:4032,Integrability,message,message,4032,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:4573,Integrability,message,message,4573,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:5775,Integrability,message,message,5775,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:9008,Integrability,message,message,9008," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:9381,Integrability,message,message,9381," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:575,Modifiability,inherit,inherited,575,". ROOT: TTermInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TTermInputHandler Class Reference. . Definition at line 121 of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const ov",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:1685,Modifiability,inherit,inherited,1685,"dd file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be over",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:2265,Modifiability,inherit,inherited,2265," fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:3662,Modifiability,inherit,inheritance,3662,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:5873,Modifiability,inherit,inherits,5873,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:5990,Modifiability,inherit,inherits,5990,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:9688,Modifiability,inherit,inherited,9688," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:11675,Modifiability,inherit,inherited,11675,"t_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:11757,Modifiability,inherit,inherited,11757,"t_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:12413,Modifiability,inherit,inherited,12413," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:12629,Modifiability,inherit,inherited,12629," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:12847,Modifiability,inherit,inherited,12847," = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (cons",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:13365,Modifiability,inherit,inherited,13365,"mber Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:14525,Modifiability,inherit,inherited,14525,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:14624,Modifiability,inherit,inherited,14624,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:14702,Modifiability,inherit,inherited,14702,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:14913,Modifiability,inherit,inherited,14913,"slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:15026,Modifiability,inherit,inherited,15026,"slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from t",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:15875,Modifiability,inherit,inherited,15875,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TTermInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTermInputHandler(). TTermInputHandler::TTermInputHandler ; (; Int_t ; fd). inline . Definition at line 123 of file TRint.cxx. Member Function Documentation. ◆ Notify(). Bool_t TTermInputHandler::Notify ; (; ). overridevirtual . Notify implementation. Call the application interupt handler. ; Reimplemented from TFileHandler.; Definition at line 131 of file TRint.cxx. ◆ ReadNotify(). Bool_t TTermInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at lin",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:15976,Modifiability,inherit,inherited,15976,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TTermInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTermInputHandler(). TTermInputHandler::TTermInputHandler ; (; Int_t ; fd). inline . Definition at line 123 of file TRint.cxx. Member Function Documentation. ◆ Notify(). Bool_t TTermInputHandler::Notify ; (; ). overridevirtual . Notify implementation. Call the application interupt handler. ; Reimplemented from TFileHandler.; Definition at line 131 of file TRint.cxx. ◆ ReadNotify(). Bool_t TTermInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at lin",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:16189,Modifiability,inherit,inherited,16189,"ectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TTermInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTermInputHandler(). TTermInputHandler::TTermInputHandler ; (; Int_t ; fd). inline . Definition at line 123 of file TRint.cxx. Member Function Documentation. ◆ Notify(). Bool_t TTermInputHandler::Notify ; (; ). overridevirtual . Notify implementation. Call the application interupt handler. ; Reimplemented from TFileHandler.; Definition at line 131 of file TRint.cxx. ◆ ReadNotify(). Bool_t TTermInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at lin",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTermInputHandler.html:5504,Security,hash,hash,5504," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTTermInputHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html
https://root.cern/doc/master/classTTeXDump.html:9445,Availability,error,error,9445,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:9534,Availability,error,error,9534,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:9689,Availability,error,error,9689,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:9986,Availability,error,error,9986,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:14070,Availability,error,error,14070,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:31485,Energy Efficiency,green,green,31485,"TeXDump.h. ◆ NewPage(). void TTeXDump::NewPage ; (; ). overridevirtual . Start the TeX page. This function starts the tikzpicture environment. ; Implements TVirtualPS.; Definition at line 648 of file TTeXDump.cxx. ◆ Off(). void TTeXDump::Off ; (; ). Deactivate an already open TeX file. ; Definition at line 240 of file TTeXDump.cxx. ◆ On(). void TTeXDump::On ; (; ). Activate an already open TeX file. ; Definition at line 224 of file TTeXDump.cxx. ◆ Open(). void TTeXDump::Open ; (; const char * ; filename, . Int_t ; type = -111 . ). overridevirtual . Open a TeX file. ; Implements TVirtualPS.; Definition at line 131 of file TTeXDump.cxx. ◆ Range(). void TTeXDump::Range ; (; Float_t ; xrange, . Float_t ; yrange . ). Set the range for the paper in centimetres. ; Definition at line 672 of file TTeXDump.cxx. ◆ SetColor() [1/2]. void TTeXDump::SetColor ; (; Float_t ; r, . Float_t ; g, . Float_t ; b . ). overridevirtual . Set color with its R G B components. . r: % of red in [0,1]; g: % of green in [0,1]; b: % of blue in [0,1] . Implements TVirtualPS.; Definition at line 757 of file TTeXDump.cxx. ◆ SetColor() [2/2]. void TTeXDump::SetColor ; (; Int_t ; color = 1). Set color with its color index. ; Definition at line 736 of file TTeXDump.cxx. ◆ SetFillColor(). void TTeXDump::SetFillColor ; (; Color_t ; cindex = 1). overridevirtual . Set color index for fill areas. ; Reimplemented from TAttFill.; Definition at line 683 of file TTeXDump.cxx. ◆ SetLineColor(). void TTeXDump::SetLineColor ; (; Color_t ; cindex = 1). overridevirtual . Set color index for lines. ; Reimplemented from TAttLine.; Definition at line 691 of file TTeXDump.cxx. ◆ SetLineScale(). void TTeXDump::SetLineScale ; (; Float_t ; scale = 1). inline . Definition at line 67 of file TTeXDump.h. ◆ SetLineStyle(). void TTeXDump::SetLineStyle ; (; Style_t ; linestyle = 1). overridevirtual . Change the line style. . linestyle = 2 dashed; linestyle = 3 dotted; linestyle = 4 dash-dotted; linestyle = else solid (1 in is use",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:2058,Integrability,interface,interface,2058," Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (const char *filename, Int_t type=-113);  Initialize the TeX interface. ;  ;  ~TTeXDump () override;  Default TeX destructor. ;  ; void CellArrayBegin (Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2) override;  Begin the Cell Array painting. ;  ; void CellArrayEnd () override;  End the Cell Array painting. ;  ; void CellArrayFill (Int_t r, Int_t g, Int_t b) override;  Paint the Cell Array. ;  ; void Close (Option_t *opt="""") override;  Close a TeX file. ;  ; Int_t CMtoTeX (Double_t u);  ; void DefineMarkers ();  add additional pgfplotmarks ;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Draw a Box. ;  ; void DrawFrame (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light) override;  Draw a Frame around a box. ;  ; void DrawPolyLine (Int_t n, TPoints *xy);  Draw a PolyLine. ;  ; void DrawPolyLineNDC (Int_t n, TPoints *uv);  Draw a PolyLine in NDC space. ;  ; void DrawPolyMarker (Int_t n, Double_t *x, Double_t *y",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:9451,Integrability,message,message,9451,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:9992,Integrability,message,message,9992,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:10982,Integrability,message,message,10982,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:14076,Integrability,message,message,14076,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:14449,Integrability,message,message,14449," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:25644,Integrability,interface,interface,25644,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTeXDump() [1/2]. TTeXDump::TTeXDump ; (; ). Default TeX constructor. ; Definition at line 85 of file TTeXDump.cxx. ◆ TTeXDump() [2/2]. TTeXDump::TTeXDump ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the TeX interface. ; –fname : TeX file name; wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the TeX case). . Definition at line 110 of file TTeXDump.cxx. ◆ ~TTeXDump(). TTeXDump::~TTeXDump ; (; ). override . Default TeX destructor. ; Definition at line 194 of file TTeXDump.cxx. Member Function Documentation. ◆ CellArrayBegin(). void TTeXDump::CellArrayBegin ; (; Int_t ; W, . Int_t ; H, . Double_t ; x1, . Double_t ; x2, . Double_t ; y1, . Double_t ; y2 . ). overridevirtual . Begin the Cell Array painting. ; Implements TVirtualPS.; Definition at line 901 of file TTeXDump.cxx. ◆ CellArrayEnd(). void TTeXDump::CellArrayEnd ; (; ). overridevirtual . End the Cell Array painting. ; Implements TVirtualPS.; Definition at line 918 of file TTeXDump.cxx. ◆ CellArrayFill(). void TTeXDump::CellArrayFill ; (; Int_t",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:5341,Modifiability,inherit,inherited,5341,"Color_t cindex=1) override;  Set color index for markers. ;  ; void SetMarkerSize (Size_t msize=1) override;  Set size for markers. ;  ; void SetTextColor (Color_t cindex=1) override;  Set color index for text. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Text (Double_t x, Double_t y, const char *string) override;  Draw text. ;  ; void Text (Double_t, Double_t, const wchar_t *) override;  ; void TextNDC (Double_t u, Double_t v, const char *string);  Write a string of characters in NDC. ;  ; void TextNDC (Double_t, Double_t, const wchar_t *);  ; Float_t UtoTeX (Double_t u);  Convert U from NDC coordinate to TeX. ;  ; Float_t VtoTeX (Double_t v);  Convert V from NDC coordinate to TeX. ;  ; Float_t XtoTeX (Double_t x);  Convert X from world coordinate to TeX. ;  ; Float_t YtoTeX (Double_t y);  Convert Y from world coordinate to TeX. ;  ;  Public Member Functions inherited from TVirtualPS;  TVirtualPS ();  VirtualPS default constructor. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetStream (std::ofstream *os);  ; virtual void SetType (Int_t=-111);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteInteger (Int_t i, Bool_t space=kTRUE);  Write one Integer to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inh",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:6360,Modifiability,inherit,inherited,6360,"r. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetStream (std::ofstream *os);  ; virtual void SetType (Int_t=-111);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteInteger (Int_t i, Bool_t space=kTRUE);  Write one Integer to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:7988,Modifiability,inherit,inherited,7988,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:9081,Modifiability,inherit,inheritance,9081,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:11080,Modifiability,inherit,inherits,11080,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:11197,Modifiability,inherit,inherits,11197,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:14756,Modifiability,inherit,inherited,14756,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:16051,Modifiability,inherit,inherited,16051,"o a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a ",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:17231,Modifiability,inherit,inherited,17231," ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attrib",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:18503,Modifiability,inherit,inherited,18503,"ker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ost",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:20509,Modifiability,inherit,inherited,20509,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:20723,Modifiability,inherit,inherited,20723,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:20933,Modifiability,inherit,inherited,20933,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:21451,Modifiability,inherit,inherited,21451,e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLi,MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:21663,Modifiability,inherit,inherited,21663,e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLi,MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:21875,Modifiability,inherit,inherited,21875,e ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLi,MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:22410,Modifiability,inherit,inherited,22410,ic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLineScale;  Line width scale factor. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Bool_t fStandalone;  True when a TeX file should be standalone. ;  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected At,MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:23232,Modifiability,inherit,inherited,23232,"ted from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLineScale;  Line width scale factor. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Bool_t fStandalone;  True when a TeX file should be standalone. ;  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kIncons",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:23490,Modifiability,inherit,inherited,23490,"ted from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLineScale;  Line width scale factor. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Bool_t fStandalone;  True when a TeX file should be standalone. ;  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kIncons",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:23572,Modifiability,inherit,inherited,23572,"ted from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the TeX header is printed. ;  ; Float_t fCurrentAlpha;  Current Alpha value. ;  ; Float_t fCurrentBlue;  Current Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLineScale;  Line width scale factor. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Bool_t fStandalone;  True when a TeX file should be standalone. ;  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kIncons",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:23733,Modifiability,inherit,inherited,23733,"urrent Blue component. ;  ; Float_t fCurrentGreen;  Current Green component. ;  ; Float_t fCurrentRed;  Current Red component. ;  ; Float_t fLineScale;  Line width scale factor. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Bool_t fStandalone;  True when a TeX file should be standalone. ;  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRefere",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:23866,Modifiability,inherit,inherited,23866,"loat_t fLineScale;  Line width scale factor. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Bool_t fStandalone;  True when a TeX file should be standalone. ;  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInva",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:24038,Modifiability,inherit,inherited,24038,";  ; Int_t fType;  Workstation type used to know if the Tex is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObj",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:24296,Modifiability,inherit,inherited,24296,"_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:24937,Modifiability,inherit,inherited,24937,"m TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTeXDump() [1/2]. TTeXDump::TTeXDump ; (; ). Default TeX constructor. ; Definition at line 85 of file TTeXDump.cxx. ◆ TTeXDump() [2/2]. TTeXDump::TTeXDump ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the TeX interface. ; –fname : TeX file name; wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the TeX case). . Definition at line 110 of file TTeXDump.cxx. ◆ ~TTeXDump(). TTeXDump::~TTeXDump ; (; ). override . Default TeX dest",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:25036,Modifiability,inherit,inherited,25036,"m TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTeXDump() [1/2]. TTeXDump::TTeXDump ; (; ). Default TeX constructor. ; Definition at line 85 of file TTeXDump.cxx. ◆ TTeXDump() [2/2]. TTeXDump::TTeXDump ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the TeX interface. ; –fname : TeX file name; wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the TeX case). . Definition at line 110 of file TTeXDump.cxx. ◆ ~TTeXDump(). TTeXDump::~TTeXDump ; (; ). override . Default TeX dest",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:25755,Modifiability,inherit,inherits,25755,"4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTeXDump() [1/2]. TTeXDump::TTeXDump ; (; ). Default TeX constructor. ; Definition at line 85 of file TTeXDump.cxx. ◆ TTeXDump() [2/2]. TTeXDump::TTeXDump ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the TeX interface. ; –fname : TeX file name; wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the TeX case). . Definition at line 110 of file TTeXDump.cxx. ◆ ~TTeXDump(). TTeXDump::~TTeXDump ; (; ). override . Default TeX destructor. ; Definition at line 194 of file TTeXDump.cxx. Member Function Documentation. ◆ CellArrayBegin(). void TTeXDump::CellArrayBegin ; (; Int_t ; W, . Int_t ; H, . Double_t ; x1, . Double_t ; x2, . Double_t ; y1, . Double_t ; y2 . ). overridevirtual . Begin the Cell Array painting. ; Implements TVirtualPS.; Definition at line 901 of file TTeXDump.cxx. ◆ CellArrayEnd(). void TTeXDump::CellArrayEnd ; (; ). overridevirtual . End the Cell Array painting. ; Implements TVirtualPS.; Definition at line 918 of file TTeXDump.cxx. ◆ CellArrayFill(). void TTeXDump::CellArrayFill ; (; Int_t ; r, . Int_t ; g, . Int_t ; b . ). overridevirtual . Paint the Cell Array. ; Implements TVirtualPS.; Definition at line 910 of f",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:7228,Security,hash,hash,7228,"ger to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:648,Usability,user-friendly,user-friendly,648,". ROOT: TTeXDump Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TTeXDump Class ReferenceGraphics » 2D Graphics » Graphics file output. ; Interface to TeX. ; This class allow to generate PGF/TikZ vector graphics output which can be included in TeX and LaTeX documents.; PGF is a TeX macro package for generating graphics. It is platform and format-independent and works together with the most important TeX backend drivers, including pdftex and dvips. It comes with a user-friendly syntax layer called TikZ.; To generate a such file it is enough to do: gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TStyle::SetPaperSizevoid SetPaperSize(EPaperSize size)Set paper size for PostScript output.Definition TStyle.cxx:1704; Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (con",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:1097,Usability,simpl,simple,1097,"ading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TTeXDump Class ReferenceGraphics » 2D Graphics » Graphics file output. ; Interface to TeX. ; This class allow to generate PGF/TikZ vector graphics output which can be included in TeX and LaTeX documents.; PGF is a TeX macro package for generating graphics. It is platform and format-independent and works together with the most important TeX backend drivers, including pdftex and dvips. It comes with a user-friendly syntax layer called TikZ.; To generate a such file it is enough to do: gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TStyle::SetPaperSizevoid SetPaperSize(EPaperSize size)Set paper size for PostScript output.Definition TStyle.cxx:1704; Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (const char *filename, Int_t type=-113);  Initialize the TeX interface. ;  ;  ~TTeX",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:1239,Usability,simpl,simple,1239,"XDump Class ReferenceGraphics » 2D Graphics » Graphics file output. ; Interface to TeX. ; This class allow to generate PGF/TikZ vector graphics output which can be included in TeX and LaTeX documents.; PGF is a TeX macro package for generating graphics. It is platform and format-independent and works together with the most important TeX backend drivers, including pdftex and dvips. It comes with a user-friendly syntax layer called TikZ.; To generate a such file it is enough to do: gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TStyle::SetPaperSizevoid SetPaperSize(EPaperSize size)Set paper size for PostScript output.Definition TStyle.cxx:1704; Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (const char *filename, Int_t type=-113);  Initialize the TeX interface. ;  ;  ~TTeXDump () override;  Default TeX destructor. ;  ; void CellArrayBegin (Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2) override;  Begin the Cell Arr",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:1809,Usability,simpl,simple,1809,";; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TStyle::SetPaperSizevoid SetPaperSize(EPaperSize size)Set paper size for PostScript output.Definition TStyle.cxx:1704; Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (const char *filename, Int_t type=-113);  Initialize the TeX interface. ;  ;  ~TTeXDump () override;  Default TeX destructor. ;  ; void CellArrayBegin (Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2) override;  Begin the Cell Array painting. ;  ; void CellArrayEnd () override;  End the Cell Array painting. ;  ; void CellArrayFill (Int_t r, Int_t g, Int_t b) override;  Paint the Cell Array. ;  ; void Close (Option_t *opt="""") override;  Close a TeX file. ;  ; Int_t CMtoTeX (Double_t u);  ; void DefineMarkers ();  add additional pgfplotmarks ;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Draw a Box. ;  ; void DrawFrame (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light) override;  Draw a F",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTTeXDump.html:1861,Usability,simpl,simple,1861,"ion TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TStyle::SetPaperSizevoid SetPaperSize(EPaperSize size)Set paper size for PostScript output.Definition TStyle.cxx:1704; Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (const char *filename, Int_t type=-113);  Initialize the TeX interface. ;  ;  ~TTeXDump () override;  Default TeX destructor. ;  ; void CellArrayBegin (Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2) override;  Begin the Cell Array painting. ;  ; void CellArrayEnd () override;  End the Cell Array painting. ;  ; void CellArrayFill (Int_t r, Int_t g, Int_t b) override;  Paint the Cell Array. ;  ; void Close (Option_t *opt="""") override;  Close a TeX file. ;  ; Int_t CMtoTeX (Double_t u);  ; void DefineMarkers ();  add additional pgfplotmarks ;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Draw a Box. ;  ; void DrawFrame (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light) override;  Draw a Frame around a box. ;  ; void DrawPolyLine",MatchSource.WIKI,doc/master/classTTeXDump.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTTeXDump.html
https://root.cern/doc/master/classTText-members.html:1641,Availability,error,error,1641,"t &text) const overrideTTextvirtual; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; fWcsTitleTTextprotected; fXTTextprotected; fYTTextprotected; GetBBox() overrideTTextvirtual; GetBBoxCenter() overrideTTextvirtual; GetBoundingBox(UInt_t &w, UInt_t &h, Bool_t angle=kFALSE)TTextvirtual; GetControlBox(Int_t x, Int_t y, Double_t theta, Int_t cBoxX[4], Int_t cBoxY[4])TTextvirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIcon",MatchSource.WIKI,doc/master/classTText-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText-members.html
https://root.cern/doc/master/classTText-members.html:1722,Availability,error,error,1722,"t &text) const overrideTTextvirtual; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; fWcsTitleTTextprotected; fXTTextprotected; fYTTextprotected; GetBBox() overrideTTextvirtual; GetBBoxCenter() overrideTTextvirtual; GetBoundingBox(UInt_t &w, UInt_t &h, Bool_t angle=kFALSE)TTextvirtual; GetControlBox(Int_t x, Int_t y, Double_t theta, Int_t cBoxX[4], Int_t cBoxY[4])TTextvirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIcon",MatchSource.WIKI,doc/master/classTText-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText-members.html
https://root.cern/doc/master/classTText-members.html:183,Modifiability,inherit,inherited,183,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText Member List. This is the complete list of members for TText, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TTextstatic; Class_Name()TTextstatic; Class_Version()TTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTTextvirtual; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffe",MatchSource.WIKI,doc/master/classTText-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText-members.html
https://root.cern/doc/master/classTText.html:9840,Availability,error,error,9840," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:9929,Availability,error,error,9929,"owser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:10084,Availability,error,error,10084,"/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:10261,Availability,error,error,10261,"object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:14094,Availability,error,error,14094,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a n",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:9846,Integrability,message,message,9846," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:10267,Integrability,message,message,10267,"object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:11257,Integrability,message,message,11257,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:14100,Integrability,message,message,14100,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a n",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:14473,Integrability,message,message,14473,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t Ge",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:1723,Modifiability,inherit,inherited,1723,";; t->SetTextAngle(45);; t->Draw();; }; kRed@ kRedDefinition Rtypes.h:66; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextAnglevirtual void SetTextAngle(Float_t tangle=0)Set the text angle.Definition TAttText.h:43; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TTextBase class for several text objects.Definition TText.h:22; TText::TTextTText()Definition TText.h:35. Definition at line 22 of file TText.h. Public Types; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TText ();  ;  TText (const TText &text);  Copy constructor. ;  ;  TText (Double_t x, Double_t y, const char *text);  Text normal constructor. ;  ;  TText (Double_t x, Double_t y, const wchar_t *text);  Text normal constructor. ;  ;  ~TText () override;  Text default destructor. ;  ; void Copy (TObject &text) const override;  Copy this text to text. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
https://root.cern/doc/master/classTText.html:7100,Modifiability,inherit,inherited,7100,"undingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetMbTitle (const wchar_t *title=L"""");  Change (i.e. set) the title of the TNamed. ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; virtual void SetText (Double_t x, Double_t y, const char *text);  ; virtual void SetText (Double_t x, Double_t y, const wchar_t *text);  ; virtual void SetX (Double_t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ",MatchSource.WIKI,doc/master/classTText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTText.html
