id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:1125,Energy Efficiency,power,power,1125,"hm appeared in acm-trans. math. software, vol.9, no. 2,; /// jun., 1983, p. 258-259.; ///; /// TSpline5 computes the coefficients of a quintic natural quintic spli; /// s(x) with knots x(i) interpolating there to given function values:; /// ~~~ {.cpp}; /// s(x(i)) = y(i) for i = 1,2, ..., n.; /// ~~~; /// in each interval (x(i),x(i+1)) the spline function s(xx) is a; /// polynomial of fifth degree:; /// ~~~ {.cpp}; /// s(xx) = ((((f(i)*p+e(i))*p+d(i))*p+c(i))*p+b(i))*p+y(i) (*); /// = ((((-f(i)*q+e(i+1))*q-d(i+1))*q+c(i+1))*q-b(i+1))*q+y(i+1); /// ~~~; /// where p = xx - x(i) and q = x(i+1) - xx.; /// (note the first subscript in the second expression.); /// the different polynomials are pieced together so that s(x) and; /// its derivatives up to s"""" are continuous.; ///; /// ### input:; ///; /// n number of data points, (at least three, i.e. n > 2); /// x(1:n) the strictly increasing or decreasing sequence of; /// knots. the spacing must be such that the fifth power; /// of x(i+1) - x(i) can be formed without overflow or; /// underflow of exponents.; /// y(1:n) the prescribed function values at the knots.; ///; /// ### output:; ///; /// b,c,d,e,f the computed spline coefficients as in (*).; /// (1:n) specifically; /// b(i) = s'(x(i)), c(i) = s""(x(i))/2, d(i) = s""'(x(i))/6,; /// e(i) = s""""(x(i))/24, f(i) = s""""'(x(i))/120.; /// f(n) is neither used nor altered. the five arrays; /// b,c,d,e,f must always be distinct.; ///; /// ### option:; ///; /// it is possible to specify values for the first and second; /// derivatives of the spline function at arbitrarily many knots.; /// this is done by relaxing the requirement that the sequence of; /// knots be strictly increasing or decreasing. specifically:; ///; /// ~~~ {.cpp}; /// if x(j) = x(j+1) then s(x(j)) = y(j) and s'(x(j)) = y(j+1),; /// if x(j) = x(j+1) = x(j+2) then in addition s""(x(j)) = y(j+2).; /// ~~~; ///; /// note that s""""(x) is discontinuous at a double knot and, in; /// addition, s""'(x) is discontinuous at a ",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:3,Deployability,Integrat,Integrate,3,"// Integrate the third derivative of s(x)",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:3,Integrability,Integrat,Integrate,3,"// Integrate the third derivative of s(x)",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:291,Modifiability,variab,variables,291,"////////////////////////////////////////////////////////////////////////////////; /// Test method for TSpline5; ///; /// ~~~ {.cpp}; /// n number of data points.; /// m 2*m-1 is order of spline.; /// m = 3 always for quintic spline.; /// nn,nm1,mm,; /// mm1,i,k,; /// j,jj temporary integer variables.; /// z,p temporary double precision variables.; /// x[n] the sequence of knots.; /// y[n] the prescribed function values at the knots.; /// a[200][6] two dimensional array whose columns are; /// the computed spline coefficients; /// diff[5] maximum values of differences of values and; /// derivatives to right and left of knots.; /// com[5] maximum values of coefficients.; /// ~~~; ///; /// test of TSpline5 with non equidistant knots and; /// equidistant knots follows.",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:338,Modifiability,variab,variables,338,"////////////////////////////////////////////////////////////////////////////////; /// Test method for TSpline5; ///; /// ~~~ {.cpp}; /// n number of data points.; /// m 2*m-1 is order of spline.; /// m = 3 always for quintic spline.; /// nn,nm1,mm,; /// mm1,i,k,; /// j,jj temporary integer variables.; /// z,p temporary double precision variables.; /// x[n] the sequence of knots.; /// y[n] the prescribed function values at the knots.; /// a[200][6] two dimensional array whose columns are; /// the computed spline coefficients; /// diff[5] maximum values of differences of values and; /// derivatives to right and left of knots.; /// com[5] maximum values of coefficients.; /// ~~~; ///; /// test of TSpline5 with non equidistant knots and; /// equidistant knots follows.",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test method for TSpline5; ///; /// ~~~ {.cpp}; /// n number of data points.; /// m 2*m-1 is order of spline.; /// m = 3 always for quintic spline.; /// nn,nm1,mm,; /// mm1,i,k,; /// j,jj temporary integer variables.; /// z,p temporary double precision variables.; /// x[n] the sequence of knots.; /// y[n] the prescribed function values at the knots.; /// a[200][6] two dimensional array whose columns are; /// the computed spline coefficients; /// diff[5] maximum values of differences of values and; /// derivatives to right and left of knots.; /// com[5] maximum values of coefficients.; /// ~~~; ///; /// test of TSpline5 with non equidistant knots and; /// equidistant knots follows.",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:695,Testability,test,test,695,"////////////////////////////////////////////////////////////////////////////////; /// Test method for TSpline5; ///; /// ~~~ {.cpp}; /// n number of data points.; /// m 2*m-1 is order of spline.; /// m = 3 always for quintic spline.; /// nn,nm1,mm,; /// mm1,i,k,; /// j,jj temporary integer variables.; /// z,p temporary double precision variables.; /// x[n] the sequence of knots.; /// y[n] the prescribed function values at the knots.; /// a[200][6] two dimensional array whose columns are; /// the computed spline coefficients; /// diff[5] maximum values of differences of values and; /// derivatives to right and left of knots.; /// com[5] maximum values of coefficients.; /// ~~~; ///; /// test of TSpline5 with non equidistant knots and; /// equidistant knots follows.",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:3,Testability,Test,Test,3,"// Test of TSpline5 with non equidistant double knots follows",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:3,Testability,test,test,3,"// test of TSpline5 with non equidistant knots, one double knot,; // one triple knot, follows.",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:3,Testability,Test,Test,3,"// Test of TSpline5 with non equidistant knots, two double knots,; // one triple knot,follows.",MatchSource.CODE_COMMENT,hist/hist/src/TSpline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:1966,Availability,error,errors,1966,"; * *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class TSVDUnfold; \ingroup Hist; SVD Approach to Data Unfolding; <p>; Reference: <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a>; <p>; TSVDUnfold implements the singular value decomposition based unfolding method (see reference). Currently, the unfolding of one-dimensional histograms is supported, with the same number of bins for the measured and the unfolded spectrum.; <p>; The unfolding procedure is based on singular value decomposition of the response matrix. The regularisation of the unfolding is implemented via a discrete minimum-curvature condition.; <p>; Monte Carlo inputs:; <ul>; <li><tt>xini</tt>: true underlying spectrum (TH1D, n bins); <li><tt>bini</tt>: reconstructed spectrum (TH1D, n bins); <li><tt>Adet</tt>: response matrix (TH2D, nxn bins); </ul>; Consider the unfolding of a measured spectrum <tt>bdat</tt> with covariance matrix <tt>Bcov</tt> (if not passed explicitly, a diagonal covariance will be built given the errors of <tt>bdat</tt>). The corresponding spectrum in the Monte Carlo is given by <tt>bini</tt>, with the true underlying spectrum given by <tt>xini</tt>. The detector response is described by <tt>Adet</tt>, with <tt>Adet</tt> filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis.; <p>; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of <tt>xini</tt> and <tt>Adet</tt>.<br><br>; <p>; The unfolding can be performed by; \code{.cpp}; TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; \endcode; where <tt>kreg</tt> determines the regularisation of the unfolding. In general, overregular",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:2545,Performance,perform,performed,2545,"ted via a discrete minimum-curvature condition.; <p>; Monte Carlo inputs:; <ul>; <li><tt>xini</tt>: true underlying spectrum (TH1D, n bins); <li><tt>bini</tt>: reconstructed spectrum (TH1D, n bins); <li><tt>Adet</tt>: response matrix (TH2D, nxn bins); </ul>; Consider the unfolding of a measured spectrum <tt>bdat</tt> with covariance matrix <tt>Bcov</tt> (if not passed explicitly, a diagonal covariance will be built given the errors of <tt>bdat</tt>). The corresponding spectrum in the Monte Carlo is given by <tt>bini</tt>, with the true underlying spectrum given by <tt>xini</tt>. The detector response is described by <tt>Adet</tt>, with <tt>Adet</tt> filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis.; <p>; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of <tt>xini</tt> and <tt>Adet</tt>.<br><br>; <p>; The unfolding can be performed by; \code{.cpp}; TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; \endcode; where <tt>kreg</tt> determines the regularisation of the unfolding. In general, overregularisation (too small <tt>kreg</tt>) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large <tt>kreg</tt>) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be determined following guidelines in <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a> using the distribution of the <tt>|d_i|</tt> that can be obtained by <tt>tsvdunf->GetD()</tt> and/or using pseudo-experiments.; <p>; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the <tt>GetUnfoldCovMatrix</tt> method, which uses pseudo experiment",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:2127,Safety,detect,detector,2127,"folding method (see reference). Currently, the unfolding of one-dimensional histograms is supported, with the same number of bins for the measured and the unfolded spectrum.; <p>; The unfolding procedure is based on singular value decomposition of the response matrix. The regularisation of the unfolding is implemented via a discrete minimum-curvature condition.; <p>; Monte Carlo inputs:; <ul>; <li><tt>xini</tt>: true underlying spectrum (TH1D, n bins); <li><tt>bini</tt>: reconstructed spectrum (TH1D, n bins); <li><tt>Adet</tt>: response matrix (TH2D, nxn bins); </ul>; Consider the unfolding of a measured spectrum <tt>bdat</tt> with covariance matrix <tt>Bcov</tt> (if not passed explicitly, a diagonal covariance will be built given the errors of <tt>bdat</tt>). The corresponding spectrum in the Monte Carlo is given by <tt>bini</tt>, with the true underlying spectrum given by <tt>xini</tt>. The detector response is described by <tt>Adet</tt>, with <tt>Adet</tt> filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis.; <p>; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of <tt>xini</tt> and <tt>Adet</tt>.<br><br>; <p>; The unfolding can be performed by; \code{.cpp}; TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; \endcode; where <tt>kreg</tt> determines the regularisation of the unfolding. In general, overregularisation (too small <tt>kreg</tt>) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large <tt>kreg</tt>) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be determined following guidelines in <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a> using the distribution of the <tt>|d_i|</tt> that ca",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:3050,Usability,guid,guidelines,3050," given by <tt>bini</tt>, with the true underlying spectrum given by <tt>xini</tt>. The detector response is described by <tt>Adet</tt>, with <tt>Adet</tt> filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis.; <p>; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of <tt>xini</tt> and <tt>Adet</tt>.<br><br>; <p>; The unfolding can be performed by; \code{.cpp}; TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; \endcode; where <tt>kreg</tt> determines the regularisation of the unfolding. In general, overregularisation (too small <tt>kreg</tt>) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large <tt>kreg</tt>) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be determined following guidelines in <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a> using the distribution of the <tt>|d_i|</tt> that can be obtained by <tt>tsvdunf->GetD()</tt> and/or using pseudo-experiments.; <p>; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the <tt>GetUnfoldCovMatrix</tt> method, which uses pseudo experiments for the propagation. In addition, <tt>GetAdetCovMatrix</tt> allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to <tt>Bcov</tt> is also computed as described in <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a> and can be obtained from <tt>tsvdunf->GetXtau()</tt> and its (regularisation independent) inverse from <tt>tsvdunf->GetXinv()</tt>. The dist",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:166,Safety,detect,detector,166,"////////////////////////////////////////////////////////////////////////////////; /// Alternative constructor; /// User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:141,Testability,test,test,141,"////////////////////////////////////////////////////////////////////////////////; /// Alternative constructor; /// User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:196,Safety,detect,detector,196,"////////////////////////////////////////////////////////////////////////////////; /// Default constructor; /// Initialisation of TSVDUnfold; /// User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:171,Testability,test,test,171,"////////////////////////////////////////////////////////////////////////////////; /// Default constructor; /// Initialisation of TSVDUnfold; /// User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform the unfolding with regularisation parameter kreg",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:10,Modifiability,variab,variable,10,"// Return variable; // Damping factors",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:112,Availability,error,error,112,"////////////////////////////////////////////////////////////////////////////////; /// Determine for given input error matrix covariance matrix of unfolded; /// spectrum from toy simulation given the passed covariance matrix on measured spectrum; /// ""cov"" - covariance matrix on the measured spectrum, to be propagated; /// ""ntoys"" - number of pseudo experiments used for the propagation; /// ""seed"" - seed for pseudo experiments; /// Note that this covariance matrix will contain effects of forced normalisation if spectrum is normalised to unit area.",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:36,Modifiability,variab,variables,36,"// create a vector of unit Gaussian variables",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:36,Modifiability,variab,variables,36,"// Create a vector of unit Gaussian variables",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:23,Safety,detect,detector,23,"//Now the toys for the detector response matrix",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:104,Availability,error,errors,104,"////////////////////////////////////////////////////////////////////////////////; /// Fill 1D histogram errors into vector",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:18,Safety,avoid,avoid,18,"// Add epsilon to avoid singularities",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:8,Energy Efficiency,reduce,reduced,8,"// init reduced matrix",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:93,Integrability,rout,routine,93,"////////////////////////////////////////////////////////////////////////////////; /// Helper routine to compute chi-squared between distributions using the computed inverse of the covariance matrix for the unfolded spectrum as given in paper.",MatchSource.CODE_COMMENT,hist/hist/src/TSVDUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:105,Availability,Error,Error,105,"////////////////////////////////////////////////////////////////////////////////; /// static: Return the Error Definition",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:101,Performance,cache,cache,101,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cache array; /// npoints is the number of points to be stored (or already stored) in the cache; /// psize is the number of elements per point; ///; /// if (npoints*psize > fCacheSize) the existing cache is deleted; /// and a new array is created.; /// The function returns a pointer to the cache",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:190,Performance,cache,cache,190,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cache array; /// npoints is the number of points to be stored (or already stored) in the cache; /// psize is the number of elements per point; ///; /// if (npoints*psize > fCacheSize) the existing cache is deleted; /// and a new array is created.; /// The function returns a pointer to the cache",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:298,Performance,cache,cache,298,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cache array; /// npoints is the number of points to be stored (or already stored) in the cache; /// psize is the number of elements per point; ///; /// if (npoints*psize > fCacheSize) the existing cache is deleted; /// and a new array is created.; /// The function returns a pointer to the cache",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:391,Performance,cache,cache,391,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cache array; /// npoints is the number of points to be stored (or already stored) in the cache; /// psize is the number of elements per point; ///; /// if (npoints*psize > fCacheSize) the existing cache is deleted; /// and a new array is created.; /// The function returns a pointer to the cache",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:102,Availability,Error,Error,102,"////////////////////////////////////////////////////////////////////////////////; /// static: Set the Error Definition (default=1); /// For Minuit this is the value passed with the ""SET ERR"" command; /// (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html)",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:102,Availability,toler,tolerance,102,"////////////////////////////////////////////////////////////////////////////////; /// static: Set the tolerance used in the minimization algorithm; /// For example for MIGRAD this is tolerance value passed as second argument; /// (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html )",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:183,Availability,toler,tolerance,183,"////////////////////////////////////////////////////////////////////////////////; /// static: Set the tolerance used in the minimization algorithm; /// For example for MIGRAD this is tolerance value passed as second argument; /// (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html )",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualFitter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualGraphPainter.cxx:64,Integrability,interface,interface,64,"/** \class TVirtualGraphPainter; \ingroup Histpainter; Abstract interface to a histogram painter; */; ////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to the current graph painter.; /// If the graph painter does not exist a default painter (singleton) is created.",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualGraphPainter.cxx:59,Modifiability,Plugin,PluginManager,59,"// if no painter set yet, create a default painter via the PluginManager",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualHistPainter.cxx:63,Integrability,interface,interface,63,"/** \class TVirtualHistPainter; \ingroup Histpainter; Abstract interface to a histogram painter; */; ////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to the current histogram painter.; /// The painter will paint the specified obj. If the histogram painter; /// does not exist a default painter is created.",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualHistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualHistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualHistPainter.cxx:59,Modifiability,Plugin,PluginManager,59,"// if no painter set yet, create a default painter via the PluginManager",MatchSource.CODE_COMMENT,hist/hist/src/TVirtualHistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualHistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx:20,Testability,test,test,20,"// time saving self-test",MatchSource.CODE_COMMENT,hist/hist/src/WrappedTF1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx:144,Safety,avoid,avoid,144,"// evaluate the derivative of the function with respect to the parameters; //IMPORTANT NOTE: TF1::GradientPar returns 0 for fixed parameters to avoid computing useless derivatives; // BUT the TLinearFitter wants to have the derivatives also for fixed parameters.; // so in case of fLinear (or fPolynomial) a non-zero value will be returned for fixed parameters",MatchSource.CODE_COMMENT,hist/hist/src/WrappedTF1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx:45,Integrability,depend,dependency,45,"// case of polynomial function (no parameter dependency)",MatchSource.CODE_COMMENT,hist/hist/src/WrappedTF1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx:26,Integrability,depend,depend,26,"// derivatives should not depend on parameters since func is linear",MatchSource.CODE_COMMENT,hist/hist/src/WrappedTF1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/WrappedTF1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/tdirectoryfile_destructor_segfault.cxx:589,Performance,load,loading,589,"// Test against https://github.com/root-project/root/issues/13691; // At destruction time TDirectoryFile called the destructor of; // TDirectory, thus:; // - inadvertently triggered initialization of gROOT; // - called TDirectory::RecursiveRemove which didn't check for the validity; // of the `fList` data member, which had already been deleted in the; // TDirectoryFile destructor; //; // NOTE: In order for the segfault to actually be triggered, this test needs; // to link against some library that is not in the list of globally ignored; // PCMs (gIgnoredPCMNames in TCling.cxx). The loading of a PCM is what; // actually triggers the call to TDirectory::RecursiveRemove in the end.",MatchSource.CODE_COMMENT,hist/hist/test/tdirectoryfile_destructor_segfault.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/tdirectoryfile_destructor_segfault.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/tdirectoryfile_destructor_segfault.cxx:3,Testability,Test,Test,3,"// Test against https://github.com/root-project/root/issues/13691; // At destruction time TDirectoryFile called the destructor of; // TDirectory, thus:; // - inadvertently triggered initialization of gROOT; // - called TDirectory::RecursiveRemove which didn't check for the validity; // of the `fList` data member, which had already been deleted in the; // TDirectoryFile destructor; //; // NOTE: In order for the segfault to actually be triggered, this test needs; // to link against some library that is not in the list of globally ignored; // PCMs (gIgnoredPCMNames in TCling.cxx). The loading of a PCM is what; // actually triggers the call to TDirectory::RecursiveRemove in the end.",MatchSource.CODE_COMMENT,hist/hist/test/tdirectoryfile_destructor_segfault.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/tdirectoryfile_destructor_segfault.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/tdirectoryfile_destructor_segfault.cxx:454,Testability,test,test,454,"// Test against https://github.com/root-project/root/issues/13691; // At destruction time TDirectoryFile called the destructor of; // TDirectory, thus:; // - inadvertently triggered initialization of gROOT; // - called TDirectory::RecursiveRemove which didn't check for the validity; // of the `fList` data member, which had already been deleted in the; // TDirectoryFile destructor; //; // NOTE: In order for the segfault to actually be triggered, this test needs; // to link against some library that is not in the list of globally ignored; // PCMs (gIgnoredPCMNames in TCling.cxx). The loading of a PCM is what; // actually triggers the call to TDirectory::RecursiveRemove in the end.",MatchSource.CODE_COMMENT,hist/hist/test/tdirectoryfile_destructor_segfault.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/tdirectoryfile_destructor_segfault.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_MapCppName.cxx:3,Testability,Test,Test,3,"// Test the C++ validity of saved objects' names",MatchSource.CODE_COMMENT,hist/hist/test/test_MapCppName.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_MapCppName.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_Project3D_name.cxx:3,Testability,test,test,3,"// test TH3::Project3D name",MatchSource.CODE_COMMENT,hist/hist/test/test_Project3D_name.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_Project3D_name.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_projections.cxx:3,Testability,Test,Test,3,"// Test projection from 2D hist for labels/nbins",MatchSource.CODE_COMMENT,hist/hist/test/test_projections.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_projections.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_projections.cxx:3,Testability,Test,Test,3,"// Test projection from 3D hist for labels/nbins",MatchSource.CODE_COMMENT,hist/hist/test/test_projections.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_projections.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_projections.cxx:3,Testability,Test,Test,3,"// Test projection from Profile2D hist for labels/nbins",MatchSource.CODE_COMMENT,hist/hist/test/test_projections.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_projections.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_spline.cxx:3,Usability,simpl,simple,3,"// simple quadratic polynomial",MatchSource.CODE_COMMENT,hist/hist/test/test_spline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_spline.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:3,Testability,test,test,3,"// test the various option : case no mode (average) and shortes (no central); // cannot be done with TGraphAsymmErrors. ROOT-10324 is missing mode central; // that is now fixed",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:53,Testability,test,test,53,"// adding central is actually useless here but so we test this",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:3,Testability,test,test,3,"// test the 95% confidence intervals; // taken from: http://www.measuringusability.com/wald.htm; //; // format: (k,n) -> lower bound, upper bound; // (0,0) -> 0, 1; // (3,7) -> 0.062, 0.795; // (0,8) -> 0, 0; // (3,12) -> 0.005, 0.495; // (2,14) -> 0, 0.326; // (5,18) -> 0.071, 0.485; // (15,30) -> 0.321, 0.679; // (10,10) -> 1, 1",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:3,Testability,test,test,3,"// test the 95% confidence intervals; // taken from: http://www.measuringusability.com/wald.htm; //; // format: (k,n) -> lower bound, upper bound; // (0,0) -> 0, 1; // (3,7) -> 0.158, 0.750; // (0,8) -> 0, 0.324; // (3,12) -> 0.089, 0.532; // (2,14) -> 0.040, 0.399; // (5,18) -> 0.125, 0.509; // (15,30) -> 0.332, 0.669; // (10,10) -> 0.722, 1.000",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:3,Testability,test,test,3,"// test the 95% confidence intervals; // taken from: http://people.na.infn.it/~lista/cgi/binomial/binomial.pl; //; // format: (k,n) -> lower bound, upper bound; // (0,0) -> 0, 1; // (3,7) -> 0.129, 0.775; // (0,8) -> 0, 0.321; // (3,12) -> 0.072, 0.548; // (2,14) -> 0.026, 0.418; // (5,18) -> 0.106, 0.531; // (15,30) -> 0.324, 0.676; // (10,10) -> 0.733, 1.000",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:3,Testability,test,test,3,"// test the 95% confidence intervals; // taken from: http://people.na.infn.it/~lista/cgi/binomial/binomial.pl; //; // format: (k,n) -> lower bound, upper bound; // (0,0) -> 0, 1; // (3,7) -> 0.099, 0.816; // (0,8) -> 0, 0.369; // (3,12) -> 0.055, 0.572; // (2,14) -> 0.018, 0.428; // (5,18) -> 0.097, 0.535; // (15,30) -> 0.313, 0.687; // (10,10) -> 0.692, 1.000",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx:3,Testability,test,test,3,"// test the 95% confidence intervals; // taken from:; // ""Interval Estimation for a Binomial Proportion"" Brown, Cai, DasGupta; // Table 5; //; // format: (k,n) -> lower bound, upper bound; // (0,0) -> 0.002, 0.998; // (3,7) -> 0.139, 0.766; // (0,8) -> 0, 0.262; // (3,12) -> 0.076, 0.529; // (2,14) -> 0.031, 0.385; // (5,18) -> 0.115, 0.506; // (15,30) -> 0.328, 0.672; // (10,10) -> 0.783, 1.000; //; // alpha = k + 0.5; // beta = n - k + 0.5",MatchSource.CODE_COMMENT,hist/hist/test/test_TEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,Test,Test,3,"// Test that the NSUM names are copied correctly",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,Test,Test,3,"// Test that the NSUM is normalized as we'd expect",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,Test,Test,3,"// Test that we can change the range of TF1NormSum and TF1Convolution",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:108,Availability,error,errors,108,"// making our convolution much more accurate; // Numeric integration of this function suffers from roundoff errors, so the default 1.E-12 accuracy won't be reached.; // By reducing the tolerance, we get rid of a GSL warning, which was picked up by the log checkers.",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:185,Availability,toler,tolerance,185,"// making our convolution much more accurate; // Numeric integration of this function suffers from roundoff errors, so the default 1.E-12 accuracy won't be reached.; // By reducing the tolerance, we get rid of a GSL warning, which was picked up by the log checkers.",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:57,Deployability,integrat,integration,57,"// making our convolution much more accurate; // Numeric integration of this function suffers from roundoff errors, so the default 1.E-12 accuracy won't be reached.; // By reducing the tolerance, we get rid of a GSL warning, which was picked up by the log checkers.",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:57,Integrability,integrat,integration,57,"// making our convolution much more accurate; // Numeric integration of this function suffers from roundoff errors, so the default 1.E-12 accuracy won't be reached.; // By reducing the tolerance, we get rid of a GSL warning, which was picked up by the log checkers.",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:252,Testability,log,log,252,"// making our convolution much more accurate; // Numeric integration of this function suffers from roundoff errors, so the default 1.E-12 accuracy won't be reached.; // By reducing the tolerance, we get rid of a GSL warning, which was picked up by the log checkers.",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,Test,Test,3,"// Test that we can copy and clone TF1 objects based on NSUM and CONV",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:17,Testability,test,test,17,"// Make copy and test",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:18,Testability,test,test,18,"// Make clone and test",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,Test,Test,3,"// Test that the voigt can be expressed as a convolution of a gaussian and lorentzian; // Check that the values match to within 1%",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,test,test,3,"// test at position of saved bins",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,test,test,3,"// test linear approximation",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,test,test,3,"// test outside range",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:7,Testability,test,test,7,"// now test saved at middle of bins",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,test,test,3,"// test at position of saved bins",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,test,test,3,"// test linear approximation",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx:3,Testability,test,test,3,"// test outside range",MatchSource.CODE_COMMENT,hist/hist/test/test_tf1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TF123_Moments.cxx:3,Testability,Test,Test,3,"// Test the moments for a TF2 function - a bi-variate gaussian with correlation",MatchSource.CODE_COMMENT,hist/hist/test/test_TF123_Moments.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TF123_Moments.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx:3,Testability,test,test,3,"// test exact position",MatchSource.CODE_COMMENT,hist/hist/test/test_tf2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx:3,Testability,test,test,3,"// test approximation",MatchSource.CODE_COMMENT,hist/hist/test/test_tf2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx:3,Testability,test,test,3,"// test boundaries",MatchSource.CODE_COMMENT,hist/hist/test/test_tf2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx:3,Testability,test,test,3,"// test exact position",MatchSource.CODE_COMMENT,hist/hist/test/test_tf2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx:3,Testability,test,test,3,"// test approximation",MatchSource.CODE_COMMENT,hist/hist/test/test_tf2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx:3,Testability,test,test,3,"// test boundaries",MatchSource.CODE_COMMENT,hist/hist/test/test_tf2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx:3,Testability,test,test,3,"// test exact position",MatchSource.CODE_COMMENT,hist/hist/test/test_tf3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx:3,Testability,test,test,3,"// test approximation",MatchSource.CODE_COMMENT,hist/hist/test/test_tf3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx:3,Testability,test,test,3,"// test boundaries",MatchSource.CODE_COMMENT,hist/hist/test/test_tf3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx:3,Testability,test,test,3,"// test exact position",MatchSource.CODE_COMMENT,hist/hist/test/test_tf3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx:3,Testability,test,test,3,"// test approximation",MatchSource.CODE_COMMENT,hist/hist/test/test_tf3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx:3,Testability,test,test,3,"// test boundaries",MatchSource.CODE_COMMENT,hist/hist/test/test_tf3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tf3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TFormula.cxx:3,Testability,Test,Test,3,"// Test that autoloading works (ROOT-9840)",MatchSource.CODE_COMMENT,hist/hist/test/test_TFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx:22,Availability,error,errors,22,"// Check if the graph errors are sorted based on the sorted values",MatchSource.CODE_COMMENT,hist/hist/test/test_TGraph_sorting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx:22,Availability,error,errors,22,"// Check if the graph errors are sorted based on the sorted values",MatchSource.CODE_COMMENT,hist/hist/test/test_TGraph_sorting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx:22,Availability,error,errors,22,"// Check if the graph errors are sorted based on the sorted values",MatchSource.CODE_COMMENT,hist/hist/test/test_TGraph_sorting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx:22,Availability,error,errors,22,"// Check if the graph errors are sorted based on the sorted values",MatchSource.CODE_COMMENT,hist/hist/test/test_TGraph_sorting.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TGraph_sorting.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1.cxx:3,Usability,Simpl,Simple,3,"// Simple cross-check that TH1::SmoothArray() is not doing anything if input; // array is already smooth.",MatchSource.CODE_COMMENT,hist/hist/test/test_TH1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_FindFirstBinAbove.cxx:3,Testability,test,test,3,"// test TH1::FindFirstBinAbove abd TH1::FindLastBinAbove",MatchSource.CODE_COMMENT,hist/hist/test/test_TH1_FindFirstBinAbove.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_FindFirstBinAbove.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_SaveAs.cxx:24,Availability,error,errors,24,"// Bin contents and bin errors",MatchSource.CODE_COMMENT,hist/hist/test/test_TH1_SaveAs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_SaveAs.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_SaveAs.cxx:4,Testability,Test,Tests,4,"/// Tests for TH1::SaveAs; /// In this test we export a TH1 to 4 files of types csv, tsv, txt and C,; /// and then read those files checking whether the contents are as expected; /// In the csv file, we include the header line",MatchSource.CODE_COMMENT,hist/hist/test/test_TH1_SaveAs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_SaveAs.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_SaveAs.cxx:39,Testability,test,test,39,"/// Tests for TH1::SaveAs; /// In this test we export a TH1 to 4 files of types csv, tsv, txt and C,; /// and then read those files checking whether the contents are as expected; /// In the csv file, we include the header line",MatchSource.CODE_COMMENT,hist/hist/test/test_TH1_SaveAs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH1_SaveAs.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_Add.cxx:3,Testability,test,test,3,"// test TH2Poly adding two histograms",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_Add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_Add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx:43,Availability,error,error,43,"// test TH2Poly setting and retrieving bin error ",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_BinError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx:3,Testability,test,test,3,"// test TH2Poly setting and retrieving bin error ",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_BinError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx:42,Availability,error,error,42,"// setting a new content does not set bin error",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_BinError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx:19,Availability,error,error,19,"// set content and error",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_BinError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx:3,Testability,test,test,3,"// test copying",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_BinError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx:3,Testability,test,test,3,"// test statistics",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_BinError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_BinError.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_GetNumberOfBins.cxx:3,Testability,test,test,3,"// test TH2Poly GetNumberOfBins",MatchSource.CODE_COMMENT,hist/hist/test/test_TH2Poly_GetNumberOfBins.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TH2Poly_GetNumberOfBins.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:3,Testability,test,test,3,"// test iterating histogram bins and using the new THistRange and; // THBinIterator classes",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:10,Modifiability,variab,variables,10,"// global variables",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:3,Testability,test,test,3,"// test classes",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:42,Testability,test,test,42,"//GOOD: this is called after running same test suite and not at; // end of main program.",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:7,Testability,test,test,7,"// TH1 test classes -",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:3,Testability,test,test,3,"// test 60% of histogram",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:3,Testability,test,test,3,"// test 60% of histogram",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:20,Testability,test,test,20,"// createTH3();; // test 60% of histogram; // test 60% of histogram",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:46,Testability,test,test,46,"// createTH3();; // test 60% of histogram; // test 60% of histogram",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:3,Testability,test,test,3,"// test with full range",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:3,Testability,test,test,3,"// test with restricted range",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:8,Testability,test,tests,8,"// TH2D tests",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:6,Testability,test,tests,6,"// 2D tests with restricted range",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:8,Testability,test,tests,8,"// TH3D tests",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:6,Testability,test,tests,6,"// 3D tests with restricted range",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx:42,Testability,test,testing,42,"// Disables elapsed time by default.; //::testing::GTEST_FLAG(print_time) = false;; // Parse command line arguments",MatchSource.CODE_COMMENT,hist/hist/test/test_THBinIterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THBinIterator.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx:14,Availability,error,errors,14,"// stack with errors",MatchSource.CODE_COMMENT,hist/hist/test/test_THStack.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx:16,Availability,error,errors,16,"// nostack with errors",MatchSource.CODE_COMMENT,hist/hist/test/test_THStack.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx:15,Availability,error,error,15,"// significant error at maximum bin",MatchSource.CODE_COMMENT,hist/hist/test/test_THStack.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx:14,Availability,error,errors,14,"// stack with errors",MatchSource.CODE_COMMENT,hist/hist/test/test_THStack.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx:16,Availability,error,errors,16,"// nostack with errors",MatchSource.CODE_COMMENT,hist/hist/test/test_THStack.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_THStack.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:79,Availability,error,error,79,"// should use half of data for histogram since; // we do not count statistical error from TKDE?; //for (int i = 0; i < 0.5*n; ++i); // h1->Fill(data2[i]);",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:13,Testability,test,test,13,"// make chi2 test; //double pvalChi2 = h1->Chi2Test(h2,""WW P"");; // note Chisquare called SetParameters and delete histogram returned from the function",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:19,Availability,error,error,19,"// set correct bin error",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:14,Testability,test,test,14,"// compute KS test",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:24,Testability,test,tests,24,"/// Hstogram comparison tests; /// In this test we compare the TKDE with an histogram; /// filled with the same type of data. A GoF test (chi2 and KS) is applied to; /// check for compatibility",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:43,Testability,test,test,43,"/// Hstogram comparison tests; /// In this test we compare the TKDE with an histogram; /// filled with the same type of data. A GoF test (chi2 and KS) is applied to; /// check for compatibility",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:132,Testability,test,test,132,"/// Hstogram comparison tests; /// In this test we compare the TKDE with an histogram; /// filled with the same type of data. A GoF test (chi2 and KS) is applied to; /// check for compatibility",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:3,Energy Efficiency,reduce,reduce,3,"// reduce n here since unbinned adaptive is slow",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:32,Energy Efficiency,adapt,adaptive,32,"// reduce n here since unbinned adaptive is slow",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:32,Modifiability,adapt,adaptive,32,"// reduce n here since unbinned adaptive is slow",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:3,Testability,test,test,3,"// test also default constructors + usage of setters functions",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:8,Testability,test,test,8,"// this test will fail miserably if sigma2 is large since; // binning does not use events outside range; // data.InRange=false is not doing since the bin data will; // consider only data in the range !!!",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:19,Energy Efficiency,adapt,adaptive,19,"// with binned not adaptive it is good for high statistics",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:19,Modifiability,adapt,adaptive,19,"// with binned not adaptive it is good for high statistics",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:22,Testability,test,test,22,"// for mirror case KS test is not so good but Chi2 is better; // test both p-values",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:65,Testability,test,test,65,"// for mirror case KS test is not so good but Chi2 is better; // test both p-values",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:14,Energy Efficiency,adapt,adaptive,14,"// when using adaptive mirror a much; // smaller bandwidth is used. Not sure this is correct; // seee line TKDE.cxx:770",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:14,Modifiability,adapt,adaptive,14,"// when using adaptive mirror a much; // smaller bandwidth is used. Not sure this is correct; // seee line TKDE.cxx:770",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:7,Testability,test,tests,7,"/// IO tests; /// In this test we compare the value before writing and after reading of the TKDE",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx:26,Testability,test,test,26,"/// IO tests; /// In this test we compare the value before writing and after reading of the TKDE",MatchSource.CODE_COMMENT,hist/hist/test/test_tkde.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tkde.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TMultiGraph_GetHistogram.cxx:3,Testability,test,test,3,"// test TMultiGraph::GetHistogram in log scale",MatchSource.CODE_COMMENT,hist/hist/test/test_TMultiGraph_GetHistogram.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TMultiGraph_GetHistogram.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TMultiGraph_GetHistogram.cxx:37,Testability,log,log,37,"// test TMultiGraph::GetHistogram in log scale",MatchSource.CODE_COMMENT,hist/hist/test/test_TMultiGraph_GetHistogram.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_TMultiGraph_GetHistogram.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:3,Testability,test,test,3,"// test overflow",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:3,Testability,test,test,3,"// test overflow",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:97,Availability,error,error,97,"// ASSERT_DOUBLE_EQ does not succeed on macOS, that's why we use ASSERT_NEAR; // with a relative error in this test. A relative error of 1.E-12 should be; // large enough to take into account some numerical differences. It is,; // however, unexpected that the test fails since the code to compute the bin; // error of the TProfile2Poly and the TProfile2D do the same operations.",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:128,Availability,error,error,128,"// ASSERT_DOUBLE_EQ does not succeed on macOS, that's why we use ASSERT_NEAR; // with a relative error in this test. A relative error of 1.E-12 should be; // large enough to take into account some numerical differences. It is,; // however, unexpected that the test fails since the code to compute the bin; // error of the TProfile2Poly and the TProfile2D do the same operations.",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:309,Availability,error,error,309,"// ASSERT_DOUBLE_EQ does not succeed on macOS, that's why we use ASSERT_NEAR; // with a relative error in this test. A relative error of 1.E-12 should be; // large enough to take into account some numerical differences. It is,; // however, unexpected that the test fails since the code to compute the bin; // error of the TProfile2Poly and the TProfile2D do the same operations.",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:111,Testability,test,test,111,"// ASSERT_DOUBLE_EQ does not succeed on macOS, that's why we use ASSERT_NEAR; // with a relative error in this test. A relative error of 1.E-12 should be; // large enough to take into account some numerical differences. It is,; // however, unexpected that the test fails since the code to compute the bin; // error of the TProfile2Poly and the TProfile2D do the same operations.",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:260,Testability,test,test,260,"// ASSERT_DOUBLE_EQ does not succeed on macOS, that's why we use ASSERT_NEAR; // with a relative error in this test. A relative error of 1.E-12 should be; // large enough to take into account some numerical differences. It is,; // however, unexpected that the test fails since the code to compute the bin; // error of the TProfile2Poly and the TProfile2D do the same operations.",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:3,Testability,test,test,3,"// test overflow",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx:16,Testability,TEST,TEST,16,"// ------------ TEST CALLS ------------",MatchSource.CODE_COMMENT,hist/hist/test/test_tprofile2poly.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/test_tprofile2poly.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaGradientTests.cxx:75,Testability,test,tests,75,"/// \file TFormulaGradientTests.cxx; ///; /// \brief The file contain unit tests which test the clad-based gradient; /// computations.; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Oct, 2018; ///; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/hist/test/TFormulaGradientTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaGradientTests.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaGradientTests.cxx:87,Testability,test,test,87,"/// \file TFormulaGradientTests.cxx; ///; /// \brief The file contain unit tests which test the clad-based gradient; /// computations.; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date Oct, 2018; ///; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/hist/test/TFormulaGradientTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaGradientTests.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaGradientTests.cxx:40,Modifiability,inherit,inheritently,40,"// auto h = new TF1(""f1"", ""landau""); -- inheritently does not work. See DIFLAN; //crystalball, breitwigner, cheb3, bigaus,; //auto h = new TF1(""f1"", """");",MatchSource.CODE_COMMENT,hist/hist/test/TFormulaGradientTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaGradientTests.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaHessianTests.cxx:74,Testability,test,tests,74,"/// \file TFormulaHessianTests.cxx; ///; /// \brief The file contain unit tests which test the clad-based hessian; /// computations.; ///; /// \author Baidyanath Kundu <kundubaidya99@gmail.com>; ///; /// \date Aug, 2021; ///; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/hist/test/TFormulaHessianTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaHessianTests.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaHessianTests.cxx:86,Testability,test,test,86,"/// \file TFormulaHessianTests.cxx; ///; /// \brief The file contain unit tests which test the clad-based hessian; /// computations.; ///; /// \author Baidyanath Kundu <kundubaidya99@gmail.com>; ///; /// \date Aug, 2021; ///; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/hist/test/TFormulaHessianTests.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/test/TFormulaHessianTests.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistDisplayItem.hxx:239,Usability,Feedback,Feedback,239,"/// \file ROOT/RHistDisplayItem.hxx; /// \ingroup HistDrawV7; /// \author Sergey Linev <s.linev@gsi.de>; /// \date 2020-06-25; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistDisplayItem.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistDisplayItem.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistDrawable.hxx:234,Usability,Feedback,Feedback,234,"/// \file ROOT/RHistDrawable.hxx; /// \ingroup HistDrawV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-09; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistDrawable.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistDrawable.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistDrawable.hxx:6,Performance,optimiz,optimize,6,"///<! optimize drawing",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistDrawable.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistDrawable.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:136,Safety,avoid,avoid,136,"/** \class ROOT::Experimental::RDisplayHistStat; \ingroup GrafROOT7; \brief Object send to client for display of RHistStat, required to avoid sending histogram to the client; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-17; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:340,Usability,Feedback,Feedback,340,"/** \class ROOT::Experimental::RDisplayHistStat; \ingroup GrafROOT7; \brief Object send to client for display of RHistStat, required to avoid sending histogram to the client; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-17; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:18,Availability,mask,mask,18,"///< initial show mask",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:349,Usability,Feedback,Feedback,349,"/** \class ROOT::Experimental::RHistStatBoxBase; \ingroup GrafROOT7; \brief Base class for histogram statistic box, provides graphics attributes and virtual method for fill statistic; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-01; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:5,Availability,mask,mask,5,"///< mask used to create lines",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:3,Availability,mask,mask,3,"// mask of items to show",MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:287,Usability,Feedback,Feedback,287,/** \class ROOT::Experimental::RHistStatBox; \ingroup GrafROOT7; \brief Template class for statistic box for RHist class; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-01; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDisplayItem.cxx:234,Usability,Feedback,Feedback,234,"/// \file RHistDisplayItem.cxx; /// \ingroup HistDrawV7; /// \author Sergey Linev <s.linev@gsi.de>; /// \date 2020-06-25; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histdrawv7/src/RHistDisplayItem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDisplayItem.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx:229,Usability,Feedback,Feedback,229,"/// \file RHistDrawable.cxx; /// \ingroup HistDrawV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-09-11; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histdrawv7/src/RHistDrawable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx:165,Modifiability,config,configured,165,"// with minmax approach 2*n bins replaced by 2 bins with min and max value inside the range; // this let display histogram showing dynamic values range properly; // configured when more than 3 bins should be merged",MatchSource.CODE_COMMENT,hist/histdrawv7/src/RHistDrawable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx:11,Usability,simpl,simple,11,"// provide simple rebin with average values; // TODO: provide methods in histogram classes",MatchSource.CODE_COMMENT,hist/histdrawv7/src/RHistDrawable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx:11,Usability,simpl,simple,11,"// provide simple rebin with average values; // TODO: provide methods in histogram classes",MatchSource.CODE_COMMENT,hist/histdrawv7/src/RHistDrawable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx:11,Usability,simpl,simple,11,"// provide simple rebin with average values; // TODO: provide methods in histogram classes",MatchSource.CODE_COMMENT,hist/histdrawv7/src/RHistDrawable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/src/RHistDrawable.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/draw.cxx:3,Testability,Test,Test,3,"// Test drawing of histograms.",MatchSource.CODE_COMMENT,hist/histdrawv7/test/draw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/draw.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/io.cxx:3,Testability,Test,Test,3,"// Test storing of 1D histogram",MatchSource.CODE_COMMENT,hist/histdrawv7/test/io.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/io.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/io.cxx:3,Testability,Test,Test,3,"// Test storing of 2D histogram",MatchSource.CODE_COMMENT,hist/histdrawv7/test/io.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/io.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/io.cxx:3,Testability,Test,Test,3,"// Test storing RCanvas with two RHistDrawable, referencing same histo",MatchSource.CODE_COMMENT,hist/histdrawv7/test/io.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/test/io.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h:22,Availability,Error,Errors,22,"///< <b>""En""</b> Draw Errors with current marker type and size (0 <= n <=6).",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hoption.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h:18,Usability,simpl,simple,18,"///< <b>""L""</b> A simple polyline through every point is drawn.",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hoption.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h:5,Testability,log,log,5,"///< log scale in X. Also set by histogram option",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hoption.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h:5,Testability,log,log,5,"///< log scale in Y. Also set by histogram option",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hoption.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h:5,Testability,log,log,5,"///< log scale in Z. Also set by histogram option; ///@}",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hoption.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h:5,Deployability,Integrat,Integrated,5,"///< Integrated sum of contents",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hparam.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h:5,Integrability,Integrat,Integrated,5,"///< Integrated sum of contents",MatchSource.CODE_COMMENT,hist/histpainter/inc/Hparam.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraph2DPainter.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate space to store the segments. They cannot be more than the; // number of triangles.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraph2DPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraph2DPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraph2DPainter.cxx:109,Availability,error,error,109,"////////////////////////////////////////////////////////////////////////////////; /// Paints the 2D graph as error bars",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraph2DPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraph2DPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:322,Availability,error,error,322,"////////////////////////////////////////////////////////////////////////////////; /*! \class TGraphPainter; \ingroup Histpainter; \brief The graph painter class. Implements all graphs' drawing's options. - [Introduction](\ref GrP0); - [Graphs' plotting options](\ref GrP1); - [Exclusion graphs](\ref GrP2); - [Graphs with error bars](\ref GrP3); - [TGraphErrors](\ref GrP3a); - [TGraphAsymmErrors](\ref GrP3b); - [TGraphBentErrors](\ref GrP3c); - [TGraphMultiErrors](\ref GrP3d); - [TGraphPolar options](\ref GrP4); - [Colors automatically picked in palette](\ref GrP5); - [Reverse graphs' axis](\ref GrP6); - [Graphs in logarithmic scale](\ref GrP7); - [Highlight mode for graph](\ref GrP8). \anchor GrP0; ### Introduction. Graphs are drawn via the painter `TGraphPainter` class. This class; implements techniques needed to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|--------------------------------------",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5280,Availability,error,error,5280,"sin(x[i]+0.2)-6;; }; auto gr = new TGraph(n,x,y);; gr->SetFillColor(38);; gr->SetTitle("" "");; c47->cd(1); gr->Draw(""AB"");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on to",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5310,Availability,avail,available,5310,"sin(x[i]+0.2)-6;; }; auto gr = new TGraph(n,x,y);; gr->SetFillColor(38);; gr->SetTitle("" "");; c47->cd(1); gr->Draw(""AB"");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on to",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5342,Availability,error,error,5342,"sin(x[i]+0.2)-6;; }; auto gr = new TGraph(n,x,y);; gr->SetFillColor(38);; gr->SetTitle("" "");; c47->cd(1); gr->Draw(""AB"");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on to",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5474,Availability,error,error,5474,");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws add",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5666,Availability,error,error,5666,"`L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5768,Availability,error,error,5768,"e graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' d",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5894,Availability,error,error,5894," 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles a",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5985,Availability,error,error,5985,"` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A s",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6033,Availability,error,errors,6033,"rea from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; |",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6059,Availability,error,errors,6059,"rea from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; |",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6088,Availability,error,errors,6088,"rea from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; |",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6212,Availability,error,error,6212," ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when b",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6320,Availability,error,errors,6320,"to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6373,Availability,error,errors,6373,"to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6692,Availability,error,error,6692," of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are s",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6737,Availability,error,error,6737,". The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6852,Availability,Error,Error,6852,"d arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1,",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6953,Availability,error,error,6953," arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1,",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7047,Availability,error,error,7047,"aph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7070,Availability,Error,Error,7070,"no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; E",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7303,Availability,error,error,7303,"ng to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0}",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7340,Availability,error,error,7340,"f a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7435,Availability,error,error,7435,"tion \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7599,Availability,error,error,7599,"same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(sou",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7615,Availability,error,errors,7615,"the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7687,Availability,error,errors,7687,"the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7738,Availability,error,errors,7738,"the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8054,Availability,error,errors,8054,"the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the f",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8121,Availability,error,error,8121,"e contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm m",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8553,Availability,error,errors,8553," TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8848,Availability,Error,Errors,8848," 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9542,Availability,Error,Errors,9542,"as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow de",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9735,Availability,error,errors,9735,"e ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9777,Availability,error,errors,9777,"e ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9997,Availability,error,errors,9997,"cept that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10187,Availability,error,errors,10187,"s it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10416,Availability,error,errors,10416,"le ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10574,Availability,error,errors,10574,"ooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5}",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10743,Availability,error,errors,10743," errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor G",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10900,Availability,error,errors,10900,"0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allow",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11103,Availability,error,errors,11103,"71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11171,Availability,error,errors,11171,"71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11223,Availability,error,errors,11223,"71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11659,Availability,error,errors,11659,"(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGra",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11897,Availability,error,error,11897,"ph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basica",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12751,Availability,error,errors,12751,"->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmE",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13031,Availability,Error,Errors,13031," auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one o",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13100,Availability,error,errors,13100,"uble_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13180,Availability,error,error,13180,"4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13321,Availability,error,error,13321,"6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use in",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13429,Availability,Error,Errors,13429,"yh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions inste",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13559,Availability,error,error,13559,",.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific on",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13610,Availability,error,errors,13610,",.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific on",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13947,Availability,error,errors,13947,"mension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14017,Availability,error,errors,14017,"mension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14079,Availability,Error,Errors,14079,"mension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14202,Availability,error,errors,14202,"mension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14252,Availability,Error,Errors,14252,"mension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14365,Availability,error,error,14365," The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, 0.6, 0.4, 0.8};. TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", 5, ax, ay, aexl, aexh, aeylstat, aeyhstat);; gme->AddYError(5, aeylsys, aeyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14486,Availability,error,error,14486,"ss than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, 0.6, 0.4, 0.8};. TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", 5, ax, ay, aexl, aexh, aeylstat, aeyhstat);; gme->AddYError(5, aeylsys, aeyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);. gme->Draw(""a p s ; ; 5 s=0.5"");; }; End_Macro. \anchor GrP4; ### TGraphPolar options",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:15770,Availability,error,error,15770,"exh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, 0.6, 0.4, 0.8};. TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", 5, ax, ay, aexl, aexh, aeylstat, aeyhstat);; gme->AddYError(5, aeylsys, aeyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);. gme->Draw(""a p s ; ; 5 s=0.5"");; }; End_Macro. \anchor GrP4; ### TGraphPolar options. The drawing options for the polar graphs are the following:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""O"" | Polar labels are drawn orthogonally to the polargram radius. |; | ""P"" | Polymarker are drawn at each point position. |; | ""E"" | Draw error bars. |; | ""F"" | Draw fill area (closed polygon). |; | ""A"" | Force axis redrawing even if a polargram already exists. |; | ""N"" | Disable the display of the polar labels. |. Begin_Macro(source); {; auto c46 = new TCanvas(""c46"",""c46"",500,500);; auto grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();; }; End_Macro. \anchor GrP5; ### Colors automatically picked in palette. \since **ROOT ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:1665,Deployability,update,updated,1665," GrP6); - [Graphs in logarithmic scale](\ref GrP7); - [Highlight mode for graph](\ref GrP8). \anchor GrP0; ### Introduction. Graphs are drawn via the painter `TGraphPainter` class. This class; implements techniques needed to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' it draws invisible axis |; | ""L"" | A simple polyline is drawn |; | ""F"" | A fill area is drawn ('CF' draw a smoothed fill area) |; | ""C"" | A smooth Curve is drawn |; | ""*"" | A Star is plotted at each point |; | ""P"" | The current marker is plotted at each point |; | ""B"" | A Bar chart is drawn |; | ""1"" | When a graph is drawn as a bar chart, this option makes the bars start from the bottom of the pad. By default they start at 0. |; | ""X+"" | The X-axis is drawn on the top side o",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:1683,Deployability,update,updated,1683,"r GrP0; ### Introduction. Graphs are drawn via the painter `TGraphPainter` class. This class; implements techniques needed to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' it draws invisible axis |; | ""L"" | A simple polyline is drawn |; | ""F"" | A fill area is drawn ('CF' draw a smoothed fill area) |; | ""C"" | A smooth Curve is drawn |; | ""*"" | A Star is plotted at each point |; | ""P"" | The current marker is plotted at each point |; | ""B"" | A Bar chart is drawn |; | ""1"" | When a graph is drawn as a bar chart, this option makes the bars start from the bottom of the pad. By default they start at 0. |; | ""X+"" | The X-axis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""PFC"" | Palette Fil",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:1823,Deployability,Update,Update,1823,"ded to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' it draws invisible axis |; | ""L"" | A simple polyline is drawn |; | ""F"" | A fill area is drawn ('CF' draw a smoothed fill area) |; | ""C"" | A smooth Curve is drawn |; | ""*"" | A Star is plotted at each point |; | ""P"" | The current marker is plotted at each point |; | ""B"" | A Bar chart is drawn |; | ""1"" | When a graph is drawn as a bar chart, this option makes the bars start from the bottom of the pad. By default they start at 0. |; | ""X+"" | The X-axis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""PFC"" | Palette Fill Color: graph's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: graph's line color is ta",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:3684,Deployability,Update,Update,3684,"| ""PLC"" | Palette Line Color: graph's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: graph's marker color is taken in the current palette. |; | ""RX"" | Reverse the X axis. |; | ""RY"" | Reverse the Y axis. |. Drawing options can be combined. In the following example the graph; is drawn as a smooth curve (option ""C"") with markers (option ""P"") and; with axes (option ""A""). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",200,10,600,400);. c1->SetFillColor(42);; c1->SetGrid();. const Int_t n = 20;; Double_t x[n], y[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2);; }; auto gr = new TGraph(n,x,y);; gr->SetLineColor(2);; gr->SetLineWidth(4);; gr->SetMarkerColor(4);; gr->SetMarkerSize(1.5);; gr->SetMarkerStyle(21);; gr->SetTitle(""Option ACP example"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""ACP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetFillColor(21);; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; End_Macro. The following macro shows the option ""B"" usage. It can be combined with the; option ""1"". The bar width is equal to:. bar_width = 0.5*delta*gStyle->GetBarWidth();. Where `delta` is equal to the X maximal value minus the X minimal value divided by the; number of points in the graph. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; c47->Divide(1,2);; const Int_t n = 20;; Double_t x[n], y[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2)-6;; }; auto gr = new TGraph(n,x,y);; gr->SetFillColor(38);; gr->SetTitle("" "");; c47->cd(1); gr->Draw(""AB"");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; w",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:3745,Deployability,Update,Update,3745,"| ""PLC"" | Palette Line Color: graph's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: graph's marker color is taken in the current palette. |; | ""RX"" | Reverse the X axis. |; | ""RY"" | Reverse the Y axis. |. Drawing options can be combined. In the following example the graph; is drawn as a smooth curve (option ""C"") with markers (option ""P"") and; with axes (option ""A""). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",200,10,600,400);. c1->SetFillColor(42);; c1->SetGrid();. const Int_t n = 20;; Double_t x[n], y[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2);; }; auto gr = new TGraph(n,x,y);; gr->SetLineColor(2);; gr->SetLineWidth(4);; gr->SetMarkerColor(4);; gr->SetMarkerSize(1.5);; gr->SetMarkerStyle(21);; gr->SetTitle(""Option ACP example"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""ACP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetFillColor(21);; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; End_Macro. The following macro shows the option ""B"" usage. It can be combined with the; option ""1"". The bar width is equal to:. bar_width = 0.5*delta*gStyle->GetBarWidth();. Where `delta` is equal to the X maximal value minus the X minimal value divided by the; number of points in the graph. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; c47->Divide(1,2);; const Int_t n = 20;; Double_t x[n], y[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2)-6;; }; auto gr = new TGraph(n,x,y);; gr->SetFillColor(38);; gr->SetTitle("" "");; c47->cd(1); gr->Draw(""AB"");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; w",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:16585,Deployability,Update,Update,16585,"Polar labels are drawn orthogonally to the polargram radius. |; | ""P"" | Polymarker are drawn at each point position. |; | ""E"" | Draw error bars. |; | ""F"" | Draw fill area (closed polygon). |; | ""A"" | Force axis redrawing even if a polargram already exists. |; | ""N"" | Disable the display of the polar labels. |. Begin_Macro(source); {; auto c46 = new TCanvas(""c46"",""c46"",500,500);; auto grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();; }; End_Macro. \anchor GrP5; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several graphs are painted in the same canvas or when a multi-graph is drawn,; it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current active color; palette. Palette coloring for histogram is activated thanks to the options `PFC`; (Palette Fill Color), `PLC` (Palette Line Color) and `PMC` (Palette Marker Color).; When one of these options is given to `TGraph::Draw` the graph get its color; from the current color palette defined by `gStyle->SetPalette(...)`. The color; is determined according to the number of objects having palette coloring in; the current pad. Begin_Macro(source); ../../../tutorials/graphs/graphpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/graphs/multigraphpalettecolor.C; End_Macro. \anchor GrP6; ### Reverse graphs' axis. \since",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:16632,Deployability,Update,Update,16632,"Polar labels are drawn orthogonally to the polargram radius. |; | ""P"" | Polymarker are drawn at each point position. |; | ""E"" | Draw error bars. |; | ""F"" | Draw fill area (closed polygon). |; | ""A"" | Force axis redrawing even if a polargram already exists. |; | ""N"" | Disable the display of the polar labels. |. Begin_Macro(source); {; auto c46 = new TCanvas(""c46"",""c46"",500,500);; auto grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();; }; End_Macro. \anchor GrP5; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several graphs are painted in the same canvas or when a multi-graph is drawn,; it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current active color; palette. Palette coloring for histogram is activated thanks to the options `PFC`; (Palette Fill Color), `PLC` (Palette Line Color) and `PMC` (Palette Marker Color).; When one of these options is given to `TGraph::Draw` the graph get its color; from the current color palette defined by `gStyle->SetPalette(...)`. The color; is determined according to the number of objects having palette coloring in; the current pad. Begin_Macro(source); ../../../tutorials/graphs/graphpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/graphs/multigraphpalettecolor.C; End_Macro. \anchor GrP6; ### Reverse graphs' axis. \since",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:621,Testability,log,logarithmic,621,"////////////////////////////////////////////////////////////////////////////////; /*! \class TGraphPainter; \ingroup Histpainter; \brief The graph painter class. Implements all graphs' drawing's options. - [Introduction](\ref GrP0); - [Graphs' plotting options](\ref GrP1); - [Exclusion graphs](\ref GrP2); - [Graphs with error bars](\ref GrP3); - [TGraphErrors](\ref GrP3a); - [TGraphAsymmErrors](\ref GrP3b); - [TGraphBentErrors](\ref GrP3c); - [TGraphMultiErrors](\ref GrP3d); - [TGraphPolar options](\ref GrP4); - [Colors automatically picked in palette](\ref GrP5); - [Reverse graphs' axis](\ref GrP6); - [Graphs in logarithmic scale](\ref GrP7); - [Highlight mode for graph](\ref GrP8). \anchor GrP0; ### Introduction. Graphs are drawn via the painter `TGraphPainter` class. This class; implements techniques needed to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|--------------------------------------",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18650,Testability,log,logarithmic,18650,"T version 6.09/03**. When a TGraph is drawn, the X-axis is drawn with increasing values from left to; right and the Y-axis from bottom to top. The two options `RX` and `RY` allow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18709,Testability,log,logarithmic,18709,"rawn with increasing values from left to; right and the Y-axis from bottom to top. The two options `RX` and `RY` allow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### Highlight mode for graph. \since **ROOT version 6.15/01**. \",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18764,Testability,log,logarithmic,18764,"ow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### Highlight mode for graph. \since **ROOT version 6.15/01**. \image html hlGraph1.gif ""Highlight mode"". Highlight mode is implemented for `TGraph` (and for `TH1`) class. When; h",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18881,Testability,log,logarithmic,18881,"ow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### Highlight mode for graph. \since **ROOT version 6.15/01**. \image html hlGraph1.gif ""Highlight mode"". Highlight mode is implemented for `TGraph` (and for `TH1`) class. When; h",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:1125,Usability,simpl,simple,1125,"painter; \brief The graph painter class. Implements all graphs' drawing's options. - [Introduction](\ref GrP0); - [Graphs' plotting options](\ref GrP1); - [Exclusion graphs](\ref GrP2); - [Graphs with error bars](\ref GrP3); - [TGraphErrors](\ref GrP3a); - [TGraphAsymmErrors](\ref GrP3b); - [TGraphBentErrors](\ref GrP3c); - [TGraphMultiErrors](\ref GrP3d); - [TGraphPolar options](\ref GrP4); - [Colors automatically picked in palette](\ref GrP5); - [Reverse graphs' axis](\ref GrP6); - [Graphs in logarithmic scale](\ref GrP7); - [Highlight mode for graph](\ref GrP8). \anchor GrP0; ### Introduction. Graphs are drawn via the painter `TGraphPainter` class. This class; implements techniques needed to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' ",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:2159,Usability,simpl,simple,2159," system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' it draws invisible axis |; | ""L"" | A simple polyline is drawn |; | ""F"" | A fill area is drawn ('CF' draw a smoothed fill area) |; | ""C"" | A smooth Curve is drawn |; | ""*"" | A Star is plotted at each point |; | ""P"" | The current marker is plotted at each point |; | ""B"" | A Bar chart is drawn |; | ""1"" | When a graph is drawn as a bar chart, this option makes the bars start from the bottom of the pad. By default they start at 0. |; | ""X+"" | The X-axis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""PFC"" | Palette Fill Color: graph's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: graph's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: graph's marker color is taken in the current palette. |; | ""RX"" | Reverse the X axis. |; | ""RY"" | Reverse the Y axis. |. Drawing options can be combined. In the following example the graph; is drawn as a smooth curve (option ""C"") with markers (option ""P"") and; with axes (option ""A""). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",20",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:16951,Usability,simpl,simplest,16951,"= new TCanvas(""c46"",""c46"",500,500);; auto grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();; }; End_Macro. \anchor GrP5; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several graphs are painted in the same canvas or when a multi-graph is drawn,; it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current active color; palette. Palette coloring for histogram is activated thanks to the options `PFC`; (Palette Fill Color), `PLC` (Palette Line Color) and `PMC` (Palette Marker Color).; When one of these options is given to `TGraph::Draw` the graph get its color; from the current color palette defined by `gStyle->SetPalette(...)`. The color; is determined according to the number of objects having palette coloring in; the current pad. Begin_Macro(source); ../../../tutorials/graphs/graphpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/graphs/multigraphpalettecolor.C; End_Macro. \anchor GrP6; ### Reverse graphs' axis. \since **ROOT version 6.09/03**. When a TGraph is drawn, the X-axis is drawn with increasing values from left to; right and the Y-axis from bottom to top. The two options `RX` and `RY` allow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with i",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18189,Usability,Simpl,Simple,18189,"and `PMC` (Palette Marker Color).; When one of these options is given to `TGraph::Draw` the graph get its color; from the current color palette defined by `gStyle->SetPalette(...)`. The color; is determined according to the number of objects having palette coloring in; the current pad. Begin_Macro(source); ../../../tutorials/graphs/graphpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/graphs/multigraphpalettecolor.C; End_Macro. \anchor GrP6; ### Reverse graphs' axis. \since **ROOT version 6.09/03**. When a TGraph is drawn, the X-axis is drawn with increasing values from left to; right and the Y-axis from bottom to top. The two options `RX` and `RY` allow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18986,Usability,clear,clearly,18986,"s from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### Highlight mode for graph. \since **ROOT version 6.15/01**. \image html hlGraph1.gif ""Highlight mode"". Highlight mode is implemented for `TGraph` (and for `TH1`) class. When; highlight mode is on, mouse movement over the point will be represented; graphically. Point will be highlighted as ""point circle"" (presented by; marker object). Moreover, any highli",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:111,Modifiability,variab,variables,111,"////////////////////////////////////////////////////////////////////////////////; /// Compute the logarithm of variables `gxwork` and `gywork`; /// according to the value of Options and put the results; /// in the variables `gxworkl` and `gyworkl`.; ///; /// npoints : Number of points in gxwork and in gywork.; ///; /// - opt = 1 ComputeLogs is called from PaintGrapHist; /// - opt = 0 ComputeLogs is called from PaintGraph",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:214,Modifiability,variab,variables,214,"////////////////////////////////////////////////////////////////////////////////; /// Compute the logarithm of variables `gxwork` and `gywork`; /// according to the value of Options and put the results; /// in the variables `gxworkl` and `gyworkl`.; ///; /// npoints : Number of points in gxwork and in gywork.; ///; /// - opt = 1 ComputeLogs is called from PaintGrapHist; /// - opt = 0 ComputeLogs is called from PaintGraph",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:98,Testability,log,logarithm,98,"////////////////////////////////////////////////////////////////////////////////; /// Compute the logarithm of variables `gxwork` and `gywork`; /// according to the value of Options and put the results; /// in the variables `gxworkl` and `gyworkl`.; ///; /// npoints : Number of points in gxwork and in gywork.; ///; /// - opt = 1 ComputeLogs is called from PaintGrapHist; /// - opt = 0 ComputeLogs is called from PaintGraph",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:340,Deployability,release,released,340,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a graph is clicked with the locator.; ///; /// If the left mouse button is clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// If the middle mouse button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:458,Deployability,release,released,458,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a graph is clicked with the locator.; ///; /// If the left mouse button is clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// If the middle mouse button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:109,Integrability,rout,routines,109,"// Range() could change the size of the pad pixmap and therefore should; // be called before the other paint routines",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9,Deployability,update,update,9,"//do not update if big zoom and points moved",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8,Deployability,Update,Update,8,"//gPad->Update();",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:109,Integrability,rout,routines,109,"// Range() could change the size of the pad pixmap and therefore should; // be called before the other paint routines",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9,Deployability,update,update,9,"//do not update if big zoom and points moved",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:3,Testability,test,testing,3,"// testing specific possibility (after zoom, draw with ""same"", log, etc.)",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:63,Testability,log,log,63,"// testing specific possibility (after zoom, draw with ""same"", log, etc.)",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:972,Usability,simpl,simple,972,"////////////////////////////////////////////////////////////////////////////////; /// This is a service method used by `THistPainter`; /// to paint 1D histograms. It is not used to paint TGraph.; ///; /// Input parameters:; ///; /// - npoints : Number of points in X or in Y.; /// - x[npoints] or x[0] : x coordinates or (xmin,xmax).; /// - y[npoints] or y[0] : y coordinates or (ymin,ymax).; /// - chopt : Option.; ///; /// The aspect of the histogram is done according to the value of the chopt.; ///; /// | Option | Description |; /// |--------|-----------------------------------------------------------------|; /// |""R"" | Graph is drawn horizontally, parallel to X axis. (default is vertically, parallel to Y axis).If option R is selected the user must give 2 values for Y (y[0]=YMIN and y[1]=YMAX) or N values for X, one for each channel. Otherwise the user must give, N values for Y, one for each channel or 2 values for X (x[0]=XMIN and x[1]=XMAX) |; /// |""L"" | A simple polyline between every points is drawn.|; /// |""H"" | An Histogram with equidistant bins is drawn as a polyline.|; /// |""F"" | An histogram with equidistant bins is drawn as a fill area. Contour is not drawn unless chopt='H' is also selected..|; /// |""N"" | Non equidistant bins (default is equidistant). If N is the number of channels array X and Y must be dimensioned as follow: If option R is not selected (default) then the user must give (N+1) values for X (limits of channels) or N values for Y, one for each channel. Otherwise the user must give (N+1) values for Y (limits of channels). or N values for X, one for each channel |; /// |""F1"" | Idem as 'F' except that fill area base line is the minimum of the pad instead of Y=0.|; /// |""F2"" | Draw a Fill area polyline connecting the center of bins|; /// |""C"" | A smooth Curve is drawn.|; /// |""*"" | A Star is plotted at the center of each bin.|; /// |""P"" | Idem with the current marker.|; /// |""P0"" | Idem with the current marker. Empty bins also drawn.|; /// |""B"" | A",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,risk,risky,21,"// coverity [Calling risky function]",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,risk,risky,21,"// coverity [Calling risky function]",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,risk,risky,21,"// coverity [Calling risky function]",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,risk,risky,21,"// coverity [Calling risky function]",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,risk,risky,21,"// coverity [Calling risky function]",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,risk,risky,21,"// coverity [Calling risky function]",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:15,Testability,log,log,15,"//y already in log scale",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:15,Testability,log,log,15,"//transform to log ?",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,Usability,simpl,simple,29,"// Draw the histogram with a simple line",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,Usability,simpl,simple,29,"// Draw the histogram with a simple marker",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:48,Testability,log,log,48,"// special flags in case of ""reverse plot"" and ""log scale""",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:28,Availability,error,error,28,"// Define the offset of the error bars due to the symbol size",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,Availability,error,error,29,"// special flags to turn off error bar drawing in case the marker cover it",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12,Availability,error,error,12,"// draw the error rectangles",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:28,Availability,error,error,28,"// Define the offset of the error bars due to the symbol size",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12,Availability,error,error,12,"// draw the error rectangles",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:48,Testability,log,log,48,"// special flags in case of ""reverse plot"" and ""log scale""",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:28,Availability,error,error,28,"// define the offset of the error bars due to the symbol size",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,Availability,error,error,29,"// special flags to turn off error bar drawing in case the marker cover it",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12,Availability,error,error,12,"// draw the error rectangles",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:48,Testability,log,log,48,"// special flags in case of ""reverse plot"" and ""log scale""",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:28,Availability,error,error,28,"// define the offset of the error bars due to the symbol size",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,Availability,error,error,29,"// special flags to turn off error bar drawing in case the marker cover it",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12,Availability,error,error,12,"// draw the error rectangles",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13,Availability,error,errors,13,"// Check for errors if available",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:23,Availability,avail,available,23,"// Check for errors if available",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:12,Availability,error,error,12,"// Draw the error bars.; // Y errors are lines, but X errors are pieces of circles.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:30,Availability,error,errors,30,"// Draw the error bars.; // Y errors are lines, but X errors are pieces of circles.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:54,Availability,error,errors,54,"// Draw the error bars.; // Y errors are lines, but X errors are pieces of circles.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:24,Availability,error,errors,24,"// Reverse X asymmetric errors",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:24,Availability,error,errors,24,"// Reverse Y asymmetric errors",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:116,Availability,error,errors,116,"////////////////////////////////////////////////////////////////////////////////; /// Paint a simple graph, without errors bars.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:94,Usability,simpl,simple,94,"////////////////////////////////////////////////////////////////////////////////; /// Paint a simple graph, without errors bars.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:21,Safety,avoid,avoid,21,"// add an epsilon to avoid exact vertical lines.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:351,Deployability,continuous,continuous,351,"////////////////////////////////////////////////////////////////////////////////; /// Smooth a curve given by N points.; ///; /// The original code is from an underlaying routine for Draw based on the; /// CERN GD3 routine TVIPTE:; ///; /// Author - Marlow etc. Modified by - P. Ward Date - 3.10.1973; ///; /// This method draws a smooth tangentially continuous curve through; /// the sequence of data points P(I) I=1,N where P(I)=(X(I),Y(I)).; /// The curve is approximated by a polygonal arc of short vectors.; /// The data points can represent open curves, P(1) != P(N) or closed; /// curves P(2) == P(N). If a tangential discontinuity at P(I) is; /// required, then set P(I)=P(I+1). Loops are also allowed.; ///; /// Reference Marlow and Powell, Harwell report No.R.7092.1972; /// MCCONALOGUE, Computer Journal VOL.13, NO4, NOV1970P p392 6; ///; /// - npoints : Number of data points.; /// - x : Abscissa; /// - y : Ordinate",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:171,Integrability,rout,routine,171,"////////////////////////////////////////////////////////////////////////////////; /// Smooth a curve given by N points.; ///; /// The original code is from an underlaying routine for Draw based on the; /// CERN GD3 routine TVIPTE:; ///; /// Author - Marlow etc. Modified by - P. Ward Date - 3.10.1973; ///; /// This method draws a smooth tangentially continuous curve through; /// the sequence of data points P(I) I=1,N where P(I)=(X(I),Y(I)).; /// The curve is approximated by a polygonal arc of short vectors.; /// The data points can represent open curves, P(1) != P(N) or closed; /// curves P(2) == P(N). If a tangential discontinuity at P(I) is; /// required, then set P(I)=P(I+1). Loops are also allowed.; ///; /// Reference Marlow and Powell, Harwell report No.R.7092.1972; /// MCCONALOGUE, Computer Journal VOL.13, NO4, NOV1970P p392 6; ///; /// - npoints : Number of data points.; /// - x : Abscissa; /// - y : Ordinate",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:215,Integrability,rout,routine,215,"////////////////////////////////////////////////////////////////////////////////; /// Smooth a curve given by N points.; ///; /// The original code is from an underlaying routine for Draw based on the; /// CERN GD3 routine TVIPTE:; ///; /// Author - Marlow etc. Modified by - P. Ward Date - 3.10.1973; ///; /// This method draws a smooth tangentially continuous curve through; /// the sequence of data points P(I) I=1,N where P(I)=(X(I),Y(I)).; /// The curve is approximated by a polygonal arc of short vectors.; /// The data points can represent open curves, P(1) != P(N) or closed; /// curves P(2) == P(N). If a tangential discontinuity at P(I) is; /// required, then set P(I)=P(I+1). Loops are also allowed.; ///; /// Reference Marlow and Powell, Harwell report No.R.7092.1972; /// MCCONALOGUE, Computer Journal VOL.13, NO4, NOV1970P p392 6; ///; /// - npoints : Number of data points.; /// - x : Abscissa; /// - y : Ordinate",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:88,Integrability,rout,routine,88,"// delta is the accuracy required in constructing the curve.; // If it is zero then the routine calculates a value otherwise; // it uses this value. (default is 0.0)",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:181,Deployability,continuous,continuous,181,"// Convert coordinates back to original system; // Separate the set of data points into arcs P(k-1),P(k).; // Calculate the direction cosines. first consider whether; // there is a continuous tangent at the endpoints.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14,Usability,clear,clear,14,"// Prepare to clear out remaining short vectors before returning",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14,Usability,clear,clear,14,"// Prepare to clear out remaining short vectors before returning",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:3,Testability,Test,Test,3,"// Test whether P(k) is a cusp.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:3,Testability,Test,Test,3,"// Test D(tj,THETA). A is set to (Y(tj+s)-Y(tj))/s.b is; // set to (X(tj+s)-X(tj))/s.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:3,Deployability,Update,Update,3,"// Update tj,xt and yt.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:471,Safety,avoid,avoid,471,"////////////////////////////////////////////////////////////////////////////////; /// Static function to set `fgMaxPointsPerLine` for graph painting. When graphs; /// are painted with lines, they are split into chunks of length `fgMaxPointsPerLine`.; /// This allows to paint line with an ""infinite"" number of points. In some case; /// this ""chunks painting"" technic may create artefacts at the chunk's boundaries.; /// For instance when zooming deeply in a PDF file. To avoid this effect it might; /// be necessary to increase the chunks' size using this function:; /// `TGraphPainter::SetMaxPointsPerLine(20000)`.",MatchSource.CODE_COMMENT,hist/histpainter/src/TGraphPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:975,Availability,error,error,975," - [Introduction](\ref HP00); - [Histograms' plotting options](\ref HP01); - [Options supported for 1D and 2D histograms](\ref HP01a); - [Options supported for 1D histograms](\ref HP01b); - [Options supported for 2D histograms](\ref HP01c); - [Options supported for 3D histograms](\ref HP01d); - [Options supported for histograms' stacks (THStack)](\ref HP01e); - [Setting the Style](\ref HP02); - [Setting line, fill, marker, and text attributes](\ref HP03); - [Setting Tick marks on the histogram axis](\ref HP04); - [Giving titles to the X, Y and Z axis](\ref HP05); - [The option ""SAME""](\ref HP060); - [Limitations](\ref HP060a); - [Colors automatically picked in palette](\ref HP061); - [Superimposing two histograms with different scales in the same pad](\ref HP06); - [Statistics Display](\ref HP07); - [Fit Statistics](\ref HP08); - [The error bars options](\ref HP09); - [The bar chart option](\ref HP100); - [The ""BAR"" and ""HBAR"" options](\ref HP10); - [The SCATter plot option (legacy draw option)](\ref HP11); - [The ARRow option](\ref HP12); - [The BOX option](\ref HP13); - [The COLor option (default for 2D and 3D histograms)](\ref HP14); - [The CANDLE and VIOLIN options](\ref HP140); - [The CANDLE option](\ref HP140a); - [The VIOLIN option](\ref HP140b); - [The TEXT and TEXTnn Option](\ref HP15); - [The CONTour options](\ref HP16); - [The LIST option](\ref HP16a); - [The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options](\ref HP16b); - [The LEGO options](\ref HP17); - [The ""SURFace"" options](\ref HP18); - [Cylindrical, Polar, Spherical and PseudoRapidity/Phi options](\ref HP19); - [Base line for bar-charts and lego plots](\ref HP20); - [TH2Poly Drawing](\ref HP20a); - [The SPEC option](\ref HP21); - [Option ""Z"" : Adding the color palette on the right side of the pad](\ref HP22); - [Setting the color palette](\ref HP23); - [Drawing a sub-rang",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:5645,Availability,error,error,5645,"ogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:5769,Availability,error,error,5769,"ogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6071,Availability,error,error,6071,"om the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6222,Availability,error,errors,6222,"nchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden line removal. |; | ""LEGO1"" | Draw a lego plot with hidden surface removal. |; | ""LEGO2"" | Draw a lego plot using colors to show the cell contents When the option ""0"" is used with any LEGO option, the empty",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6262,Availability,error,error,6262,"nchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden line removal. |; | ""LEGO1"" | Draw a lego plot with hidden surface removal. |; | ""LEGO2"" | Draw a lego plot using colors to show the cell contents When the option ""0"" is used with any LEGO option, the empty",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6298,Availability,error,errors,6298,"commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden line removal. |; | ""LEGO1"" | Draw a lego plot with hidden surface removal. |; | ""LEGO2"" | Draw a lego plot using colors to show the cell contents When the option ""0"" is used with any LEGO option, the empty bins are not drawn.|; | ""LEGO3"" | Draw a lego plot with hidden surface removal, like LEGO1 but the border",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8545,Availability,error,error,8545,"Style->SetPaintTextFormat`).|; | ""TEXTnn"" | Draw bin contents as text at angle nn (0 < nn <= 90). |; | ""X+"" | The X-axis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fi",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8634,Availability,error,error,8634,"xis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histo",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8670,Availability,error,error,8670,"xis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histo",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8736,Availability,error,error,8736,"ight side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8831,Availability,error,error,8831,"e Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option | Description |; |--------------|----------------------------",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8912,Availability,error,error,8912,"# Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option | Description |; |--------------|------------------------------------------------------------------|; | "" "" | Default (color plot).|; | ""ARR""",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:9101,Availability,error,error,9101," be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option | Description |; |--------------|------------------------------------------------------------------|; | "" "" | Default (color plot).|; | ""ARR"" | Arrow mode. Shows gradient between adjacent cells.|; | ""BOX"" | A box is drawn for each cell with surface proportional to the content's absolute value. A negative content is marked with a X. |; | ""BOX1"" | A but",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:18008,Availability,avail,available,18008,"e drawn (inside); ty = 2; tick marks and labels on right side are drawn. By default only the left Y axis and X bottom axis are drawn; (`tx = ty = 0`). `TPad::SetTicks(tx,ty)` allows to set these options.; See also The `TAxis` functions to set specific axis attributes. In case multiple color filled histograms are drawn on the same pad, the fill; area may hide the axis tick marks. One can force a redraw of the axis over all; the histograms by calling:. gPad->RedrawAxis();. \anchor HP05; ### Giving titles to the X, Y and Z axis. h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");. The histogram title and the axis titles can be any `TLatex` string.; The titles are part of the persistent histogram. \anchor HP060; ### The option ""SAME"". By default, when an histogram is drawn, the current pad is cleared before; drawing. In order to keep the previous drawing and draw on top of it the; option `SAME` should be use. The histogram drawn with the option; `SAME` uses the coordinates system available in the current pad. This option can be used alone or combined with any valid drawing option but; some combinations must be use with care. \anchor HP060a; #### Limitations. - It does not work when combined with the `LEGO` and `SURF` options unless the; histogram plotted with the option `SAME` has exactly the same; ranges on the X, Y and Z axis as the currently drawn histogram. To superimpose; lego plots [histograms' stacks](\ref HP26) should be used. \anchor HP061; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several histograms are painted in the same canvas thanks to the option ""SAME""; or via a `THStack` it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current active color; palette. Palette coloring for histogram is activated thanks to the options `PFC`; (Palette Fill Color), `PLC` (Palette Line Color) and `PMC` (Palette Marker Color).; When one of ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:21149,Availability,error,error,21149," h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; float rightmax = 1.1*hint1->GetMaximum();; float scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; }; End_Macro. \anchor HP07; ### Statistics Display. The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The `mode` has up to nine digits that can be set to on (1 or 2), off (0). mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; standard deviation printed; r = 2; standard deviation and standard deviation error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all comb",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:21218,Availability,error,error,21218," h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; float rightmax = 1.1*hint1->GetMaximum();; float scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; }; End_Macro. \anchor HP07; ### Statistics Display. The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The `mode` has up to nine digits that can be set to on (1 or 2), off (0). mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; standard deviation printed; r = 2; standard deviation and standard deviation error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all comb",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:21476,Availability,error,error,21476," h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; float rightmax = 1.1*hint1->GetMaximum();; float scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; }; End_Macro. \anchor HP07; ### Statistics Display. The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The `mode` has up to nine digits that can be set to on (1 or 2), off (0). mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; standard deviation printed; r = 2; standard deviation and standard deviation error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all comb",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:21539,Availability,error,error,21539," h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; float rightmax = 1.1*hint1->GetMaximum();; float scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; }; End_Macro. \anchor HP07; ### Statistics Display. The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The `mode` has up to nine digits that can be set to on (1 or 2), off (0). mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; standard deviation printed; r = 2; standard deviation and standard deviation error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all comb",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22531,Availability,error,error,22531,"es, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiIourRmMen`. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22594,Availability,error,error,22594,"es, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiIourRmMen`. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22834,Availability,error,error,22834,"es, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiIourRmMen`. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22893,Availability,error,error,22893,"es, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiIourRmMen`. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25351,Availability,error,errors,25351,"h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars cli",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25507,Availability,error,errors,25507,"sition; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with on",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25753,Availability,error,error,25753,"ove). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<1000",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25913,Availability,error,error,25913," (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" an",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25990,Availability,error,error,25990,"TSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26013,Availability,Error,Error,26013,"string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26114,Availability,error,error,26114,"ype of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some art",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26208,Availability,error,error,26208,"lected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26236,Availability,error,error,26236,"pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; a",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26325,Availability,error,error,26325,"print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn wit",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26522,Availability,error,error,26522,"1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Dr",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26694,Availability,error,error,26694,"tyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the follow",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26933,Availability,error,error,26933,""" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26984,Availability,error,error,26984,""" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:27010,Availability,error,error,27010,"rror rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->Fill(px,5*py);; }; h2e->Draw(""E"");; }; End_Macro. \anchor HP100; ##",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:27675,Availability,error,error,27675,"n drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->Fill(px,5*py);; }; h2e->Draw(""E"");; }; End_Macro. \anchor HP100; ### The bar chart option. The option ""B"" allows to draw simple vertical bar charts.; The bar width is controlled with `TH1::SetBarWidth()`,; and the bar offset within the bin, with `TH1::SetBarOffset()`.; These two settings are useful to draw several histograms on the; same plot as shown in the following example:. Begin_Macro(source); {; int i;; const Int_t nx = 8;; string os_X[nx] = {""8"",""32"",""128"",""512"",""2048"",""8192"",""32768"",""131072""};; float d_35_0[nx] = {0.75, -3.30, -0.92, 0.10, 0.08, -1.69, -1.29, -2.37};; float d_35_1[nx] = {1.01, -3.02, -0.65, 0.37, 0.34, -1.42, -1.02, -2.10};. auto cb = new TCanvas(""cb"",""cb"",600,400);; cb->SetGrid();. gStyle->SetHistMin",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:29997,Availability,error,errors,29997," h2b = new TH1F(""h2b"",""h2b"",nx,0,nx);; h2b->SetFillColor(38);; h2b->SetBarWidth(0.4);; h2b->SetBarOffset(0.5);; h2b->SetStats(0);; for (i=1;i<=nx;i++) h2b->SetBinContent(i, d_35_1[i-1]);. h2b->Draw(""b same"");; }; End_Macro. \anchor HP10; ### The ""BAR"" and ""HBAR"" options. When the option `bar` or `hbar` is specified, a bar chart is drawn. A vertical; bar-chart is drawn with the options `bar`, `bar0`, `bar1`, `bar2`, `bar3`, `bar4`.; An horizontal bar-chart is drawn with the options `hbar`, `hbar0`, `hbar1`,; `hbar2`, `hbar3`, `hbar4` (hbars.C). - The bar is filled with the histogram fill color.; - The left side of the bar is drawn with a light fill color.; - The right side of the bar is drawn with a dark fill color.; - The percentage of the bar drawn with either the light or dark color is:; - 0% for option ""(h)bar"" or ""(h)bar0""; - 10% for option ""(h)bar1""; - 20% for option ""(h)bar2""; - 30% for option ""(h)bar3""; - 40% for option ""(h)bar4"". When an histogram has errors the option [""HIST""](\ref OPTHIST) together with the `(h)bar` option. Begin_Macro(source); ../../../tutorials/hist/hbars.C; End_Macro. To control the bar width (default is the bin width) `TH1::SetBarWidth()`; should be used. To control the bar offset (default is 0) `TH1::SetBarOffset()` should; be used. These two parameters are useful when several histograms are plotted using; the option `SAME`. They allow to plot the histograms next to each other. \anchor HP11; ### The SCATter plot option (legacy draw option). \attention; Use of option `SCAT` has been deprecated. It was the default drawing option for 2D and; 3D histograms. The new default option is `COL` (heat-map). For each cell (i,j) a number of points proportional to the cell content is; drawn. A maximum of `kNMAX` points per cell is drawn. If the maximum is above; `kNMAX` contents are normalized to `kNMAX` (`kNMAX=2000`).; If option is of the form `scat=ff`, (eg `scat=1.8`,; `scat=1e-3`), then `ff` is used as a scale factor to compute the; number of ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:40932,Availability,avail,available,40932,"""Example of col plots with option SAME"",200,10,700,500);; auto h1 = new TH2F(""h1"",""h1"",40,-3,3,40,-3,3);; auto h2 = new TH2F(""h2"",""h2"",40,-3,3,40,-3,3);; auto h3 = new TH2F(""h3"",""h3"",40,-3,3,40,-3,3);; auto h4 = new TH2F(""h4"",""h4"",40,-3,3,40,-3,3);; h1->SetBit(TH1::kNoStats);; for (Int_t i=0;i<5000;i++) {; double x,y;; gRandom->Rannor(x,y);; if(x>0 && y>0) h1->Fill(x,y,4);; if(x<0 && y<0) h2->Fill(x,y,3);; if(x>0 && y<0) h3->Fill(x,y,2);; if(x<0 && y>0) h4->Fill(x,y,1);; }; h1->Draw(""colz"");; h2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the C",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:43577,Availability,error,errors,43577," will initiate the drawing of; the corresponding plots. Followed by the keyword the user can select a plot direction (X or V for; vertical projections, or Y or H for horizontal projections) and/or predefined definitions; (1-6 for candles, 1-2 for violins). The order doesn't matter. Default is X and 1. Instead of using the predefined representations, the candle and violin parameters can be; changed individually. In that case the option have the following form:. CANDLEX(<option-string>); CANDLEY(<option-string>); VIOLINX(<option-string>); VIOLINY(<option-string>). All zeros at the beginning of `option-string` can be omitted. `option-string` consists eight values, defined as follow:. ""CANDLEX(zhpawMmb)"". Where:. - `b = 0`; no box drawn; - `b = 1`; the box is drawn. As the candle-plot is also called a box-plot it; makes sense in the very most cases to always draw the box; - `b = 2`; draw a filled box with border. - `m = 0`; no median drawn; - `m = 1`; median is drawn as a line; - `m = 2`; median is drawn with errors (notches); - `m = 3`; median is drawn as a circle. - `M = 0`; no mean drawn; - `M = 1`; mean is drawn as a dashed line; - `M = 3`; mean is drawn as a circle. - `w = 0`; no whisker drawn; - `w = 1`; whisker is drawn to end of distribution.; - `w = 2`; whisker is drawn to max 1.5*iqr. - `a = 0`; no anchor drawn; - `a = 1`; the anchors are drawn. - `p = 0`; no points drawn; - `p = 1`; only outliers are drawn; - `p = 2`; all datapoints are drawn; - `p = 3`: all datapoints are drawn scattered. - `h = 0`; no histogram is drawn; - `h = 1`; histogram at the left or bottom side is drawn; - `h = 2`; histogram at the right or top side is drawn; - `h = 3`; histogram at left and right or top and bottom (violin-style) is drawn. - `z = 0`; no zero indicator line is drawn; - `z = 1`; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this; mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:46641,Availability,avail,available,46641,"ted as one candle. Begin_Macro(source); ../../../tutorials/hist/candleplotwhiskers.C; End_Macro. The candle reduces the information coming from a whole distribution into few values.; Independently from the number of entries or the significance of the underlying distribution; a candle will always look like a candle. So candle plots should be used carefully in; particular with unknown distributions. The definition of a candle is based on; __unbinned data__. Here, candles are created from binned data. Because of this, the; deviation is connected to the bin width used. The calculation of the quantiles; normally done on unbinned data also. Because data are binned, this will; only work the best possible way within the resolution of one bin. Because of all these facts one should take care that:. - there are enough points per candle; - the bin width is small enough (more bins will increase the maximum; available resolution of the quantiles although there will be some; bins with no entries); - never make a candle-plot if the underlying distribution is double-distributed; - only create candles of distributions that are more-or-less gaussian (the; MPV should be not too far away from the mean). #### What a candle is made of. \since **ROOT version 6.07/05**. ##### The box; The box displays the position of the inter-quantile-range of the underlying; distribution. The box contains 25% of the distribution below the median; and 25% of the distribution above the median. If the underlying distribution is large; enough and gaussian shaped the end-points of the box represent \f$ 0.6745\times\sigma \f$; (Where \f$ \sigma \f$ is the standard deviation of the gaussian). The width and; the position of the box can be modified by SetBarWidth() and SetBarOffset().; The +-25% quantiles are calculated by the GetQuantiles() methods. \since **ROOT version 6.11/01**. Using the static function TCandle::SetBoxRange(double) the box definition will be; overwritten. E.g. using a box range of 0.68 will r",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:51134,Availability,avail,available,51134,"ented as the size of the notch; (where iqr is the size of the box and N is the number of entries of the whole; distribution). Candle plots like these are usually called ""notched candle plots"". In case the significance of the median is greater that the size of the box, the; box will have an unnatural shape. Usually it means the chart has not enough data,; or that representing this uncertainty is not useful. ##### The Mean; The mean can be drawn as a dashed line or as a circle or not drawn at all.; The mean is the arithmetic average of the values in the distribution.; It is calculated using GetMean(). Because histograms are; binned data, the mean value can differ from a calculation on the raw-data.; If the distribution is large enough and gaussian shaped the mean will be; exactly the median. ##### The Whiskers; The whiskers represent the part of the distribution not covered by the box.; The upper 25% and the lower 25% of the distribution are located within the whiskers.; Two representations are available. - A simple one (using w=1) defining the lower whisker from the lowest data value; to the bottom of the box, and the upper whisker from the top of the box to the; highest data value. In this representation the whisker-lines are dashed.; - A more complex one having a further restriction. The whiskers are still connected; to the box but their length cannot exceed \f$ 1.5\times iqr \f$. So it might; be that the outermost part of the underlying distribution will not be covered; by the whiskers. Usually these missing parts will be represented by the outliers; (see points). Of course the upper and the lower whisker may differ in length.; In this representation the whiskers are drawn as solid lines. \since **ROOT version 6.11/01**. Using the static function TCandle::SetWhiskerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the d",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:61276,Availability,error,errors,61276," of a certain value:. Begin_Macro(source); ../../../tutorials/hist/candledecay.C; End_Macro. \anchor HP15; ### The TEXT and TEXTnn Option. For each bin the content is printed. The text attributes are:. - text font = current TStyle font (`gStyle->SetTextFont()`).; - text size = 0.02*padheight*markersize (if `h` is the histogram drawn; with the option `TEXT` the marker size can be changed with; `h->SetMarkerSize(markersize)`).; - text color = marker color. By default the format `g` is used. This format can be redefined; by calling `gStyle->SetPaintTextFormat()`. It is also possible to use `TEXTnn` in order to draw the text with; the angle `nn` (`0 < nn <= 90`). For 2D histograms the text is plotted in the center of each non empty cells.; It is possible to plot empty cells by calling `gStyle->SetHistMinimumZero()`; or providing MIN0 draw option. For 1D histogram the text is plotted at a y; position equal to the bin content. For 2D histograms when the option ""E"" (errors) is combined with the option; text (""TEXTE""), the error for each bin is also printed. Begin_Macro(source); {; auto c01 = new TCanvas(""c01"",""c01"",700,400);; c01->Divide(2,1);; auto htext1 = new TH1F(""htext1"",""Option TEXT on 1D histograms "",10,-4,4);; auto htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; htext1->Fill(px,0.1);; htext2->Fill(px,5*py,0.1);; }; gStyle->SetPaintTextFormat(""4.1f m"");; htext2->SetMarkerSize(1.8);; c01->cd(1);; htext2->Draw(""TEXT45"");; c01->cd(2);; htext1->Draw();; htext1->Draw(""HIST TEXT0 SAME"");; }; End_Macro. \since **ROOT version 6.07/07:**. In case several histograms are drawn on top ot each other (using option `SAME`),; the text can be shifted using `SetBarOffset()`. It specifies an offset for the; text position in each cell, in percentage of the bin width. Begin_Macro(source); {; auto c03 = new TCanvas(""c03"",""c03"",700,400);; gStyle->SetOptStat(0);; auto htext3 = new T",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:61333,Availability,error,error,61333," of a certain value:. Begin_Macro(source); ../../../tutorials/hist/candledecay.C; End_Macro. \anchor HP15; ### The TEXT and TEXTnn Option. For each bin the content is printed. The text attributes are:. - text font = current TStyle font (`gStyle->SetTextFont()`).; - text size = 0.02*padheight*markersize (if `h` is the histogram drawn; with the option `TEXT` the marker size can be changed with; `h->SetMarkerSize(markersize)`).; - text color = marker color. By default the format `g` is used. This format can be redefined; by calling `gStyle->SetPaintTextFormat()`. It is also possible to use `TEXTnn` in order to draw the text with; the angle `nn` (`0 < nn <= 90`). For 2D histograms the text is plotted in the center of each non empty cells.; It is possible to plot empty cells by calling `gStyle->SetHistMinimumZero()`; or providing MIN0 draw option. For 1D histogram the text is plotted at a y; position equal to the bin content. For 2D histograms when the option ""E"" (errors) is combined with the option; text (""TEXTE""), the error for each bin is also printed. Begin_Macro(source); {; auto c01 = new TCanvas(""c01"",""c01"",700,400);; c01->Divide(2,1);; auto htext1 = new TH1F(""htext1"",""Option TEXT on 1D histograms "",10,-4,4);; auto htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; htext1->Fill(px,0.1);; htext2->Fill(px,5*py,0.1);; }; gStyle->SetPaintTextFormat(""4.1f m"");; htext2->SetMarkerSize(1.8);; c01->cd(1);; htext2->Draw(""TEXT45"");; c01->cd(2);; htext1->Draw();; htext1->Draw(""HIST TEXT0 SAME"");; }; End_Macro. \since **ROOT version 6.07/07:**. In case several histograms are drawn on top ot each other (using option `SAME`),; the text can be shifted using `SetBarOffset()`. It specifies an offset for the; text position in each cell, in percentage of the bin width. Begin_Macro(source); {; auto c03 = new TCanvas(""c03"",""c03"",700,400);; gStyle->SetOptStat(0);; auto htext3 = new T",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:88899,Availability,avail,available,88899,"en from the Z axis of the object. For example, to; set the labels size on the palette axis do:. hist->GetZaxis()->SetLabelSize(). <b>WARNING:</b> The palette axis is always drawn vertically. \anchor HP23; ### Setting the color palette. To change the color palette `TStyle::SetPalette` should be used, eg:. gStyle->SetPalette(ncolors,colors);. For example the option `COL` draws a 2D histogram with cells; represented by a box filled with a color index which is a function; of the cell content.; If the cell content is N, the color index used will be the color number; in `colors[N]`, etc. If the maximum cell content is greater than; `ncolors`, all cell contents are scaled to `ncolors`. If ` ncolors <= 0`, a default palette (see below) of 50 colors is; defined. This palette is recommended for pads, labels ... `if ncolors == 1 && colors == 0`, then a Pretty Palette with a; Spectrum Violet->Red is created with 50 colors. That's the default rain bow; palette. Other pre-defined palettes with 255 colors are available when `colors == 0`.; The following value of `ncolors` give access to:. if ncolors = 51 and colors=0, a Deep Sea palette is used.; if ncolors = 52 and colors=0, a Grey Scale palette is used.; if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); if ncolors = 55 and colors=0, a Rain Bow palette is used.; if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used. If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors. The default palette defines:. - index 0 to 9 : shades of grey; - index 10 to 19 : shades of brown; - index 20 to 29 : shades of blue; - index 30 to 39 : shades of red; - index 40 to 49 : basic colors. The color numbers specified in the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:96680,Availability,error,errors,96680,"urrent pad/canvas is; subdivided into a number of pads equal to the number of histograms and each; histogram is paint into a separate pad. The following example shows various types of stacks (hstack.C). Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. The option `nostackb` allows to draw the histograms next to each; other as bar charts:. Begin_Macro(source); {; auto cst0 = new TCanvas(""cst0"",""cst0"",600,400);; auto hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. auto h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. auto h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. auto h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; hs->GetXaxis()->SetNdivisions(-10);; cst0->SetGridx();; }; End_Macro. If at least one of the histograms in the stack has errors, the whole stack is; visualized by default with error bars. To visualize it without errors the; option `HIST` should be used. Begin_Macro(source); {; auto cst1 = new TCanvas(""cst1"",""cst1"",700,400);; cst1->Divide(2,1);. auto hst11 = new TH1F(""hst11"", """", 20, -10, 10);; hst11->Sumw2();; hst11->FillRandom(""gaus"", 1000);; hst11->SetFillColor(kViolet);; hst11->SetLineColor(kViolet);. auto hst12 = new TH1F(""hst12"", """", 20, -10, 10);; hst12->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");; }; End_Macro. \anchor HP27; ### Drawing of 3D implicit functions. 3D implicit functions (`TF3`) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2""",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:96735,Availability,error,error,96735,"urrent pad/canvas is; subdivided into a number of pads equal to the number of histograms and each; histogram is paint into a separate pad. The following example shows various types of stacks (hstack.C). Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. The option `nostackb` allows to draw the histograms next to each; other as bar charts:. Begin_Macro(source); {; auto cst0 = new TCanvas(""cst0"",""cst0"",600,400);; auto hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. auto h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. auto h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. auto h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; hs->GetXaxis()->SetNdivisions(-10);; cst0->SetGridx();; }; End_Macro. If at least one of the histograms in the stack has errors, the whole stack is; visualized by default with error bars. To visualize it without errors the; option `HIST` should be used. Begin_Macro(source); {; auto cst1 = new TCanvas(""cst1"",""cst1"",700,400);; cst1->Divide(2,1);. auto hst11 = new TH1F(""hst11"", """", 20, -10, 10);; hst11->Sumw2();; hst11->FillRandom(""gaus"", 1000);; hst11->SetFillColor(kViolet);; hst11->SetLineColor(kViolet);. auto hst12 = new TH1F(""hst12"", """", 20, -10, 10);; hst12->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");; }; End_Macro. \anchor HP27; ### Drawing of 3D implicit functions. 3D implicit functions (`TF3`) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2""",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:96771,Availability,error,errors,96771," each; histogram is paint into a separate pad. The following example shows various types of stacks (hstack.C). Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. The option `nostackb` allows to draw the histograms next to each; other as bar charts:. Begin_Macro(source); {; auto cst0 = new TCanvas(""cst0"",""cst0"",600,400);; auto hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. auto h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. auto h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. auto h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; hs->GetXaxis()->SetNdivisions(-10);; cst0->SetGridx();; }; End_Macro. If at least one of the histograms in the stack has errors, the whole stack is; visualized by default with error bars. To visualize it without errors the; option `HIST` should be used. Begin_Macro(source); {; auto cst1 = new TCanvas(""cst1"",""cst1"",700,400);; cst1->Divide(2,1);. auto hst11 = new TH1F(""hst11"", """", 20, -10, 10);; hst11->Sumw2();; hst11->FillRandom(""gaus"", 1000);; hst11->SetFillColor(kViolet);; hst11->SetLineColor(kViolet);. auto hst12 = new TH1F(""hst12"", """", 20, -10, 10);; hst12->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");; }; End_Macro. \anchor HP27; ### Drawing of 3D implicit functions. 3D implicit functions (`TF3`) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",600,400);; auto f3 = new TF3(""f3"",""sin(x*x+y*y+z*z-36)"",-2,2,-2,2,-2,2);; f3->SetClipp",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:4470,Deployability,update,updated,4470,"t is enough to do:. h->Draw();. `h` can be of any kind: 1D, 2D or 3D. To choose how the histogram will; be drawn, the `Draw()` method can be invoked with an option. For instance; to draw a 2D histogram as a lego plot it is enough to do:. h->Draw(""lego"");. `THistPainter` offers many options to paint 1D, 2D and 3D histograms. When the `Draw()` method of a histogram is called for the first time; (`TH1::Draw`), it creates a `THistPainter` object and saves a; pointer to this ""painter"" as a data member of the histogram. The; `THistPainter` class specializes in the drawing of histograms. It is; separated from the histogram so that one can have histograms without the; graphics overhead, for example in a batch program. Each histogram having its own; painter (rather than a central singleton painter painting all histograms), allows; two histograms to be drawn in two threads without overwriting the painter's; values. When a displayed histogram is filled again, there is no need to call the; `Draw()` method again; the image will be refreshed the next time the; pad will be updated. A pad is updated after one of these three actions:. 1. a carriage control on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. By default a call to `TH1::Draw()` clears the pad of all objects; before drawing the new image of the histogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case se",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:4488,Deployability,update,updated,4488,"awn, the `Draw()` method can be invoked with an option. For instance; to draw a 2D histogram as a lego plot it is enough to do:. h->Draw(""lego"");. `THistPainter` offers many options to paint 1D, 2D and 3D histograms. When the `Draw()` method of a histogram is called for the first time; (`TH1::Draw`), it creates a `THistPainter` object and saves a; pointer to this ""painter"" as a data member of the histogram. The; `THistPainter` class specializes in the drawing of histograms. It is; separated from the histogram so that one can have histograms without the; graphics overhead, for example in a batch program. Each histogram having its own; painter (rather than a central singleton painter painting all histograms), allows; two histograms to be drawn in two threads without overwriting the painter's; values. When a displayed histogram is filled again, there is no need to call the; `Draw()` method again; the image will be refreshed the next time the; pad will be updated. A pad is updated after one of these three actions:. 1. a carriage control on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. By default a call to `TH1::Draw()` clears the pad of all objects; before drawing the new image of the histogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; usi",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:4628,Deployability,Update,Update,4628,"h to do:. h->Draw(""lego"");. `THistPainter` offers many options to paint 1D, 2D and 3D histograms. When the `Draw()` method of a histogram is called for the first time; (`TH1::Draw`), it creates a `THistPainter` object and saves a; pointer to this ""painter"" as a data member of the histogram. The; `THistPainter` class specializes in the drawing of histograms. It is; separated from the histogram so that one can have histograms without the; graphics overhead, for example in a batch program. Each histogram having its own; painter (rather than a central singleton painter painting all histograms), allows; two histograms to be drawn in two threads without overwriting the painter's; values. When a displayed histogram is filled again, there is no need to call the; `Draw()` method again; the image will be refreshed the next time the; pad will be updated. A pad is updated after one of these three actions:. 1. a carriage control on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. By default a call to `TH1::Draw()` clears the pad of all objects; before drawing the new image of the histogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:20169,Deployability,Update,Update,20169,"istogram get its color; from the current color palette defined by `gStyle->SetPalette(...)`. The color; is determined according to the number of objects having palette coloring in; the current pad. Begin_Macro(source); ../../../tutorials/hist/histpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/hist/thstackpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/hist/thstack2palettecolor.C; End_Macro. \anchor HP06; ### Superimposing two histograms with different scales in the same pad. The following example creates two histograms, the second histogram is the bins; integral of the first one. It shows a procedure to draw the two histograms in; the same pad and it draws the scale of the second histogram using a new vertical; axis on the right side. See also the tutorial `transpad.C` for a variant; of this example. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; // create/fill draw h1; gStyle->SetOptStat(kFALSE);; auto h1 = new TH1F(""h1"",""Superimposing two histograms with different scales"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) h1->Fill(gRandom->Gaus(0,1));; h1->Draw();; c1->Update();. // create hint1 filled with the bins integral of h1; auto hint1 = new TH1F(""hint1"",""h1 bins integral"",100,-3,3);; float sum = 0.f;; for (i=1;i<=100;i++) {; sum += h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; float rightmax = 1.1*hint1->GetMaximum();; float scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; }; End_Macro. \anchor HP07; ### Statistics Display. The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The `mode` has up to nine digits that can be set",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:23424,Deployability,update,updated,23424,"single number. The parameter mode can be any combination of the letters `kKsSiIourRmMen`. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without `gPad->Update()` the line `h->FindObject(""stats"")` returns a null pointer. When a histogram is drawn with the option `SAME`, the statistics box; is not drawn. To force the statistics box drawing with the option; `SAME`, the option `SAMES` must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (`h` being the pointer to the histogram):. Root > TPaveSt",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:23819,Deployability,Update,Update,23819,"ndard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without `gPad->Update()` the line `h->FindObject(""stats"")` returns a null pointer. When a histogram is drawn with the option `SAME`, the statistics box; is not drawn. To force the statistics box drawing with the option; `SAME`, the option `SAMES` must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (`h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` wi",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:23902,Deployability,Update,Update,23902," of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without `gPad->Update()` the line `h->FindObject(""stats"")` returns a null pointer. When a histogram is drawn with the option `SAME`, the statistics box; is not drawn. To force the statistics box drawing with the option; `SAME`, the option `SAMES` must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (`h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean""",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:23983,Deployability,Update,Update,23983,"ame of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without `gPad->Update()` the line `h->FindObject(""stats"")` returns a null pointer. When a histogram is drawn with the option `SAME`, the statistics box; is not drawn. To force the statistics box drawing with the option; `SAME`, the option `SAMES` must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (`h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (lo",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:52889,Deployability,configurat,configuration,52889,"skerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the distribution inside; that candle. The static function will affect all candle-charts in the running program.; Default is 1. If the distribution is large enough and gaussian shaped, the maximum length of; the whisker will be located at \f$ \pm 2.698 \sigma \f$ (when using the; 1.5*iqr-definition (w=2), where \f$ \sigma \f$ is the standard deviation; (see picture above). In that case 99.3% of the total distribution will be covered; by the box and the whiskers, whereas 0.7% are represented by the outliers. ##### The Anchors; The anchors have no special meaning in terms of statistical calculation. They mark; the end of the whiskers and they have the width of the box. Both representation; with and without anchors are common. ##### The Points; Depending on the configuration the points can have different meanings:; - If p=1 the points represent the outliers. If they are shown, it means; some parts of the underlying distribution are not covered by the whiskers.; This can only occur when the whiskers are set to option w=2. Here the whiskers; can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; whiskers will be drawn as outliers. The outliers will be represented by crosses.; - If p=2 all points in the distribution will be painted as crosses. This is; useful for small datasets only (up to 10 or 20 points per candle).; The outliers are shown along the candle. Because the underlying distribution; is binned, is frequently occurs that a bin contains more than one value.; Because of this the points will be randomly scattered within their bin along; the candle axis. If the bin content for a bin is exactly 1 (usually; this happens for the outliers) if will be drawn in the middle of the bin along; the candle axis. As the maximum number of points per candle i",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:60230,Deployability,Update,Update,60230,"tion. There are two predefined violin-plot representations:; - ""VIOLINX1"": Standard violin (histogram, mean, whisker over full distribution,; zero indicator line); - ""VIOLINX2"": Line VIOLINX1 both with better whisker definition + outliers. A solid fill style is recommended for this plot (as opposed to a hollow or; hashed style). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; Int_t nx(6), ny(40);; double xmin(0.0), xmax(+6.0), ymin(0.0), ymax(+4.0);; auto hviolin = new TH2F(""hviolin"", ""Option VIOLIN example"", nx, xmin, xmax, ny, ymin, ymax);; TF1 f1(""f1"", ""gaus"", +0,0 +4.0);; double x,y;; for (Int_t iBin=1; iBin<hviolin->GetNbinsX(); ++iBin) {; double xc = hviolin->GetXaxis()->GetBinCenter(iBin);; f1.SetParameters(1, 2.0+TMath::Sin(1.0+xc), 0.2+0.1*(xc-xmin)/xmax);; for(Int_t i=0; i<10000; ++i){; x = xc;; y = f1.GetRandom();; hviolin->Fill(x, y);; }; }; hviolin->SetFillColor(kGray);; hviolin->SetMarkerStyle(20);; hviolin->SetMarkerSize(0.5);; hviolin->Draw(""VIOLIN"");; c1->Update();; }; End_Macro. The next example illustrates a time development of a certain value:. Begin_Macro(source); ../../../tutorials/hist/candledecay.C; End_Macro. \anchor HP15; ### The TEXT and TEXTnn Option. For each bin the content is printed. The text attributes are:. - text font = current TStyle font (`gStyle->SetTextFont()`).; - text size = 0.02*padheight*markersize (if `h` is the histogram drawn; with the option `TEXT` the marker size can be changed with; `h->SetMarkerSize(markersize)`).; - text color = marker color. By default the format `g` is used. This format can be redefined; by calling `gStyle->SetPaintTextFormat()`. It is also possible to use `TEXTnn` in order to draw the text with; the angle `nn` (`0 < nn <= 90`). For 2D histograms the text is plotted in the center of each non empty cells.; It is possible to plot empty cells by calling `gStyle->SetHistMinimumZero()`; or providing MIN0 draw option. For 1D histogram the text is plotted at a y; position equal to the b",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:67552,Deployability,Update,Update,67552,"; }; End_Macro. The following example shows a 2D histogram plotted with the option; `CONT4`. The option `CONT4` draws a contour plot using surface; colors to distinguish contours (`SURF` option at theta = 0). Combined; with the option `CONT` (or `CONT0`), the option `Z`; allows to display the color palette defined by `gStyle->SetPalette()`. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcont4 = new TH2F(""hcont4"",""Option CONT4Z example "",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcont4->Fill(px-1,5*py);; hcont4->Fill(2+0.5*px,2*py-10.,0.1);; }; hcont4->Draw(""CONT4Z"");; }; End_Macro. The default number of contour levels is 20 equidistant levels and can be changed; with `TH1::SetContour()` or `TStyle::SetNumberContours()`. \anchor HP16a; #### The LIST option. When option `LIST` is specified together with option; `CONT`, the points used to draw the contours are saved in; `TGraph` objects:. h->Draw(""CONT LIST"");; gPad->Update();. The contour are saved in `TGraph` objects once the pad is painted.; Therefore to use this functionality in a macro, `gPad->Update()`; should be performed after the histogram drawing. Once the list is; built, the contours are accessible in the following way:. TObjArray *contours = (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; Int_t ncontours = contours->GetSize();; TList *list = (TList*)contours->At(i);. Where `i` is a contour number, and list contains a list of; `TGraph` objects.; For one given contour, more than one disjoint polyline may be generated.; The number of TGraphs per contour is given by:. list->GetSize();. To access the first graph in the list one should do:. TGraph *gr1 = (TGraph*)list->First();. The following example (ContourList.C) shows how to use this functionality. Begin_Macro(source); ../../../tutorials/hist/ContourList.C; End_Macro. \anchor HP16b; #### The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options. The following optio",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:67686,Deployability,Update,Update,67686,"e; colors to distinguish contours (`SURF` option at theta = 0). Combined; with the option `CONT` (or `CONT0`), the option `Z`; allows to display the color palette defined by `gStyle->SetPalette()`. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcont4 = new TH2F(""hcont4"",""Option CONT4Z example "",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcont4->Fill(px-1,5*py);; hcont4->Fill(2+0.5*px,2*py-10.,0.1);; }; hcont4->Draw(""CONT4Z"");; }; End_Macro. The default number of contour levels is 20 equidistant levels and can be changed; with `TH1::SetContour()` or `TStyle::SetNumberContours()`. \anchor HP16a; #### The LIST option. When option `LIST` is specified together with option; `CONT`, the points used to draw the contours are saved in; `TGraph` objects:. h->Draw(""CONT LIST"");; gPad->Update();. The contour are saved in `TGraph` objects once the pad is painted.; Therefore to use this functionality in a macro, `gPad->Update()`; should be performed after the histogram drawing. Once the list is; built, the contours are accessible in the following way:. TObjArray *contours = (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; Int_t ncontours = contours->GetSize();; TList *list = (TList*)contours->At(i);. Where `i` is a contour number, and list contains a list of; `TGraph` objects.; For one given contour, more than one disjoint polyline may be generated.; The number of TGraphs per contour is given by:. list->GetSize();. To access the first graph in the list one should do:. TGraph *gr1 = (TGraph*)list->First();. The following example (ContourList.C) shows how to use this functionality. Begin_Macro(source); ../../../tutorials/hist/ContourList.C; End_Macro. \anchor HP16b; #### The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options. The following options select the `CONT4` option and are useful for; sky maps or exposure maps (earth.C). | Option | Description |; |--------------|-----------------",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:107904,Deployability,Update,Update,107904," - when selected object (histogram as a whole) is different from previous; then emit `Picked()` signal; - when selected (highlighted) bin from histogram is different from previous; then emit `Highlighted()` signal. Any user function (or functions) has to be defined; `UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)`.; In example (see below) has name `PrintInfo()`. All parameters of user; function are taken from. void TCanvas::Highlighted(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y). - `pad` is pointer to pad with highlighted histogram; - `obj` is pointer to highlighted histogram; - `x` is highlighted x bin for 1D histogram; - `y` is highlighted y bin for 2D histogram (for 1D histogram not in use). Example how to create a connection from any `TCanvas` object to a user; `UserFunction()` slot (see also `TQObject::Connect()` for additional info). TQObject::Connect(""TCanvas"", ""Highlighted(TVirtualPad*,TObject*,Int_t,Int_t)"",; 0, 0, ""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. or use non-static ""simplified"" function; `TCanvas::HighlightConnect(const char *slot)`. c1->HighlightConnect(""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. NOTE the signal and slot string must have a form; ""(TVirtualPad*,TObject*,Int_t,Int_t)"". root [0] .x $ROOTSYS/tutorials/hsimple.C; root [1] hpx->SetHighlight(kTRUE); root [2] .x hlprint.C. file `hlprint.C`; ~~~ {.cpp}; void PrintInfo(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y); {; auto h = (TH1F *)obj;; if (!h->IsHighlight()) // after highlight disabled; h->SetTitle(""highlight disable"");; else; h->SetTitle(TString::Format(""bin[%03d] (%5.2f) content %g"", x,; h->GetBinCenter(x), h->GetBinContent(x)));; pad->Update();; }. void hlprint(); {; if (!gPad) return;; gPad->GetCanvas()->HighlightConnect(""PrintInfo(TVirtualPad*,TObject*,Int_t,Int_t)"");; }; ~~~. \image html hlsimple.gif ""Highlight mode and simple user function"". For more complex demo please see for example `$ROOTSYS/tutorials/tree/temperature.C` file. */",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:45841,Energy Efficiency,reduce,reduces,45841,"y affect violin charts of course. \anchor HP140a; #### The CANDLE option. <a href=""http://en.wikipedia.org/wiki/Box_plot"">A Candle plot</a> (also known as; a ""box plot"" or ""whisker plot"") was invented in 1977 by John Tukey. It is a convenient; way to describe graphically a data distribution (D) with only five numbers:. 1. The minimum value of the distribution D (bottom or left whisker).; 2. The lower quartile (Q1): 25% of the data points in D are less than Q1 (bottom of the box).; 3. The median (M): 50% of the data points in D are less than M.; 4. The upper quartile (Q3): 75% of the data points in D are less than Q3 (top of the box).; 5. The maximum value of the distribution D (top or right whisker). In this implementation a TH2 is considered as a collection of TH1 along; X (option `CANDLE` or `CANDLEX`) or Y (option `CANDLEY`).; Each TH1 is represented as one candle. Begin_Macro(source); ../../../tutorials/hist/candleplotwhiskers.C; End_Macro. The candle reduces the information coming from a whole distribution into few values.; Independently from the number of entries or the significance of the underlying distribution; a candle will always look like a candle. So candle plots should be used carefully in; particular with unknown distributions. The definition of a candle is based on; __unbinned data__. Here, candles are created from binned data. Because of this, the; deviation is connected to the bin width used. The calculation of the quantiles; normally done on unbinned data also. Because data are binned, this will; only work the best possible way within the resolution of one bin. Because of all these facts one should take care that:. - there are enough points per candle; - the bin width is small enough (more bins will increase the maximum; available resolution of the quantiles although there will be some; bins with no entries); - never make a candle-plot if the underlying distribution is double-distributed; - only create candles of distributions that are more-or-less",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:89858,Energy Efficiency,green,green,89858," are available when `colors == 0`.; The following value of `ncolors` give access to:. if ncolors = 51 and colors=0, a Deep Sea palette is used.; if ncolors = 52 and colors=0, a Grey Scale palette is used.; if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); if ncolors = 55 and colors=0, a Rain Bow palette is used.; if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used. If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors. The default palette defines:. - index 0 to 9 : shades of grey; - index 10 to 19 : shades of brown; - index 20 to 29 : shades of blue; - index 30 to 39 : shades of red; - index 40 to 49 : basic colors. The color numbers specified in the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a color can be changed thanks to; `TColor::SetRGB()`. \since **ROOT version 6.19/01**. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; For more details see `TPaletteAxis`. \anchor HP24; ### Drawing a sub-range of a 2D histogram; the [cutg] option. Using a `TCutG` object, it is possible to draw a sub-range of a 2D; histogram. One must create a graphical cut (mouse or C++) and specify the name; of the cut between `[]` in the `Draw()` option.; For example (fit2a.C), with a `TCutG` named `cutg`, one can call:. myhist->Draw(""surf1 [cutg]"");. To invert the cut, it is enough to put a `-` in front of its name:. myhist->Draw(""surf1 [-cutg]"");. It is possible to apply several cuts (`,` means logical AND):. myhist->Draw(""surf1 [cutg1,cutg2]"");. Begin_Macro(source); ../../../tutorials/fit/fit2a.C; End_Macro. \anchor HP25",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:102324,Energy Efficiency,green,green,102324,"awn using iso-surfaces.|. \anchor HP29d; #### TF3 (implicit function). The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GL"" | Draw a TF3.|. \anchor HP29e; #### Parametric surfaces. `$ROOTSYS/tutorials/gl/glparametric.C` shows how to create parametric; equations and visualize the surface. \anchor HP29f; #### Interaction with the plots. All the interactions are implemented via standard methods; `DistancetoPrimitive()` and `ExecuteEvent()`. That's why all the; interactions with the OpenGL plots are possible only when the mouse cursor is; in the plot's area (the plot's area is the part of a the pad occupied by; gl-produced picture). If the mouse cursor is not above gl-picture, the standard; pad interaction is performed. \anchor HP29g; #### Selectable parts. Different parts of the plot can be selected:. - xoz, yoz, xoy back planes: When such a plane selected, it's highlighted in green; if the dynamic slicing by this plane is supported, and it's highlighted in red,; if the dynamic slicing is not supported.; - The plot itself:; On surfaces, the selected surface is outlined in red. (TF3 and; ISO are not outlined). On lego plots, the selected bin is; highlighted. The bin number and content are displayed in pad's; status bar. In box plots, the box or sphere is highlighted and; the bin info is displayed in pad's status bar. \anchor HP29h; #### Rotation and zooming. - Rotation:; When the plot is selected, it can be rotated by pressing and; holding the left mouse button and move the cursor.; - Zoom/Unzoom:; Mouse wheel or 'j', 'J', 'k', 'K' keys. \anchor HP29i; #### Panning. The selected plot can be moved in a pad's area by pressing and; holding the left mouse button and the shift key. \anchor HP29j; #### Box cut. Surface, iso, box, TF3 and parametric painters support box cut by; pressing the 'c' or 'C' key when the mouse cursor is in a plot's; area. That will display a transparent box, cutti",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:103809,Energy Efficiency,green,green,103809,"selected, it can be rotated by pressing and; holding the left mouse button and move the cursor.; - Zoom/Unzoom:; Mouse wheel or 'j', 'J', 'k', 'K' keys. \anchor HP29i; #### Panning. The selected plot can be moved in a pad's area by pressing and; holding the left mouse button and the shift key. \anchor HP29j; #### Box cut. Surface, iso, box, TF3 and parametric painters support box cut by; pressing the 'c' or 'C' key when the mouse cursor is in a plot's; area. That will display a transparent box, cutting away part of the; surface (or boxes) in order to show internal part of plot. This box; can be moved inside the plot's area (the full size of the box is; equal to the plot's surrounding box) by selecting one of the box; cut axes and pressing the left mouse button to move it. \anchor HP29k; #### Plot specific interactions (dynamic slicing etc.). Currently, all gl-plots support some form of slicing. When back plane; is selected (and if it's highlighted in green) you can press and hold; left mouse button and shift key and move this back plane inside; plot's area, creating the slice. During this ""slicing"" plot becomes; semi-transparent. To remove all slices (and projected curves for; surfaces) double click with left mouse button in a plot's area. \anchor HP29l; #### Surface with option ""GLSURF"". The surface profile is displayed on the slicing plane.; The profile projection is drawn on the back plane; by pressing `'p'` or `'P'` key. \anchor HP29m; #### TF3. The contour plot is drawn on the slicing plane. For TF3 the color; scheme can be changed by pressing 's' or 'S'. \anchor HP29n; #### Box. The contour plot corresponding to slice plane position is drawn in real time. \anchor HP29o; #### Iso. Slicing is similar to ""GLBOX"" option. \anchor HP29p; #### Parametric plot. No slicing. Additional keys: 's' or 'S' to change color scheme -; about 20 color schemes supported ('s' for ""scheme""); 'l' or 'L' to; increase number of polygons ('l' for ""level"" of details), 'w' or 'W'; to sho",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41127,Integrability,depend,depends,41127,"o h4 = new TH2F(""h4"",""h4"",40,-3,3,40,-3,3);; h1->SetBit(TH1::kNoStats);; for (Int_t i=0;i<5000;i++) {; double x,y;; gRandom->Rannor(x,y);; if(x>0 && y>0) h1->Fill(x,y,4);; if(x<0 && y<0) h2->Fill(x,y,3);; if(x>0 && y<0) h3->Fill(x,y,2);; if(x<0 && y>0) h4->Fill(x,y,1);; }; h1->Draw(""colz"");; h2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; bins with zero content. The COL2 and COLZ2 options color these bins the color of zero. COL2 option renders the histog",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:52872,Integrability,Depend,Depending,52872,"skerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the distribution inside; that candle. The static function will affect all candle-charts in the running program.; Default is 1. If the distribution is large enough and gaussian shaped, the maximum length of; the whisker will be located at \f$ \pm 2.698 \sigma \f$ (when using the; 1.5*iqr-definition (w=2), where \f$ \sigma \f$ is the standard deviation; (see picture above). In that case 99.3% of the total distribution will be covered; by the box and the whiskers, whereas 0.7% are represented by the outliers. ##### The Anchors; The anchors have no special meaning in terms of statistical calculation. They mark; the end of the whiskers and they have the width of the box. Both representation; with and without anchors are common. ##### The Points; Depending on the configuration the points can have different meanings:; - If p=1 the points represent the outliers. If they are shown, it means; some parts of the underlying distribution are not covered by the whiskers.; This can only occur when the whiskers are set to option w=2. Here the whiskers; can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; whiskers will be drawn as outliers. The outliers will be represented by crosses.; - If p=2 all points in the distribution will be painted as crosses. This is; useful for small datasets only (up to 10 or 20 points per candle).; The outliers are shown along the candle. Because the underlying distribution; is binned, is frequently occurs that a bin contains more than one value.; Because of this the points will be randomly scattered within their bin along; the candle axis. If the bin content for a bin is exactly 1 (usually; this happens for the outliers) if will be drawn in the middle of the bin along; the candle axis. As the maximum number of points per candle i",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:86807,Integrability,interface,interface,86807,"01, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };. Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; auto p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. TFile::SetCacheFileDir(""."");; auto f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. TMultiGraph *mg;; TKey *key;; TIter nextkey(gDirectory->GetListOfKeys());; while ((key = (TKey*)nextkey())) {; TObject *obj = key->ReadObj();; if (obj->InheritsFrom(""TMultiGraph"")) {; mg = (TMultiGraph*)obj;; bin = p->AddBin(mg);; }; }. for (i=0; i<nx; i++) p->Fill(states[i], pop[i]);. gStyle->SetOptStat(11);; p->Draw(""COLZ L"");; }; End_Macro. `TH2Poly` histograms can also be plotted using the GL interface using; the option ""GLLEGO"". \since **ROOT version 6.09/01**. In some cases it can be useful to not draw the empty bins. the option ""0""; combined with the option ""COL"" et COLZ allows to do that. Begin_Macro(source); {; auto chc = new TCanvas(""chc"",""chc"",600,400);. auto hc = new TH2Poly();; hc->Honeycomb(0,0,.1,25,25);; hc->SetName(""hc"");; hc->SetTitle(""Option COLZ 0"");; TRandom ran;; for (int i = 0; i<300; i++) hc->Fill(ran.Gaus(2.,1), ran.Gaus(2.,1));; hc->Draw(""colz 0"");; }; End_Macro. \anchor HP21; ### The SPEC option. This option allows to use the `TSpectrum2Painter` tools. See the full; documentation in `TSpectrum2Painter::PaintSpectrum`. \anchor HP22; ### Option ""Z"" : Adding the color palette on the right side of the pad. When this option is specified, a color palette with an axis indicating the value; of the corresponding color is drawn on the right side of the picture. In case,; not enough space is left, one can increase the size of the right margin by; callin",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:16508,Modifiability,inherit,inherit,16508,"n next to each other as bar charts.|; | ""PADS"" | The current pad/canvas is subdivided into a number of pads equal to the number of histograms in the stack and each histogram is paint into a separate pad.|; | ""PFC"" | Palette Fill Color: stack's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: stack's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: stack's marker color is taken in the current palette. |. \anchor HP02; ### Setting the Style. Histograms use the current style (`gStyle`). When one changes the current; style and would like to propagate the changes to the histogram,; `TH1::UseCurrentStyle` should be called. Call `UseCurrentStyle` on; each histogram is needed. To force all the histogram to use the current style use:. gROOT->ForceStyle();. All the histograms read after this call will use the current style. \anchor HP03; ### Setting line, fill, marker, and text attributes. The histogram classes inherit from the attribute classes:; `TAttLine`, `TAttFill` and `TAttMarker`.; See the description of these classes for the list of options. \anchor HP04; ### Setting Tick marks on the histogram axis. The `TPad::SetTicks` method specifies the type of tick marks on the axis.; If ` tx = gPad->GetTickx()` and `ty = gPad->GetTicky()` then:. tx = 1; tick marks on top side are drawn (inside); tx = 2; tick marks and labels on top side are drawn; ty = 1; tick marks on right side are drawn (inside); ty = 2; tick marks and labels on right side are drawn. By default only the left Y axis and X bottom axis are drawn; (`tx = ty = 0`). `TPad::SetTicks(tx,ty)` allows to set these options.; See also The `TAxis` functions to set specific axis attributes. In case multiple color filled histograms are drawn on the same pad, the fill; area may hide the axis tick marks. One can force a redraw of the axis over all; the histograms by calling:. gPad->RedrawAxis();. \anchor HP05; ### Giving titles to the X, Y and Z axis. h->GetXaxis()->Se",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:52889,Modifiability,config,configuration,52889,"skerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the distribution inside; that candle. The static function will affect all candle-charts in the running program.; Default is 1. If the distribution is large enough and gaussian shaped, the maximum length of; the whisker will be located at \f$ \pm 2.698 \sigma \f$ (when using the; 1.5*iqr-definition (w=2), where \f$ \sigma \f$ is the standard deviation; (see picture above). In that case 99.3% of the total distribution will be covered; by the box and the whiskers, whereas 0.7% are represented by the outliers. ##### The Anchors; The anchors have no special meaning in terms of statistical calculation. They mark; the end of the whiskers and they have the width of the box. Both representation; with and without anchors are common. ##### The Points; Depending on the configuration the points can have different meanings:; - If p=1 the points represent the outliers. If they are shown, it means; some parts of the underlying distribution are not covered by the whiskers.; This can only occur when the whiskers are set to option w=2. Here the whiskers; can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; whiskers will be drawn as outliers. The outliers will be represented by crosses.; - If p=2 all points in the distribution will be painted as crosses. This is; useful for small datasets only (up to 10 or 20 points per candle).; The outliers are shown along the candle. Because the underlying distribution; is binned, is frequently occurs that a bin contains more than one value.; Because of this the points will be randomly scattered within their bin along; the candle axis. If the bin content for a bin is exactly 1 (usually; this happens for the outliers) if will be drawn in the middle of the bin along; the candle axis. As the maximum number of points per candle i",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:86559,Modifiability,Inherit,InheritsFrom,86559,"""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",; ""texas"", ""utah"", ""vermont"", ""virginia"",; ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming""; };; Double_t pop[nx] = {; 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,; 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };. Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; auto p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. TFile::SetCacheFileDir(""."");; auto f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. TMultiGraph *mg;; TKey *key;; TIter nextkey(gDirectory->GetListOfKeys());; while ((key = (TKey*)nextkey())) {; TObject *obj = key->ReadObj();; if (obj->InheritsFrom(""TMultiGraph"")) {; mg = (TMultiGraph*)obj;; bin = p->AddBin(mg);; }; }. for (i=0; i<nx; i++) p->Fill(states[i], pop[i]);. gStyle->SetOptStat(11);; p->Draw(""COLZ L"");; }; End_Macro. `TH2Poly` histograms can also be plotted using the GL interface using; the option ""GLLEGO"". \since **ROOT version 6.09/01**. In some cases it can be useful to not draw the empty bins. the option ""0""; combined with the option ""COL"" et COLZ allows to do that. Begin_Macro(source); {; auto chc = new TCanvas(""chc"",""chc"",600,400);. auto hc = new TH2Poly();; hc->Honeycomb(0,0,.1,25,25);; hc->SetName(""hc"");; hc->SetTitle(""Option COLZ 0"");; TRandom ran;; for (int i = 0; i<300; i++) hc->Fill(ran.Gaus(2.,1), ran.Gaus(2.,1));; hc->Draw(""colz 0"");; }; End_Macro. \anchor HP21; ### The SPEC option. This option allows to use the `TSpectrum2Painter` tools. See the full; documentation in `TSpectrum2Painter::PaintSpectrum`. \anchor HP22; ### Option ""Z"" : Adding the color palette o",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:10990,Performance,perform,performance,10990,"rtional to the content's absolute value. A negative content is marked with a X. |; | ""BOX1"" | A button is drawn for each cell with surface proportional to content's absolute value. A sunken button is drawn for negative values a raised one for positive.|; | ""COL"" | A box is drawn for each cell with a color scale varying with contents. All the none empty bins are painted. Empty bins are not painted unless some bins have a negative content because in that case the null bins might be not empty. `TProfile2D` histograms are handled differently because, for this type of 2D histograms, it is possible to know if an empty bin has been filled or not. So even if all the bins' contents are positive some empty bins might be painted. And vice versa, if some bins have a negative content some empty bins might be not painted (default).|; | ""COLZ"" | Same as ""COL"". In addition the color palette is also drawn.|; | ""COL2"" | Alternative rendering algorithm to ""COL"". Can significantly improve rendering performance for large, non-sparse 2-D histograms.|; | ""COLZ2"" | Same as ""COL2"". In addition the color palette is also drawn.|; | ""Z CJUST"" | In combination with colored options ""COL"",""CONT0"" etc: Justify labels in the color palette at color boundaries. For more details see `TPaletteAxis`|; | ""CANDLE"" | Draw a candle plot along X axis.|; | ""CANDLEX"" | Same as ""CANDLE"".|; | ""CANDLEY"" | Draw a candle plot along Y axis.|; | ""CANDLEXn"" | Draw a candle plot along X axis. Different candle-styles with n from 1 to 6.|; | ""CANDLEYn"" | Draw a candle plot along Y axis. Different candle-styles with n from 1 to 6.|; | ""VIOLIN"" | Draw a violin plot along X axis.|; | ""VIOLINX"" | Same as ""VIOLIN"".|; | ""VIOLINY"" | Draw a violin plot along Y axis.|; | ""VIOLINXn"" | Draw a violin plot along X axis. Different violin-styles with n being 1 or 2.|; | ""VIOLINYn"" | Draw a violin plot along Y axis. Different violin-styles with n being 1 or 2.|; | ""CONT"" | Draw a contour plot (same as CONT0).|; | ""CONT0"" | Draw a contou",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:31123,Performance,scalab,scalable,31123,"s/hist/hbars.C; End_Macro. To control the bar width (default is the bin width) `TH1::SetBarWidth()`; should be used. To control the bar offset (default is 0) `TH1::SetBarOffset()` should; be used. These two parameters are useful when several histograms are plotted using; the option `SAME`. They allow to plot the histograms next to each other. \anchor HP11; ### The SCATter plot option (legacy draw option). \attention; Use of option `SCAT` has been deprecated. It was the default drawing option for 2D and; 3D histograms. The new default option is `COL` (heat-map). For each cell (i,j) a number of points proportional to the cell content is; drawn. A maximum of `kNMAX` points per cell is drawn. If the maximum is above; `kNMAX` contents are normalized to `kNMAX` (`kNMAX=2000`).; If option is of the form `scat=ff`, (eg `scat=1.8`,; `scat=1e-3`), then `ff` is used as a scale factor to compute the; number of dots. `scat=1` is the default. By default the scatter plot is painted with a ""dot marker"" which not scalable; (see the `TAttMarker` documentation). To change the marker size, a scalable marker; type should be used. For instance a circle (marker style 20). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hscat = new TH2F(""hscat"",""Option SCATter example (default for 2D histograms) "",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hscat->Fill(px,5*py);; hscat->Fill(3+0.5*px,2*py-10.);; }; hscat->Draw(""scat=0.5""); // This a legacy draw option. Please consider using TScatter; }; End_Macro. \anchor HP12; ### The ARRow option. Shows gradient between adjacent cells. For each cell (i,j) an arrow is drawn; The orientation of the arrow follows the cell gradient. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto harr = new TH2F(""harr"",""Option ARRow example"",20,-4,4,20,-20,20);; harr->SetLineColor(kRed);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; harr->Fill(",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:31200,Performance,scalab,scalable,31200,"idth()`; should be used. To control the bar offset (default is 0) `TH1::SetBarOffset()` should; be used. These two parameters are useful when several histograms are plotted using; the option `SAME`. They allow to plot the histograms next to each other. \anchor HP11; ### The SCATter plot option (legacy draw option). \attention; Use of option `SCAT` has been deprecated. It was the default drawing option for 2D and; 3D histograms. The new default option is `COL` (heat-map). For each cell (i,j) a number of points proportional to the cell content is; drawn. A maximum of `kNMAX` points per cell is drawn. If the maximum is above; `kNMAX` contents are normalized to `kNMAX` (`kNMAX=2000`).; If option is of the form `scat=ff`, (eg `scat=1.8`,; `scat=1e-3`), then `ff` is used as a scale factor to compute the; number of dots. `scat=1` is the default. By default the scatter plot is painted with a ""dot marker"" which not scalable; (see the `TAttMarker` documentation). To change the marker size, a scalable marker; type should be used. For instance a circle (marker style 20). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hscat = new TH2F(""hscat"",""Option SCATter example (default for 2D histograms) "",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hscat->Fill(px,5*py);; hscat->Fill(3+0.5*px,2*py-10.);; }; hscat->Draw(""scat=0.5""); // This a legacy draw option. Please consider using TScatter; }; End_Macro. \anchor HP12; ### The ARRow option. Shows gradient between adjacent cells. For each cell (i,j) an arrow is drawn; The orientation of the arrow follows the cell gradient. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto harr = new TH2F(""harr"",""Option ARRow example"",20,-4,4,20,-20,20);; harr->SetLineColor(kRed);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; harr->Fill(px,5*py);; harr->Fill(3+0.5*px,2*py-10.,0.1);; }; harr->Draw(""ARR"");; }; End_Macro. \since *",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41007,Performance,perform,performance,41007,"40,-3,3,40,-3,3);; auto h2 = new TH2F(""h2"",""h2"",40,-3,3,40,-3,3);; auto h3 = new TH2F(""h3"",""h3"",40,-3,3,40,-3,3);; auto h4 = new TH2F(""h4"",""h4"",40,-3,3,40,-3,3);; h1->SetBit(TH1::kNoStats);; for (Int_t i=0;i<5000;i++) {; double x,y;; gRandom->Rannor(x,y);; if(x>0 && y>0) h1->Fill(x,y,4);; if(x<0 && y<0) h2->Fill(x,y,3);; if(x>0 && y<0) h3->Fill(x,y,2);; if(x<0 && y>0) h4->Fill(x,y,1);; }; h1->Draw(""colz"");; h2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41074,Performance,perform,performance,41074,"o h4 = new TH2F(""h4"",""h4"",40,-3,3,40,-3,3);; h1->SetBit(TH1::kNoStats);; for (Int_t i=0;i<5000;i++) {; double x,y;; gRandom->Rannor(x,y);; if(x>0 && y>0) h1->Fill(x,y,4);; if(x<0 && y<0) h2->Fill(x,y,3);; if(x>0 && y<0) h3->Fill(x,y,2);; if(x<0 && y>0) h4->Fill(x,y,1);; }; h1->Draw(""colz"");; h2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; bins with zero content. The COL2 and COLZ2 options color these bins the color of zero. COL2 option renders the histog",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41469,Performance,perform,performance,41469,"2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; bins with zero content. The COL2 and COLZ2 options color these bins the color of zero. COL2 option renders the histogram as a bitmap. Therefore it cannot be saved in vector; graphics file format like PostScript or PDF (an empty image will be generated). It can; be saved only in bitmap files like PNG format for instance. \anchor HP140; ### The CANDLE and VIOLIN options. The mechanism behind Candle plots and Vi",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41648,Performance,perform,performance,41648,"ion COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; bins with zero content. The COL2 and COLZ2 options color these bins the color of zero. COL2 option renders the histogram as a bitmap. Therefore it cannot be saved in vector; graphics file format like PostScript or PDF (an empty image will be generated). It can; be saved only in bitmap files like PNG format for instance. \anchor HP140; ### The CANDLE and VIOLIN options. The mechanism behind Candle plots and Violin plots is very similar. Because of this they are; implemented in the same class TCandle. The keywords CANDLE or VIOLIN will initiate the drawing of; the corresponding plots. Followed by the keyword the user can select a plot direction (",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41760,Performance,optimiz,optimized,41760,");; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; bins with zero content. The COL2 and COLZ2 options color these bins the color of zero. COL2 option renders the histogram as a bitmap. Therefore it cannot be saved in vector; graphics file format like PostScript or PDF (an empty image will be generated). It can; be saved only in bitmap files like PNG format for instance. \anchor HP140; ### The CANDLE and VIOLIN options. The mechanism behind Candle plots and Violin plots is very similar. Because of this they are; implemented in the same class TCandle. The keywords CANDLE or VIOLIN will initiate the drawing of; the corresponding plots. Followed by the keyword the user can select a plot direction (X or V for; vertical projections, or Y or H for horizontal projections) and/or predefined definitions; (1-6 for candles, ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:53981,Performance,perform,performed,53981,"s:; - If p=1 the points represent the outliers. If they are shown, it means; some parts of the underlying distribution are not covered by the whiskers.; This can only occur when the whiskers are set to option w=2. Here the whiskers; can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; whiskers will be drawn as outliers. The outliers will be represented by crosses.; - If p=2 all points in the distribution will be painted as crosses. This is; useful for small datasets only (up to 10 or 20 points per candle).; The outliers are shown along the candle. Because the underlying distribution; is binned, is frequently occurs that a bin contains more than one value.; Because of this the points will be randomly scattered within their bin along; the candle axis. If the bin content for a bin is exactly 1 (usually; this happens for the outliers) if will be drawn in the middle of the bin along; the candle axis. As the maximum number of points per candle is limited by kNMax/2; on very large datasets scaling will be performed automatically. In that case one; would loose all outliers because they have usually a bin content of 1 (and a; bin content between 0 and 1 after the scaling). Because of this all bin contents; between 0 and 1 - after the scaling - will be forced to be 1.; - As the drawing of all values on large datasets can lead to big amounts of crosses,; one can show all values as a scatter plot instead by choosing p=3. The points will be; drawn as dots and will be scattered within the width of the candle. The color; of the points will be the color of the candle-chart. ##### Other Options; Is is possible to combine all options of candle and violin plots with each other. E.g. a box-plot; with a histogram. #### How to use the candle-plots drawing option. There are six predefined candle-plot representations:. - ""CANDLEX1"": Standard candle (whiskers cover the whole distribution); - ""CANDLEX2"": Standard candle with better whisker definition + outliers.; I",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:67707,Performance,perform,performed,67707,"e; colors to distinguish contours (`SURF` option at theta = 0). Combined; with the option `CONT` (or `CONT0`), the option `Z`; allows to display the color palette defined by `gStyle->SetPalette()`. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcont4 = new TH2F(""hcont4"",""Option CONT4Z example "",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcont4->Fill(px-1,5*py);; hcont4->Fill(2+0.5*px,2*py-10.,0.1);; }; hcont4->Draw(""CONT4Z"");; }; End_Macro. The default number of contour levels is 20 equidistant levels and can be changed; with `TH1::SetContour()` or `TStyle::SetNumberContours()`. \anchor HP16a; #### The LIST option. When option `LIST` is specified together with option; `CONT`, the points used to draw the contours are saved in; `TGraph` objects:. h->Draw(""CONT LIST"");; gPad->Update();. The contour are saved in `TGraph` objects once the pad is painted.; Therefore to use this functionality in a macro, `gPad->Update()`; should be performed after the histogram drawing. Once the list is; built, the contours are accessible in the following way:. TObjArray *contours = (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; Int_t ncontours = contours->GetSize();; TList *list = (TList*)contours->At(i);. Where `i` is a contour number, and list contains a list of; `TGraph` objects.; For one given contour, more than one disjoint polyline may be generated.; The number of TGraphs per contour is given by:. list->GetSize();. To access the first graph in the list one should do:. TGraph *gr1 = (TGraph*)list->First();. The following example (ContourList.C) shows how to use this functionality. Begin_Macro(source); ../../../tutorials/hist/ContourList.C; End_Macro. \anchor HP16b; #### The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options. The following options select the `CONT4` option and are useful for; sky maps or exposure maps (earth.C). | Option | Description |; |--------------|-----------------",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:86393,Performance,CACHE,CACHEREAD,86393,"ire"", ""new_jersey"",; ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",; ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",; ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",; ""texas"", ""utah"", ""vermont"", ""virginia"",; ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming""; };; Double_t pop[nx] = {; 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,; 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };. Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; auto p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. TFile::SetCacheFileDir(""."");; auto f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. TMultiGraph *mg;; TKey *key;; TIter nextkey(gDirectory->GetListOfKeys());; while ((key = (TKey*)nextkey())) {; TObject *obj = key->ReadObj();; if (obj->InheritsFrom(""TMultiGraph"")) {; mg = (TMultiGraph*)obj;; bin = p->AddBin(mg);; }; }. for (i=0; i<nx; i++) p->Fill(states[i], pop[i]);. gStyle->SetOptStat(11);; p->Draw(""COLZ L"");; }; End_Macro. `TH2Poly` histograms can also be plotted using the GL interface using; the option ""GLLEGO"". \since **ROOT version 6.09/01**. In some cases it can be useful to not draw the empty bins. the option ""0""; combined with the option ""COL"" et COLZ allows to do that. Begin_Macro(source); {; auto chc = new TCanvas(""chc"",""chc"",600,400);. auto hc = new TH2Poly();; hc->Honeycomb(0,0,.1,25,25);; hc->SetName(""hc"");; hc->SetTitle(""Option COLZ 0"");; TRandom ran;; for (int i = 0; i<300; i++) hc->Fill(ran.Gaus(2.,1), ran.Gaus(2.,1));; hc->Draw(""colz 0"");; }; End_Macro. \anchor HP21; ### The SPEC option. This option allows to use the `TSpectrum2Painter` to",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:102152,Performance,perform,performed,102152,"res are drawn instead of boxes.|. \anchor HP29c; #### TH3 as iso-surface(s). The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLISO"" | TH3 is drawn using iso-surfaces.|. \anchor HP29d; #### TF3 (implicit function). The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GL"" | Draw a TF3.|. \anchor HP29e; #### Parametric surfaces. `$ROOTSYS/tutorials/gl/glparametric.C` shows how to create parametric; equations and visualize the surface. \anchor HP29f; #### Interaction with the plots. All the interactions are implemented via standard methods; `DistancetoPrimitive()` and `ExecuteEvent()`. That's why all the; interactions with the OpenGL plots are possible only when the mouse cursor is; in the plot's area (the plot's area is the part of a the pad occupied by; gl-produced picture). If the mouse cursor is not above gl-picture, the standard; pad interaction is performed. \anchor HP29g; #### Selectable parts. Different parts of the plot can be selected:. - xoz, yoz, xoy back planes: When such a plane selected, it's highlighted in green; if the dynamic slicing by this plane is supported, and it's highlighted in red,; if the dynamic slicing is not supported.; - The plot itself:; On surfaces, the selected surface is outlined in red. (TF3 and; ISO are not outlined). On lego plots, the selected bin is; highlighted. The bin number and content are displayed in pad's; status bar. In box plots, the box or sphere is highlighted and; the bin info is displayed in pad's status bar. \anchor HP29h; #### Rotation and zooming. - Rotation:; When the plot is selected, it can be rotated by pressing and; holding the left mouse button and move the cursor.; - Zoom/Unzoom:; Mouse wheel or 'j', 'J', 'k', 'K' keys. \anchor HP29i; #### Panning. The selected plot can be moved in a pad's area by pressing and; holding the left mouse butto",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8627,Safety,avoid,avoids,8627,"xis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histo",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26318,Safety,avoid,avoids,26318,"print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn wit",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:98504,Safety,avoid,avoid,98504,"and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",600,400);; auto f3 = new TF3(""f3"",""sin(x*x+y*y+z*z-36)"",-2,2,-2,2,-2,2);; f3->SetClippingBoxOn(0,0,0);; f3->SetFillColor(30);; f3->SetLineColor(15);; f3->Draw(""FBBB"");; }; End_Macro. \anchor HP28; ### Associated functions drawing. An associated function is created by `TH1::Fit`. More than on fitted; function can be associated with one histogram (see `TH1::Fit`). A `TF1` object `f1` can be added to the list of associated; functions of an histogram `h` without calling `TH1::Fit`; simply doing:. h->GetListOfFunctions()->Add(f1);. or. h->GetListOfFunctions()->Add(f1,someoption);. To retrieve a function by name from this list, do:. TF1 *f1 = (TF1*)h->GetListOfFunctions()->FindObject(name);. or. TF1 *f1 = h->GetFunction(name);. Associated functions are automatically painted when an histogram is drawn.; To avoid the painting of the associated functions the option `HIST`; should be added to the list of the options used to paint the histogram. \anchor HP29; ### Drawing using OpenGL. The class `TGLHistPainter` allows to paint data set using the OpenGL 3D; graphics library. The plotting options start with `GL` keyword.; In addition, in order to inform canvases that OpenGL should be used to render; 3D representations, the following option should be set:. gStyle->SetCanvasPreferGL(true);. \anchor HP29a; #### General information: plot types and supported options. The following types of plots are provided:. For lego plots the supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supp",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:23526,Security,access,accessed,23526,"and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without `gPad->Update()` the line `h->FindObject(""stats"")` returns a null pointer. When a histogram is drawn with the option `SAME`, the statistics box; is not drawn. To force the statistics box drawing with the option; `SAME`, the option `SAMES` must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (`h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2)",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:44471,Security,access,accessed,44471,"`; draw a filled box with border. - `m = 0`; no median drawn; - `m = 1`; median is drawn as a line; - `m = 2`; median is drawn with errors (notches); - `m = 3`; median is drawn as a circle. - `M = 0`; no mean drawn; - `M = 1`; mean is drawn as a dashed line; - `M = 3`; mean is drawn as a circle. - `w = 0`; no whisker drawn; - `w = 1`; whisker is drawn to end of distribution.; - `w = 2`; whisker is drawn to max 1.5*iqr. - `a = 0`; no anchor drawn; - `a = 1`; the anchors are drawn. - `p = 0`; no points drawn; - `p = 1`; only outliers are drawn; - `p = 2`; all datapoints are drawn; - `p = 3`: all datapoints are drawn scattered. - `h = 0`; no histogram is drawn; - `h = 1`; histogram at the left or bottom side is drawn; - `h = 2`; histogram at the right or top side is drawn; - `h = 3`; histogram at left and right or top and bottom (violin-style) is drawn. - `z = 0`; no zero indicator line is drawn; - `z = 1`; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this; mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(<option-string>) have the same; meaning. So you can parametrise an option-string for a candle plot and use the keywords VIOLIN and; vice versa, if you wish. Using a logarithmic x- or y-axis is possible for candle and violin charts. \since **ROOT version 6.11/01**. a logarithmic z-axis is possible, too but will only affect violin charts of course. \anchor HP140a; #### The CANDLE option. <a href=""http://en.wikipedia.org/wiki/Box_plot"">A Candle plot</a> (also known as; a ""box plot"" or ""whisker plot"") was invented in 1977 by John Tukey. It is a convenient; way to describe graphically a data distribution (D) with only five numbers:. 1. The minimum value of the distribution D (bottom or left whisker).; 2. The lower quartile (Q1): 25% of the data points in D are less than Q1 (bottom of the box).; 3. The median (M): 50% of the data points in D are less than M.; 4. The upper quartile (Q",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:58868,Security,hash,hashed,58868,"be; scaled with respect to each other, the maximum height can be influenced by SetBarWidth().; Deactivated, the height of the bin with the maximum content of each individual violin is; set to a constant value using SetBarWidth(). The static function will affect all violin-charts; in the running program. Default is true. Scaling between multiple violin-charts; (using ""same"" or THStack) is not supported, yet. ##### The zero indicator line; Typical for violin charts is a line in the background over the whole histogram indicating; the bins with zero entries. The zero indicator line can be activated with z=1. The line color; will always be the same as the fill-color of the histogram. ##### The Mean; The Mean is illustrated with the same mechanism as used for candle plots. Usually a circle is used. ##### Whiskers; The whiskers are illustrated by the same mechanism as used for candle plots. There is only one; difference. When using the simple whisker definition (w=1) and the zero indicator line (z=1), then; the whiskers will be forced to be solid (usually hashed). ##### Points; The points are illustrated by the same mechanism as used for candle plots. E.g. VIOLIN2 uses; better whisker definition (w=2) and outliers (p=1). ##### Other options; It is possible to combine all options of candle or violin plots with each other. E.g. a violin plot; including a box-plot. #### How to use the violin-plots drawing option. There are two predefined violin-plot representations:; - ""VIOLINX1"": Standard violin (histogram, mean, whisker over full distribution,; zero indicator line); - ""VIOLINX2"": Line VIOLINX1 both with better whisker definition + outliers. A solid fill style is recommended for this plot (as opposed to a hollow or; hashed style). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; Int_t nx(6), ny(40);; double xmin(0.0), xmax(+6.0), ymin(0.0), ymax(+4.0);; auto hviolin = new TH2F(""hviolin"", ""Option VIOLIN example"", nx, xmin, xmax, ny, ymin, ymax);; TF1 f1(""f1""",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:59540,Security,hash,hashed,59540,"he Mean is illustrated with the same mechanism as used for candle plots. Usually a circle is used. ##### Whiskers; The whiskers are illustrated by the same mechanism as used for candle plots. There is only one; difference. When using the simple whisker definition (w=1) and the zero indicator line (z=1), then; the whiskers will be forced to be solid (usually hashed). ##### Points; The points are illustrated by the same mechanism as used for candle plots. E.g. VIOLIN2 uses; better whisker definition (w=2) and outliers (p=1). ##### Other options; It is possible to combine all options of candle or violin plots with each other. E.g. a violin plot; including a box-plot. #### How to use the violin-plots drawing option. There are two predefined violin-plot representations:; - ""VIOLINX1"": Standard violin (histogram, mean, whisker over full distribution,; zero indicator line); - ""VIOLINX2"": Line VIOLINX1 both with better whisker definition + outliers. A solid fill style is recommended for this plot (as opposed to a hollow or; hashed style). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; Int_t nx(6), ny(40);; double xmin(0.0), xmax(+6.0), ymin(0.0), ymax(+4.0);; auto hviolin = new TH2F(""hviolin"", ""Option VIOLIN example"", nx, xmin, xmax, ny, ymin, ymax);; TF1 f1(""f1"", ""gaus"", +0,0 +4.0);; double x,y;; for (Int_t iBin=1; iBin<hviolin->GetNbinsX(); ++iBin) {; double xc = hviolin->GetXaxis()->GetBinCenter(iBin);; f1.SetParameters(1, 2.0+TMath::Sin(1.0+xc), 0.2+0.1*(xc-xmin)/xmax);; for(Int_t i=0; i<10000; ++i){; x = xc;; y = f1.GetRandom();; hviolin->Fill(x, y);; }; }; hviolin->SetFillColor(kGray);; hviolin->SetMarkerStyle(20);; hviolin->SetMarkerSize(0.5);; hviolin->Draw(""VIOLIN"");; c1->Update();; }; End_Macro. The next example illustrates a time development of a certain value:. Begin_Macro(source); ../../../tutorials/hist/candledecay.C; End_Macro. \anchor HP15; ### The TEXT and TEXTnn Option. For each bin the content is printed. The text attributes are:. - tex",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:67788,Security,access,accessible,67788," (or `CONT0`), the option `Z`; allows to display the color palette defined by `gStyle->SetPalette()`. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcont4 = new TH2F(""hcont4"",""Option CONT4Z example "",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcont4->Fill(px-1,5*py);; hcont4->Fill(2+0.5*px,2*py-10.,0.1);; }; hcont4->Draw(""CONT4Z"");; }; End_Macro. The default number of contour levels is 20 equidistant levels and can be changed; with `TH1::SetContour()` or `TStyle::SetNumberContours()`. \anchor HP16a; #### The LIST option. When option `LIST` is specified together with option; `CONT`, the points used to draw the contours are saved in; `TGraph` objects:. h->Draw(""CONT LIST"");; gPad->Update();. The contour are saved in `TGraph` objects once the pad is painted.; Therefore to use this functionality in a macro, `gPad->Update()`; should be performed after the histogram drawing. Once the list is; built, the contours are accessible in the following way:. TObjArray *contours = (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; Int_t ncontours = contours->GetSize();; TList *list = (TList*)contours->At(i);. Where `i` is a contour number, and list contains a list of; `TGraph` objects.; For one given contour, more than one disjoint polyline may be generated.; The number of TGraphs per contour is given by:. list->GetSize();. To access the first graph in the list one should do:. TGraph *gr1 = (TGraph*)list->First();. The following example (ContourList.C) shows how to use this functionality. Begin_Macro(source); ../../../tutorials/hist/ContourList.C; End_Macro. \anchor HP16b; #### The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options. The following options select the `CONT4` option and are useful for; sky maps or exposure maps (earth.C). | Option | Description |; |--------------|---------------------------------------------------------------|; | ""AITOFF"" | Draw a contour via an AITOFF proje",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:68211,Security,access,access,68211," contour levels is 20 equidistant levels and can be changed; with `TH1::SetContour()` or `TStyle::SetNumberContours()`. \anchor HP16a; #### The LIST option. When option `LIST` is specified together with option; `CONT`, the points used to draw the contours are saved in; `TGraph` objects:. h->Draw(""CONT LIST"");; gPad->Update();. The contour are saved in `TGraph` objects once the pad is painted.; Therefore to use this functionality in a macro, `gPad->Update()`; should be performed after the histogram drawing. Once the list is; built, the contours are accessible in the following way:. TObjArray *contours = (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; Int_t ncontours = contours->GetSize();; TList *list = (TList*)contours->At(i);. Where `i` is a contour number, and list contains a list of; `TGraph` objects.; For one given contour, more than one disjoint polyline may be generated.; The number of TGraphs per contour is given by:. list->GetSize();. To access the first graph in the list one should do:. TGraph *gr1 = (TGraph*)list->First();. The following example (ContourList.C) shows how to use this functionality. Begin_Macro(source); ../../../tutorials/hist/ContourList.C; End_Macro. \anchor HP16b; #### The AITOFF, MERCATOR, SINUSOIDAL and PARABOLIC options. The following options select the `CONT4` option and are useful for; sky maps or exposure maps (earth.C). | Option | Description |; |--------------|---------------------------------------------------------------|; | ""AITOFF"" | Draw a contour via an AITOFF projection.|; | ""MERCATOR"" | Draw a contour via an Mercator projection.|; | ""SINUSOIDAL"" | Draw a contour via an Sinusoidal projection.|; | ""PARABOLIC"" | Draw a contour via an Parabolic projection.|. Begin_Macro(source); ../../../tutorials/graphics/earth.C; End_Macro. \anchor HP17; ### The LEGO options. In a lego plot the cell contents are drawn as 3-d boxes. The height of each box; is proportional to the cell content. The lego aspect is control with t",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:88968,Security,access,access,88968,"s size on the palette axis do:. hist->GetZaxis()->SetLabelSize(). <b>WARNING:</b> The palette axis is always drawn vertically. \anchor HP23; ### Setting the color palette. To change the color palette `TStyle::SetPalette` should be used, eg:. gStyle->SetPalette(ncolors,colors);. For example the option `COL` draws a 2D histogram with cells; represented by a box filled with a color index which is a function; of the cell content.; If the cell content is N, the color index used will be the color number; in `colors[N]`, etc. If the maximum cell content is greater than; `ncolors`, all cell contents are scaled to `ncolors`. If ` ncolors <= 0`, a default palette (see below) of 50 colors is; defined. This palette is recommended for pads, labels ... `if ncolors == 1 && colors == 0`, then a Pretty Palette with a; Spectrum Violet->Red is created with 50 colors. That's the default rain bow; palette. Other pre-defined palettes with 255 colors are available when `colors == 0`.; The following value of `ncolors` give access to:. if ncolors = 51 and colors=0, a Deep Sea palette is used.; if ncolors = 52 and colors=0, a Grey Scale palette is used.; if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); if ncolors = 55 and colors=0, a Rain Bow palette is used.; if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used. If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors. The default palette defines:. - index 0 to 9 : shades of grey; - index 10 to 19 : shades of brown; - index 20 to 29 : shades of blue; - index 30 to 39 : shades of red; - index 40 to 49 : basic colors. The color numbers specified in the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a color can be changed thanks to; `TColor::SetRGB()`. \since **ROO",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:44721,Testability,log,logarithmic,44721,"0`; no whisker drawn; - `w = 1`; whisker is drawn to end of distribution.; - `w = 2`; whisker is drawn to max 1.5*iqr. - `a = 0`; no anchor drawn; - `a = 1`; the anchors are drawn. - `p = 0`; no points drawn; - `p = 1`; only outliers are drawn; - `p = 2`; all datapoints are drawn; - `p = 3`: all datapoints are drawn scattered. - `h = 0`; no histogram is drawn; - `h = 1`; histogram at the left or bottom side is drawn; - `h = 2`; histogram at the right or top side is drawn; - `h = 3`; histogram at left and right or top and bottom (violin-style) is drawn. - `z = 0`; no zero indicator line is drawn; - `z = 1`; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this; mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(<option-string>) have the same; meaning. So you can parametrise an option-string for a candle plot and use the keywords VIOLIN and; vice versa, if you wish. Using a logarithmic x- or y-axis is possible for candle and violin charts. \since **ROOT version 6.11/01**. a logarithmic z-axis is possible, too but will only affect violin charts of course. \anchor HP140a; #### The CANDLE option. <a href=""http://en.wikipedia.org/wiki/Box_plot"">A Candle plot</a> (also known as; a ""box plot"" or ""whisker plot"") was invented in 1977 by John Tukey. It is a convenient; way to describe graphically a data distribution (D) with only five numbers:. 1. The minimum value of the distribution D (bottom or left whisker).; 2. The lower quartile (Q1): 25% of the data points in D are less than Q1 (bottom of the box).; 3. The median (M): 50% of the data points in D are less than M.; 4. The upper quartile (Q3): 75% of the data points in D are less than Q3 (top of the box).; 5. The maximum value of the distribution D (top or right whisker). In this implementation a TH2 is considered as a collection of TH1 along; X (option `CANDLE` or `CANDLEX`) or Y (option `CANDLEY`).; Each TH1 is represented as one candle",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:44823,Testability,log,logarithmic,44823,"*iqr. - `a = 0`; no anchor drawn; - `a = 1`; the anchors are drawn. - `p = 0`; no points drawn; - `p = 1`; only outliers are drawn; - `p = 2`; all datapoints are drawn; - `p = 3`: all datapoints are drawn scattered. - `h = 0`; no histogram is drawn; - `h = 1`; histogram at the left or bottom side is drawn; - `h = 2`; histogram at the right or top side is drawn; - `h = 3`; histogram at left and right or top and bottom (violin-style) is drawn. - `z = 0`; no zero indicator line is drawn; - `z = 1`; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this; mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(<option-string>) have the same; meaning. So you can parametrise an option-string for a candle plot and use the keywords VIOLIN and; vice versa, if you wish. Using a logarithmic x- or y-axis is possible for candle and violin charts. \since **ROOT version 6.11/01**. a logarithmic z-axis is possible, too but will only affect violin charts of course. \anchor HP140a; #### The CANDLE option. <a href=""http://en.wikipedia.org/wiki/Box_plot"">A Candle plot</a> (also known as; a ""box plot"" or ""whisker plot"") was invented in 1977 by John Tukey. It is a convenient; way to describe graphically a data distribution (D) with only five numbers:. 1. The minimum value of the distribution D (bottom or left whisker).; 2. The lower quartile (Q1): 25% of the data points in D are less than Q1 (bottom of the box).; 3. The median (M): 50% of the data points in D are less than M.; 4. The upper quartile (Q3): 75% of the data points in D are less than Q3 (top of the box).; 5. The maximum value of the distribution D (top or right whisker). In this implementation a TH2 is considered as a collection of TH1 along; X (option `CANDLE` or `CANDLEX`) or Y (option `CANDLEY`).; Each TH1 is represented as one candle. Begin_Macro(source); ../../../tutorials/hist/candleplotwhiskers.C; End_Macro. The candle reduces the informati",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:90048,Testability,log,log,90048,"sed.; if ncolors = 52 and colors=0, a Grey Scale palette is used.; if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); if ncolors = 55 and colors=0, a Rain Bow palette is used.; if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used. If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors. The default palette defines:. - index 0 to 9 : shades of grey; - index 10 to 19 : shades of brown; - index 20 to 29 : shades of blue; - index 30 to 39 : shades of red; - index 40 to 49 : basic colors. The color numbers specified in the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a color can be changed thanks to; `TColor::SetRGB()`. \since **ROOT version 6.19/01**. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; For more details see `TPaletteAxis`. \anchor HP24; ### Drawing a sub-range of a 2D histogram; the [cutg] option. Using a `TCutG` object, it is possible to draw a sub-range of a 2D; histogram. One must create a graphical cut (mouse or C++) and specify the name; of the cut between `[]` in the `Draw()` option.; For example (fit2a.C), with a `TCutG` named `cutg`, one can call:. myhist->Draw(""surf1 [cutg]"");. To invert the cut, it is enough to put a `-` in front of its name:. myhist->Draw(""surf1 [-cutg]"");. It is possible to apply several cuts (`,` means logical AND):. myhist->Draw(""surf1 [cutg1,cutg2]"");. Begin_Macro(source); ../../../tutorials/fit/fit2a.C; End_Macro. \anchor HP25; ### Drawing options for 3D histograms. | Option | Description |; |----------|------------------------------------------------------------",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:90765,Testability,log,logical,90765,"the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a color can be changed thanks to; `TColor::SetRGB()`. \since **ROOT version 6.19/01**. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; For more details see `TPaletteAxis`. \anchor HP24; ### Drawing a sub-range of a 2D histogram; the [cutg] option. Using a `TCutG` object, it is possible to draw a sub-range of a 2D; histogram. One must create a graphical cut (mouse or C++) and specify the name; of the cut between `[]` in the `Draw()` option.; For example (fit2a.C), with a `TCutG` named `cutg`, one can call:. myhist->Draw(""surf1 [cutg]"");. To invert the cut, it is enough to put a `-` in front of its name:. myhist->Draw(""surf1 [-cutg]"");. It is possible to apply several cuts (`,` means logical AND):. myhist->Draw(""surf1 [cutg1,cutg2]"");. Begin_Macro(source); ../../../tutorials/fit/fit2a.C; End_Macro. \anchor HP25; ### Drawing options for 3D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""SCAT"" | Draw a scatter plot (legacy draw option).|; | ""ISO"" | Draw a Gouraud shaded 3d iso surface through a 3d histogram. It paints one surface at the value computed as follow: `SumOfWeights/(NbinsX*NbinsY*NbinsZ)`|; | ""BOX"" | Draw a for each cell with volume proportional to the content's absolute value. An hidden line removal algorithm is used|; | ""BOX1"" | Same as BOX but an hidden surface removal algorithm is used|; | ""BOX2"" | Same as ""COL"". The boxes' colors are picked in the current palette according to the bins' contents (default)|; | ""BOX2Z"" | Same as ""BOX2"". In addition the color palette is also drawn.|; | ""BOX3"" | Same as BOX1, but the border lines of each lego-bar are not drawn.|. No",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:99429,Testability,log,logarithmic,99429,"ssociated functions are automatically painted when an histogram is drawn.; To avoid the painting of the associated functions the option `HIST`; should be added to the list of the options used to paint the histogram. \anchor HP29; ### Drawing using OpenGL. The class `TGLHistPainter` allows to paint data set using the OpenGL 3D; graphics library. The plotting options start with `GL` keyword.; In addition, in order to inform canvases that OpenGL should be used to render; 3D representations, the following option should be set:. gStyle->SetCanvasPreferGL(true);. \anchor HP29a; #### General information: plot types and supported options. The following types of plots are provided:. For lego plots the supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Pol",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:99490,Testability,log,logarithmic,99490," drawn.; To avoid the painting of the associated functions the option `HIST`; should be added to the list of the options used to paint the histogram. \anchor HP29; ### Drawing using OpenGL. The class `TGLHistPainter` allows to paint data set using the OpenGL 3D; graphics library. The plotting options start with `GL` keyword.; In addition, in order to inform canvases that OpenGL should be used to render; 3D representations, the following option should be set:. gStyle->SetCanvasPreferGL(true);. \anchor HP29a; #### General information: plot types and supported options. The following types of plots are provided:. For lego plots the supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Polar coordinates system.|; | ""CYL"" | Cylindrical coordinates system.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:100056,Testability,log,logarithmic,100056,"upported options. The following types of plots are provided:. For lego plots the supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Polar coordinates system.|; | ""CYL"" | Cylindrical coordinates system.|; | ""SPH"" | Spherical coordinates system.|. \anchor HP290; #### TH3 as color boxes. The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLCOL"" | H3 is drawn using semi-transparent colored boxes. See `$ROOTSYS/tutorials/gl/glvox1.C`.|. \anchor HP29b; #### TH3 as boxes (spheres). The supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLBOX"" | TH3 as a set of boxes, size of box is prop",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:100140,Testability,log,logarithmic,100140,"are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Polar coordinates system.|; | ""CYL"" | Cylindrical coordinates system.|; | ""SPH"" | Spherical coordinates system.|. \anchor HP290; #### TH3 as color boxes. The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLCOL"" | H3 is drawn using semi-transparent colored boxes. See `$ROOTSYS/tutorials/gl/glvox1.C`.|. \anchor HP29b; #### TH3 as boxes (spheres). The supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLBOX"" | TH3 as a set of boxes, size of box is proportional to bin content.|; | ""GLBOX1"" | The same as ""glbox"", but spheres are drawn instead of boxe",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3161,Usability,usab,usable,3161," HP26); - [Drawing of 3D implicit functions](\ref HP27); - [Associated functions drawing](\ref HP28); - [Drawing using OpenGL](\ref HP29); - [General information: plot types and supported options](\ref HP29a); - [TH3 as color boxes](\ref HP290); - [TH3 as boxes (spheres)](\ref HP29b); - [TH3 as iso-surface(s)](\ref HP29c); - [TF3 (implicit function)](\ref HP29d); - [Parametric surfaces](\ref HP29e); - [Interaction with the plots](\ref HP29f); - [Selectable parts](\ref HP29g); - [Rotation and zooming](\ref HP29h); - [Panning](\ref HP29i); - [Box cut](\ref HP29j); - [Plot specific interactions (dynamic slicing etc.)](\ref HP29k); - [Surface with option ""GLSURF""](\ref HP29l); - [TF3](\ref HP29m); - [Box](\ref HP29n); - [Iso](\ref HP29o); - [Parametric plot](\ref HP29p); - [Highlight mode for histogram](\ref HP30); - [Highlight mode and user function](\ref HP30a). \anchor HP00; ## Introduction. Histograms are drawn via the `THistPainter` class. Each histogram has a; pointer to its own painter (to be usable in a multithreaded program). When the; canvas has to be redrawn, the `Paint` function of each objects in the; pad is called. In case of histograms, `TH1::Paint` invokes directly; `THistPainter::Paint`. To draw a histogram `h` it is enough to do:. h->Draw();. `h` can be of any kind: 1D, 2D or 3D. To choose how the histogram will; be drawn, the `Draw()` method can be invoked with an option. For instance; to draw a 2D histogram as a lego plot it is enough to do:. h->Draw(""lego"");. `THistPainter` offers many options to paint 1D, 2D and 3D histograms. When the `Draw()` method of a histogram is called for the first time; (`TH1::Draw`), it creates a `THistPainter` object and saves a; pointer to this ""painter"" as a data member of the histogram. The; `THistPainter` class specializes in the drawing of histograms. It is; separated from the histogram so that one can have histograms without the; graphics overhead, for example in a batch program. Each histogram having its own; pain",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:4672,Usability,clear,clears,4672,"nt 1D, 2D and 3D histograms. When the `Draw()` method of a histogram is called for the first time; (`TH1::Draw`), it creates a `THistPainter` object and saves a; pointer to this ""painter"" as a data member of the histogram. The; `THistPainter` class specializes in the drawing of histograms. It is; separated from the histogram so that one can have histograms without the; graphics overhead, for example in a batch program. Each histogram having its own; painter (rather than a central singleton painter painting all histograms), allows; two histograms to be drawn in two threads without overwriting the painter's; values. When a displayed histogram is filled again, there is no need to call the; `Draw()` method again; the image will be refreshed the next time the; pad will be updated. A pad is updated after one of these three actions:. 1. a carriage control on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. By default a call to `TH1::Draw()` clears the pad of all objects; before drawing the new image of the histogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Chang",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:17817,Usability,clear,cleared,17817,">GetTickx()` and `ty = gPad->GetTicky()` then:. tx = 1; tick marks on top side are drawn (inside); tx = 2; tick marks and labels on top side are drawn; ty = 1; tick marks on right side are drawn (inside); ty = 2; tick marks and labels on right side are drawn. By default only the left Y axis and X bottom axis are drawn; (`tx = ty = 0`). `TPad::SetTicks(tx,ty)` allows to set these options.; See also The `TAxis` functions to set specific axis attributes. In case multiple color filled histograms are drawn on the same pad, the fill; area may hide the axis tick marks. One can force a redraw of the axis over all; the histograms by calling:. gPad->RedrawAxis();. \anchor HP05; ### Giving titles to the X, Y and Z axis. h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");. The histogram title and the axis titles can be any `TLatex` string.; The titles are part of the persistent histogram. \anchor HP060; ### The option ""SAME"". By default, when an histogram is drawn, the current pad is cleared before; drawing. In order to keep the previous drawing and draw on top of it the; option `SAME` should be use. The histogram drawn with the option; `SAME` uses the coordinates system available in the current pad. This option can be used alone or combined with any valid drawing option but; some combinations must be use with care. \anchor HP060a; #### Limitations. - It does not work when combined with the `LEGO` and `SURF` options unless the; histogram plotted with the option `SAME` has exactly the same; ranges on the X, Y and Z axis as the currently drawn histogram. To superimpose; lego plots [histograms' stacks](\ref HP26) should be used. \anchor HP061; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several histograms are painted in the same canvas thanks to the option ""SAME""; or via a `THStack` it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current activ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:18748,Usability,simpl,simplest,18748,"istogram is drawn, the current pad is cleared before; drawing. In order to keep the previous drawing and draw on top of it the; option `SAME` should be use. The histogram drawn with the option; `SAME` uses the coordinates system available in the current pad. This option can be used alone or combined with any valid drawing option but; some combinations must be use with care. \anchor HP060a; #### Limitations. - It does not work when combined with the `LEGO` and `SURF` options unless the; histogram plotted with the option `SAME` has exactly the same; ranges on the X, Y and Z axis as the currently drawn histogram. To superimpose; lego plots [histograms' stacks](\ref HP26) should be used. \anchor HP061; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several histograms are painted in the same canvas thanks to the option ""SAME""; or via a `THStack` it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current active color; palette. Palette coloring for histogram is activated thanks to the options `PFC`; (Palette Fill Color), `PLC` (Palette Line Color) and `PMC` (Palette Marker Color).; When one of these options is given to `TH1::Draw` the histogram get its color; from the current color palette defined by `gStyle->SetPalette(...)`. The color; is determined according to the number of objects having palette coloring in; the current pad. Begin_Macro(source); ../../../tutorials/hist/histpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/hist/thstackpalettecolor.C; End_Macro. Begin_Macro(source); ../../../tutorials/hist/thstack2palettecolor.C; End_Macro. \anchor HP06; ### Superimposing two histograms with different scales in the same pad. The following example creates two histograms, the second histogram is the bins; integral of the first one. It shows a procedure to draw the two histograms in; the same pad and it draws the scale of the second histogram using a new v",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:28068,Usability,simpl,simple,28068,"thm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->Fill(px,5*py);; }; h2e->Draw(""E"");; }; End_Macro. \anchor HP100; ### The bar chart option. The option ""B"" allows to draw simple vertical bar charts.; The bar width is controlled with `TH1::SetBarWidth()`,; and the bar offset within the bin, with `TH1::SetBarOffset()`.; These two settings are useful to draw several histograms on the; same plot as shown in the following example:. Begin_Macro(source); {; int i;; const Int_t nx = 8;; string os_X[nx] = {""8"",""32"",""128"",""512"",""2048"",""8192"",""32768"",""131072""};; float d_35_0[nx] = {0.75, -3.30, -0.92, 0.10, 0.08, -1.69, -1.29, -2.37};; float d_35_1[nx] = {1.01, -3.02, -0.65, 0.37, 0.34, -1.42, -1.02, -2.10};. auto cb = new TCanvas(""cb"",""cb"",600,400);; cb->SetGrid();. gStyle->SetHistMinimumZero();. auto h1b = new TH1F(""h1b"",""Option B example"",nx,0,nx);; h1b->SetFillColor(4);; h1b->SetBarWidth(0.4);; h1b->SetBarOffset(0.1);; h1b->SetStats(0);; h1b->SetMinimum(-5);; h1b->SetMaximum(5);. for (i=1; i<=nx; i++) {; h1b->SetBinContent(i, d_35_0[i-1]);; h1b->GetXaxis()->SetBinLabel(i,os_X[i-1].c_str());; }. h1b->Draw(""b"");. auto h2b = new TH1F(""h2b"",""h2b"",nx,0,nx);; h2b-",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:51149,Usability,simpl,simple,51149,"; distribution). Candle plots like these are usually called ""notched candle plots"". In case the significance of the median is greater that the size of the box, the; box will have an unnatural shape. Usually it means the chart has not enough data,; or that representing this uncertainty is not useful. ##### The Mean; The mean can be drawn as a dashed line or as a circle or not drawn at all.; The mean is the arithmetic average of the values in the distribution.; It is calculated using GetMean(). Because histograms are; binned data, the mean value can differ from a calculation on the raw-data.; If the distribution is large enough and gaussian shaped the mean will be; exactly the median. ##### The Whiskers; The whiskers represent the part of the distribution not covered by the box.; The upper 25% and the lower 25% of the distribution are located within the whiskers.; Two representations are available. - A simple one (using w=1) defining the lower whisker from the lowest data value; to the bottom of the box, and the upper whisker from the top of the box to the; highest data value. In this representation the whisker-lines are dashed.; - A more complex one having a further restriction. The whiskers are still connected; to the box but their length cannot exceed \f$ 1.5\times iqr \f$. So it might; be that the outermost part of the underlying distribution will not be covered; by the whiskers. Usually these missing parts will be represented by the outliers; (see points). Of course the upper and the lower whisker may differ in length.; In this representation the whiskers are drawn as solid lines. \since **ROOT version 6.11/01**. Using the static function TCandle::SetWhiskerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the distribution inside; that candle. The static function will affect all candle-charts in the running program.; D",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:58746,Usability,simpl,simple,58746,"be; scaled with respect to each other, the maximum height can be influenced by SetBarWidth().; Deactivated, the height of the bin with the maximum content of each individual violin is; set to a constant value using SetBarWidth(). The static function will affect all violin-charts; in the running program. Default is true. Scaling between multiple violin-charts; (using ""same"" or THStack) is not supported, yet. ##### The zero indicator line; Typical for violin charts is a line in the background over the whole histogram indicating; the bins with zero entries. The zero indicator line can be activated with z=1. The line color; will always be the same as the fill-color of the histogram. ##### The Mean; The Mean is illustrated with the same mechanism as used for candle plots. Usually a circle is used. ##### Whiskers; The whiskers are illustrated by the same mechanism as used for candle plots. There is only one; difference. When using the simple whisker definition (w=1) and the zero indicator line (z=1), then; the whiskers will be forced to be solid (usually hashed). ##### Points; The points are illustrated by the same mechanism as used for candle plots. E.g. VIOLIN2 uses; better whisker definition (w=2) and outliers (p=1). ##### Other options; It is possible to combine all options of candle or violin plots with each other. E.g. a violin plot; including a box-plot. #### How to use the violin-plots drawing option. There are two predefined violin-plot representations:; - ""VIOLINX1"": Standard violin (histogram, mean, whisker over full distribution,; zero indicator line); - ""VIOLINX2"": Line VIOLINX1 both with better whisker definition + outliers. A solid fill style is recommended for this plot (as opposed to a hollow or; hashed style). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; Int_t nx(6), ny(40);; double xmin(0.0), xmax(+6.0), ymin(0.0), ymax(+4.0);; auto hviolin = new TH2F(""hviolin"", ""Option VIOLIN example"", nx, xmin, xmax, ny, ymin, ymax);; TF1 f1(""f1""",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:83767,Usability,simpl,simple,83767,"----------------------------------------------------------------|; | ""SCAT"" | Draw a scatter plot (legacy draw option).|; | ""COL"" | Draw a color plot. All the bins are painted even the empty bins (default).|; | ""COLZ"" | Same as ""COL"". In addition the color palette is also drawn.|; | ""0"" | When used with any COL options, the empty bins are not drawn.|; | ""TEXT"" | Draw bin contents as text (format set via `gStyle->SetPaintTextFormat`).|; | ""TEXTN"" | Draw bin names as text.|; | ""TEXTnn"" | Draw bin contents as text at angle nn (0 < nn <= 90).|; | ""L"" | Draw the bins boundaries as lines. The lines attributes are the TGraphs ones.|; | ""P"" | Draw the bins boundaries as markers. The markers attributes are the TGraphs ones.|; | ""F"" | Draw the bins boundaries as filled polygons. The filled polygons attributes are the TGraphs ones.|. `TH2Poly` can be drawn as a color plot (option COL). `TH2Poly` bins can have any; shapes. The bins are defined as graphs. The following macro is a very simple; example showing how to book a TH2Poly and draw it. Begin_Macro(source); {; auto ch2p1 = new TCanvas(""ch2p1"",""ch2p1"",600,400);; auto h2p = new TH2Poly();; h2p->SetName(""h2poly_name"");; h2p->SetTitle(""h2poly_title"");; double px1[] = {0, 5, 6};; double py1[] = {0, 0, 5};; double px2[] = {0, -1, -1, 0};; double py2[] = {0, 0, -1, 3};; double px3[] = {4, 3, 0, 1, 2.4};; double py3[] = {4, 3.7, 1, 3.7, 2.5};; h2p->AddBin(3, px1, py1);; h2p->AddBin(4, px2, py2);; h2p->AddBin(5, px3, py3);; h2p->Fill(0.1, 0.01, 3);; h2p->Fill(-0.5, -0.5, 7);; h2p->Fill(-0.7, -0.5, 1);; h2p->Fill(1, 3, 1.5);; double fx[] = {0.1, -0.5, -0.7, 1};; double fy[] = {0.01, -0.5, -0.5, 3};; double fw[] = {3, 1, 1, 1.5};; h2p->FillN(4, fx, fy, fw);; h2p->Draw(""col"");; }; End_Macro. Rectangular bins are a frequent case. The special version of; the `AddBin` method allows to define them more easily like; shown in the following example (th2polyBoxes.C). Begin_Macro(source); ../../../tutorials/hist/th2polyBoxes.C; End_Macro. One `",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:98176,Usability,simpl,simply,98176,"2->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");; }; End_Macro. \anchor HP27; ### Drawing of 3D implicit functions. 3D implicit functions (`TF3`) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",600,400);; auto f3 = new TF3(""f3"",""sin(x*x+y*y+z*z-36)"",-2,2,-2,2,-2,2);; f3->SetClippingBoxOn(0,0,0);; f3->SetFillColor(30);; f3->SetLineColor(15);; f3->Draw(""FBBB"");; }; End_Macro. \anchor HP28; ### Associated functions drawing. An associated function is created by `TH1::Fit`. More than on fitted; function can be associated with one histogram (see `TH1::Fit`). A `TF1` object `f1` can be added to the list of associated; functions of an histogram `h` without calling `TH1::Fit`; simply doing:. h->GetListOfFunctions()->Add(f1);. or. h->GetListOfFunctions()->Add(f1,someoption);. To retrieve a function by name from this list, do:. TF1 *f1 = (TF1*)h->GetListOfFunctions()->FindObject(name);. or. TF1 *f1 = h->GetFunction(name);. Associated functions are automatically painted when an histogram is drawn.; To avoid the painting of the associated functions the option `HIST`; should be added to the list of the options used to paint the histogram. \anchor HP29; ### Drawing using OpenGL. The class `TGLHistPainter` allows to paint data set using the OpenGL 3D; graphics library. The plotting options start with `GL` keyword.; In addition, in order to inform canvases that OpenGL should be used to render; 3D representations, the following option should be set:. gStyle->SetCanvasPreferGL(true);. \anchor HP29a; #### General information: plot types and supported options. The following types of plots are provided:. For lego plots ",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:107244,Usability,simpl,simplified,107244," - when selected object (histogram as a whole) is different from previous; then emit `Picked()` signal; - when selected (highlighted) bin from histogram is different from previous; then emit `Highlighted()` signal. Any user function (or functions) has to be defined; `UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)`.; In example (see below) has name `PrintInfo()`. All parameters of user; function are taken from. void TCanvas::Highlighted(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y). - `pad` is pointer to pad with highlighted histogram; - `obj` is pointer to highlighted histogram; - `x` is highlighted x bin for 1D histogram; - `y` is highlighted y bin for 2D histogram (for 1D histogram not in use). Example how to create a connection from any `TCanvas` object to a user; `UserFunction()` slot (see also `TQObject::Connect()` for additional info). TQObject::Connect(""TCanvas"", ""Highlighted(TVirtualPad*,TObject*,Int_t,Int_t)"",; 0, 0, ""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. or use non-static ""simplified"" function; `TCanvas::HighlightConnect(const char *slot)`. c1->HighlightConnect(""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. NOTE the signal and slot string must have a form; ""(TVirtualPad*,TObject*,Int_t,Int_t)"". root [0] .x $ROOTSYS/tutorials/hsimple.C; root [1] hpx->SetHighlight(kTRUE); root [2] .x hlprint.C. file `hlprint.C`; ~~~ {.cpp}; void PrintInfo(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y); {; auto h = (TH1F *)obj;; if (!h->IsHighlight()) // after highlight disabled; h->SetTitle(""highlight disable"");; else; h->SetTitle(TString::Format(""bin[%03d] (%5.2f) content %g"", x,; h->GetBinCenter(x), h->GetBinContent(x)));; pad->Update();; }. void hlprint(); {; if (!gPad) return;; gPad->GetCanvas()->HighlightConnect(""PrintInfo(TVirtualPad*,TObject*,Int_t,Int_t)"");; }; ~~~. \image html hlsimple.gif ""Highlight mode and simple user function"". For more complex demo please see for example `$ROOTSYS/tutorials/tree/temperature.C` file. */",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:108096,Usability,simpl,simple,108096," - when selected object (histogram as a whole) is different from previous; then emit `Picked()` signal; - when selected (highlighted) bin from histogram is different from previous; then emit `Highlighted()` signal. Any user function (or functions) has to be defined; `UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)`.; In example (see below) has name `PrintInfo()`. All parameters of user; function are taken from. void TCanvas::Highlighted(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y). - `pad` is pointer to pad with highlighted histogram; - `obj` is pointer to highlighted histogram; - `x` is highlighted x bin for 1D histogram; - `y` is highlighted y bin for 2D histogram (for 1D histogram not in use). Example how to create a connection from any `TCanvas` object to a user; `UserFunction()` slot (see also `TQObject::Connect()` for additional info). TQObject::Connect(""TCanvas"", ""Highlighted(TVirtualPad*,TObject*,Int_t,Int_t)"",; 0, 0, ""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. or use non-static ""simplified"" function; `TCanvas::HighlightConnect(const char *slot)`. c1->HighlightConnect(""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. NOTE the signal and slot string must have a form; ""(TVirtualPad*,TObject*,Int_t,Int_t)"". root [0] .x $ROOTSYS/tutorials/hsimple.C; root [1] hpx->SetHighlight(kTRUE); root [2] .x hlprint.C. file `hlprint.C`; ~~~ {.cpp}; void PrintInfo(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y); {; auto h = (TH1F *)obj;; if (!h->IsHighlight()) // after highlight disabled; h->SetTitle(""highlight disable"");; else; h->SetTitle(TString::Format(""bin[%03d] (%5.2f) content %g"", x,; h->GetBinCenter(x), h->GetBinContent(x)));; pad->Update();; }. void hlprint(); {; if (!gPad) return;; gPad->GetCanvas()->HighlightConnect(""PrintInfo(TVirtualPad*,TObject*,Int_t,Int_t)"");; }; ~~~. \image html hlsimple.gif ""Highlight mode and simple user function"". For more complex demo please see for example `$ROOTSYS/tutorials/tree/temperature.C` file. */",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:320,Usability,simpl,simple,320,"////////////////////////////////////////////////////////////////////////////////; /// Compute the distance from the point px,py to a line.; ///; /// Compute the closest distance of approach from point px,py to elements of; /// an histogram. The distance is computed in pixels units.; ///; /// Algorithm: Currently, this simple model computes the distance from the mouse; /// to the histogram contour only.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:64,Integrability,rout,routine,64,"// might resize pad pixmap so should be called before any paint routine",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:13,Deployability,release,released,13,"// button is released",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Testability,test,testing,3,"// testing specific possibility (after zoom, draw with ""same"", log, etc.)",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:63,Testability,log,log,63,"// testing specific possibility (after zoom, draw with ""same"", log, etc.)",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// [Control routine to paint any kind of histograms](\ref HP00)",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26,Testability,test,test,26,"// Draw the grid only; // test for options BAR or HBAR",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:28,Availability,error,error,28,"// do not draw histogram if error bars required",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:12,Availability,error,error,12,"// test for error bars or option E",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Testability,test,test,3,"// test for error bars or option E",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Testability,test,test,3,"// test for associated function",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:628,Testability,log,log,628,"////////////////////////////////////////////////////////////////////////////////; /// Returns the rendering regions for an axis to use in the COL2 option; ///; /// The algorithm analyses the size of the axis compared to the size of; /// the rendering region. It figures out the boundaries to use for each color; /// of the rendering region. Only one axis is computed here.; ///; /// This allows for a single computation of the boundaries before iterating; /// through all of the bins.; ///; /// \param pAxis the axis to consider; /// \param nPixels the number of pixels to render axis into; /// \param isLog whether the axis is log scale",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:24,Availability,error,error,24,"// this should cause an error if we have",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Testability,log,logarithmic,3,"// logarithmic plot. we find the pixel for the bin; // pixel = eta * log10(V) - alpha; // where eta = nPixels/(log10(Vmax)-log10(Vmin)); // and alpha = nPixels*log10(Vmin)/(log10(Vmax)-log10(Vmin)); // and V is axis value",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:19,Usability,simpl,simply,19,"// linear plot. we simply need to find the appropriate bin; // for the",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:19,Usability,simpl,simply,19,"// linear plot. we simply need to find the appropriate bin; // for the",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:2,Testability,test,tested,2,"//tested in ExecuteEvent",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:106,Availability,error,error,106,"////////////////////////////////////////////////////////////////////////////////; /// [Draw 1D histograms error bars.](\ref HP09)",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:29,Availability,error,error,29,"// compute the offset of the error bars due to the symbol size",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:47,Availability,error,error,47,"// compute size of the lines at the end of the error bars",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6,Availability,error,errormarker,6,"// if errormarker = 0 or symbolsize = 0. no symbol is drawn",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:114,Availability,error,error,114,"// get the data; // xp = X position of the current point; // yp = Y position of the current point; // ex1 = Low X error; // ex2 = Up X error; // ey1 = Low Y error; // ey2 = Up Y error; // (xi,yi) = Error bars coordinates; // apply offset on errors for bar histograms",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:135,Availability,error,error,135,"// get the data; // xp = X position of the current point; // yp = Y position of the current point; // ex1 = Low X error; // ex2 = Up X error; // ey1 = Low Y error; // ey2 = Up Y error; // (xi,yi) = Error bars coordinates; // apply offset on errors for bar histograms",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:157,Availability,error,error,157,"// get the data; // xp = X position of the current point; // yp = Y position of the current point; // ex1 = Low X error; // ex2 = Up X error; // ey1 = Low Y error; // ey2 = Up Y error; // (xi,yi) = Error bars coordinates; // apply offset on errors for bar histograms",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:178,Availability,error,error,178,"// get the data; // xp = X position of the current point; // yp = Y position of the current point; // ex1 = Low X error; // ex2 = Up X error; // ey1 = Low Y error; // ey2 = Up Y error; // (xi,yi) = Error bars coordinates; // apply offset on errors for bar histograms",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:198,Availability,Error,Error,198,"// get the data; // xp = X position of the current point; // yp = Y position of the current point; // ex1 = Low X error; // ex2 = Up X error; // ey1 = Low Y error; // ey2 = Up Y error; // (xi,yi) = Error bars coordinates; // apply offset on errors for bar histograms",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:241,Availability,error,errors,241,"// get the data; // xp = X position of the current point; // yp = Y position of the current point; // ex1 = Low X error; // ex2 = Up X error; // ey1 = Low Y error; // ey2 = Up Y error; // (xi,yi) = Error bars coordinates; // apply offset on errors for bar histograms",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:12,Testability,LOG,LOG,12,"// take the LOG if necessary",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:11,Availability,error,error,11,"// test if error bars are not outside the limits; // otherwise they are truncated",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Testability,test,test,3,"// test if error bars are not outside the limits; // otherwise they are truncated",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:97,Availability,error,error,97,"// test if the marker is on the frame limits. If ""Yes"", the; // marker will not be drawn and the error bars will be readjusted.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Testability,test,test,3,"// test if the marker is on the frame limits. If ""Yes"", the; // marker will not be drawn and the error bars will be readjusted.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:12,Availability,error,error,12,"// draw the error rectangles",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:12,Availability,error,error,12,"// draw the error bars",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:31,Availability,error,error,31,"// draw line at the end of the error bars",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:105,Availability,error,errors,105,"////////////////////////////////////////////////////////////////////////////////; /// Draw 2D histograms errors.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:13,Availability,Error,Errors,13,"// Paint the Errors",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:106,Usability,clear,clear,106,"////////////////////////////////////////////////////////////////////////////////; /// Calculate range and clear pad (canvas).",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:71,Integrability,depend,depends,71,"//The next statement is always executed on non-iOS platform,; //on iOS depends on pad mode.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:71,Integrability,depend,depends,71,"//The next statement is ALWAYS executed on non-iOS platform, on iOS it depends on pad's mode; //and picked object.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// [Control routine to draw 1D histograms](\ref HP01b)",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:10,Testability,LOG,LOGX,10,"// Option LOGX",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:135,Integrability,rout,routines,135,"////////////////////////////////////////////////////////////////////////////////; /// Compute histogram parameters used by the drawing routines.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6,Testability,log,log,6,"// if log scale in X, replace xmin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:46,Testability,log,log,46,"// if log scale in X, replace xmin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22,Testability,log,log,22,"// empty histogram in log scale",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:7,Testability,log,log,7,"// For log scales, histogram coordinates are LOG10(ymin) and; // LOG10(ymax). Final adjustment (if not option ""Same""; // or ""+"" for ymax) of ymax and ymin for logarithmic scale, if; // Maximum and Minimum are not defined.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:159,Testability,log,logarithmic,159,"// For log scales, histogram coordinates are LOG10(ymin) and; // LOG10(ymax). Final adjustment (if not option ""Same""; // or ""+"" for ymax) of ymax and ymin for logarithmic scale, if; // Maximum and Minimum are not defined.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:135,Integrability,rout,routines,135,"////////////////////////////////////////////////////////////////////////////////; /// Compute histogram parameters used by the drawing routines for a rotated pad.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6,Testability,log,log,6,"// if log scale in Y, replace ymin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:46,Testability,log,log,46,"// if log scale in Y, replace ymin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:7,Testability,log,log,7,"// For log scales, histogram coordinates are LOG10(ymin) and; // LOG10(ymax). Final adjustment (if not option ""Same""; // or ""+"" for ymax) of ymax and ymin for logarithmic scale, if; // Maximum and Minimum are not defined.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:159,Testability,log,logarithmic,159,"// For log scales, histogram coordinates are LOG10(ymin) and; // LOG10(ymax). Final adjustment (if not option ""Same""; // or ""+"" for ymax) of ymax and ymin for logarithmic scale, if; // Maximum and Minimum are not defined.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,Deployability,update,update,3,"// update raster screen",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:2,Safety,avoid,avoid,2,"//avoid drawing with black",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:10,Testability,LOG,LOG,10,"// Option LOG is required ?",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:32,Modifiability,variab,variable,32,"// Set Axis attributes.; // The variable SCALE rescales the VSIZ; // in order to have the same label size for all angles.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:79,Safety,avoid,avoid,79,"// use an independent instance of a random generator; // instead of gRandom to avoid conflicts and; // to get same random numbers when drawing the same histogram",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:260,Integrability,depend,dependency,260,"////////////////////////////////////////////////////////////////////////////////; /// Static function to paint special objects like vectors and matrices.; /// This function is called via `gROOT->ProcessLine` to paint these objects; /// without having a direct dependency of the graphics or histogramming; /// system.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:50,Integrability,depend,depends,50,"//ALWAYS executed on non-iOS platform.; //On iOS, depends on mode.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:79,Safety,avoid,avoid,79,"// use an independent instance of a random generator; // instead of gRandom to avoid conflicts and; // to get same random numbers when drawing the same histogram",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:94,Integrability,message,message,94,"////////////////////////////////////////////////////////////////////////////////; /// Process message `mess`.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:546,Energy Efficiency,Green,Greenland,546,"////////////////////////////////////////////////////////////////////////////////; /// Static function; ///; /// Probably the most famous of the various map projections, the Mercator projection; /// takes its name from Mercator who presented it in 1569. It is a cylindrical, conformal projection; /// with no distortion along the equator.; /// The Mercator projection has been used extensively for world maps in which the distortion towards; /// the polar regions grows rather large, thus incorrectly giving the impression that, for example,; /// Greenland is larger than South America. In reality, the latter is about eight times the size of; /// Greenland. Also, the Former Soviet Union looks much bigger than Africa or South America. One may wonder; /// whether this illusion has had any influence on U.S. foreign policy.' (Source: GMT); /// code from Ernst-Jan Buis",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:647,Energy Efficiency,Green,Greenland,647,"////////////////////////////////////////////////////////////////////////////////; /// Static function; ///; /// Probably the most famous of the various map projections, the Mercator projection; /// takes its name from Mercator who presented it in 1569. It is a cylindrical, conformal projection; /// with no distortion along the equator.; /// The Mercator projection has been used extensively for world maps in which the distortion towards; /// the polar regions grows rather large, thus incorrectly giving the impression that, for example,; /// Greenland is larger than South America. In reality, the latter is about eight times the size of; /// Greenland. Also, the Former Soviet Union looks much bigger than Africa or South America. One may wonder; /// whether this illusion has had any influence on U.S. foreign policy.' (Source: GMT); /// code from Ernst-Jan Buis",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:109,Integrability,rout,routines,109,"// Range() could change the size of the pad pixmap and therefore should; // be called before the other paint routines",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6,Testability,log,log,6,"// if log scale in X, replace xmin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:46,Testability,log,log,46,"// if log scale in X, replace xmin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6,Testability,log,log,6,"// if log scale in Y, replace ymin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:46,Testability,log,log,46,"// if log scale in Y, replace ymin,max by the log",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22,Testability,log,log,22,"// empty histogram in log scale",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:7,Testability,log,log,7,"// For log scales, histogram coordinates are log10(ymin) and; // log10(ymax). Final adjustment (if not option ""Same""); // or ""+"" for ymax) of ymax and ymin for logarithmic scale, if; // Maximum and Minimum are not defined.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:160,Testability,log,logarithmic,160,"// For log scales, histogram coordinates are log10(ymin) and; // log10(ymax). Final adjustment (if not option ""Same""); // or ""+"" for ymax) of ymax and ymin for logarithmic scale, if; // Maximum and Minimum are not defined.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:137,Availability,error,error,137,"////////////////////////////////////////////////////////////////////////////////; /// This function returns the best format to print the error value (e); /// knowing the parameter value (v) and the format (f) used to print it.",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:11,Deployability,patch,patch,11,"// apply a patch from Oliver Freyermuth to set the title in the projection; // using the range of the projected Y values",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:11,Deployability,patch,patch,11,"// apply a patch from Oliver Freyermuth to set the title in the projection; // using the range of the projected X values",MatchSource.CODE_COMMENT,hist/histpainter/src/THistPainter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:709,Energy Efficiency,adapt,adapted,709,"// @(#)root/histpainter:$Id$; // Author: Rene Brun, Evgueni Tcherniaev, Olivier Couet 12/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*! \class TPainter3dAlgorithms; \ingroup Histpainter; \brief The Legos and Surfaces painter class. 3D graphics representations package. This package was originally written by Evgueni Tcherniaev from IHEP/Protvino. The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet; and Evgueni Tcherniaev. This class is a subset of the original system. It has been converted to a C++; class by Rene Brun.; */",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:709,Modifiability,adapt,adapted,709,"// @(#)root/histpainter:$Id$; // Author: Rene Brun, Evgueni Tcherniaev, Olivier Couet 12/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*! \class TPainter3dAlgorithms; \ingroup Histpainter; \brief The Legos and Surfaces painter class. 3D graphics representations package. This package was originally written by Evgueni Tcherniaev from IHEP/Protvino. The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet; and Evgueni Tcherniaev. This class is a subset of the original system. It has been converted to a C++; class by Rene Brun.; */",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:174,Integrability,depend,depending,174,"////////////////////////////////////////////////////////////////////////////////; /// Normal default constructor; ///; /// rmin[3], rmax[3] are the limits of the lego object depending on; /// the selected coordinate system",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear screen",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:302,Availability,error,error,302,"////////////////////////////////////////////////////////////////////////////////; /// Set correspondence between function and color levels; ///; /// \param[in] nl number of levels; /// \param[in] fl function levels; /// \param[in] icl colors for levels; ///; /// \param[out] irep return code (0 OK, -1 error).",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:3,Availability,Error,Error,3,"// Error(where, ""function levels must be in increasing order"");",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:3,Availability,Error,Error,3,"// Error(where, ""negative color index (%d)"", icl[i]);",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:253,Availability,Error,Errors,253,"////////////////////////////////////////////////////////////////////////////////; /// Fill polygon with function values at vertexes; ///; /// \param[in] n number of vertexes; /// \param[in] p polygon; /// \param[in] f function values at nodes; ///; /// Errors:; /// - illegal number of vertexes in polygon; /// - illegal call of FillPolygon: no levels",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:223,Availability,Error,Error,223,"////////////////////////////////////////////////////////////////////////////////; /// Find level lines for face; ///; /// \param[in] np number of nodes; /// \param[in] f face; /// \param[in] t additional function; ///; /// Error: number of points for line not equal 2",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:74,Testability,LOG,LOG,74,"// Compute the cell position in cartesian coordinates; // and compute the LOG if necessary",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate v and tt arrays",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:168,Modifiability,variab,variables,168,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI; 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:246,Modifiability,variab,variable,246,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI; 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:300,Modifiability,variab,variable,300,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI; 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate v and tt arrays",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:174,Modifiability,variab,variables,174,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:252,Modifiability,variab,variable,252,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:306,Modifiability,variab,variable,306,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate v and tt arrays",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:210,Modifiability,variab,variables,210,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:296,Modifiability,variab,variable,296,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:350,Modifiability,variab,variable,350,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate v and tt arrays",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:366,Availability,error,error,366,"////////////////////////////////////////////////////////////////////////////////; /// Set light source; ///; /// \param[in] nl source number: 1 off all light sources, 0 set diffused light; /// \param[in] yl intensity of the light source; /// \param[in] xscr, yscr, zscr direction of the light (in respect of the screen); ///; /// \param[out] irep reply (0 - O.K, -1 error)",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:9,Modifiability,variab,variables,9,/* Local variables */,MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:9,Modifiability,variab,variables,9,/* Local variables */,MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:9,Modifiability,variab,variables,9,/* Local variables */,MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:9,Modifiability,variab,variables,9,/* Local variables */,MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:362,Availability,error,error,362,"////////////////////////////////////////////////////////////////////////////////; /// Set Spectrum; ///; /// \param[in] nl number of levels; /// \param[in] fmin MIN function value; /// \param[in] fmax MAX function value; /// \param[in] ic initial color index (for 1st level); /// \param[in] idc color index increment; ///; /// \param[out] irep reply (0 O.K., -1 error)",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:9,Modifiability,variab,variables,9,/* Local variables */,MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:74,Testability,LOG,LOG,74,"// Compute the cell position in cartesian coordinates; // and compute the LOG if necessary",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:62,Availability,error,errors,62,"// The colors on the surface can represent the content or the errors.; // if (fSumw2.fN) t[i] = gCurrentHist->GetBinError(icx, iyt + iya);; // else t[i] = f[i * 3 + 3];",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:156,Modifiability,variab,variables,156,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI, 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:234,Modifiability,variab,variable,234,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI, 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:288,Modifiability,variab,variable,288,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI, 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:162,Modifiability,variab,variables,162,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:240,Modifiability,variab,variable,240,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:294,Modifiability,variab,variable,294,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:201,Modifiability,variab,variables,201,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:287,Modifiability,variab,variable,287,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:341,Modifiability,variab,variable,341,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:517,Availability,error,error,517,"////////////////////////////////////////////////////////////////////////////////; /// Set surface property coefficients; ///; /// \param[in] qqa diffusion coefficient for diffused light [0.,1.]; /// \param[in] qqd diffusion coefficient for direct light [0.,1.]; /// \param[in] qqs diffusion coefficient for reflected light [0.,1.]; /// \param[in] nnqs power coefficient for reflected light (.GE.1); ///; /// Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); ///; /// \param[out] irep reply (0 - O.K, -1 error)",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:352,Energy Efficiency,power,power,352,"////////////////////////////////////////////////////////////////////////////////; /// Set surface property coefficients; ///; /// \param[in] qqa diffusion coefficient for diffused light [0.,1.]; /// \param[in] qqd diffusion coefficient for direct light [0.,1.]; /// \param[in] qqs diffusion coefficient for reflected light [0.,1.]; /// \param[in] nnqs power coefficient for reflected light (.GE.1); ///; /// Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); ///; /// \param[out] irep reply (0 - O.K, -1 error)",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test edge against face (triangle); ///; /// \param[in] del precision; /// \param[in] xyz nodes; /// \param[in] i1 1-st node of edge; /// \param[in] i2 2-nd node of edge; /// \param[in] iface triangular face; /// \param[in] abcd face plane; ///; /// \param[out] irep 1: edge under face, 0: no decision, +1: edge before face",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:52,Testability,log,logic,52,"// F I N D X - , Y - , Z - C R I T I C A L; // This logic works for parallel projection only.; // For central projection another logic should be implemented.",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:129,Testability,log,logic,129,"// F I N D X - , Y - , Z - C R I T I C A L; // This logic works for parallel projection only.; // For central projection another logic should be implemented.",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:38,Testability,log,logic,38,"// L O O P A L O N G G R I D; // This logic works for both (parallel & central) projections.",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h:33,Availability,mask,masks,33,"///< Indices of subsets of n-bit masks (n is from 1 to 30)",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h:12,Availability,mask,masks,12,"///< Set of masks (30+29+28+...+1)=465; ///@}; ///@{; /// @name Marching Cubes; /// Construction of iso-surfaces, see publication CERN-CN-95-17",MatchSource.CODE_COMMENT,hist/histpainter/src/TPainter3dAlgorithms.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:707,Deployability,Update,Update,707,"////////////////////////////////////////////////////////////////////////////////; /*! \class TPaletteAxis; \ingroup Histpainter; \brief The palette painting class. A `TPaletteAxis` object is used to display the color palette when; drawing 2-d histograms. The `TPaletteAxis` is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many c",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1079,Deployability,Update,Update,1079,"////////////////////////////////////////////////////////////////////////; /*! \class TPaletteAxis; \ingroup Histpainter; \brief The palette painting class. A `TPaletteAxis` object is used to display the color palette when; drawing 2-d histograms. The `TPaletteAxis` is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour ",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1224,Modifiability,inherit,inherits,1224,"rawing 2-d histograms. The `TPaletteAxis` is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1316,Modifiability,inherit,inherited,1316,"n when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randoml",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1780,Performance,optimiz,optimization,1780,"tte. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; End_Macro; */; ////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1980,Safety,avoid,avoided,1980,"auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Palette default constructor.",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1603,Testability,log,log,1603," used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randomly; TRandom3 randomNum;; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZa",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:306,Deployability,Update,Update,306,"////////////////////////////////////////////////////////////////////////////////; /// Returns the color index of the bin (i,j).; ///; /// This function should be used after an histogram has been plotted with the; /// option COL or COLZ like in the following example:; ///; /// h2->Draw(""COLZ"");; /// gPad->Update();; /// TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; /// Int_t ci = palette->GetBinColor(20,15);; ///; /// Then it is possible to retrieve the RGB components in the following way:; ///; /// TColor *c = gROOT->GetColor(ci);; /// float x,y,z;; /// c->GetRGB(x,y,z);",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:309,Deployability,Update,Update,309,"////////////////////////////////////////////////////////////////////////////////; /// Returns the color index of the given z value; ///; /// This function should be used after an histogram has been plotted with the; /// option COL or COLZ like in the following example:; ///; /// h2->Draw(""COLZ"");; /// gPad->Update();; /// TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; /// Int_t ci = palette->GetValueColor(30.);; ///; /// Then it is possible to retrieve the RGB components in the following way:; ///; /// TColor *c = gROOT->GetColor(ci);; /// float x,y,z;; /// c->GetRGB(x,y,z);",MatchSource.CODE_COMMENT,hist/histpainter/src/TPaletteAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:222,Usability,Feedback,Feedback,222,"/// \file ROOT/RAxis.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-03-23; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:38,Modifiability,inherit,inheritance-based,38,"/// Virtual destructor needed in this inheritance-based design",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:243,Performance,optimiz,optimized,243,"/// Check if two axis have the same bin borders; ///; /// Default implementation should work for any RAxis type, but is quite; /// inefficient as it does virtual GetBinFrom calls in a loop. RAxis; /// implementations are encouraged to provide optimized overrides for common; /// axis binning comparison scenarios.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:18,Integrability,interface,interfaces,18,"///\name Iterator interfaces; ///\{; /// Get a const_iterator pointing to the first regular bin.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:272,Availability,reliab,reliable,272,"///\}; /// Find the adjusted bin index (returning `kUnderflowBin` for underflow and `kOverflowBin`; /// for overflow) for the given coordinate.; /// \note Passing a bin border coordinate can either return the bin above or; /// below the bin border. I.e. don't do that for reliable results!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:235,Availability,reliab,reliable,235,"/// Find the raw bin index (not adjusted) for the given coordinate.; /// The resulting raw bin is 0-based.; /// \note Passing a bin border coordinate can either return the bin above or; /// below the bin border. I.e. don't do that for reliable results!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:265,Availability,reliab,reliable,265,"/// Find the adjusted bin index (returning `kUnderflowBin` for underflow and; /// `kOverflowBin` for overflow) for the given coordinate.; /// \note Passing a bin border coordinate can either return the bin above or; /// below the bin border. I.e. don't do that for reliable results!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:44,Modifiability,extend,extend,44,"// namespace Internal; /** An axis that can extend its range, keeping the number of its bins unchanged.; The axis is constructed with an initial range. Apart from its ability to; grow, this axis behaves like a RAxisEquidistant.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:120,Modifiability,extend,extends,120,"/// Grow this axis to make the ""virtual bin"" toBin in-range. This keeps the; /// non-affected axis limit unchanged, and extends the other axis limit such; /// that a number of consecutive bins are merged.; ///; /// Example, assuming an initial RAxisGrow with 10 bins from 0. to 1.:; /// - `Grow(0)`: that (virtual) bin spans from -0.1 to 0. To include it; /// in the axis range, the lower limit must be shifted. The minimal number; /// of bins that can be merged is 2, thus the new axis will span from; /// -1. to 1.; /// - `Grow(-1)`: that (virtual) bin spans from -0.2 to 0.1. To include it; /// in the axis range, the lower limit must be shifted. The minimal number; /// of bins that can be merged is 2, thus the new axis will span from; /// -1. to 1.; /// - `Grow(50)`: that (virtual) bin spans from 4.9 to 5.0. To include it; /// in the axis range, the higher limit must be shifted. Five bins need to; /// be merged, making the new axis range 0. to 5.0.; ///; /// \param toBin - the ""virtual"" bin number, as if the axis had an infinite; /// number of bins with the current bin width. For instance, for an axis; /// with ten bins in the range 0. to 1., the coordinate 2.05 has the virtual; /// bin index 20.; /// \return Returns the number of bins that were merged to reach the value.; /// A value of 1 means that no bins were merged (toBin was in the original; /// axis range).",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:78,Modifiability,variab,variable,78,"// namespace Internal; /**; An axis with non-equidistant bins (also known as ""variable binning""). It is; defined by an array of bin borders - one more than the number of; (non-overflow-) bins it has! As an example, an axis with two bin needs three; bin borders:; - lower edge of the first bin;; - higher edge of the first bin, identical to the lower edge of the second; bin;; - higher edge of the second bin. This axis cannot grow; the size of new bins would not be well defined.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:239,Availability,reliab,reliable,239,"/// Find the raw bin index (not adjusted) for the given coordinate `x`.; /// The resulting raw bin is 1-based.; /// \note Passing a bin border coordinate can either return the bin above or; /// below the bin border. I.e. don't do that for reliable results!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:217,Availability,reliab,reliable,217,"/// Find the bin index (adjusted with under- and overflow) for the given coordinate `x`.; /// \note Passing a bin border coordinate can either return the bin above or; /// below the bin border. I.e. don't do that for reliable results!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:24,Modifiability,extend,extended,24,"/// This axis cannot be extended.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:4,Security,Access,Access,4,"/// Access to the bin borders used by this axis.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:767,Security,hash,hashing,767,"// namespace Internal; /**; \class RAxisLabels; A RAxisGrow that has a label assigned to each bin and a bin width of 1. While filling still works through coordinates (i.e. arrays of doubles),; RAxisLabels allows to convert a string to a bin number or the bin's coordinate; center. The number of labels and the number of bins reported by RAxisGrow might; differ: the RAxisGrow will only grow when seeing a Fill(), while the RAxisLabels; will add a new label whenever `GetBinCenter()` is called. Implementation details:; Filling happens often; `GetBinCenter()` needs to be fast. Thus the unordered_map.; The painter needs the reverse: it wants the label for bin 0, bin 1 etc. The axis; should only store the bin labels once; referencing them is (due to re-allocation,; hashing etc) non-trivial. So instead, build a `vector<string_view>` for the few; times the axis needs to be painted.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxis.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:228,Usability,Feedback,Feedback,228,"/// \file ROOT/RAxisConfig.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2020-02-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxisConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:41,Modifiability,config,configure,41,"/**; \class RAxisConfig; Objects used to configure the different axis types. It can store the; properties of all ROOT-provided axis types, together with the type of the axis. TODO: that's what a variant will be invented for!; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxisConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:42,Deployability,configurat,configuration,42,"///< The kind of axis represented by this configuration",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxisConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:42,Modifiability,config,configuration,42,"///< The kind of axis represented by this configuration",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RAxisConfig.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:222,Usability,Feedback,Feedback,222,"/// \file ROOT/RHist.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-03-23; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:51,Security,access,access,51,"/// Pointer type to `HistImpl_t::Fill`, for faster access.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:37,Availability,avail,available,37,"/// Constructor overload that's only available for a 1-dimensional histogram.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:37,Availability,avail,available,37,"/// Constructor overload that's only available for a 1-dimensional histogram,; /// also passing the histogram title.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:37,Availability,avail,available,37,"/// Constructor overload that's only available for a 2-dimensional histogram.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:37,Availability,avail,available,37,"/// Constructor overload that's only available for a 2-dimensional histogram,; /// also passing the histogram title.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:37,Availability,avail,available,37,"/// Constructor overload that's only available for a 3-dimensional histogram.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:37,Availability,avail,available,37,"/// Constructor overload that's only available for a 3-dimensional histogram,; /// also passing the histogram title.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:4,Security,Access,Access,4,"/// Access the ImplBase_t this RHist points to.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:157,Energy Efficiency,efficient,efficient,157,"/// For each coordinate in `xN`, add `weightN[i]` to the bin at coordinate; /// `xN[i]`. The sizes of `xN` and `weightN` must be the same. This is more; /// efficient than many separate calls to `Fill()`.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:157,Energy Efficiency,efficient,efficient,157,"/// For each coordinate in `xN`, add `weightN[i]` to the bin at coordinate; /// `xN[i]`. The sizes of `xN` and `weightN` must be the same. This is more; /// efficient than many separate calls to `Fill()`.; /// Overload for passing initializer lists.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:41,Energy Efficiency,efficient,efficient,41,"/// Swap *this and other.; ///; /// Very efficient; swaps the `fImpl` pointers.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:40,Energy Efficiency,efficient,efficient,40,"/// Swap two histograms.; ///; /// Very efficient; swaps the `fImpl` pointers.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:136,Integrability,depend,depending,136,"/// Make a RHistImpl-derived object reflecting the RAxisConfig array.; ///; /// Delegate to the appropriate MakeNextAxis instantiation, depending on the; /// axis type selected in the RAxisConfig.; /// \param title - title of the derived object.; /// \param axes - `RAxisConfig` objects describing the axis of the resulting; /// RHistImpl.; /// \param processedAxisArgs - the RAxisBase-derived axis objects describing the; /// axes of the resulting RHistImpl. There are `IDIM` of those; in the end; /// (`IDIM` == `GetNDim()`), all `axes` have been converted to; /// `processedAxisArgs` and the RHistImpl constructor can be invoked, passing; /// the `processedAxisArgs`.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:502,Availability,error,error,502,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:134,Deployability,configurat,configuration,134,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:134,Modifiability,config,configuration,134,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:78,Performance,perform,performed,78,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:452,Safety,detect,detected,452,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:22,Deployability,configurat,configuration,22,"// Enforce ""same axis configuration"" policy.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:22,Modifiability,config,configuration,22,"// Enforce ""same axis configuration"" policy.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHist.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBinIter.hxx:229,Usability,Feedback,Feedback,229,"/// \file ROOT/RHistBinIter.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-08-07; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistBinIter.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBinIter.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBinIter.hxx:90,Security,access,access,90,"/**; \class RHistBinRef; Represents a bin reference. Value of the bin iteration. Provides access to bin content, bin geometry (from, to, center), and statistics; (for instance higher moments) associated to the bin.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistBinIter.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBinIter.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBinIter.hxx:22,Security,access,access,22,"///\{; ///\name Value access",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistBinIter.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBinIter.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBufferedFill.hxx:234,Usability,Feedback,Feedback,234,"/// \file ROOT/RHistBufferedFill.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-03; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistBufferedFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBufferedFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBufferedFill.hxx:236,Performance,multi-thread,multi-threaded,236,"// namespace Internal; /** \class RHistBufferedFill; Buffers calls to Fill(). Once the buffer is full, on destruction of when calling Flush(), it sends the; buffers off as an ideally vectorizable FillN() operation. It also serves as a; multi-threaded way of filling the same histogram, reducing the locking; frequency. The HIST template can be either a RHist instance, a RHistImpl instance, or; a RHistLockedFill instance.; **/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistBufferedFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBufferedFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBufferedFill.hxx:3,Integrability,synchroniz,synchronize,3,"// synchronize!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistBufferedFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistBufferedFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx:236,Usability,Feedback,Feedback,236,"/// \file ROOT/RHistConcurrentFill.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-07-03; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistConcurrentFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx:126,Performance,multi-thread,multi-threaded,126,/**; \class RHistConcurrentFiller; Buffers a thread's Fill calls and submits them to the; RHistConcurrentFillManager. Enables multi-threaded filling.; **/,MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistConcurrentFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx:52,Integrability,synchroniz,synchronization,52,"/**; \class RHistConcurrentFillManager; Manages the synchronization of calls to FillN(). The HIST template can be a RHist instance. This class hands out; RHistConcurrentFiller objects that can concurrently fill the histogram. They; buffer calls to Fill() until the buffer is full, and then swap the buffer; with that of the RHistConcurrentFillManager. The manager than fills the; histogram.; **/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistConcurrentFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx:193,Performance,concurren,concurrently,193,"/**; \class RHistConcurrentFillManager; Manages the synchronization of calls to FillN(). The HIST template can be a RHist instance. This class hands out; RHistConcurrentFiller objects that can concurrently fill the histogram. They; buffer calls to Fill() until the buffer is full, and then swap the buffer; with that of the RHistConcurrentFillManager. The manager than fills the; histogram.; **/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistConcurrentFill.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:226,Usability,Feedback,Feedback,226,"/// \file ROOT/RHistData.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-06-14; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:105,Integrability,depend,depending,105,"/// Get a reference to the bin corresponding to `binidx` of the correct bin; /// content array; /// i.e. depending if `binidx` is a regular bin or an under- / overflow bin.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:117,Integrability,depend,depending,117,"/// Get a reference to the bin corresponding to `binidx` of the correct bin; /// content array (non-const); /// i.e. depending if `binidx` is a regular bin or an under- / overflow bin.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:57,Deployability,configurat,configuration,57,"/// Merge with other RHistStatContent, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:57,Modifiability,config,configuration,57,"/// Merge with other RHistStatContent, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:72,Deployability,configurat,configuration,72,"/// Merge with other RHistStatTotalSumOfWeights data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:72,Modifiability,config,configuration,72,"/// Merge with other RHistStatTotalSumOfWeights data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:79,Deployability,configurat,configuration,79,"/// Merge with other RHistStatTotalSumOfSquaredWeights data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:79,Modifiability,config,configuration,79,"/// Merge with other RHistStatTotalSumOfSquaredWeights data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:105,Integrability,depend,depending,105,"/// Get a reference to the bin corresponding to `binidx` of the correct bin; /// content array; /// i.e. depending if `binidx` is a regular bin or an under- / overflow bin.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:117,Integrability,depend,depending,117,"/// Get a reference to the bin corresponding to `binidx` of the correct bin; /// content array (non-const); /// i.e. depending if `binidx` is a regular bin or an under- / overflow bin.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:68,Deployability,configurat,configuration,68,"/// Merge with other `RHistStatUncertainty` data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:68,Modifiability,config,configuration,68,"/// Merge with other `RHistStatUncertainty` data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:112,Deployability,configurat,configuration,112,"// FIXME: Add a way to query the inner data; /// Merge with other RHistDataMomentUncert data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:112,Modifiability,config,configuration,112,"// FIXME: Add a way to query the inner data; /// Merge with other RHistDataMomentUncert data, assuming same bin configuration.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:29,Integrability,Interface,Interface,29,"/** \class RHistStatRuntime; Interface implementing a pure virtual functions `DoFill()`, `DoFillN()`.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:127,Availability,avail,available,127,"/// Calculate the bin content's uncertainty for the given bin, using Poisson; /// statistics on the absolute bin content. Only available if no base provides; /// this functionality. Requires `GetContent()`.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:57,Security,access,accessors,57,"/** \class RHistData; A `RHistImplBase`'s data, provides accessors to all its statistics.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:4,Deployability,Integrat,Integrate,4,"/// Integrate other statistical data into the current data.; ///; /// The implementation assumes that the other statistics were recorded with; /// the same binning configuration, and that the statistics of `OtherData`; /// are a superset of those recorded by the active `RHistData` instance.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:164,Deployability,configurat,configuration,164,"/// Integrate other statistical data into the current data.; ///; /// The implementation assumes that the other statistics were recorded with; /// the same binning configuration, and that the statistics of `OtherData`; /// are a superset of those recorded by the active `RHistData` instance.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:4,Integrability,Integrat,Integrate,4,"/// Integrate other statistical data into the current data.; ///; /// The implementation assumes that the other statistics were recorded with; /// the same binning configuration, and that the statistics of `OtherData`; /// are a superset of those recorded by the active `RHistData` instance.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:164,Modifiability,config,configuration,164,"/// Integrate other statistical data into the current data.; ///; /// The implementation assumes that the other statistics were recorded with; /// the same binning configuration, and that the statistics of `OtherData`; /// are a superset of those recorded by the active `RHistData` instance.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:127,Availability,avail,available,127,"/// Calculate the bin content's uncertainty for the given bin, using Poisson; /// statistics on the absolute bin content. Only available if no base provides; /// this functionality. Requires `GetContent()`.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistData.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:226,Usability,Feedback,Feedback,226,"/// \file ROOT/RHistImpl.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-03-23; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:378,Integrability,interface,interface,378,"/**; \class RHistImplPrecisionAgnosticBase; Base class for `RHistImplBase` that abstracts out the histogram's `PRECISION`. For operations such as painting a histogram, the `PRECISION` (type of the bin; content) is not relevant; painting will cast the underlying bin type to double.; To facilitate this, `RHistImplBase` itself inherits from the; `RHistImplPrecisionAgnosticBase` interface.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:326,Modifiability,inherit,inherits,326,"/**; \class RHistImplPrecisionAgnosticBase; Base class for `RHistImplBase` that abstracts out the histogram's `PRECISION`. For operations such as painting a histogram, the `PRECISION` (type of the bin; content) is not relevant; painting will cast the underlying bin type to double.; To facilitate this, `RHistImplBase` itself inherits from the; `RHistImplPrecisionAgnosticBase` interface.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:86,Usability,Simpl,Simply,86,"/// Number of bins of this histogram, including all overflow and underflow; /// bins. Simply the product of all axes' total number of bins.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:86,Usability,Simpl,Simply,86,"/// Number of bins of this histogram, excluding all overflow and underflow; /// bins. Simply the product of all axes' number of regular bins.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:100,Deployability,configurat,configuration,100,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:27,Integrability,Interface,Interface,27,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:100,Modifiability,config,configuration,100,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:170,Modifiability,inherit,inherits,170,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:133,Security,access,access,133,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:4,Integrability,Interface,Interface,4,"/// Interface function to fill a vector or array of coordinates with; /// corresponding weights.; /// \note the size of `xN` and `weightN` must be the same!",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:4,Integrability,Interface,Interface,4,"/// Interface function to fill a vector or array of coordinates.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:10,Security,access,access,10,"/// Const access to statistics.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:14,Security,access,access,14,"/// Non-const access to statistics.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:207,Integrability,depend,depending,207,"/// Recursively computes zero-based local bin indices, given...; ///; /// - A zero-based global bin index; /// - The number of considered bins on each axis (can be either `GetNBinsNoOver`; /// or `GetNBins` depending on what you are trying to do); /// - A policy of treating all bins as regular (i.e. no negative indices)",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:219,Integrability,depend,depending,219,"/// Recursively computes a zero-based global bin index, given...; ///; /// - A set of zero-based per-axis bin indices; /// - The number of considered bins on each axis (can be either `GetNBinsNoOver`; /// or `GetNBins` depending on what you are trying to do); /// - A policy of treating all bins qs regular (i.e. no negative indices)",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:20,Security,access,access,20,"/// Normalized axes access, converting from actual axis type to base class.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:207,Integrability,depend,depending,207,"/// Computes a zero-based global bin index, given...; ///; /// - A set of zero-based per-axis bin indices; /// - The number of considered bins on each axis (can be either `GetNBinsNoOver`; /// or `GetNBins` depending on what you are trying to do); /// - A policy of treating all bins qs regular (i.e. no negative indices)",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:195,Integrability,depend,depending,195,"/// Computes zero-based local bin indices, given...; ///; /// - A zero-based global bin index; /// - The number of considered bins on each axis (can be either `GetNBinsNoOver`; /// or `GetNBins` depending on what you are trying to do); /// - A policy of treating all bins as regular (i.e. no negative indices)",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:1373,Availability,recover,recover,1373,"-7 3 4 -8; // -9 -10 -11 -12 <- No regular bins on the overflow line of axis 1; //; // As we go to higher dimensions, the geometry becomes more complex, but; // if we replace ""line"" with ""plane"", we get a similar picture in 3D when we; // slide along axis 2:; //; // No regular bins on the Some of them on the No regular bins again; // UF plane of axis 2 regular planes of ax.2 on the OF plane of ax.2; //; // -1 -2 -3 -4 -17 -18 -19 -20 -29 -30 -31 -32; // -5 -6 -7 -8 -21 1 2 -22 -33 -34 -35 -36; // -9 -10 -11 -12 -23 3 4 -24 -37 -37 -39 -40; // -13 -14 -15 -16 -25 -26 -27 -28 -41 -42 -43 -44; //; // We can generalize this to N dimensions by saying that as we slide along; // the last axis of an N-d histogram, we see an hyperplane full of overflow; // bins, then some hyperplanes with regular bins in the ""middle"" surrounded; // by overflow bins, then a last hyperplane full of overflow bins.; //; // From this, we can devise a recursive algorithm to recover the number of; // regular bins before the overflow bin we're currently looking at:; //; // - Start by processing the last histogram axis.; // - Ignore the first and last hyperplane on this axis, which only contain; // underflow and overflow bins respectively.; // - Count how many complete hyperplanes of regular bins lie before us on; // this axis, which we can do indirectly in our overflow bin based; // reasoning by computing the perimeter of the regular region and dividing; // our ""regular"" overflow bin count by that amount.; // - Now we counted previous hyperplanes on this last histogram axis, but; // we need to process the hyperplane that our bin is located in, if any.; // * For this, we reduce our overflow bin count to a count of; // _unaccounted_ overflow bins in the current hyperplane...; // * ...which allows us to recursively continue the computation by; // processing the next (well, previous) histogram axis in the context; // of this hyperplane, in the same manner as above.; //; // Alright, now that the general ",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:2081,Energy Efficiency,reduce,reduce,2081," along axis 2:; //; // No regular bins on the Some of them on the No regular bins again; // UF plane of axis 2 regular planes of ax.2 on the OF plane of ax.2; //; // -1 -2 -3 -4 -17 -18 -19 -20 -29 -30 -31 -32; // -5 -6 -7 -8 -21 1 2 -22 -33 -34 -35 -36; // -9 -10 -11 -12 -23 3 4 -24 -37 -37 -39 -40; // -13 -14 -15 -16 -25 -26 -27 -28 -41 -42 -43 -44; //; // We can generalize this to N dimensions by saying that as we slide along; // the last axis of an N-d histogram, we see an hyperplane full of overflow; // bins, then some hyperplanes with regular bins in the ""middle"" surrounded; // by overflow bins, then a last hyperplane full of overflow bins.; //; // From this, we can devise a recursive algorithm to recover the number of; // regular bins before the overflow bin we're currently looking at:; //; // - Start by processing the last histogram axis.; // - Ignore the first and last hyperplane on this axis, which only contain; // underflow and overflow bins respectively.; // - Count how many complete hyperplanes of regular bins lie before us on; // this axis, which we can do indirectly in our overflow bin based; // reasoning by computing the perimeter of the regular region and dividing; // our ""regular"" overflow bin count by that amount.; // - Now we counted previous hyperplanes on this last histogram axis, but; // we need to process the hyperplane that our bin is located in, if any.; // * For this, we reduce our overflow bin count to a count of; // _unaccounted_ overflow bins in the current hyperplane...; // * ...which allows us to recursively continue the computation by; // processing the next (well, previous) histogram axis in the context; // of this hyperplane, in the same manner as above.; //; // Alright, now that the general plan is sorted out, let's compute some; // quantities that we are going to need, namely the total number of bins per; // hyperplane (overflow and regular) and the number of regular bins per; // hyperplane on the hyperplanes that have them.; //",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:1373,Safety,recover,recover,1373,"-7 3 4 -8; // -9 -10 -11 -12 <- No regular bins on the overflow line of axis 1; //; // As we go to higher dimensions, the geometry becomes more complex, but; // if we replace ""line"" with ""plane"", we get a similar picture in 3D when we; // slide along axis 2:; //; // No regular bins on the Some of them on the No regular bins again; // UF plane of axis 2 regular planes of ax.2 on the OF plane of ax.2; //; // -1 -2 -3 -4 -17 -18 -19 -20 -29 -30 -31 -32; // -5 -6 -7 -8 -21 1 2 -22 -33 -34 -35 -36; // -9 -10 -11 -12 -23 3 4 -24 -37 -37 -39 -40; // -13 -14 -15 -16 -25 -26 -27 -28 -41 -42 -43 -44; //; // We can generalize this to N dimensions by saying that as we slide along; // the last axis of an N-d histogram, we see an hyperplane full of overflow; // bins, then some hyperplanes with regular bins in the ""middle"" surrounded; // by overflow bins, then a last hyperplane full of overflow bins.; //; // From this, we can devise a recursive algorithm to recover the number of; // regular bins before the overflow bin we're currently looking at:; //; // - Start by processing the last histogram axis.; // - Ignore the first and last hyperplane on this axis, which only contain; // underflow and overflow bins respectively.; // - Count how many complete hyperplanes of regular bins lie before us on; // this axis, which we can do indirectly in our overflow bin based; // reasoning by computing the perimeter of the regular region and dividing; // our ""regular"" overflow bin count by that amount.; // - Now we counted previous hyperplanes on this last histogram axis, but; // we need to process the hyperplane that our bin is located in, if any.; // * For this, we reduce our overflow bin count to a count of; // _unaccounted_ overflow bins in the current hyperplane...; // * ...which allows us to recursively continue the computation by; // processing the next (well, previous) histogram axis in the context; // of this hyperplane, in the same manner as above.; //; // Alright, now that the general ",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:252,Usability,simpl,simple,252,"// ...so we need to retrieve and bring back the regular bin count, and this; // is where the fun begins.; //; // The main difficulty is that the number of regular bins is not fixed as; // one slides along a histogram axis. Using a 2D binning case as a simple; // motivating example...; //; // -1 -2 -3 -4 <- No regular bins on the underflow line of axis 1; // -5 1 2 -6 <- Some of them on middle lines of axis 1; // -7 3 4 -8; // -9 -10 -11 -12 <- No regular bins on the overflow line of axis 1; //; // As we go to higher dimensions, the geometry becomes more complex, but; // if we replace ""line"" with ""plane"", we get a similar picture in 3D when we; // slide along axis 2:; //; // No regular bins on the Some of them on the No regular bins again; // UF plane of axis 2 regular planes of ax.2 on the OF plane of ax.2; //; // -1 -2 -3 -4 -17 -18 -19 -20 -29 -30 -31 -32; // -5 -6 -7 -8 -21 1 2 -22 -33 -34 -35 -36; // -9 -10 -11 -12 -23 3 4 -24 -37 -37 -39 -40; // -13 -14 -15 -16 -25 -26 -27 -28 -41 -42 -43 -44; //; // We can generalize this to N dimensions by saying that as we slide along; // the last axis of an N-d histogram, we see an hyperplane full of overflow; // bins, then some hyperplanes with regular bins in the ""middle"" surrounded; // by overflow bins, then a last hyperplane full of overflow bins.; //; // From this, we can devise a recursive algorithm to recover the number of; // regular bins before the overflow bin we're currently looking at:; //; // - Start by processing the last histogram axis.; // - Ignore the first and last hyperplane on this axis, which only contain; // underflow and overflow bins respectively.; // - Count how many complete hyperplanes of regular bins lie before us on; // this axis, which we can do indirectly in our overflow bin based; // reasoning by computing the perimeter of the regular region and dividing; // our ""regular"" overflow bin count by that amount.; // - Now we counted previous hyperplanes on this last histogram axis, but; // we need t",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:27,Integrability,interface,interface,27,"/// \{; /// \name Iterator interface",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistImpl.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistUtils.hxx:227,Usability,Feedback,Feedback,227,"/// \file ROOT/RHistUtils.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2016-06-01; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistUtils.hxx:4,Testability,Log,Log,4,"/// Log channel for Hist diagnostics.",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistUtils.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistUtils.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:226,Usability,Feedback,Feedback,226,"/// \file ROOT/RHistView.hxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-08-06; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistView.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:445,Energy Efficiency,adapt,adaptor,445,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistView.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:675,Integrability,interface,interfaces,675,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistView.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:445,Modifiability,adapt,adaptor,445,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistView.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:239,Usability,simpl,simply,239,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,hist/histv7/inc/ROOT/RHistView.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx:146,Usability,Feedback,Feedback,146,"/// \file histspeedtest.cxx; ///; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>",MatchSource.CODE_COMMENT,hist/histv7/speed/histspeedtest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx:239,Availability,error,error,239,"/* DataTypes:. THistDataContent; THistDataUncertainty; THistDataMomentUncert; THistDataRuntime; and; MyTHistDataNoStat; MyTHistDataContent; MyTHistDataMomentUncert. /opt/build/root_builds/rootcling.cmake/include/ROOT/THistBinIter.h:53:50: error: no member named 'GetUncertainty' in; 'ROOT::Experimental::THistDataContent<2, double, ROOT::Experimental::THistDataDefaultStorage>::TBinStat<double>' auto; GetUncertainty() const { return GetStat().GetUncertainty(); }. new ones (STATCLASSES). THistStatContent; THistStatUncertainty; THistStatTotalSumOfWeights; THistStatTotalSumOfSquaredWeights; THistDataMomentUncert. */",MatchSource.CODE_COMMENT,hist/histv7/speed/histspeedtest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx:39,Availability,failure,failure,39,"// these are copy/paste to work around failure to properly instantiate the template :(",MatchSource.CODE_COMMENT,hist/histv7/speed/histspeedtest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/speed/histspeedtest.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx:217,Usability,Feedback,Feedback,217,"/// \file RAxis.cxx; /// \ingroup HistV7; /// \author Axel Naumann <axel@cern.ch>; /// \date 2015-08-06; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,hist/histv7/src/RAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx:14,Performance,optimiz,optimized,14,"// This is an optimized override for the equidistant-equidistant case,; // fall back to the default implementation if we're not in that case.",MatchSource.CODE_COMMENT,hist/histv7/src/RAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx:18,Availability,failure,failure,18,"// If not, report failure",MatchSource.CODE_COMMENT,hist/histv7/src/RAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx:14,Performance,optimiz,optimized,14,"// This is an optimized override for the irregular-irregular case,; // fall back to the default implementation if we're not in that case.",MatchSource.CODE_COMMENT,hist/histv7/src/RAxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/src/RAxis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx:3,Testability,Test,Test,3,"// Test ""0 + x = x""",MatchSource.CODE_COMMENT,hist/histv7/test/add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx:3,Testability,Test,Test,3,"// Test ""x + 0 = x""",MatchSource.CODE_COMMENT,hist/histv7/test/add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx:3,Testability,Test,Test,3,"// Test ""x + x = 2*x""",MatchSource.CODE_COMMENT,hist/histv7/test/add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx:3,Testability,Test,Test,3,"// Test ""x - x = 0""",MatchSource.CODE_COMMENT,hist/histv7/test/add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx:3,Testability,Test,Test,3,"// Test ""x + y"" with less STAT",MatchSource.CODE_COMMENT,hist/histv7/test/add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx:14,Testability,test,tests,14,"// Implicitly tests ROOT-8485.",MatchSource.CODE_COMMENT,hist/histv7/test/add.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/add.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx:11,Integrability,Wrap,WrappedAtomic,11,"/// \class WrappedAtomic.; /// \brief Provides copy constructor for `atomic` and `+=` even for floats.; ///; /// It provides the operations needed for `Hist` with atomic bin content.",MatchSource.CODE_COMMENT,hist/histv7/test/atomics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx:8,Integrability,wrap,wrapped,8,"/// The wrapped atomic value.",MatchSource.CODE_COMMENT,hist/histv7/test/atomics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx:10,Testability,test,tests,10,/** Basic tests for histograms of integral precision using vector<atomic> storage.; */,MatchSource.CODE_COMMENT,hist/histv7/test/atomics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx:3,Testability,Test,Test,3,"// Test creation of RHistImpl with atomic precision.",MatchSource.CODE_COMMENT,hist/histv7/test/atomics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx:3,Testability,Test,Test,3,"// Test filling of RHistImpl with atomic precision.",MatchSource.CODE_COMMENT,hist/histv7/test/atomics.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/atomics.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:3,Testability,Test,Test,3,"// Test RAxisConfig and conversion to concrete axis types",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:10,Testability,test,test,10,"// Common test items for RAxisBase child classes",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:10,Testability,test,test,10,"// Common test items for RAxisEquidistant child classes",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:211,Testability,test,test,211,"// NOTE: Result of GetBinFrom on underflow bins, GetBinTo on overflow bins and; // GetBinCenter on either is considered unspecified for now. If we do; // ultimately decide to specify this behavior, please add a test here.",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:16,Testability,test,test,16,"// FIXME: Can't test RAxisGrow::Grow() as this method is not implemented.; // Once it's implemented, please factor out commonalities with; // the RAxisLabels test.",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:158,Testability,test,test,158,"// FIXME: Can't test RAxisGrow::Grow() as this method is not implemented.; // Once it's implemented, please factor out commonalities with; // the RAxisLabels test.",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:29,Deployability,configurat,configuration,29,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:52,Deployability,update,updated,52,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:153,Deployability,configurat,configuration,153,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:176,Deployability,update,updated,176,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:29,Modifiability,config,configuration,29,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:153,Modifiability,config,configuration,153,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:208,Testability,test,test,208,"// Notice that the RAxisBase configuration is _not_ updated when new; // labels are added. This is by design, according to the RAxisLabels docs.; // The configuration would be updated on Grow(), but we can't test Grow(); // right now since it isn't implemented yet...",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:16,Testability,test,test,16,"// FIXME: Can't test RAxisGrow::Grow() as this method is not implemented.; // Once it's implemented, please factor out commonalities with; // the RAxisGrow test.; // Now let's add some new bins",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx:156,Testability,test,test,156,"// FIXME: Can't test RAxisGrow::Grow() as this method is not implemented.; // Once it's implemented, please factor out commonalities with; // the RAxisGrow test.; // Now let's add some new bins",MatchSource.CODE_COMMENT,hist/histv7/test/axis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/axis.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/biniter.cxx:3,Testability,Test,Tests,3,"// Tests the number of bins",MatchSource.CODE_COMMENT,hist/histv7/test/biniter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/biniter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/biniter.cxx:3,Testability,Test,Tests,3,"// Tests the bin ref: fill, retrieve.",MatchSource.CODE_COMMENT,hist/histv7/test/biniter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/biniter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:72,Deployability,configurat,configuration,72,"// Generic test that an N-dimensional histogram with a certain axis; // configuration is binned correctly.",MatchSource.CODE_COMMENT,hist/histv7/test/binning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:72,Modifiability,config,configuration,72,"// Generic test that an N-dimensional histogram with a certain axis; // configuration is binned correctly.",MatchSource.CODE_COMMENT,hist/histv7/test/binning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:11,Testability,test,test,11,"// Generic test that an N-dimensional histogram with a certain axis; // configuration is binned correctly.",MatchSource.CODE_COMMENT,hist/histv7/test/binning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:45,Deployability,configurat,configuration,45,"// Build an RHistImpl with the provided axis configuration",MatchSource.CODE_COMMENT,hist/histv7/test/binning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:45,Modifiability,config,configuration,45,"// Build an RHistImpl with the provided axis configuration",MatchSource.CODE_COMMENT,hist/histv7/test/binning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:51,Availability,failure,failure,51,"// Make googletest report the current bin index on failure",MatchSource.CODE_COMMENT,hist/histv7/test/binning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx:25,Performance,concurren,concurrentfill,25,"// Functions for testing concurrentfill",MatchSource.CODE_COMMENT,hist/histv7/test/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx:17,Testability,test,testing,17,"// Functions for testing concurrentfill",MatchSource.CODE_COMMENT,hist/histv7/test/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx:38,Performance,concurren,concurrentfill,38,"// Test consistancy of the hist after concurrentfill",MatchSource.CODE_COMMENT,hist/histv7/test/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx:3,Testability,Test,Test,3,"// Test consistancy of the hist after concurrentfill",MatchSource.CODE_COMMENT,hist/histv7/test/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx:3,Testability,Test,Test,3,"// Test flush and fill manually",MatchSource.CODE_COMMENT,hist/histv7/test/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH.. constructors and especially GetNBins(), GetNDim() and GetBinContent() from RHistImpl.hxx; // Test RH1F constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:106,Testability,Test,Test,106,"// Test RH.. constructors and especially GetNBins(), GetNDim() and GetBinContent() from RHistImpl.hxx; // Test RH1F constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH1D constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH1I constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH1C constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH1LL constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH2F constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH2D constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH2I constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH2C constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH2LL constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH3F constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH3D constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH3I constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH3C constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RH3LL constructor",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RHist constructor with 4 dimensions",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx:3,Testability,Test,Test,3,"// Test RHist constructor with title",MatchSource.CODE_COMMENT,hist/histv7/test/constructors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/constructors.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill(), FillN(), GetEntries(), GetBinContent(), GetBinUncertainty(); // RHist::Fill for 1D; // Test Fill() without weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:103,Testability,Test,Test,103,"// Test Fill(), FillN(), GetEntries(), GetBinContent(), GetBinUncertainty(); // RHist::Fill for 1D; // Test Fill() without weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() without weight and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() without weight and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with NaN and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with NaN and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with NaN and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with NaN and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with NaN and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with NaN and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() with weights and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() with weights and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:26,Testability,Test,Test,26,"// RHist::Fill for 2D; // Test Fill() without weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() without weight and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() without weight and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() with weights and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() with weights and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:26,Testability,Test,Test,26,"// RHist::Fill for 3D; // Test Fill() without weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() without weight and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() without weight and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test Fill() with weight and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() without weights and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() with weights and GetEntries()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() with weights and GetBinContent()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx:3,Testability,Test,Test,3,"// Test FillN() and GetBinUncertainty()",MatchSource.CODE_COMMENT,hist/histv7/test/fill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/fill.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Performance,optimiz,optimization,5,"///< optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Availability,error,error,24,"///< [fNPeaks] array of error values of x positions of 2D peaks, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Availability,error,error,24,"///< [fNPeaks] array of error values of y positions of 2D peaks, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:36,Availability,error,errors,36,"///< [fNPeaks] array of x positions errors of 1D ridges, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:36,Availability,error,errors,36,"///< [fNPeaks] array of y positions errors of 1D ridges, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:35,Availability,error,errors,35,"///< [fNPeaks] array of amplitudes errors of 2D peaks, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:35,Availability,error,errors,35,"///< [fNPeaks] array of amplitudes errors of 1D ridges in x direction, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:35,Availability,error,errors,35,"///< [fNPeaks] array of amplitudes errors of 1D ridges in y direction, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:32,Availability,error,errors,32,"///< [fNPeaks] array of volumes errors of 2D peaks, output parameters",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of sigma x parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of sigma y parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of correlation coefficient",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of t parameter for 2D peaks",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of s parameter for 2D peaks",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of t parameter for 1D ridges in x direction",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of t parameter for 1D ridges in y direction",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of s parameter for 1D ridges in x direction",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of s parameter for 1D ridges in y direction",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of b parameter for 1D ridges in x direction",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of b parameter for 1D ridges in y direction",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of background a0 parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of background ax parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Availability,error,error,5,"///< error value of background ay parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate x positions of 2D peaks (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate y positions of 2D peaks (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate x positions of 1D ridges (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate y positions of 1D ridges (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of sigma x parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of sigma y parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of correlation coefficient, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of t parameter for 2D peaks, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of s parameter for 2D peaks, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of t parameter for 1D ridges in x direction, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of t parameter for 1D ridges in y direction, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of s parameter for 1D ridges in x direction, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of s parameter for 1D ridges in y direction, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of b parameter for 1D ridges in x direction, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of b parameter for 1D ridges in y direction, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of a0 parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of ax parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,Testability,log,logical,5,"///< logical value of ay parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Fit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:36,Modifiability,enhance,enhanced,36,"///< first channel x of filtered or enhanced region",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Transform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:35,Modifiability,enhance,enhanced,35,"///< last channel x of filtered or enhanced region",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Transform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:36,Modifiability,enhance,enhanced,36,"///< first channel y of filtered or enhanced region",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Transform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:35,Modifiability,enhance,enhanced,35,"///< last channel y of filtered or enhanced region",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Transform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:43,Modifiability,enhance,enhanced,43,"///< multiplication coefficient applied in enhanced region;",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrum2Transform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Performance,optimiz,optimization,5,"///< optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:33,Availability,error,errors,33,"///< [fNPeaks] array of position errors",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:34,Availability,error,errors,34,"///< [fNPeaks] array of amplitude errors",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:24,Availability,error,errors,24,"///< [fNPeaks] array of errors of peak areas",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of sigma parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of t parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of b parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of s parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of background a0 parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of background a1 parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Availability,error,error,5,"///< error value of background a2 parameter",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate positions (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:24,Testability,log,logical,24,"///< [fNPeaks] array of logical values which allow to fix appropriate amplitudes (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of sigma parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of t parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of b parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of s parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of a0 parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of a1 parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,Testability,log,logical,5,"///< logical value of a2 parameter, which allows to fix the parameter (not to fit).",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumFit.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h:34,Modifiability,enhance,enhanced,34,"///< first channel of filtered or enhanced region",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumTransform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h:33,Modifiability,enhance,enhanced,33,"///< last channel of filtered or enhanced region",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumTransform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h:43,Modifiability,enhance,enhanced,43,"///< multiplication coefficient applied in enhanced region;",MatchSource.CODE_COMMENT,hist/spectrum/inc/TSpectrumTransform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:738,Energy Efficiency,Efficient,Efficient,738,"/** \class TSpectrum; \ingroup Spectrum; \brief Advanced Spectra Processing; \author Miroslav Morhac. \legacy{TSpectrum, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions for:. - One-dimensional background estimation; - One-dimensional smoothing; - One-dimensional deconvolution; - One-dimensional peak search. The algorithms in this class have been published in the following references:. 1. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; 2. M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; 3. M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:320,Performance,perform,performed,320,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional peak search function; ///; /// This function searches for peaks in source spectrum in hin; /// The number of found peaks and their positions are written into; /// the members fNpeaks and fPositionX.; /// The search is performed in the current histogram range.; ///; /// #### Parameters:; ///; /// - hin: pointer to the histogram of source spectrum; /// - sigma: sigma of searched peaks, for details we refer to manual; /// - threshold: (default=0.05) peaks with amplitude less than; /// threshold*highest_peak are discarded. 0<threshold<1; ///; /// By default, the background is removed before deconvolution.; /// Specify the option ""nobackground"" to not remove the background.; ///; /// By default the ""Markov"" chain algorithm is used.; /// Specify the option ""noMarkov"" to disable this algorithm; /// Note that by default the source spectrum is replaced by a new spectrum; ///; /// By default a polymarker object is created and added to the list of; /// functions of the histogram. The histogram is drawn with the specified; /// option and the polymarker object drawn on top of the histogram.; /// The polymarker coordinates correspond to the npeaks peaks found in; /// the histogram.; ///; /// A pointer to the polymarker object can be retrieved later via:; /// ~~~ {.cpp}; /// TList *functions = hin->GetListOfFunctions();; /// TPolyMarker *pm = (TPolyMarker*)functions->FindObject(""TPolyMarker"");; /// ~~~; /// Specify the option ""goff"" to disable the storage and drawing of the; /// polymarker.; ///; /// To disable the final drawing of the histogram with the search results (in case; /// you want to draw it yourself) specify ""nodraw"" in the options parameter.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:993,Availability,error,error,993,"////////////////////////////////////////////////////////////////; /// This function calculates background spectrum from source spectrum.; /// The result is placed in the vector pointed by spectrum pointer.; /// The goal is to separate the useful information (peaks) from useless; /// information (background).; ///; /// - method is based on Sensitive Nonlinear Iterative Peak (SNIP) clipping; /// algorithm.; /// - new value in the channel ""i"" is calculated; ///; /// \f[; /// v_p(i) = min \left\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Rya",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1043,Availability,error,error,1043,"////////////////////////////////////////////////////////////////; /// This function calculates background spectrum from source spectrum.; /// The result is placed in the vector pointed by spectrum pointer.; /// The goal is to separate the useful information (peaks) from useless; /// information (background).; ///; /// - method is based on Sensitive Nonlinear Iterative Peak (SNIP) clipping; /// algorithm.; /// - new value in the channel ""i"" is calculated; ///; /// \f[; /// v_p(i) = min \left\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Rya",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:5660,Availability,error,error,5660,"d_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of the background is more; /// complex one can employ higher-order clipping filters.; ///; /// Example of the influence of clipping filter difference order on the estimated; /// background for fNnumberIterations=40, 2-nd order red line, 4-th order blue line,; /// 6-th order green line and 8-th order magenta line, and using decreasing; /// clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_order.C; /// End_Macro; ///; /// ### Example 6 script Background_smooth.C:; ///; /// The estimate of the background can be influenced by noise present in the; /// spectrum. We proposed the algorithm of the background estimate with; /// simultaneous smoothing. In the original algorithm without smoothing, the; /// estimated background snatches the lower spikes in the noise. Consequently,; /// the areas of peaks are biased by this error.; ///; /// \image html TSpectrum_Background_smooth1.jpg Principle of background estimation algorithm with simultaneous smoothing.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_smooth.C; /// End_Macro; ///; /// ### Example 8 script Background_compton.C:; ///; /// Sometimes it is necessary to include also the Compton edges into the estimate of; /// the background. This example presents the synthetic spectrum; /// with Compton edges. The background was estimated using the 8-th order filter; /// with the estimation of the Compton edges using decreasing; /// clipping window algorithm (numberIterations=10) with smoothing; /// (smoothingWindow=5).; ///; /// Example of the estimate of the background with Compton edges (red line) for; /// numberIterations=10, 8-th order difference filter, using decreasing clipping; /// window algorithm and smoothing (smoothingWindow=5).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Bac",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3834,Energy Efficiency,green,green,3834,"cro; ///; /// ### Example 2 script Background_decr.C:; ///; /// In Example 1. one can notice that at the edges of the peaks the estimated; /// background goes under the peaks. An alternative approach is to decrease the; /// clipping window from a given value numberIterations to the value of one, which; /// is presented in this example.; ///; /// Example of the estimation of background for numberIterations=6 using; /// decreasing clipping window algorithm. Original spectrum is shown in black; /// color, estimated background in red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_decr.C; /// End_Macro; ///; /// ### Example 3 script Background_width.C:; ///; /// The question is how to choose the width of the clipping window, i.e.,; /// numberIterations parameter. The influence of this parameter on the estimated; /// background is illustrated in Example 3.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=4 (red line), 6 (orange line) 8 (green line) using decreasing; /// clipping window algorithm.; ///; /// in general one should set this parameter so that the value; /// 2*numberIterations+1 was greater than the widths of preserved objects (peaks).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width.C; /// End_Macro; ///; /// ### Example 4 script Background_width2.C:; ///; /// another example for very complex spectrum is given here.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=10 (red line), 20 (blue line), 30 (green line) and; /// 40 (magenta line) using decreasing clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width2.C; /// End_Macro; ///; /// ### Example 5 script Background_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of t",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:4413,Energy Efficiency,green,green,4413,"torials/spectrum/Background_decr.C; /// End_Macro; ///; /// ### Example 3 script Background_width.C:; ///; /// The question is how to choose the width of the clipping window, i.e.,; /// numberIterations parameter. The influence of this parameter on the estimated; /// background is illustrated in Example 3.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=4 (red line), 6 (orange line) 8 (green line) using decreasing; /// clipping window algorithm.; ///; /// in general one should set this parameter so that the value; /// 2*numberIterations+1 was greater than the widths of preserved objects (peaks).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width.C; /// End_Macro; ///; /// ### Example 4 script Background_width2.C:; ///; /// another example for very complex spectrum is given here.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=10 (red line), 20 (blue line), 30 (green line) and; /// 40 (magenta line) using decreasing clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width2.C; /// End_Macro; ///; /// ### Example 5 script Background_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of the background is more; /// complex one can employ higher-order clipping filters.; ///; /// Example of the influence of clipping filter difference order on the estimated; /// background for fNnumberIterations=40, 2-nd order red line, 4-th order blue line,; /// 6-th order green line and 8-th order magenta line, and using decreasing; /// clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_order.C; /// End_Macro; ///; /// ### Example 6 script Background_smooth.C:; ///; /// The estimate of the background can be influenced by noise present ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:5061,Energy Efficiency,green,green,5061,"widths of preserved objects (peaks).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width.C; /// End_Macro; ///; /// ### Example 4 script Background_width2.C:; ///; /// another example for very complex spectrum is given here.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=10 (red line), 20 (blue line), 30 (green line) and; /// 40 (magenta line) using decreasing clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width2.C; /// End_Macro; ///; /// ### Example 5 script Background_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of the background is more; /// complex one can employ higher-order clipping filters.; ///; /// Example of the influence of clipping filter difference order on the estimated; /// background for fNnumberIterations=40, 2-nd order red line, 4-th order blue line,; /// 6-th order green line and 8-th order magenta line, and using decreasing; /// clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_order.C; /// End_Macro; ///; /// ### Example 6 script Background_smooth.C:; ///; /// The estimate of the background can be influenced by noise present in the; /// spectrum. We proposed the algorithm of the background estimate with; /// simultaneous smoothing. In the original algorithm without smoothing, the; /// estimated background snatches the lower spikes in the noise. Consequently,; /// the areas of peaks are biased by this error.; ///; /// \image html TSpectrum_Background_smooth1.jpg Principle of background estimation algorithm with simultaneous smoothing.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_smooth.C; /// End_Macro; ///; /// ### Example 8 script Background_compton.C:; ///; /// Sometimes it is necessary to include also the Compton e",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1513,Modifiability,variab,variable,1513,"t\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1866,Modifiability,variab,variable,1866,"ndow and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 script Background_incr.C:; ///; /// Example of the estimation of background for number of iterations=6.; /// Original spectrum is shown in black color, estimated background in red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_incr.C; /// End_Macro; ///; /// ### Example 2 script Background_decr.C:; ///; /// In Example 1. one can notice that a",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1505,Testability,log,logical,1505,"t\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1858,Testability,log,logical,1858,"ndow and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 script Background_incr.C:; ///; /// Example of the estimation of background for number of iterations=6.; /// Original spectrum is shown in black color, estimated background in red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_incr.C; /// End_Macro; ///; /// ### Example 2 script Background_decr.C:; ///; /// In Example 1. one can notice that a",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:354,Availability,error,error,354,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional markov spectrum smoothing function; ///; /// This function calculates smoothed spectrum from source spectrum based on; /// Markov chain method. The result is placed in the array pointed by source; /// pointer. On successful completion it returns 0. On error it returns pointer; /// to the string describing error.; ///; /// #### Parameters:; ///; /// - source: pointer to the array of source spectrum; /// - ssize: length of source array; /// - averWindow: width of averaging smoothing window; ///; /// The goal of this function is the suppression of the statistical fluctuations.; /// The algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution:; ///; /// \f[; /// U_2 = \frac{p_{1,2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1}...U_2U_1; /// \f]; /// \f$ U_1\f$ being defined from the normalization condition; /// \f$ \sum_{i=1}^{n} U_i=1\f$. \f$ n \f$ is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm 1} = A_i\sum_{k=1}^{m} exp\left[ \frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// #### Reference:; ///; /// 1. Z.K. Silagadze, A new algorithm for automatic photopeak searches.; /// NIM A 376 (1996), 451.; ///; /// ### Example 14 - script Smoothing.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smoothing.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:409,Availability,error,error,409,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional markov spectrum smoothing function; ///; /// This function calculates smoothed spectrum from source spectrum based on; /// Markov chain method. The result is placed in the array pointed by source; /// pointer. On successful completion it returns 0. On error it returns pointer; /// to the string describing error.; ///; /// #### Parameters:; ///; /// - source: pointer to the array of source spectrum; /// - ssize: length of source array; /// - averWindow: width of averaging smoothing window; ///; /// The goal of this function is the suppression of the statistical fluctuations.; /// The algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution:; ///; /// \f[; /// U_2 = \frac{p_{1,2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1}...U_2U_1; /// \f]; /// \f$ U_1\f$ being defined from the normalization condition; /// \f$ \sum_{i=1}^{n} U_i=1\f$. \f$ n \f$ is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm 1} = A_i\sum_{k=1}^{m} exp\left[ \frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// #### Reference:; ///; /// 1. Z.K. Silagadze, A new algorithm for automatic photopeak searches.; /// NIM A 376 (1996), 451.; ///; /// ### Example 14 - script Smoothing.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smoothing.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:752,Usability,simpl,simple,752,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional markov spectrum smoothing function; ///; /// This function calculates smoothed spectrum from source spectrum based on; /// Markov chain method. The result is placed in the array pointed by source; /// pointer. On successful completion it returns 0. On error it returns pointer; /// to the string describing error.; ///; /// #### Parameters:; ///; /// - source: pointer to the array of source spectrum; /// - ssize: length of source array; /// - averWindow: width of averaging smoothing window; ///; /// The goal of this function is the suppression of the statistical fluctuations.; /// The algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution:; ///; /// \f[; /// U_2 = \frac{p_{1,2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1}...U_2U_1; /// \f]; /// \f$ U_1\f$ being defined from the normalization condition; /// \f$ \sum_{i=1}^{n} U_i=1\f$. \f$ n \f$ is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm 1} = A_i\sum_{k=1}^{m} exp\left[ \frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// #### Reference:; ///; /// 1. Z.K. Silagadze, A new algorithm for automatic photopeak searches.; /// NIM A 376 (1996), 451.; ///; /// ### Example 14 - script Smoothing.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smoothing.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:381,Availability,error,error,381,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional deconvolution function; ///; /// This function calculates deconvolution from source spectrum according to; /// response spectrum using Gold deconvolution algorithm. The result is placed; /// in the vector pointed by source pointer. On successful completion it; /// returns 0. On error it returns pointer to the string describing error. If; /// desired after every numberIterations one can apply boosting operation; /// (exponential function with exponent given by boost coefficient) and repeat; /// it numberRepetitions times.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - response: pointer to the vector of response spectrum; /// - ssize: length of source and response spectra; /// - numberIterations, for details we refer to the reference given below; /// - numberRepetitions, for repeated boosted deconvolution; /// - boost, boosting coefficient; ///; /// The goal of this function is the improvement of the resolution in spectra,; /// decomposition of multiplets. The mathematical formulation of; /// the convolution system is:; ///; /// \f[; /// y(i) = \sum_{k=0}^{N-1} h(i-k)x(k), i=0,1,2,...,N-1; /// \f]; ///; /// where h(i) is the impulse response function, x, y are input and output; /// vectors, respectively, N is the length of x and h vectors. In matrix form; /// we have:; /**; \f[; \begin{bmatrix}; y(0) \\; y(1) \\; \dots \\; y(2N-2) \\; y(2N-1); \end{bmatrix}; =; \begin{bmatrix}; h(0) & 0 & 0 & \dots & 0 \\; h(1) & h(0) & 0 & \dots & \dots \\; \dots & h(1) & h(0) & \dots & \dots \\; \dots & \dots & h(1) & \dots & \dots \\; \dots & \dots & \dots & \dots & \dots \\; h(N-1) & \dots & \dots &\dots & 0 \\; 0 & h(N-1) & \dots & \dots & h(0) \\; 0 & 0 & h(N-1) & \dots & h(1) \\; \dots & \dots & \dots & \dots & \dots \\; 0 & 0 & 0 & \dots & h(N-1); \end{bmatrix}; \begin{bmatrix}; x(0) \\; x(1) \\; \dots \\; x(N-1); \end{bmatrix}; \",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:431,Availability,error,error,431,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional deconvolution function; ///; /// This function calculates deconvolution from source spectrum according to; /// response spectrum using Gold deconvolution algorithm. The result is placed; /// in the vector pointed by source pointer. On successful completion it; /// returns 0. On error it returns pointer to the string describing error. If; /// desired after every numberIterations one can apply boosting operation; /// (exponential function with exponent given by boost coefficient) and repeat; /// it numberRepetitions times.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - response: pointer to the vector of response spectrum; /// - ssize: length of source and response spectra; /// - numberIterations, for details we refer to the reference given below; /// - numberRepetitions, for repeated boosted deconvolution; /// - boost, boosting coefficient; ///; /// The goal of this function is the improvement of the resolution in spectra,; /// decomposition of multiplets. The mathematical formulation of; /// the convolution system is:; ///; /// \f[; /// y(i) = \sum_{k=0}^{N-1} h(i-k)x(k), i=0,1,2,...,N-1; /// \f]; ///; /// where h(i) is the impulse response function, x, y are input and output; /// vectors, respectively, N is the length of x and h vectors. In matrix form; /// we have:; /**; \f[; \begin{bmatrix}; y(0) \\; y(1) \\; \dots \\; y(2N-2) \\; y(2N-1); \end{bmatrix}; =; \begin{bmatrix}; h(0) & 0 & 0 & \dots & 0 \\; h(1) & h(0) & 0 & \dots & \dots \\; \dots & h(1) & h(0) & \dots & \dots \\; \dots & \dots & h(1) & \dots & \dots \\; \dots & \dots & \dots & \dots & \dots \\; h(N-1) & \dots & \dots &\dots & 0 \\; 0 & h(N-1) & \dots & \dots & h(0) \\; 0 & 0 & h(N-1) & \dots & h(1) \\; \dots & \dots & \dots & \dots & \dots \\; 0 & 0 & 0 & \dots & h(N-1); \end{bmatrix}; \begin{bmatrix}; x(0) \\; x(1) \\; \dots \\; x(N-1); \end{bmatrix}; \",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:8324,Availability,error,error,8324,"// the unconstrained space of independent variables. From physical point of; /// view we are interested only in a meaningful solution. Therefore, we have to; /// employ regularisation techniques (e.g. Gold deconvolution) and/or to; /// confine the space of allowed solutions to subspace of positive solutions.; ///; /// \image html TSpectrum_Deconvolution_wide3.jpg Fig. 14 The same spectrum like in Fig. 13, outlined bars show the contents of present components (peaks).; /// \image html TSpectrum_Deconvolution_wide4.jpg Fig. 15 Least squares solution of the system of linear equations without regularisation.; ///; /// ### Example 9 - script Deconvolution_wide.C; ///; /// When we employ Gold deconvolution algorithm we obtain the result given in; /// Fig. 16. One can observe that the resulting spectrum is smooth. On the; /// other hand the method is not able to decompose completely the peaks in the; /// spectrum.; ///; /// Example of Gold deconvolution for closely positioned wide peaks. The original; /// source spectrum is drawn with black color, the spectrum after the deconvolution; /// (10000 iterations) with red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution_wide.C; /// End_Macro; ///; /// ### Example 10 - script Deconvolution_wide_boost.C :; ///; /// Further let us employ boosting operation into deconvolution (Fig. 17).; ///; /// The original source spectrum is drawn with black color, the spectrum after; /// the deconvolution with red color. Number of iterations = 200, number of; /// repetitions = 50 and boosting coefficient = 1.2.; ///; /// One can observe that peaks are decomposed practically to delta functions.; /// Number of peaks is correct, positions of big peaks as well as their areas; /// are relatively well estimated. However there is a considerable error in; /// the estimation of the position of small right hand peak.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution_wide_boost.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3765,Energy Efficiency,Efficient,Efficient,3765,",3,...,L; x^{0} = [1,1, ..., 1]^T; \f]; */; /// Where L is given number of iterations (numberIterations parameter).; ///; /// #### Boosted deconvolution:; ///; /// 1. Set the initial solution:; /// \f$ x^{(0)} = [1,1,...,1]^{T} \f$; /// 2. Set required number of repetitions R and iterations L.; /// 3. Set r = 1.; /// 4. Using Gold deconvolution algorithm for k=1,2,...,L find; /// \f$ x^{(L)} \f$; /// 5. If r = R stop calculation, else; ///; /// 1. Apply boosting operation, i.e., set; /// \f$ x^{(0)}(i) = [x^{(L)}(i)]^{p} \f$; /// i=0,1,...N-1 and p is boosting coefficient >0.; /// 2. r = r + 1; /// 3. continue in 4.; ///; /// #### References:; ///; /// 1. Gold R., ANL-6984, Argonne National Laboratories, Argonne Ill, 1964.; /// 2. Coote G.E., Iterative smoothing and deconvolution of one- and two-dimensional; /// elemental distribution data, NIM B 130 (1997) 118.; /// 3. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo: Efficient one- and two-dimensional Gold deconvolution and; /// its application to gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; /// 4. Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 8 - script Deconvolution.C :; ///; /// response function (usually peak) should be shifted left to the first; /// non-zero channel (bin).; ///; /// \image html TSpectrum_Deconvolution2.jpg Principle how the response matrix is composed inside of the Deconvolution function.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution.C; /// End_Macro; ///; /// ### Examples of Gold deconvolution method:; ///; /// First let us study the influence of the number of iterations on the; /// deconvolved spectrum (Fig. 12).; ///; /// \image html TSpectrum_Deconvolution_wide1.jpg Fig. 12 Study of Gold deconvolution algorithm.The original source spectrum is drawn with black color, s",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3950,Energy Efficiency,Efficient,Efficient,3950,")} = [1,1,...,1]^{T} \f$; /// 2. Set required number of repetitions R and iterations L.; /// 3. Set r = 1.; /// 4. Using Gold deconvolution algorithm for k=1,2,...,L find; /// \f$ x^{(L)} \f$; /// 5. If r = R stop calculation, else; ///; /// 1. Apply boosting operation, i.e., set; /// \f$ x^{(0)}(i) = [x^{(L)}(i)]^{p} \f$; /// i=0,1,...N-1 and p is boosting coefficient >0.; /// 2. r = r + 1; /// 3. continue in 4.; ///; /// #### References:; ///; /// 1. Gold R., ANL-6984, Argonne National Laboratories, Argonne Ill, 1964.; /// 2. Coote G.E., Iterative smoothing and deconvolution of one- and two-dimensional; /// elemental distribution data, NIM B 130 (1997) 118.; /// 3. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo: Efficient one- and two-dimensional Gold deconvolution and; /// its application to gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; /// 4. Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 8 - script Deconvolution.C :; ///; /// response function (usually peak) should be shifted left to the first; /// non-zero channel (bin).; ///; /// \image html TSpectrum_Deconvolution2.jpg Principle how the response matrix is composed inside of the Deconvolution function.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution.C; /// End_Macro; ///; /// ### Examples of Gold deconvolution method:; ///; /// First let us study the influence of the number of iterations on the; /// deconvolved spectrum (Fig. 12).; ///; /// \image html TSpectrum_Deconvolution_wide1.jpg Fig. 12 Study of Gold deconvolution algorithm.The original source spectrum is drawn with black color, spectrum after 100 iterations with red color, spectrum after 1000 iterations with blue color, spectrum after 10000 iterations with green color and spectrum after 100000 iterations with magenta color.; ///; //",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:4948,Energy Efficiency,green,green,4948,"1 (1997) 385-408.; /// 4. Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 8 - script Deconvolution.C :; ///; /// response function (usually peak) should be shifted left to the first; /// non-zero channel (bin).; ///; /// \image html TSpectrum_Deconvolution2.jpg Principle how the response matrix is composed inside of the Deconvolution function.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution.C; /// End_Macro; ///; /// ### Examples of Gold deconvolution method:; ///; /// First let us study the influence of the number of iterations on the; /// deconvolved spectrum (Fig. 12).; ///; /// \image html TSpectrum_Deconvolution_wide1.jpg Fig. 12 Study of Gold deconvolution algorithm.The original source spectrum is drawn with black color, spectrum after 100 iterations with red color, spectrum after 1000 iterations with blue color, spectrum after 10000 iterations with green color and spectrum after 100000 iterations with magenta color.; ///; /// For relatively narrow peaks in the above given example the Gold; /// deconvolution method is able to decompose overlapping peaks practically to; /// delta - functions. In the next example we have chosen a synthetic data; /// (spectrum, 256 channels) consisting of 5 very closely positioned, relatively; /// wide peaks (sigma =5), with added noise (Fig. 13). Thin lines represent; /// pure Gaussians (see Table 1); thick line is a resulting spectrum with; /// additive noise (10% of the amplitude of small peaks).; ///; /// \image html TSpectrum_Deconvolution_wide2.jpg Fig. 13 Testing example of synthetic spectrum composed of 5 Gaussians with added noise.; ///; /// | Peak # | Position | Height | Area |; /// |----------|----------|--------|--------|; /// | 1 | 50 | 500 | 10159 |; /// | 2 | 70 | 3000 | 60957 |; /// | 3 | 80 | 1000 | 20319 |; /// | 4 | 100 | 5",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:6542,Modifiability,variab,variables,6542,"e noise (10% of the amplitude of small peaks).; ///; /// \image html TSpectrum_Deconvolution_wide2.jpg Fig. 13 Testing example of synthetic spectrum composed of 5 Gaussians with added noise.; ///; /// | Peak # | Position | Height | Area |; /// |----------|----------|--------|--------|; /// | 1 | 50 | 500 | 10159 |; /// | 2 | 70 | 3000 | 60957 |; /// | 3 | 80 | 1000 | 20319 |; /// | 4 | 100 | 5000 | 101596 |; /// | 5 | 110 | 500 | 10159 |; ///; /// Table 1 Positions, heights and areas of peaks in the spectrum shown in Fig. 13.; ///; /// In ideal case, we should obtain the result given in Fig. 14. The areas of; /// the Gaussian components of the spectrum are concentrated completely to; /// delta-functions. When solving the overdetermined system of linear equations; /// with data from Fig. 13 in the sense of minimum least squares criterion; /// without any regularisation we obtain the result with large oscillations; /// (Fig. 15). From mathematical point of view, it is the optimal solution in; /// the unconstrained space of independent variables. From physical point of; /// view we are interested only in a meaningful solution. Therefore, we have to; /// employ regularisation techniques (e.g. Gold deconvolution) and/or to; /// confine the space of allowed solutions to subspace of positive solutions.; ///; /// \image html TSpectrum_Deconvolution_wide3.jpg Fig. 14 The same spectrum like in Fig. 13, outlined bars show the contents of present components (peaks).; /// \image html TSpectrum_Deconvolution_wide4.jpg Fig. 15 Least squares solution of the system of linear equations without regularisation.; ///; /// ### Example 9 - script Deconvolution_wide.C; ///; /// When we employ Gold deconvolution algorithm we obtain the result given in; /// Fig. 16. One can observe that the resulting spectrum is smooth. On the; /// other hand the method is not able to decompose completely the peaks in the; /// spectrum.; ///; /// Example of Gold deconvolution for closely positioned wide peak",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:5604,Testability,Test,Testing,5604,"ectrum (Fig. 12).; ///; /// \image html TSpectrum_Deconvolution_wide1.jpg Fig. 12 Study of Gold deconvolution algorithm.The original source spectrum is drawn with black color, spectrum after 100 iterations with red color, spectrum after 1000 iterations with blue color, spectrum after 10000 iterations with green color and spectrum after 100000 iterations with magenta color.; ///; /// For relatively narrow peaks in the above given example the Gold; /// deconvolution method is able to decompose overlapping peaks practically to; /// delta - functions. In the next example we have chosen a synthetic data; /// (spectrum, 256 channels) consisting of 5 very closely positioned, relatively; /// wide peaks (sigma =5), with added noise (Fig. 13). Thin lines represent; /// pure Gaussians (see Table 1); thick line is a resulting spectrum with; /// additive noise (10% of the amplitude of small peaks).; ///; /// \image html TSpectrum_Deconvolution_wide2.jpg Fig. 13 Testing example of synthetic spectrum composed of 5 Gaussians with added noise.; ///; /// | Peak # | Position | Height | Area |; /// |----------|----------|--------|--------|; /// | 1 | 50 | 500 | 10159 |; /// | 2 | 70 | 3000 | 60957 |; /// | 3 | 80 | 1000 | 20319 |; /// | 4 | 100 | 5000 | 101596 |; /// | 5 | 110 | 500 | 10159 |; ///; /// Table 1 Positions, heights and areas of peaks in the spectrum shown in Fig. 13.; ///; /// In ideal case, we should obtain the result given in Fig. 14. The areas of; /// the Gaussian components of the spectrum are concentrated completely to; /// delta-functions. When solving the overdetermined system of linear equations; /// with data from Fig. 13 in the sense of minimum least squares criterion; /// without any regularisation we obtain the result with large oscillations; /// (Fig. 15). From mathematical point of view, it is the optimal solution in; /// the unconstrained space of independent variables. From physical point of; /// view we are interested only in a meaningful solution. Therefo",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:393,Availability,error,error,393,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional deconvolution function.; ///; /// This function calculates deconvolution from source spectrum according to; /// response spectrum using Richardson-Lucy deconvolution algorithm. The result; /// is placed in the vector pointed by source pointer. On successful completion; /// it returns 0. On error it returns pointer to the string describing error.; /// If desired after every numberIterations one can apply boosting operation; /// (exponential function with exponent given by boost coefficient) and repeat; /// it numberRepetitions times (see Gold deconvolution).; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - response: pointer to the vector of response spectrum; /// - ssize: length of source and response spectra; /// - numberIterations, for details we refer to the reference given above; /// - numberRepetitions, for repeated boosted deconvolution; /// - boost, boosting coefficient; ///; /// ### Richardson-Lucy deconvolution algorithm:; ///; /// For discrete systems it has the form:; /**; \f[; x^{(n)}(i) = x^{(n-1)}(i) \sum_{j=0}^{N-1}h(i,j)\frac{y(j)}{\sum_{k=0}^{M-1}h(j,k)x^{(n-1)}(k)} \\; i \in \left<0,M-1\right>; \f]; */; /// for positive input data and response matrix this iterative method forces; /// the deconvoluted spectra to be non-negative. The Richardson-Lucy; /// iteration converges to the maximum likelihood solution for Poisson statistics; /// in the data.; ///; /// #### References:; ///; /// 1. Abreu M.C. et al., A four-dimensional deconvolution method to correct NA38; /// experimental data, NIM A 405 (1998) 139.; /// 2. Lucy L.B., A.J. 79 (1974) 745.; /// 3. Richardson W.H., J. Opt. Soc. Am. 62 (1972) 55.; ///; /// ### Examples of Richardson-Lucy deconvolution method:; ///; /// ### Example 11 - script DeconvolutionRL_wide.C :; ///; /// When we employ Richardson-Lucy deconvolution algorithm to our data from; /// F",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:443,Availability,error,error,443,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional deconvolution function.; ///; /// This function calculates deconvolution from source spectrum according to; /// response spectrum using Richardson-Lucy deconvolution algorithm. The result; /// is placed in the vector pointed by source pointer. On successful completion; /// it returns 0. On error it returns pointer to the string describing error.; /// If desired after every numberIterations one can apply boosting operation; /// (exponential function with exponent given by boost coefficient) and repeat; /// it numberRepetitions times (see Gold deconvolution).; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - response: pointer to the vector of response spectrum; /// - ssize: length of source and response spectra; /// - numberIterations, for details we refer to the reference given above; /// - numberRepetitions, for repeated boosted deconvolution; /// - boost, boosting coefficient; ///; /// ### Richardson-Lucy deconvolution algorithm:; ///; /// For discrete systems it has the form:; /**; \f[; x^{(n)}(i) = x^{(n-1)}(i) \sum_{j=0}^{N-1}h(i,j)\frac{y(j)}{\sum_{k=0}^{M-1}h(j,k)x^{(n-1)}(k)} \\; i \in \left<0,M-1\right>; \f]; */; /// for positive input data and response matrix this iterative method forces; /// the deconvoluted spectra to be non-negative. The Richardson-Lucy; /// iteration converges to the maximum likelihood solution for Poisson statistics; /// in the data.; ///; /// #### References:; ///; /// 1. Abreu M.C. et al., A four-dimensional deconvolution method to correct NA38; /// experimental data, NIM A 405 (1998) 139.; /// 2. Lucy L.B., A.J. 79 (1974) 745.; /// 3. Richardson W.H., J. Opt. Soc. Am. 62 (1972) 55.; ///; /// ### Examples of Richardson-Lucy deconvolution method:; ///; /// ### Example 11 - script DeconvolutionRL_wide.C :; ///; /// When we employ Richardson-Lucy deconvolution algorithm to our data from; /// F",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:437,Availability,error,error,437,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional unfolding function; ///; /// This function unfolds source spectrum according to response matrix columns.; /// The result is placed in the vector pointed by source pointer.; /// The coefficients of the resulting vector represent contents of the columns; /// (weights) in the input vector. On successful completion it returns 0. On; /// error it returns pointer to the string describing error. If desired after; /// every numberIterations one can apply boosting operation (exponential; /// function with exponent given by boost coefficient) and repeat it; /// numberRepetitions times. For details we refer to [1].; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - respMatrix: pointer to the matrix of response spectra; /// - ssizex: length of source spectrum and # of rows of the response; /// matrix. ssizex must be >= ssizey.; /// - ssizey: length of destination coefficients and # of columns of the response; /// matrix.; /// - numberIterations: number of iterations; /// - numberRepetitions: number of repetitions for boosted deconvolution.; /// It must be greater or equal to one.; /// - boost: boosting coefficient, applies only if numberRepetitions is; /// greater than one.; ///; /// ### Unfolding:; ///; /// The goal is the decomposition of spectrum to a given set of component spectra.; ///; /// The mathematical formulation of the discrete linear system is:; ///; /// \f[; /// y(i) = \sum_{k=0}^{N_y-1} h(i,k)x(k), i = 0,1,2,...,N_x-1; /// \f]; /**; \f[; \begin{bmatrix}; y(0) \\; y(1) \\; \dots \\; y(N_x-1); \end{bmatrix}; =; \begin{bmatrix}; h(0,0) & h(0,1) & \dots & h(0,N_y-1) \\; h(1,0) & h(1,1) & \dots & h(1,N_y-1) \\; \dots \\; h(N_x-1,0) & h(N_x-1,1) & \dots & h(N_x-1,N_y-1); \end{bmatrix}; \begin{bmatrix}; x(0) \\; x(1) \\; \dots \\; x(N_y-1); \end{bmatrix}; \f]; */; ///; /// #### References:; ///; /// 1. Jandel M., Morhac; M., Kl",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:487,Availability,error,error,487,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional unfolding function; ///; /// This function unfolds source spectrum according to response matrix columns.; /// The result is placed in the vector pointed by source pointer.; /// The coefficients of the resulting vector represent contents of the columns; /// (weights) in the input vector. On successful completion it returns 0. On; /// error it returns pointer to the string describing error. If desired after; /// every numberIterations one can apply boosting operation (exponential; /// function with exponent given by boost coefficient) and repeat it; /// numberRepetitions times. For details we refer to [1].; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - respMatrix: pointer to the matrix of response spectra; /// - ssizex: length of source spectrum and # of rows of the response; /// matrix. ssizex must be >= ssizey.; /// - ssizey: length of destination coefficients and # of columns of the response; /// matrix.; /// - numberIterations: number of iterations; /// - numberRepetitions: number of repetitions for boosted deconvolution.; /// It must be greater or equal to one.; /// - boost: boosting coefficient, applies only if numberRepetitions is; /// greater than one.; ///; /// ### Unfolding:; ///; /// The goal is the decomposition of spectrum to a given set of component spectra.; ///; /// The mathematical formulation of the discrete linear system is:; ///; /// \f[; /// y(i) = \sum_{k=0}^{N_y-1} h(i,k)x(k), i = 0,1,2,...,N_x-1; /// \f]; /**; \f[; \begin{bmatrix}; y(0) \\; y(1) \\; \dots \\; y(N_x-1); \end{bmatrix}; =; \begin{bmatrix}; h(0,0) & h(0,1) & \dots & h(0,N_y-1) \\; h(1,0) & h(1,1) & \dots & h(1,N_y-1) \\; \dots \\; h(N_x-1,0) & h(N_x-1,1) & \dots & h(N_x-1,N_y-1); \end{bmatrix}; \begin{bmatrix}; x(0) \\; x(1) \\; \dots \\; x(N_y-1); \end{bmatrix}; \f]; */; ///; /// #### References:; ///; /// 1. Jandel M., Morhac; M., Kl",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1703,Deployability,continuous,continuous,1703,"ks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),;",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1994,Deployability,continuous,continuous,1994,"elected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),; /// 309-320.; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo.:Identification of peaks in; /// multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; /// 3. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM; /// A 376 (1996), 451.; ///; /// Examples of peak sear",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3637,Energy Efficiency,green,green,3637,"common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),; /// 309-320.; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo.:Identification of peaks in; /// multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; /// 3. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM; /// A 376 (1996), 451.; ///; /// Examples of peak searching method:; ///; /// The SearchHighRes function provides users with the possibility to vary the; /// input parameters and with the access to the output deconvolved data in the; /// destination spectrum. Based on the output data one can tune the parameters.; ///; /// ### Example 15 - script SearchHR1.C:; ///; /// One-dimensional spectrum with found peaks denoted by markers, 3 iterations; /// steps in the deconvolution.; ///; /// #### Script:; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR1.C; /// End_Macro; ///; /// ### Example 16 - script SearchHR3.C:; ///; /// Influence of number of iterations (3-red, 10-blue, 100- green, 1000-magenta),; /// sigma=8, smoothing width=3.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR3.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1126,Modifiability,variab,variable,1126,"This function searches for peaks in source spectrum. It is based on; /// deconvolution method. First the background is removed (if desired), then; /// Markov smoothed spectrum is calculated (if desired), then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1302,Modifiability,variab,variable,1302,"then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image htm",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3225,Performance,tune,tune,3225,"common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),; /// 309-320.; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo.:Identification of peaks in; /// multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; /// 3. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM; /// A 376 (1996), 451.; ///; /// Examples of peak searching method:; ///; /// The SearchHighRes function provides users with the possibility to vary the; /// input parameters and with the access to the output deconvolved data in the; /// destination spectrum. Based on the output data one can tune the parameters.; ///; /// ### Example 15 - script SearchHR1.C:; ///; /// One-dimensional spectrum with found peaks denoted by markers, 3 iterations; /// steps in the deconvolution.; ///; /// #### Script:; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR1.C; /// End_Macro; ///; /// ### Example 16 - script SearchHR3.C:; ///; /// Influence of number of iterations (3-red, 10-blue, 100- green, 1000-magenta),; /// sigma=8, smoothing width=3.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR3.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:2132,Safety,detect,detect,2132,"al variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),; /// 309-320.; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo.:Identification of peaks in; /// multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; /// 3. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM; /// A 376 (1996), 451.; ///; /// Examples of peak searching method:; ///; /// The SearchHighRes function provides users with the possibility to vary the; /// input parameters and with the acc",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3120,Security,access,access,3120,"common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),; /// 309-320.; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo.:Identification of peaks in; /// multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; /// 3. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM; /// A 376 (1996), 451.; ///; /// Examples of peak searching method:; ///; /// The SearchHighRes function provides users with the possibility to vary the; /// input parameters and with the access to the output deconvolved data in the; /// destination spectrum. Based on the output data one can tune the parameters.; ///; /// ### Example 15 - script SearchHR1.C:; ///; /// One-dimensional spectrum with found peaks denoted by markers, 3 iterations; /// steps in the deconvolution.; ///; /// #### Script:; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR1.C; /// End_Macro; ///; /// ### Example 16 - script SearchHR3.C:; ///; /// Influence of number of iterations (3-red, 10-blue, 100- green, 1000-magenta),; /// sigma=8, smoothing width=3.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR3.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1118,Testability,log,logical,1118,"This function searches for peaks in source spectrum. It is based on; /// deconvolution method. First the background is removed (if desired), then; /// Markov smoothed spectrum is calculated (if desired), then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1294,Testability,log,logical,1294,"then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image htm",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:201,Deployability,release,release,201,"////////////////////////////////////////////////////////////////////////////////; /// Old name of SearcHighRes introduced for back compatibility.; /// This function will be removed after the June 2006 release",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// Static function, interface to TSpectrum::Search.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// Static function, interface to TSpectrum::Background.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1409,Availability,avail,available,1409,"ectrum:$Id$; // Author: Miroslav Morhac 17/01/2006; /** \class TSpectrum2; \ingroup Spectrum; \brief Advanced 2-dimensional spectra processing; \author Miroslav Morhac. \legacy{TSpectrum2, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - One-dimensional background estimation functions; - Two-dimensional background estimation functions; - One-dimensional smoothing functions; - Two-dimensional smoothing functions; - One-dimensional deconvolution functions; - Two-dimensional deconvolution functions; - One-dimensional peak search functions; - Two-dimensional peak search functions. The algorithms in this class have been published in the following references:. 1. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; 2. M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; 3. M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. These NIM papers are also available as doc or ps files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html). All the figures in this page were prepared using the DaqProVis; system, Data Acquisition, Processing and Visualization system,; developed at the Institute of Physics, Slovak Academy of Sciences, Bratislava,; Slovakia.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1029,Energy Efficiency,Efficient,Efficient,1029,"ectrum:$Id$; // Author: Miroslav Morhac 17/01/2006; /** \class TSpectrum2; \ingroup Spectrum; \brief Advanced 2-dimensional spectra processing; \author Miroslav Morhac. \legacy{TSpectrum2, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - One-dimensional background estimation functions; - Two-dimensional background estimation functions; - One-dimensional smoothing functions; - Two-dimensional smoothing functions; - One-dimensional deconvolution functions; - Two-dimensional deconvolution functions; - One-dimensional peak search functions; - Two-dimensional peak search functions. The algorithms in this class have been published in the following references:. 1. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; 2. M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; 3. M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. These NIM papers are also available as doc or ps files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html). All the figures in this page were prepared using the DaqProVis; system, Data Acquisition, Processing and Visualization system,; developed at the Institute of Physics, Slovak Academy of Sciences, Bratislava,; Slovakia.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1689,Usability,guid,guides,1689,"ectrum:$Id$; // Author: Miroslav Morhac 17/01/2006; /** \class TSpectrum2; \ingroup Spectrum; \brief Advanced 2-dimensional spectra processing; \author Miroslav Morhac. \legacy{TSpectrum2, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - One-dimensional background estimation functions; - Two-dimensional background estimation functions; - One-dimensional smoothing functions; - Two-dimensional smoothing functions; - One-dimensional deconvolution functions; - Two-dimensional deconvolution functions; - One-dimensional peak search functions; - Two-dimensional peak search functions. The algorithms in this class have been published in the following references:. 1. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; 2. M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; 3. M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. These NIM papers are also available as doc or ps files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html). All the figures in this page were prepared using the DaqProVis; system, Data Acquisition, Processing and Visualization system,; developed at the Institute of Physics, Slovak Academy of Sciences, Bratislava,; Slovakia.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:273,Performance,perform,performed,273,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum in hin; /// The number of found peaks and their positions are written into; /// the members fNpeaks and fPositionX.; /// The search is performed in the current histogram range.; ///; /// Function parameters:; /// - hin: pointer to the histogram of source spectrum; /// - sigma: sigma of searched peaks, for details we refer to manual; /// - threshold: (default=0.05) peaks with amplitude less than; /// threshold*highest_peak are discarded. 0<threshold<1; ///; /// By default, the background is removed before deconvolution.; /// Specify the option ""nobackground"" to not remove the background.; ///; /// By default the ""Markov"" chain algorithm is used.; /// Specify the option ""noMarkov"" to disable this algorithm; /// Note that by default the source spectrum is replaced by a new spectrum; ///; /// By default a polymarker object is created and added to the list of; /// functions of the histogram. The histogram is drawn with the specified; /// option and the polymarker object drawn on top of the histogram.; /// The polymarker coordinates correspond to the npeaks peaks found in; /// the histogram.; /// A pointer to the polymarker object can be retrieved later via:; /// ~~~ {.cpp}; /// TList *functions = hin->GetListOfFunctions();; /// TPolyMarker *pm = (TPolyMarker*)functions->FindObject(""TPolyMarker""); /// ~~~; /// Specify the option ""goff"" to disable the storage and drawing of the; /// polymarker.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:6,Testability,log,logic,6,"//The logic in the loop should be improved to use the fact; //that fPositionX,Y give a precise position inside a bin.; //The current algorithm takes the center of the bin only.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1267,Modifiability,extend,extended,1267,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates smoothed spectrum from source spectrum; /// based on Markov chain method.; /// The result is placed in the array pointed by source pointer.; ///; /// Function parameters:; /// - source-pointer to the array of source spectrum; /// - ssizex-x length of source; /// - ssizey-y length of source; /// - averWindow-width of averaging smoothing window; ///; /// ### Smoothing; ///; /// Goal: Suppression of statistical fluctuations the algorithm is based on discrete; /// Markov chain, which has very simple invariant distribution; /// \f[; /// U_2 = \frac{p_{1.2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2 U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1} ... U_2 U_1; /// \f]; /// \f$U_1\f$ being defined from the normalization condition \f$ \sum_{i=1}^{n} U_i = 1\f$; /// n is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm1} = A_i \sum_{k=1}^{m} exp\left[\frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; /// is the probability of the change of the peak position from channel i to the channel i+1.; /// \f$A_i\f$ is the normalization constant so that\f$ p_{i,i-1}+p_{i,i+1}=1\f$ and m is a width; /// of smoothing window. We have extended this algorithm to two dimensions.; ///; /// #### Reference:; ///; /// [1] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; ///; /// ### Example 4 - Smooth.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smooth.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:605,Usability,simpl,simple,605,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates smoothed spectrum from source spectrum; /// based on Markov chain method.; /// The result is placed in the array pointed by source pointer.; ///; /// Function parameters:; /// - source-pointer to the array of source spectrum; /// - ssizex-x length of source; /// - ssizey-y length of source; /// - averWindow-width of averaging smoothing window; ///; /// ### Smoothing; ///; /// Goal: Suppression of statistical fluctuations the algorithm is based on discrete; /// Markov chain, which has very simple invariant distribution; /// \f[; /// U_2 = \frac{p_{1.2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2 U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1} ... U_2 U_1; /// \f]; /// \f$U_1\f$ being defined from the normalization condition \f$ \sum_{i=1}^{n} U_i = 1\f$; /// n is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm1} = A_i \sum_{k=1}^{m} exp\left[\frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; /// is the probability of the change of the peak position from channel i to the channel i+1.; /// \f$A_i\f$ is the normalization constant so that\f$ p_{i,i-1}+p_{i,i+1}=1\f$ and m is a width; /// of smoothing window. We have extended this algorithm to two dimensions.; ///; /// #### Reference:; ///; /// [1] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; ///; /// ### Example 4 - Smooth.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smooth.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:2029,Energy Efficiency,Efficient,Efficient,2029,"ematical formulation of the 2-dimensional convolution system is; ///; ///\f[; /// y(i_1,i_2) = \sum_{k_1=0}^{N_1-1} \sum_{k_2=0}^{N_2-1} h(i_1-k_1,i_2-k_2)x(k_1,k_2); ///\f]; ///\f[; /// i_1 = 0,1,2, ... ,N_1-1, i_2 = 0,1,2, ... ,N_2-1; ///\f]; ///; /// where h(i,j) is the impulse response function, x, y are input and output; /// matrices, respectively, \f$ N_1, N_2\f$ are the lengths of x and h matrices; ///; /// - let us assume that we know the response and the output matrices (spectra) of the above given system.; /// - the deconvolution represents solution of the overdetermined system of linear equations, i.e., the; /// calculation of the matrix x.; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; /// - the Gold deconvolution algorithm proves to work very well even for 2-dimensional; /// systems. Generalisation of the algorithm for 2-dimensional systems was presented in [1], [2].; /// - for Gold deconvolution algorithm as well as for boosted deconvolution algorithm we refer also to TSpectrum; ///; /// #### References:; ///; /// [1] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:; /// Efficient one- and two-dimensional Gold deconvolution and its application to; /// gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 5 - Deconvolution2_1.c; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_1.C; /// End_Macro; ///; /// ### Example 6 - Deconvolution2_2.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_2.C; /// End_Macro; ///; /// ### Example 7 - Deconvolution2_HR.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_HR.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:2220,Energy Efficiency,Efficient,Efficient,2220,"ematical formulation of the 2-dimensional convolution system is; ///; ///\f[; /// y(i_1,i_2) = \sum_{k_1=0}^{N_1-1} \sum_{k_2=0}^{N_2-1} h(i_1-k_1,i_2-k_2)x(k_1,k_2); ///\f]; ///\f[; /// i_1 = 0,1,2, ... ,N_1-1, i_2 = 0,1,2, ... ,N_2-1; ///\f]; ///; /// where h(i,j) is the impulse response function, x, y are input and output; /// matrices, respectively, \f$ N_1, N_2\f$ are the lengths of x and h matrices; ///; /// - let us assume that we know the response and the output matrices (spectra) of the above given system.; /// - the deconvolution represents solution of the overdetermined system of linear equations, i.e., the; /// calculation of the matrix x.; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; /// - the Gold deconvolution algorithm proves to work very well even for 2-dimensional; /// systems. Generalisation of the algorithm for 2-dimensional systems was presented in [1], [2].; /// - for Gold deconvolution algorithm as well as for boosted deconvolution algorithm we refer also to TSpectrum; ///; /// #### References:; ///; /// [1] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:; /// Efficient one- and two-dimensional Gold deconvolution and its application to; /// gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 5 - Deconvolution2_1.c; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_1.C; /// End_Macro; ///; /// ### Example 6 - Deconvolution2_2.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_2.C; /// End_Macro; ///; /// ### Example 7 - Deconvolution2_HR.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_HR.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1426,Deployability,continuous,continuous,1426,"igma and deconvolution is carried out.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Usually peak finders fail to detect them; /// - resolution, decomposition of doublets and multiplets. The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for identification of peaks in the presence of; /// background",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1781,Deployability,continuous,continuous,1781,"manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Usually peak finders fail to detect them; /// - resolution, decomposition of doublets and multiplets. The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; /// (1996), 451.; ///; /// ### Examples of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary t",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:878,Modifiability,variab,variable,878,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Us",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1051,Modifiability,variab,variable,1051,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Us",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:2978,Performance,tune,tune,2978," in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Usually peak finders fail to detect them; /// - resolution, decomposition of doublets and multiplets. The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; /// (1996), 451.; ///; /// ### Examples of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the access to the output deconvolved data; /// in the destination spectrum. Based on the output data one can tune the; /// parameters.; ///; /// ### Example 8 - Src.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src.C; /// End_Macro; ///; /// ### Example 9 - Src2.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src2.C; /// End_Macro; ///; /// ### Example 10 - Src3.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src3.C; /// End_Macro; ///; /// ### Example 11 - Src4.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src4.C; /// End_Macro; ///; /// ### Example 12 - Src5.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src5.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:2028,Safety,detect,detect,2028,"l variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Usually peak finders fail to detect them; /// - resolution, decomposition of doublets and multiplets. The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; /// (1996), 451.; ///; /// ### Examples of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the access to the output deconvolved data; /// in the destination spectrum. Based on the output data one can tune the; /// parameters.; ///; /// ### Example 8 - Src.C; ///; /// Beg",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:2873,Security,access,access,2873," in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Usually peak finders fail to detect them; /// - resolution, decomposition of doublets and multiplets. The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; /// (1996), 451.; ///; /// ### Examples of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the access to the output deconvolved data; /// in the destination spectrum. Based on the output data one can tune the; /// parameters.; ///; /// ### Example 8 - Src.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src.C; /// End_Macro; ///; /// ### Example 9 - Src2.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src2.C; /// End_Macro; ///; /// ### Example 10 - Src3.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src3.C; /// End_Macro; ///; /// ### Example 11 - Src4.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src4.C; /// End_Macro; ///; /// ### Example 12 - Src5.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Src5.C; /// End_Macro",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:870,Testability,log,logical,870,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Us",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1043,Testability,log,logical,1043,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Us",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:119,Integrability,interface,interface,119,"////////////////////////////////////////////////////////////////////////////////; /// static function (called by TH1), interface to TSpectrum2::Search",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:119,Integrability,interface,interface,119,"////////////////////////////////////////////////////////////////////////////////; /// static function (called by TH1), interface to TSpectrum2::Background",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:769,Energy Efficiency,Efficient,Efficient,769,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum2Fit; \ingroup Spectrum; \brief Advanced 2-dimensional spectra fitting functions; \author Miroslav Morhac. \legacy{TSpectrum2Fit, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class for fitting 2D spectra using AWMI (algorithm without matrix; inversion) and conjugate gradient algorithms for symmetrical; matrices (Stiefel-Hestens method). AWMI method allows to fit; simultaneously 100s up to 1000s peaks. Stiefel method is very stable,; it converges faster, but is more time consuming. The algorithms in this class have been published in the following references:. 1. M. Morhac et al.: Efficient fitting algorithms applied to; analysis of coincidence gamma-ray spectra. Computer Physics; Communications, Vol 172/1 (2005) pp. 19-41. 2. M. Morhac et al.: Study of fitting algorithms applied to; simultaneous analysis of large number of peaks in gamma-ray spectra.; Applied Spectroscopy, Vol. 57, No. 7, pp. 753-760, 2003.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:171,Energy Efficiency,allocate,allocates,171,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); /// the constructor allocates arrays for all fitted parameters (peak positions,; /// amplitudes etc) and sets the member variables to their default values. One; /// can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted; /// peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; /// symmetrical Gaussian ridges as well as non-symmetrical terms and background.; ///; /// \image html spectrum2fit_constructor_image001.gif",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:272,Modifiability,variab,variables,272,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); /// the constructor allocates arrays for all fitted parameters (peak positions,; /// amplitudes etc) and sets the member variables to their default values. One; /// can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted; /// peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; /// symmetrical Gaussian ridges as well as non-symmetrical terms and background.; ///; /// \image html spectrum2fit_constructor_image001.gif",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:333,Modifiability,variab,variables,333,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); /// the constructor allocates arrays for all fitted parameters (peak positions,; /// amplitudes etc) and sets the member variables to their default values. One; /// can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted; /// peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; /// symmetrical Gaussian ridges as well as non-symmetrical terms and background.; ///; /// \image html spectrum2fit_constructor_image001.gif",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:111,Availability,error,error,111,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates error function of x.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:125,Availability,error,error,125,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates derivative of error function of x.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:86,Energy Efficiency,power,power,86,"////////////////////////////////////////////////////////////////////////////////; /// power function",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:727,Energy Efficiency,power,power,727,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters:; /// - xmin, xmax, ymin, ymax - fitting region; /// - numberIterations - # of desired iterations in the fit; /// - alpha - convergence coefficient, it should be positive number and <=1, for details see references; /// - statisticType - type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; /// - alphaOptim - optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal; /// - power - possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function.; /// - fitTaylor - order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:630,Performance,optimiz,optimization,630,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters:; /// - xmin, xmax, ymin, ymax - fitting region; /// - numberIterations - # of desired iterations in the fit; /// - alpha - convergence coefficient, it should be positive number and <=1, for details see references; /// - statisticType - type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; /// - alphaOptim - optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal; /// - power - possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function.; /// - fitTaylor - order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:218,Testability,log,logical,218,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:371,Testability,log,logical,371,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:537,Testability,log,logical,537,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:714,Testability,log,logical,714,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:936,Testability,log,logical,936,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:1148,Testability,log,logical,1148,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:1393,Testability,log,logical,1393,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:1654,Testability,log,logical,1654,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigmaX - initial value of sigma x parameter; /// - fixSigmaX - logical value of sigma x parameter, which allows to fix the parameter (not to fit); /// - sigmaY - initial value of sigma y parameter; /// - fixSigmaY - logical value of sigma y parameter, which allows to fix the parameter (not to fit); /// - ro - initial value of ro parameter (correlation coefficient); /// - fixRo - logical value of ro parameter, which allows to fix the parameter (not to fit); /// - positionInitX - array of initial values of peaks x positions; /// - fixPositionX - array of logical values which allow to fix appropriate x positions (not fit). However they are present in the estimated functional.; /// - positionInitY - array of initial values of peaks y positions; /// - fixPositionY - array of logical values which allow to fix appropriate y positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of 2D peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional; /// - ampInitX1 - array of initial values of amplitudes of 1D ridges in x direction; /// - fixAmpX1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional; /// - ampInitY1 - array of initial values of amplitudes of 1D ridges in y direction; /// - fixAmpY1 - array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:256,Testability,log,logical,256,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of background:; /// - a0Init - initial value of a0 parameter (background is estimated as a0+ax*x+ay*y); /// - fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); /// - axInit - initial value of ax parameter; /// - fixAx - logical value of ax parameter, which allows to fix the parameter (not to fit); /// - ayInit - initial value of ay parameter; /// - fixAy - logical value of ay parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:395,Testability,log,logical,395,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of background:; /// - a0Init - initial value of a0 parameter (background is estimated as a0+ax*x+ay*y); /// - fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); /// - axInit - initial value of ax parameter; /// - fixAx - logical value of ax parameter, which allows to fix the parameter (not to fit); /// - ayInit - initial value of ay parameter; /// - fixAy - logical value of ay parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:534,Testability,log,logical,534,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of background:; /// - a0Init - initial value of a0 parameter (background is estimated as a0+ax*x+ay*y); /// - fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); /// - axInit - initial value of ax parameter; /// - fixAx - logical value of ax parameter, which allows to fix the parameter (not to fit); /// - ayInit - initial value of ay parameter; /// - fixAy - logical value of ay parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:220,Testability,log,logical,220,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:360,Testability,log,logical,360,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:499,Testability,log,logical,499,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:638,Testability,log,logical,638,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:777,Testability,log,logical,777,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:919,Testability,log,logical,919,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:1059,Testability,log,logical,1059,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:1198,Testability,log,logical,1198,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInitXY - initial value of txy parameter; /// - fixTxy - logical value of txy parameter, which allows to fix the parameter (not to fit); /// - tInitX - initial value of tx parameter; /// - fixTx - logical value of tx parameter, which allows to fix the parameter (not to fit); /// - tInitY - initial value of ty parameter; /// - fixTy - logical value of ty parameter, which allows to fix the parameter (not to fit); /// - bInitX - initial value of bx parameter; /// - fixBx - logical value of bx parameter, which allows to fix the parameter (not to fit); /// - bInitY - initial value of by parameter; /// - fixBy - logical value of by parameter, which allows to fix the parameter (not to fit); /// - sInitXY - initial value of sxy parameter; /// - fixSxy - logical value of sxy parameter, which allows to fix the parameter (not to fit); /// - sInitX - initial value of sx parameter; /// - fixSx - logical value of sx parameter, which allows to fix the parameter (not to fit); /// - sInitY - initial value of sy parameter; /// - fixSy - logical value of sy parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:109,Availability,error,errors,109,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the errors of positions of fitted 2D peaks and 1D ridges; /// - positionErrorsX - gets vector of errors of x positions of 2D peaks; /// - positionErrorsY - gets vector of errors of y positions of 2D peaks; /// - positionErrorsX1 - gets vector of errors of x positions of 1D ridges; /// - positionErrorsY1 - gets vector of errors of y positions of 1D ridges",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:202,Availability,error,errors,202,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the errors of positions of fitted 2D peaks and 1D ridges; /// - positionErrorsX - gets vector of errors of x positions of 2D peaks; /// - positionErrorsY - gets vector of errors of y positions of 2D peaks; /// - positionErrorsX1 - gets vector of errors of x positions of 1D ridges; /// - positionErrorsY1 - gets vector of errors of y positions of 1D ridges",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:276,Availability,error,errors,276,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the errors of positions of fitted 2D peaks and 1D ridges; /// - positionErrorsX - gets vector of errors of x positions of 2D peaks; /// - positionErrorsY - gets vector of errors of y positions of 2D peaks; /// - positionErrorsX1 - gets vector of errors of x positions of 1D ridges; /// - positionErrorsY1 - gets vector of errors of y positions of 1D ridges",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:351,Availability,error,errors,351,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the errors of positions of fitted 2D peaks and 1D ridges; /// - positionErrorsX - gets vector of errors of x positions of 2D peaks; /// - positionErrorsY - gets vector of errors of y positions of 2D peaks; /// - positionErrorsX1 - gets vector of errors of x positions of 1D ridges; /// - positionErrorsY1 - gets vector of errors of y positions of 1D ridges",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:427,Availability,error,errors,427,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the errors of positions of fitted 2D peaks and 1D ridges; /// - positionErrorsX - gets vector of errors of x positions of 2D peaks; /// - positionErrorsY - gets vector of errors of y positions of 2D peaks; /// - positionErrorsX1 - gets vector of errors of x positions of 1D ridges; /// - positionErrorsY1 - gets vector of errors of y positions of 1D ridges",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:204,Availability,error,errors,204,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the amplitudes of fitted 2D peaks and 1D ridges; /// - amplitudeErrors - gets vector of amplitudes errors of 2D peaks; /// - amplitudeErrorsX1 - gets vector of amplitudes errors of 1D ridges in x direction; /// - amplitudesErrorY1 - gets vector of amplitudes errors of 1D ridges in y direction",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:276,Availability,error,errors,276,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the amplitudes of fitted 2D peaks and 1D ridges; /// - amplitudeErrors - gets vector of amplitudes errors of 2D peaks; /// - amplitudeErrorsX1 - gets vector of amplitudes errors of 1D ridges in x direction; /// - amplitudesErrorY1 - gets vector of amplitudes errors of 1D ridges in y direction",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:364,Availability,error,errors,364,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the amplitudes of fitted 2D peaks and 1D ridges; /// - amplitudeErrors - gets vector of amplitudes errors of 2D peaks; /// - amplitudeErrorsX1 - gets vector of amplitudes errors of 1D ridges in x direction; /// - amplitudesErrorY1 - gets vector of amplitudes errors of 1D ridges in y direction",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:105,Availability,error,errors,105,"////////////////////////////////////////////////////////////////////////////////; /// This function gets errors of the volumes of fitted 2D peaks; /// - volumeErrors - gets vector of volumes errors of 2D peaks",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:191,Availability,error,errors,191,"////////////////////////////////////////////////////////////////////////////////; /// This function gets errors of the volumes of fitted 2D peaks; /// - volumeErrors - gets vector of volumes errors of 2D peaks",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:135,Availability,error,error,135,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma x parameter and its error; /// - sigmaX - gets the fitted value of sigma x parameter; /// - sigmaErrX - gets error value of sigma x parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:224,Availability,error,error,224,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma x parameter and its error; /// - sigmaX - gets the fitted value of sigma x parameter; /// - sigmaErrX - gets error value of sigma x parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:135,Availability,error,error,135,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma y parameter and its error; /// - sigmaY - gets the fitted value of sigma y parameter; /// - sigmaErrY - gets error value of sigma y parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:224,Availability,error,error,224,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma y parameter and its error; /// - sigmaY - gets the fitted value of sigma y parameter; /// - sigmaErrY - gets error value of sigma y parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:130,Availability,error,error,130,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the ro parameter and its error; /// - ro - gets the fitted value of ro parameter; /// - roErr - gets error value of ro parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:206,Availability,error,error,206,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the ro parameter and its error; /// - ro - gets the fitted value of ro parameter; /// - roErr - gets error value of ro parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:141,Availability,error,errors,141,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - ax - gets the fitted value of ax parameter; /// - axErr - gets error value of ax parameter; /// - ay - gets the fitted value of ay parameter; /// - ayErr - gets error value of ay parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:218,Availability,error,error,218,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - ax - gets the fitted value of ax parameter; /// - axErr - gets error value of ax parameter; /// - ay - gets the fitted value of ay parameter; /// - ayErr - gets error value of ay parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:316,Availability,error,error,316,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - ax - gets the fitted value of ax parameter; /// - axErr - gets error value of ax parameter; /// - ay - gets the fitted value of ay parameter; /// - ayErr - gets error value of ay parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:414,Availability,error,error,414,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - ax - gets the fitted value of ax parameter; /// - axErr - gets error value of ax parameter; /// - ay - gets the fitted value of ay parameter; /// - ayErr - gets error value of ay parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:135,Availability,error,errors,135,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:215,Availability,error,error,215,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:314,Availability,error,error,314,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:412,Availability,error,error,412,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:510,Availability,error,error,510,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:608,Availability,error,error,608,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:709,Availability,error,error,709,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:808,Availability,error,error,808,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:906,Availability,error,error,906,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Fit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:954,Energy Efficiency,adapt,adaptive,954,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1152,Energy Efficiency,adapt,adaptive,1152,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1307,Energy Efficiency,adapt,adaptive,1307,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:437,Modifiability,enhance,enhancement,437,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:846,Modifiability,enhance,enhancement,846,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:954,Modifiability,adapt,adaptive,954,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1152,Modifiability,adapt,adaptive,1152,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1307,Modifiability,adapt,adaptive,1307,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:180,Energy Efficiency,power,power,180,"////////////////////////////////////////////////////////////////////////////////; /// The constructor creates TSpectrum2Transform object. Its sizes must be > than zero and must be power of 2.; /// It sets default transform type to be Cosine transform. Transform parameters can be changed using setter functions.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:277,Usability,clear,clear,277,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates generalized (mixed) transforms of different degrees; ///; /// Function parameters:; /// - working_space-pointer to vector of transformed data; /// - zt_clear-flag to clear imaginary data before staring; /// - num-length of processed data; /// - degree-degree of transform (see manual); /// - type-type of mixed transform (see manual)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1668,Energy Efficiency,adapt,adaptive,1668,"fficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1884,Energy Efficiency,adapt,adaptive,1884,"ransforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2057,Energy Efficiency,adapt,adaptive,2057,"n be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]=newDouble_t[nbinsy",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2415,Energy Efficiency,Energy,Energy,2415,"-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]=newDouble_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]=newDouble_t[nbinsy];; /// TH2F *trans = newTH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// source[i][j] = trans->GetBinContent(i + 1,j + 1);; /",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1144,Modifiability,enhance,enhance,1144,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters.; /// Transformed data are written into dest spectrum.; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizex*fSizey except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need fSizex*2*fSizey length to supply real and; /// imaginary coefficients.; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need fSizex*2*fSizey length to store real and imaginary coefficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1389,Modifiability,enhance,enhancement,1389,"ld; /// be fSizex*fSizey except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need fSizex*2*fSizey length to supply real and; /// imaginary coefficients.; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need fSizex*2*fSizey length to store real and imaginary coefficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1540,Modifiability,enhance,enhancement,1540,"he matrix of destination data, its size should be; /// fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need fSizex*2*fSizey length to store real and imaginary coefficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Exa",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1668,Modifiability,adapt,adaptive,1668,"fficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1884,Modifiability,adapt,adaptive,1884,"ransforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2057,Modifiability,adapt,adaptive,2057,"n be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]=newDouble_t[nbinsy",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:559,Modifiability,enhance,enhancement,559,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region by the given; /// enhance_coeff and transforms it back; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:680,Modifiability,Enhance,Enhance,680,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region by the given; /// enhance_coeff and transforms it back; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:875,Modifiability,Enhance,Enhance,875,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region by the given; /// enhance_coeff and transforms it back; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1037,Modifiability,Enhance,Enhanced,1037,"/////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region by the given; /// enhance_coeff and transforms it back; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background e",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1299,Modifiability,Enhance,Enhanced,1299,"/; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i+",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1475,Modifiability,enhance,enhancement,1475,"fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// source[i][j] = trans->GetBinContent(i + 1,j + 1);; /// }; /// }; /",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2601,Modifiability,Enhance,Enhance,2601,"n). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// source[i][j] = trans->GetBinContent(i + 1,j + 1);; /// }; /// }; /// TSpectrumTransform2 *t = new TSpectrumTransform2(256,256);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0,63,0,63);; /// t->SetEnhanceCoeff(5);; /// t->Enhance(source,dest);; /// trans->Draw(""SURF"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:122,Modifiability,enhance,enhancement,122,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the filtering or enhancement region:; /// - xmin, xmax, ymin, ymax",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:109,Modifiability,enhance,enhancement,109,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:141,Modifiability,enhance,enhanceCoeff,141,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:180,Modifiability,enhance,enhanced,180,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:273,Modifiability,enhance,enhancement,273,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum2Transform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1448,Availability,avail,available,1448,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum3; \ingroup Spectrum; \brief Advanced 3-dimensional spectra processing functions; \author Miroslav Morhac. \legacy{TSpectrum3, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - Three-dimensional background estimation functions; - Three-dimensional smoothing functions; - Three-dimensional deconvolution functions; - Three-dimensional peak search functions. The algorithms in this class have been published in the following; references:. [1] M.Morhac et al.: Background elimination methods for; multidimensional coincidence gamma-ray spectra. Nuclear; Instruments and Methods in Physics Research A 401 (1997) 113-132. [2] M.Morhac et al.: Efficient one- and two-dimensional Gold; deconvolution and its application to gamma-ray spectra; decomposition. Nuclear Instruments and Methods in Physics; Research A 401 (1997) 385-408. [3] M. Morhac et al.: Efficient algorithm of multidimensional; deconvolution and its application to nuclear data processing. Digital; Signal Processing, Vol. 13, No. 1, (2003), 144-171. [4] M.Morhac et al.: Identification of peaks in multidimensional; coincidence gamma-ray spectra. Nuclear Instruments and Methods in; Research Physics A 443(2000), 108-125. These NIM papers are also available as Postscript files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html).; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:877,Energy Efficiency,Efficient,Efficient,877,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum3; \ingroup Spectrum; \brief Advanced 3-dimensional spectra processing functions; \author Miroslav Morhac. \legacy{TSpectrum3, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - Three-dimensional background estimation functions; - Three-dimensional smoothing functions; - Three-dimensional deconvolution functions; - Three-dimensional peak search functions. The algorithms in this class have been published in the following; references:. [1] M.Morhac et al.: Background elimination methods for; multidimensional coincidence gamma-ray spectra. Nuclear; Instruments and Methods in Physics Research A 401 (1997) 113-132. [2] M.Morhac et al.: Efficient one- and two-dimensional Gold; deconvolution and its application to gamma-ray spectra; decomposition. Nuclear Instruments and Methods in Physics; Research A 401 (1997) 385-408. [3] M. Morhac et al.: Efficient algorithm of multidimensional; deconvolution and its application to nuclear data processing. Digital; Signal Processing, Vol. 13, No. 1, (2003), 144-171. [4] M.Morhac et al.: Identification of peaks in multidimensional; coincidence gamma-ray spectra. Nuclear Instruments and Methods in; Research Physics A 443(2000), 108-125. These NIM papers are also available as Postscript files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html).; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1086,Energy Efficiency,Efficient,Efficient,1086,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum3; \ingroup Spectrum; \brief Advanced 3-dimensional spectra processing functions; \author Miroslav Morhac. \legacy{TSpectrum3, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - Three-dimensional background estimation functions; - Three-dimensional smoothing functions; - Three-dimensional deconvolution functions; - Three-dimensional peak search functions. The algorithms in this class have been published in the following; references:. [1] M.Morhac et al.: Background elimination methods for; multidimensional coincidence gamma-ray spectra. Nuclear; Instruments and Methods in Physics Research A 401 (1997) 113-132. [2] M.Morhac et al.: Efficient one- and two-dimensional Gold; deconvolution and its application to gamma-ray spectra; decomposition. Nuclear Instruments and Methods in Physics; Research A 401 (1997) 385-408. [3] M. Morhac et al.: Efficient algorithm of multidimensional; deconvolution and its application to nuclear data processing. Digital; Signal Processing, Vol. 13, No. 1, (2003), 144-171. [4] M.Morhac et al.: Identification of peaks in multidimensional; coincidence gamma-ray spectra. Nuclear Instruments and Methods in; Research Physics A 443(2000), 108-125. These NIM papers are also available as Postscript files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html).; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1729,Usability,guid,guides,1729,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum3; \ingroup Spectrum; \brief Advanced 3-dimensional spectra processing functions; \author Miroslav Morhac. \legacy{TSpectrum3, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - Three-dimensional background estimation functions; - Three-dimensional smoothing functions; - Three-dimensional deconvolution functions; - Three-dimensional peak search functions. The algorithms in this class have been published in the following; references:. [1] M.Morhac et al.: Background elimination methods for; multidimensional coincidence gamma-ray spectra. Nuclear; Instruments and Methods in Physics Research A 401 (1997) 113-132. [2] M.Morhac et al.: Efficient one- and two-dimensional Gold; deconvolution and its application to gamma-ray spectra; decomposition. Nuclear Instruments and Methods in Physics; Research A 401 (1997) 385-408. [3] M. Morhac et al.: Efficient algorithm of multidimensional; deconvolution and its application to nuclear data processing. Digital; Signal Processing, Vol. 13, No. 1, (2003), 144-171. [4] M.Morhac et al.: Identification of peaks in multidimensional; coincidence gamma-ray spectra. Nuclear Instruments and Methods in; Research Physics A 443(2000), 108-125. These NIM papers are also available as Postscript files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html).; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:6,Testability,log,logic,6,"//The logic in the loop should be improved to use the fact; //that fPositionX,Y give a precise position inside a bin.; //The current algorithm takes the center of the bin only.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:2609,Deployability,continuous,continuously,2609,"{p-1}(i_1, i_2, i_3)\f$; ///; /// \image html spectrum3_background_image003.gif; /// \f[; /// \nu_p(i_1, i_2, i_3) = min (a,b); /// \f]; ///; /// where p = 1, 2, ..., number_of_iterations.; ///; /// #### References:; ///; /// [1] C. G Ryan et al.: SNIP, a; /// statistics-sensitive background treatment for the quantitative analysis of PIXE; /// spectra in geoscience applications. NIM, B34 (1988), 396-402./; ///; /// [2] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.: Background; /// elimination methods for multidimensional gamma-ray spectra. NIM, A401 (1997); /// 113-132.; ///; /// Example 1- script Back3.c :; ///; /// \image html spectrum3_background_image005.jpg Fig. 1 Original three-dimensional gamma-gamma-gamma-ray spectrum; /// \image html spectrum3_background_image006.jpg Fig. 2 Background estimated from data from Fig. 1 using decreasing clipping window with widths 5, 5, 5 and algorithm based on successive comparisons. The estimate includes not only continuously changing background but also one- and two-dimensional ridges.; /// \image html spectrum3_background_image007.jpg Fig. 3 Resulting peaks after subtraction of the estimated background (Fig. 2) from original three-dimensional gamma-gamma-gamma-ray spectrum (Fig. 1).; ///; /// #### Script:; ///; /// Example to illustrate the background estimator (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Back3.C`; ///; /// ~~~ {.cpp}; /// void Back3() {; /// Int_t i, j, k;; /// Int_t nbinsx = 64;; /// Int_t nbinsy = 64;; /// Int_t nbinsz = 64;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// Double_t*** dest = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; /// for(j=0;j<nbinsy;j++); /// source[i][j]=new Double_t[nbinsz];; /// }; /// for(i=0;i<nbinsx;i++){; /// dest[i]=new Double_t*[nbinsy];; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1448,Modifiability,extend,extended,1448,"ength of spectrum and working space arrays; /// - ssizey-z length of spectrum and working space arrays; /// - averWindow-width of averaging smoothing window; ///; /// ### Smoothing; ///; /// Goal: Suppression of statistical fluctuations; /// the algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution; ///; /// \f[; /// U_2 = \frac{p_{1.2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2 U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1} ... U_2 U_1; /// \f]; /// \f$U_1\f$ being defined from the normalization condition \f$ \sum_{i=1}^{n} U_i = 1\f$; /// n is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm1} = A_i \sum_{k=1}^{m} exp\left[\frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// is the probability of the change of the peak position from channel i to the channel i+1.; /// \f$A_i\f$ is the normalization constant so that\f$ p_{i,i-1}+p_{i,i+1}=1\f$ and m is a width; /// of smoothing window. We have extended this algorithm to three dimensions.; ///; /// #### Reference:; ///; /// [1] Z.K. Silagadze, A new; /// algorithm for automatic photo-peak searches. NIM A 376 (1996), 451-.; ///; /// ### Example 1 - script SmootMarkov3.c :; ///; /// \image html spectrum3_smoothing_image007.jpg Fig. 1 Original noisy spectrum.; /// \image html spectrum3_smoothing_image008.jpg Fig. 2 Smoothed spectrum with averaging window m=3.; ///; /// #### Script:; ///; /// Example to illustrate the Markov smoothing (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x SmoothMarkov3.C`; ///; /// ~~~ {.cpp}; /// void SmoothMarkov3() {; /// Int_t i, j, k;; /// Int_t nbinsx = 64;; /// Int_t nbinsy = 64;; /// Int_t nbinsz = 64;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; /// for(j=0;j<nbinsy;j++); /// ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:771,Usability,simpl,simple,771,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates smoothed spectrum from source spectrum; /// based on Markov chain method.; /// The result is placed in the array pointed by spectrum pointer.; ///; /// Function parameters:; /// - source-pointer to the array of source spectrum; /// - working_space-pointer to the working array; /// - ssizex-x length of spectrum and working space arrays; /// - ssizey-y length of spectrum and working space arrays; /// - ssizey-z length of spectrum and working space arrays; /// - averWindow-width of averaging smoothing window; ///; /// ### Smoothing; ///; /// Goal: Suppression of statistical fluctuations; /// the algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution; ///; /// \f[; /// U_2 = \frac{p_{1.2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2 U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1} ... U_2 U_1; /// \f]; /// \f$U_1\f$ being defined from the normalization condition \f$ \sum_{i=1}^{n} U_i = 1\f$; /// n is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm1} = A_i \sum_{k=1}^{m} exp\left[\frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// is the probability of the change of the peak position from channel i to the channel i+1.; /// \f$A_i\f$ is the normalization constant so that\f$ p_{i,i-1}+p_{i,i+1}=1\f$ and m is a width; /// of smoothing window. We have extended this algorithm to three dimensions.; ///; /// #### Reference:; ///; /// [1] Z.K. Silagadze, A new; /// algorithm for automatic photo-peak searches. NIM A 376 (1996), 451-.; ///; /// ### Example 1 - script SmootMarkov3.c :; ///; /// \image html spectrum3_smoothing_image007.jpg Fig. 1 Original noisy spectrum.; /// \image html spectrum3_smoothing_image008.jpg Fig. 2 Smoothed spectrum with averaging window m=3.; ///; /// #### Script:; ///; /// Example to illustrate the Markov smoothing (class TSpectrum3).; /// To execute this example, do:; //",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:2036,Energy Efficiency,Efficient,Efficient,2036,"_2, N3\f$, are the lengths of x and h fields; ///; /// - let us assume that we know the response and the output fields (spectra); /// of the above given system.; ///; /// - the deconvolution represents solution of the overdetermined system of; /// linear equations, i.e., the calculation of the field -x.; ///; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; ///; /// - the Gold deconvolution algorithm proves to work very well even for; /// 2-dimensional systems. Generalization of the algorithm for 2-dimensional; /// systems was presented in [1], and for multidimensional systems in [2].; ///; /// - for Gold deconvolution algorithm as well as for boosted deconvolution; /// algorithm we refer also to TSpectrum and TSpectrum2; ///; /// #### References:; ///; /// [1] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.: Efficient; /// one- and two-dimensional Gold deconvolution and its application to gamma-ray; /// spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac M., Matouoek V.,; /// Kliman J., Efficient algorithm of multidimensional deconvolution and its; /// application to nuclear data processing, Digital Signal Processing 13 (2003) 144.; ///; /// ### Example 1 - script Decon.c :; ///; /// response function (usually peak) should be shifted to the beginning of; /// the coordinate system (see Fig. 1); ///; /// \image html spectrum3_deconvolution_image003.jpg Fig. 1 Three-dimensional response spectrum; /// \image html spectrum3_deconvolution_image004.jpg Fig. 2 Three-dimensional input spectrum (before deconvolution); /// \image html spectrum3_deconvolution_image005.jpg Fig. 3 Spectrum from Fig. 2 after deconvolution (100 iterations); ///; /// #### Script:; ///; /// Example to illustrate the Gold deconvolution (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Decon3.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum3",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:2236,Energy Efficiency,Efficient,Efficient,2236,"the overdetermined system of; /// linear equations, i.e., the calculation of the field -x.; ///; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; ///; /// - the Gold deconvolution algorithm proves to work very well even for; /// 2-dimensional systems. Generalization of the algorithm for 2-dimensional; /// systems was presented in [1], and for multidimensional systems in [2].; ///; /// - for Gold deconvolution algorithm as well as for boosted deconvolution; /// algorithm we refer also to TSpectrum and TSpectrum2; ///; /// #### References:; ///; /// [1] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.: Efficient; /// one- and two-dimensional Gold deconvolution and its application to gamma-ray; /// spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac M., Matouoek V.,; /// Kliman J., Efficient algorithm of multidimensional deconvolution and its; /// application to nuclear data processing, Digital Signal Processing 13 (2003) 144.; ///; /// ### Example 1 - script Decon.c :; ///; /// response function (usually peak) should be shifted to the beginning of; /// the coordinate system (see Fig. 1); ///; /// \image html spectrum3_deconvolution_image003.jpg Fig. 1 Three-dimensional response spectrum; /// \image html spectrum3_deconvolution_image004.jpg Fig. 2 Three-dimensional input spectrum (before deconvolution); /// \image html spectrum3_deconvolution_image005.jpg Fig. 3 Spectrum from Fig. 2 after deconvolution (100 iterations); ///; /// #### Script:; ///; /// Example to illustrate the Gold deconvolution (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Decon3.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum3>; /// void Decon3() {; /// Int_t i, j, k;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:4966,Energy Efficiency,power,power,4966,"ectrum3.root"");; /// decon_in=(TH3F*) f->Get(""decon_in;1"");; /// decon_resp=(TH3F*) f->Get(""decon_resp;1"");; /// TCanvas *Deconvolution = new TCanvas(""Deconvolution"",""Deconvolution of 3-dimensional spectra"",10,10,1000,700);; /// TSpectrum3 *s = new TSpectrum3();; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// for (k = 0; k < nbinsz; k++){; /// source[i][j][k] = decon_in->GetBinContent(i + 1,j + 1,k + 1);; /// resp[i][j][k] = decon_resp->GetBinContent(i + 1,j + 1,k + 1);; /// }; /// }; /// }; /// s->Deconvolution(source,resp,nbinsx,nbinsy,nbinsz,100,1,1);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// for (k = 0; k < nbinsz; k++){; /// decon_in->SetBinContent(i + 1,j + 1,k + 1, source[i][j][k]);; /// }; /// }; /// }; /// decon_in->Draw("""");; /// }; /// ~~~; ///; /// ### Example 2 - script Decon_hr.c :; ///; /// This example illustrates repeated; /// Gold deconvolution with boosting. After every 10 iterations we apply power; /// function with exponent = 2 to the spectrum given in Fig. 2.; ///; /// \image html spectrum3_deconvolution_image006.jpg Fig. 4 Spectrum from Fig. 2 after boosted deconvolution (10 iterations repeated 10 times). It decomposes completely cluster of peaks from Fig 2.; ///; /// #### Script:; ///; /// Example to illustrate the Gold deconvolution (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Decon3_hr.C`; ///; /// ~~~ {.cpp}; /// void Decon3_hr() {; /// Int_t i, j, k;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// Double_t*** resp = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; /// for(j=0;j<nbinsy;j++); /// source[i][j]=new Double_t[nbinsz];; /// }; /// for(i=0;i<nbinsx;i++){; /// resp[i]=new Double_t*[nbin",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1507,Deployability,continuous,continuous,1507,"// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background in all dimensions) and their; /// crossings; /// - non-sensitivity to two-fold; /// coincidences (coincidences peak - background - background in all; /// dimensions) and their crossings; /// - ability to identify peaks close; /// to the edges of the spectrum region; /// - resolution, decomposition of; /// doublets and multiplets. The algorithm should be able to recognise close; /// positioned peaks.; ///; /// #### References:; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1888,Deployability,continuous,continuous,1888,"ations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background in all dimensions) and their; /// crossings; /// - non-sensitivity to two-fold; /// coincidences (coincidences peak - background - background in all; /// dimensions) and their crossings; /// - ability to identify peaks close; /// to the edges of the spectrum region; /// - resolution, decomposition of; /// doublets and multiplets. The algorithm should be able to recognise close; /// positioned peaks.; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for; /// identification of peaks in the presence of background and its application to; /// spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photo-peak searches. NIM A 376 (1996), 451.; ///; /// ### Example of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the a",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:959,Modifiability,variab,variable,959,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; /// It returns number of found peaks.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1132,Modifiability,variab,variable,1132,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; /// It returns number of found peaks.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:3160,Performance,tune,tune,3160," dimensions) and their crossings; /// - ability to identify peaks close; /// to the edges of the spectrum region; /// - resolution, decomposition of; /// doublets and multiplets. The algorithm should be able to recognise close; /// positioned peaks.; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for; /// identification of peaks in the presence of background and its application to; /// spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photo-peak searches. NIM A 376 (1996), 451.; ///; /// ### Example of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the access to the output deconvolved data; /// in the destination spectrum. Based on the output data one can tune the; /// parameters.; ///; /// #### Example 1 - script Search3.c:; ///; /// \image html spectrum3_searching_image001.jpg Fig. 1 Three-dimensional spectrum with 5 peaks (sigma=2, threshold=5%, 3 iterations steps in the deconvolution); /// \image html spectrum3_searching_image003.jpg Fig. 2 Spectrum from Fig. 1 after background elimination and deconvolution; ///; /// #### Script:; ///; /// Example to illustrate high resolution peak searching function (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Search3.C`; ///; /// ~~~ {.cpp}; /// void Search3() {; /// Int_t i, j, k, nfound;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// Double_t*** dest = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:3055,Security,access,access,3055," dimensions) and their; /// crossings; /// - non-sensitivity to two-fold; /// coincidences (coincidences peak - background - background in all; /// dimensions) and their crossings; /// - ability to identify peaks close; /// to the edges of the spectrum region; /// - resolution, decomposition of; /// doublets and multiplets. The algorithm should be able to recognise close; /// positioned peaks.; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for; /// identification of peaks in the presence of background and its application to; /// spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photo-peak searches. NIM A 376 (1996), 451.; ///; /// ### Example of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the access to the output deconvolved data; /// in the destination spectrum. Based on the output data one can tune the; /// parameters.; ///; /// #### Example 1 - script Search3.c:; ///; /// \image html spectrum3_searching_image001.jpg Fig. 1 Three-dimensional spectrum with 5 peaks (sigma=2, threshold=5%, 3 iterations steps in the deconvolution); /// \image html spectrum3_searching_image003.jpg Fig. 2 Spectrum from Fig. 1 after background elimination and deconvolution; ///; /// #### Script:; ///; /// Example to illustrate high resolution peak searching function (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Search3.C`; ///; /// ~~~ {.cpp}; /// void Search3() {; /// Int_t i, j, k, nfound;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** sour",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:951,Testability,log,logical,951,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; /// It returns number of found peaks.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1124,Testability,log,logical,1124,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; /// It returns number of found peaks.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:708,Modifiability,variab,variable,708,"////////////////////////////////////////////////////////////////////////////////; /// THREE-DIMENSIONAL CLASSICAL PEAK SEARCH FUNCTION; /// This function searches for peaks in source spectrum using; /// the algorithm based on smoothed second differences.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:700,Testability,log,logical,700,"////////////////////////////////////////////////////////////////////////////////; /// THREE-DIMENSIONAL CLASSICAL PEAK SEARCH FUNCTION; /// This function searches for peaks in source spectrum using; /// the algorithm based on smoothed second differences.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrum3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:766,Energy Efficiency,Efficient,Efficient,766,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumFit; \ingroup Spectrum; \brief Advanced 1-dimensional spectra fitting functions; \author Miroslav Morhac. \legacy{TSpectrumFit, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class for fitting 1D spectra using AWMI (algorithm without matrix; inversion) and conjugate gradient algorithms for symmetrical; matrices (Stiefel-Hestens method). AWMI method allows to fit; simultaneously 100s up to 1000s peaks. Stiefel method is very stable,; it converges faster, but is more time consuming. The algorithms in this class have been published in the following; references:; 1. M. Morhac et al.: Efficient fitting algorithms applied to; analysis of coincidence gamma-ray spectra. Computer Physics; Communications, Vol 172/1 (2005) pp. 19-41. 2. M. Morhac et al.: Study of fitting algorithms applied to; simultaneous analysis of large number of peaks in gamma-ray spectra.; Applied Spectroscopy, Vol. 57, No. 7, pp. 753-760, 2003. */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:176,Energy Efficiency,allocate,allocates,176,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); ///; /// the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; /// variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted peaks is; ///; /// \image html spectrumfit_constructor_image001.gif; ///; /// where a represents vector of; /// fitted parameters (positions p(j), amplitudes A(j), sigma, relative amplitudes; /// T, S and slope B).",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:277,Modifiability,variab,variables,277,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); ///; /// the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; /// variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted peaks is; ///; /// \image html spectrumfit_constructor_image001.gif; ///; /// where a represents vector of; /// fitted parameters (positions p(j), amplitudes A(j), sigma, relative amplitudes; /// T, S and slope B).",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:333,Modifiability,variab,variables,333,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); ///; /// the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; /// variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted peaks is; ///; /// \image html spectrumfit_constructor_image001.gif; ///; /// where a represents vector of; /// fitted parameters (positions p(j), amplitudes A(j), sigma, relative amplitudes; /// T, S and slope B).",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:111,Availability,error,error,111,"/////////////////////////////////////////////////////////////////////////////////; // This function calculates error function of x.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:125,Availability,error,error,125,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates derivative of error function of x.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:86,Energy Efficiency,Power,Power,86,"////////////////////////////////////////////////////////////////////////////////; /// Power function",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:715,Energy Efficiency,power,power,715,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters:; /// - xmin, xmax - fitting region; /// - numberIterations - # of desired iterations in the fit; /// - alpha - convergence coefficient, it should be positive number and <=1, for details see references; /// - statisticType - type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; /// - alphaOptim - optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal; /// - power - possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function.; /// - fitTaylor - order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:618,Performance,optimiz,optimization,618,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters:; /// - xmin, xmax - fitting region; /// - numberIterations - # of desired iterations in the fit; /// - alpha - convergence coefficient, it should be positive number and <=1, for details see references; /// - statisticType - type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; /// - alphaOptim - optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal; /// - power - possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function.; /// - fitTaylor - order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:214,Testability,log,logical,214,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigma - initial value of sigma parameter; /// - fixSigma - logical value of sigma parameter, which allows to fix the parameter (not to fit); /// - positionInit - array of initial values of peaks positions; /// - fixPosition - array of logical values which allow to fix appropriate positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:390,Testability,log,logical,390,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigma - initial value of sigma parameter; /// - fixSigma - logical value of sigma parameter, which allows to fix the parameter (not to fit); /// - positionInit - array of initial values of peaks positions; /// - fixPosition - array of logical values which allow to fix appropriate positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:597,Testability,log,logical,597,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of peaks:; /// - sigma - initial value of sigma parameter; /// - fixSigma - logical value of sigma parameter, which allows to fix the parameter (not to fit); /// - positionInit - array of initial values of peaks positions; /// - fixPosition - array of logical values which allow to fix appropriate positions (not fit). However they are present in the estimated functional.; /// - ampInit - array of initial values of peaks amplitudes; /// - fixAmp - array of logical values which allow to fix appropriate amplitudes (not fit). However they are present in the estimated functional",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:258,Testability,log,logical,258,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of background:; /// - a0Init - initial value of a0 parameter (background is estimated as a0+a1*x+a2*x*x); /// - fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); /// - a1Init - initial value of a1 parameter; /// - fixA1 - logical value of a1 parameter, which allows to fix the parameter (not to fit); /// - a2Init - initial value of a2 parameter; /// - fixA2 - logical value of a2 parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:397,Testability,log,logical,397,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of background:; /// - a0Init - initial value of a0 parameter (background is estimated as a0+a1*x+a2*x*x); /// - fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); /// - a1Init - initial value of a1 parameter; /// - fixA1 - logical value of a1 parameter, which allows to fix the parameter (not to fit); /// - a2Init - initial value of a2 parameter; /// - fixA2 - logical value of a2 parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:536,Testability,log,logical,536,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of background:; /// - a0Init - initial value of a0 parameter (background is estimated as a0+a1*x+a2*x*x); /// - fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); /// - a1Init - initial value of a1 parameter; /// - fixA1 - logical value of a1 parameter, which allows to fix the parameter (not to fit); /// - a2Init - initial value of a2 parameter; /// - fixA2 - logical value of a2 parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:214,Testability,log,logical,214,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInit - initial value of t parameter; /// - fixT - logical value of t parameter, which allows to fix the parameter (not to fit); /// - bInit - initial value of b parameter; /// - fixB - logical value of b parameter, which allows to fix the parameter (not to fit); /// - sInit - initial value of s parameter; /// - fixS - logical value of s parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:349,Testability,log,logical,349,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInit - initial value of t parameter; /// - fixT - logical value of t parameter, which allows to fix the parameter (not to fit); /// - bInit - initial value of b parameter; /// - fixB - logical value of b parameter, which allows to fix the parameter (not to fit); /// - sInit - initial value of s parameter; /// - fixS - logical value of s parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:484,Testability,log,logical,484,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters of tails of peaks; /// - tInit - initial value of t parameter; /// - fixT - logical value of t parameter, which allows to fix the parameter (not to fit); /// - bInit - initial value of b parameter; /// - fixB - logical value of b parameter, which allows to fix the parameter (not to fit); /// - sInit - initial value of s parameter; /// - fixS - logical value of s parameter, which allows to fix the parameter (not to fit)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:133,Availability,error,error,133,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma parameter and its error; /// - sigma - gets the fitted value of sigma parameter; /// - sigmaErr - gets error value of sigma parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:218,Availability,error,error,218,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma parameter and its error; /// - sigma - gets the fitted value of sigma parameter; /// - sigmaErr - gets error value of sigma parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:141,Availability,error,errors,141,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - a1 - gets the fitted value of a1 parameter; /// - a1Err - gets error value of a1 parameter; /// - a2 - gets the fitted value of a2 parameter; /// - a2Err - gets error value of a2 parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:218,Availability,error,error,218,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - a1 - gets the fitted value of a1 parameter; /// - a1Err - gets error value of a1 parameter; /// - a2 - gets the fitted value of a2 parameter; /// - a2Err - gets error value of a2 parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:316,Availability,error,error,316,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - a1 - gets the fitted value of a1 parameter; /// - a1Err - gets error value of a1 parameter; /// - a2 - gets the fitted value of a2 parameter; /// - a2Err - gets error value of a2 parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:414,Availability,error,error,414,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - a1 - gets the fitted value of a1 parameter; /// - a1Err - gets error value of a1 parameter; /// - a2 - gets the fitted value of a2 parameter; /// - a2Err - gets error value of a2 parameter",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:135,Availability,error,errors,135,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - t - gets the fitted value of t parameter; /// - tErr - gets error value of t parameter; /// - b - gets the fitted value of b parameter; /// - bErr - gets error value of b parameter; /// - s - gets the fitted value of s parameter; /// - sErr - gets error value of s parameter; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:209,Availability,error,error,209,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - t - gets the fitted value of t parameter; /// - tErr - gets error value of t parameter; /// - b - gets the fitted value of b parameter; /// - bErr - gets error value of b parameter; /// - s - gets the fitted value of s parameter; /// - sErr - gets error value of s parameter; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:303,Availability,error,error,303,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - t - gets the fitted value of t parameter; /// - tErr - gets error value of t parameter; /// - b - gets the fitted value of b parameter; /// - bErr - gets error value of b parameter; /// - s - gets the fitted value of s parameter; /// - sErr - gets error value of s parameter; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:397,Availability,error,error,397,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - t - gets the fitted value of t parameter; /// - tErr - gets error value of t parameter; /// - b - gets the fitted value of b parameter; /// - bErr - gets error value of b parameter; /// - s - gets the fitted value of s parameter; /// - sErr - gets error value of s parameter; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:950,Energy Efficiency,adapt,adaptive,950,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1148,Energy Efficiency,adapt,adaptive,1148,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1303,Energy Efficiency,adapt,adaptive,1303,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:435,Modifiability,enhance,enhancement,435,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:844,Modifiability,enhance,enhancement,844,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:950,Modifiability,adapt,adaptive,950,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1148,Modifiability,adapt,adaptive,1148,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1303,Modifiability,adapt,adaptive,1303,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:178,Energy Efficiency,power,power,178,"////////////////////////////////////////////////////////////////////////////////; /// the constructor creates TSpectrumTransform object. Its size must be > than zero and must be power of 2.; /// It sets default transform type to be Cosine transform. Transform parameters can be changed using setter functions.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:272,Usability,clear,clear,272,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates generalized (mixed) transforms of different degrees; /// Function parameters:; /// - working_space-pointer to vector of transformed data; /// - zt_clear-flag to clear imaginary data before staring; /// - num-length of processed data; /// - degree-degree of transform (see manual); /// - type-type of mixed transform (see manual)",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1569,Energy Efficiency,adapt,adaptive,1569,"R. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1786,Energy Efficiency,adapt,adaptive,1786,"nsforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spec",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1960,Energy Efficiency,adapt,adaptive,1960,"e used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spectrum using Cosine transform"",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1044,Modifiability,enhance,enhance,1044,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters.; /// Transformed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1289,Modifiability,enhance,enhancement,1289,"///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transfo",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1440,Modifiability,enhance,enhancement,1440,"ze length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1569,Modifiability,adapt,adaptive,1569,"R. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1786,Modifiability,adapt,adaptive,1786,"nsforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spec",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1960,Modifiability,adapt,adaptive,1960,"e used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spectrum using Cosine transform"",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:876,Modifiability,Enhance,Enhance,876,"/////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; ///",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:990,Modifiability,enhance,enhanced,990,"///////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1136,Modifiability,Enhance,Enhance,1136,"///////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1236,Modifiability,Enhance,Enhance,1236," in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new TSpectrumTransform(4096);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0, 1024);; /// t->SetEnhanceCoeff(2);; /// t->Enhance(source,dest);; /// for (i = ",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1278,Modifiability,Enhance,Enhance,1278,"en into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new TSpectrumTransform(4096);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0, 1024);; /// t->SetEnhanceCoeff(2);; /// t->Enhance(source,dest);; /// for (i = 0; i < nbins; i++) d->SetBinContent(i + 1,dest[i]);; /// d->SetLineColor(kRed);; /// d->Draw(""SAME L"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1513,Modifiability,Enhance,Enhancement,1513,"en into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new TSpectrumTransform(4096);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0, 1024);; /// t->SetEnhanceCoeff(2);; /// t->Enhance(source,dest);; /// for (i = 0; i < nbins; i++) d->SetBinContent(i + 1,dest[i]);; /// d->SetLineColor(kRed);; /// d->Draw(""SAME L"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:2203,Modifiability,Enhance,Enhance,2203,"en into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new TSpectrumTransform(4096);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0, 1024);; /// t->SetEnhanceCoeff(2);; /// t->Enhance(source,dest);; /// for (i = 0; i < nbins; i++) d->SetBinContent(i + 1,dest[i]);; /// d->SetLineColor(kRed);; /// d->Draw(""SAME L"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:122,Modifiability,enhance,enhancement,122,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the filtering or enhancement region:; /// - xmin, xmax",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:109,Modifiability,enhance,enhancement,109,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:141,Modifiability,enhance,enhanceCoeff,141,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:180,Modifiability,enhance,enhanced,180,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:261,Modifiability,enhance,enhancement,261,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,hist/spectrum/src/TSpectrumTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:32,Usability,simpl,simple,32,"//display mode algorithm group (simple modes-kModeGroupSimple, modes with shading according to light-kModeGroupLight, modes with shading according to channels counts-kModeGroupHeight, modes of combination of shading according to light and to channels counts-kModeGroupLightHeight)",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:19,Testability,log,log,19,"//z scale (linear, log, sqrt)",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:71,Usability,simpl,simple,71,"//# of color levels for rainbowed display modes, it does not apply for simple display modes algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:133,Usability,simpl,simple,133,"//determines the first component step for neighbouring color levels, applies only for rainbowed display modes, it does not apply for simple display modes algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:134,Usability,simpl,simple,134,"//determines the second component step for neighbouring color levels, applies only for rainbowed display modes, it does not apply for simple display modes algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:133,Usability,simpl,simple,133,"//determines the third component step for neighbouring color levels, applies only for rainbowed display modes, it does not apply for simple display modes algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:311,Usability,simpl,simple,311,"//applies only for rainbowed display modes (rgb smooth alorithm, rgb modulo color component, cmy smooth alorithm, cmy modulo color component, cie smooth alorithm, cie modulo color component, yiq smooth alorithm, yiq modulo color component, hsv smooth alorithm, hsv modulo color component, it does not apply for simple display modes algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:52,Usability,simpl,simple,52,"//determines Bezier interpolation (applies only for simple display modes group for grid, x_lines, y_lines display modes)",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:45,Modifiability,variab,variables,45,"//color of channel lines (grid); //auxiliary variables,transformation coeffitients for internal use only",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:21,Modifiability,variab,variables,21,"//auxiliary internal variables, working place",MatchSource.CODE_COMMENT,hist/spectrumpainter/inc/TSpectrum2Painter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:717,Security,access,accessed,717,"// @(#)root/spectrumpainter:$Id: TSpectrum2Painter.cxx,v 1.00; // Author: Miroslav Morhac 29/09/06; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSpectrum2Painter; \ingroup Spectrumpainter. \legacy{TSpectrum2Painter}. Two-dimensional graphics function. TSpectrum2Painter is a set of graphical functions developed by Miroslav; Morhac to paint 2D-histograms in three dimensions. This package is accessed; via THistPainter in a transparent way. For the ROOT user it is enough to use; the ""SPEC"" option to draw a 2D-Histogram. This option offers many; functionalities detailed in the header of the PaintSpectrum function. Reference:. Morhac M., Kliman J., Matousek V., Turzo I.: Sophisticated visualization; algorithms for analysis of multidimensional experimental nuclear data. Acta; Pysica Slovaca Vol. 54/ 4 (2004), pp. 385-400.; */",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:17,Testability,log,log,17,"// Scale linear, log.",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:81,Usability,simpl,simple,81,"// Number of color levels for rainbowed display modes,; // It does not apply for simple display modes; // algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:146,Usability,simpl,simple,146,"// Determines the first component step for; // neighbouring color levels, applies only for; // rainbowed display modes, it does not apply for; // simple display modes algorithm group.",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:147,Usability,simpl,simple,147,"// Determines the second component step for; // neighbouring color levels, applies only for; // rainbowed display modes, it does not apply for; // simple display modes algorithm group.",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:146,Usability,simpl,simple,146,"// Determines the third component step for; // neighbouring color levels, applies only for; // rainbowed display modes, it does not apply for; // simple display modes algorithm group.",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:349,Usability,simpl,simple,349,"// Applies only for rainbowed display modes; // (rgb smooth algorithm, rgb modulo color; // component, cmy smooth algorithm, cmy; // modulo color component, cie smooth; // algorithm, cie modulo color component,; // yiq smooth algorithm, yiq modulo color; // component, hsv smooth algorithm, hsv; // modulo color component, it does not; // apply for simple display modes; // algorithm group.",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:57,Usability,simpl,simple,57,"// Determines Bezier interpolation (applies; // only for simple display modes group for; // grid, x_lines, y_lines display modes).",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:264,Modifiability,variab,variable,264,"////////////////////////////////////////////////////////////////////////////////; /// Reads out the value from histogram and calculates screen coordinates; ///; /// Parameters:; /// - it - node in x- direction; /// - jt - node in y- direction; /// - zmt - control variable",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:7487,Testability,log,log,7487,"// side, respectively. One can rotate the 3-d space around vertical axis going; /// through the center of it employing the view parameter.; /// Allowed values are 0, 90, 180 and 270 degrees respectively.; ///; /// Default values:; ///; /// - ` alpha = 20`; /// - ` beta = 60`; /// - ` view = 0`; ///; /// \image html spectrumpainter024.jpg; ///; /// Light modes group, display mode = surface, 256 x 256 channels. Angles are; /// set as follows: alpha=40, beta=30, view=0.; /// \image html spectrumpainter025.jpg; ///; /// Light modes group, display mode = surface, 256 x 256 channels. Angles are; /// set as follows: alpha=30, beta=30, view=90.; ///; /// #### Function: TSpectrum2Painter::SetZScale(Int_t scale); ///; /// One can change the scale of z-axis. Possible values are:; ///; /// - ` kZScaleLinear`; /// - ` kZScaleLog`; /// - ` kZScaleSqrt`; ///; /// Default value is:; ///; /// - ` scale = kZScaleLinear`; ///; /// \image html spectrumpainter026.jpg; ///; /// Height modes group, display mode = surface, 64 x 64 channels, log scale.; ///; /// #### Function: TSpectrum2Painter::SetColorIncrements(Double_t r,Double_t g,Double_t b);; ///; /// For sophisticated shading (in kModeGroupLight, kModeGroupHeight; /// and kModeGroupLightHeight display modes groups) the color palette starts; /// from the basic pen color (see SetPenAttr function). There is a predefined number; /// of color levels (256). Color in every level is calculated by adding the; /// increments of the r, g, b components to the previous level. Using this function; /// one can change the color increments between two neighbouring color levels. The; /// function does not apply for kModeGroupSimple display modes group.; /// Default values: r=1, g=1, b=1;; /// \image html spectrumpainter027.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels, color increments; /// r=1, g=2, b=3.; /// \image html spectrumpainter028.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels, color; /",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:451,Usability,simpl,simple,451,"////////////////////////////////////////////////////////////////////////////////; /// Paints histogram according to preset parameters.; /// ### Visualization; /// #### Goal: to present 2-dimensional spectra in suitable visual form; /// This package has several display mode groups and display modes, which can be; /// employed for the presentation of 2-dimensional histograms; /// #### Display modes groups:; ///; /// - `kModeGroupSimple` - it covers simple display modes using one; /// color only; /// - `kModeGroupLight` - in this group the shading is carried out; /// according to the position of the fictive; /// light source; /// - `kModeGroupHeight` - in this group the shading is carried out; /// according to the channel contents; /// - `kModeGroupLightHeight` - combination of two previous shading; /// algorithms. One can control the weight; /// between both algorithms.; ///; /// #### Display modes:; ///; /// - `kDisplayModePoints, `; /// - `kDisplayModeGrid, `; /// - `kDisplayModeContours,`; /// - `kDisplayModeBars,`; /// - `kDisplayModeLinesX,`; /// - `kDisplayModeLinesY,`; /// - `kDisplayModeBarsX,`; /// - `kDisplayModeBarsY,`; /// - `kDisplayModeNeedles,`; /// - `kDisplayModeSurface,`; /// - `kDisplayModeTriangles.`; ///; /// one can combine the above given modes groups and display modes. The meaningful; /// combinations (denoted by x) are given in the next table.; ///; /// | | Simple | Light | Height | Light-Height |; /// |-----------|--------|-------|--------|--------------|; /// | Points | X | X | X | X |; /// | Grid | X | X | X | X |; /// | Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the displa",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:1403,Usability,Simpl,Simple,1403,"nnel contents; /// - `kModeGroupLightHeight` - combination of two previous shading; /// algorithms. One can control the weight; /// between both algorithms.; ///; /// #### Display modes:; ///; /// - `kDisplayModePoints, `; /// - `kDisplayModeGrid, `; /// - `kDisplayModeContours,`; /// - `kDisplayModeBars,`; /// - `kDisplayModeLinesX,`; /// - `kDisplayModeLinesY,`; /// - `kDisplayModeBarsX,`; /// - `kDisplayModeBarsY,`; /// - `kDisplayModeNeedles,`; /// - `kDisplayModeSurface,`; /// - `kDisplayModeTriangles.`; ///; /// one can combine the above given modes groups and display modes. The meaningful; /// combinations (denoted by x) are given in the next table.; ///; /// | | Simple | Light | Height | Light-Height |; /// |-----------|--------|-------|--------|--------------|; /// | Points | X | X | X | X |; /// | Grid | X | X | X | X |; /// | Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; ///",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2327,Usability,Simpl,Simple,2327,"ed by x) are given in the next table.; ///; /// | | Simple | Light | Height | Light-Height |; /// |-----------|--------|-------|--------|--------------|; /// | Points | X | X | X | X |; /// | Grid | X | X | X | X |; /// | Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, displa",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2440,Usability,Simpl,Simple,2440,"--------|-------|--------|--------------|; /// | Points | X | X | X | X |; /// | Grid | X | X | X | X |; /// | Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, disp",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2549,Usability,Simpl,Simple,2549,"Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, dis",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2662,Usability,Simpl,Simple,2662,"| X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, disp",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2771,Usability,Simpl,Simple,2771,"| Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter014.jpg; ///; /// Light modes group, dis",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2882,Usability,Simpl,Simple,2882,":SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter014.jpg; ///; /// Light modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter015.jpg; ///; /// Height modes group, ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2993,Usability,Simpl,Simple,2993,"nd display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter014.jpg; ///; /// Light modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter015.jpg; ///; /// Height modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter016.jpg; ///; /// Height modes group",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3103,Usability,Simpl,Simple,3103,"modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter014.jpg; ///; /// Light modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter015.jpg; ///; /// Height modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter016.jpg; ///; /// Height modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter017.jpg; ///; /// Height modes grou",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3213,Usability,Simpl,Simple,3213,"displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter014.jpg; ///; /// Light modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter015.jpg; ///; /// Height modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter016.jpg; ///; /// Height modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter017.jpg; ///; /// Height modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter018.jpg; ///; /// Height modes gr",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3325,Usability,Simpl,Simple,3325,"splay mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter012.jpg; ///; /// Light modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter013.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter014.jpg; ///; /// Light modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter015.jpg; ///; /// Height modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter016.jpg; ///; /// Height modes group, display mode = grid, 256 x 256 channels.; /// \image html spectrumpainter017.jpg; ///; /// Height modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter018.jpg; ///; /// Height modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter019.jpg; ///; /// Height modes group,",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:5218,Usability,Simpl,Simple,5218," display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter019.jpg; ///; /// Height modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter020.jpg; ///; /// Height modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter021.jpg; ///; /// Light - height modes group, display mode = surface, 64 x 64 channels. The weight; /// between both shading algorithms is set to 0.5. One can observe the influence of; /// both shadings.; ///; /// #### Function: TSpectrum2Painter::SetPenAttr(Int_t color,Int_t style,Int_t width); ///; /// Using this function one can change pen color, pen style and pen width.; /// Possible pen styles are:; ///; /// - ` kPenStyleSolid,`; /// - ` kPenStyleDash,`; /// - ` kPenStyleDot,`; /// - ` kPenStyleDashDot.`; ///; /// Default values:; ///; /// - ` color = kBlack`; /// - ` style = kPenStyleSolid`; /// - ` width = 1`; ///; /// \image html spectrumpainter022.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels. Pen width = 3.; ///; /// #### Function: TSpectrum2Painter::SetNodes(Int_t nodesx,Int_t nodesy); ///; /// Sometimes the displayed region is rather large. When displaying all channels; /// pictures become very dense and complicated. It is very difficult to understand; /// overall shape of the data. Therefore in the package we have implemented the; /// possibility to change the density of displayed channels. Only channels; /// coinciding with given nodes are displayed. In the next figure we introduce the; /// example of the above presented spectrum with number of nodes set to 64x64.; ///; /// Default values:; ///; /// - ` nodesx = Xmax-Xmin+1`; /// - ` nodesy = Ymax-Ymin+1`; ///; /// \image html spectrumpainter023.jpg; ///; /// Simple modes group, display mode = grid, 256 x 256 channels.; /// Number of nodes is 64x64.; ///; /// #### Function: void TSpectrum2Painter::SetAngles (Int_t alpha,Int_t beta, Int_t view); ///; /// One can change the angles of ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:6014,Usability,Simpl,Simple,6014,"enStyleDashDot.`; ///; /// Default values:; ///; /// - ` color = kBlack`; /// - ` style = kPenStyleSolid`; /// - ` width = 1`; ///; /// \image html spectrumpainter022.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels. Pen width = 3.; ///; /// #### Function: TSpectrum2Painter::SetNodes(Int_t nodesx,Int_t nodesy); ///; /// Sometimes the displayed region is rather large. When displaying all channels; /// pictures become very dense and complicated. It is very difficult to understand; /// overall shape of the data. Therefore in the package we have implemented the; /// possibility to change the density of displayed channels. Only channels; /// coinciding with given nodes are displayed. In the next figure we introduce the; /// example of the above presented spectrum with number of nodes set to 64x64.; ///; /// Default values:; ///; /// - ` nodesx = Xmax-Xmin+1`; /// - ` nodesy = Ymax-Ymin+1`; ///; /// \image html spectrumpainter023.jpg; ///; /// Simple modes group, display mode = grid, 256 x 256 channels.; /// Number of nodes is 64x64.; ///; /// #### Function: void TSpectrum2Painter::SetAngles (Int_t alpha,Int_t beta, Int_t view); ///; /// One can change the angles of the position of 3-d space and to rotate the; /// space. Alpha parameter defines the angle between bottom horizontal screen line; /// and the displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis going; /// through the center of it employing the view parameter.; /// Allowed values are 0, 90, 180 and 270 degrees respectively.; ///; /// Default values:; ///; /// - ` alpha = 20`; /// - ` beta = 60`; /// - ` view = 0`; ///; /// \image html spectrumpainter024.jpg; ///; /// Light modes group, display mode = surface, 256 x 256 channels. Angles are; /// set as follows: alpha=40, beta=30, view=0.; /// \image html spectrumpainter025.jpg; ///; /// Light modes group, display mode = surface, 256 x 256 channels",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:12456,Usability,Simpl,Simple,12456," kShadowsNotPainted`; /// - ` kShadowsPainted`; ///; /// Default values:; ///; /// - ` shading = kShaded`; /// - ` shadow = kShadowsNotPainted`; ///; /// \image html spectrumpainter035.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels, not shaded.; /// \image html spectrumpainter036.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels, shaded, with; /// shadow.; ///; /// #### Function: TSpectrum2Painter::SetBezier(Int_t bezier); ///; /// For kModeGroupSimple display modes group and for kDisplayModeGrid,; /// kDisplayModeLinesX >and kDisplayModeLinesY display modes one; /// can smooth data using Bezier smoothing algorithm. The function does not apply; /// for other display modes groups and display modes. Possible values are:; ///; /// - ` kNoBezierInterpol`; /// - ` kBezierInterpol`; ///; /// Default value is:; ///; /// - ` bezier = kNoBezierInterpol.`; ///; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels with Bezier; /// smoothing.; ///; /// #### Function: TSpectrum2Painter::SetContourWidth(Int_t width); ///; /// This function applies only for kDisplayModeContours display mode.; /// One can change the width between horizontal slices and thus their density.; /// Default value: width=50.; /// \image html spectrumpainter037.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels. Width between; /// slices was set to 30.; ///; /// #### Function: TSpectrum2Painter::SetLightHeightWeight(Double_t weight); ///; /// For kModeGroupLightHeight display modes group one can change the; /// weight between both shading algorithm. The function does not apply for other; /// display modes groups. Default value is: weight=0.5.; /// \image html spectrumpainter038.jpg; ///; /// Light - height modes group, display mode = surface, 64 x 64 channels.; /// The weight between both shading algorithms is set to 0.7.; ///; /// #### Function: TSpectrum2Painter::SetChanMarks(",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:12853,Usability,Simpl,Simple,12853,"aded, with; /// shadow.; ///; /// #### Function: TSpectrum2Painter::SetBezier(Int_t bezier); ///; /// For kModeGroupSimple display modes group and for kDisplayModeGrid,; /// kDisplayModeLinesX >and kDisplayModeLinesY display modes one; /// can smooth data using Bezier smoothing algorithm. The function does not apply; /// for other display modes groups and display modes. Possible values are:; ///; /// - ` kNoBezierInterpol`; /// - ` kBezierInterpol`; ///; /// Default value is:; ///; /// - ` bezier = kNoBezierInterpol.`; ///; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels with Bezier; /// smoothing.; ///; /// #### Function: TSpectrum2Painter::SetContourWidth(Int_t width); ///; /// This function applies only for kDisplayModeContours display mode.; /// One can change the width between horizontal slices and thus their density.; /// Default value: width=50.; /// \image html spectrumpainter037.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels. Width between; /// slices was set to 30.; ///; /// #### Function: TSpectrum2Painter::SetLightHeightWeight(Double_t weight); ///; /// For kModeGroupLightHeight display modes group one can change the; /// weight between both shading algorithm. The function does not apply for other; /// display modes groups. Default value is: weight=0.5.; /// \image html spectrumpainter038.jpg; ///; /// Light - height modes group, display mode = surface, 64 x 64 channels.; /// The weight between both shading algorithms is set to 0.7.; ///; /// #### Function: TSpectrum2Painter::SetChanMarks(Int_t enable,Int_t color,Int_t width,Int_t height,Int_t style); /// In addition to the surface drawn using any above given algorithm one can display; /// channel marks. One can control the color as well as the width, height; /// (in pixels) and the style of the marks. The parameter enable can be set to:; ///; /// - `kChannelMarksNotDrawn`; /// - `kChannelMarksDrawn.`; ///; /// The ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:185,Usability,simpl,simple,185,"////////////////////////////////////////////////////////////////////////////////; /// Sets display group mode and display mode:; /// - modeGroup - the following group modes can be set: simple modes-kPicture2ModeGroupSimple, modes with shading according to light-kPicture2ModeGroupLight, modes with shading according to channels counts-kPicture2ModeGroupHeight, modes of combination of shading according to light and to channels counts-kPicture2ModeGroupLightHeight; /// - displayMode - posible display modes are: points, grid, contours, bars, x_lines, y_lines, bars_x, bars_y, needles, surface, triangles",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:136,Testability,log,log,136,"////////////////////////////////////////////////////////////////////////////////; /// Sets z-axis scale:; /// - scale - linear, sqrt or log",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:486,Usability,simpl,simple,486,"////////////////////////////////////////////////////////////////////////////////; /// Sets shading color algorithm:; /// - olorAlgorithm - applies only for rainbowed display modes; /// (rgb smooth algorithm, rgb modulo color component, cmy smooth algorithm,; /// - cmy modulo color component, cie smooth algorithm,; /// - cie modulo color component, yiq smooth algorithm,; /// - yiq modulo color component, hsv smooth algorithm,; /// - hsv modulo color component, it does not apply for simple display modes; /// algorithm group",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:182,Usability,simpl,simple,182,"////////////////////////////////////////////////////////////////////////////////; /// Sets on/off Bezier smoothing:; /// - bezier - determines Bezier interpolation (applies only for simple; /// display modes group for grid, x_lines, y_lines display modes)",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:193,Usability,simpl,simple,193,"////////////////////////////////////////////////////////////////////////////////; /// Gets display group mode and display mode:; /// -modeGroup - the following group modes might have been set: simple modes-kPicture2ModeGroupSimple, modes with shading according to light-kPicture2ModeGroupLight, modes with shading according to channels counts-kPicture2ModeGroupHeight, modes of combination of shading according to light and to channels counts-kPicture2ModeGroupLightHeight; /// -displayMode - display modes that might have been set: points, grid, contours, bars, x_lines, y_lines, bars_x, bars_y, needles, surface, triangles",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:146,Testability,log,log,146,"////////////////////////////////////////////////////////////////////////////////; /// Gets z-axis scale:; /// - scale - it can be linear, sqrt or log",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:182,Usability,simpl,simple,182,"////////////////////////////////////////////////////////////////////////////////; /// Gets Bezier smoothing switch:; /// - bezier - determines Bezier interpolation (applies only for simple display modes group for grid, x_lines, y_lines display modes)",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:139,Availability,avail,available,139,"////////////////////////////////////////////////////////////////////////////////; /// This function allows to set all the possible options available in; /// TSpectrum2Painter and paint ""h2"".; ///; /// TSpectrum2Painter offers a large set of options/attributes. In the; /// ""option"" parameter each of them can be set to specific values via; /// ""operators"" in the option itself. for instance on can do:; ///; /// h2->Draw(""SPEC a(30,30,0)"");; ///; /// to draw h2 with TSpectrum2Painter using all the default attributes except; /// the viewing angles. The operators' names are case insensitive (one can use; /// ""a"" or ""A""). Operators parameters are separated by "","". The operators can; /// be put is any order in the option. Operators must be separated by "" "".; /// No "" "" characters should be put in an operator. This help page describes; /// all the available operators.; ///; /// The way ""h2"" will be painted is controlled with 2 parameters the ""Display; /// modes groups"" and the ""Display Modes"".; ///; /// ""Display modes groups"" can take the following values:; ///; /// - 0 = Simple - it covers simple display modes using one color only; /// - 1 = Light - in this group the shading is carried out according to; /// the position of the fictive light source; /// - 2 = Height - in this group the shading is carried out according to; /// the channel contents; /// - 3 = LightHeight - combination of two previous shading algorithms. One; /// can control the weight between both algorithms.; ///; /// ""Display modes"" can take the following values:; ///; /// - 1 = Points.; /// - 2 = Grid.; /// - 3 = Contours.; /// - 4 = Bars.; /// - 5 = LinesX.; /// - 6 = LinesY.; /// - 7 = BarsX.; /// - 8 = BarsY.; /// - 9 = Needles.; /// - 10 = Surface.; /// - 11 = Triangles.; ///; /// Using this function these parameters can be set using the ""dm"" operator; /// in the option. Example:; ///; /// h2->Draw(""SPEC dm(1,2)"");; ///; /// will paint the 2D histogram h2 using the ""Light Display mode group"" and; /// the",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:851,Availability,avail,available,851,"////////////////////////////////////////////////////////////////////////////////; /// This function allows to set all the possible options available in; /// TSpectrum2Painter and paint ""h2"".; ///; /// TSpectrum2Painter offers a large set of options/attributes. In the; /// ""option"" parameter each of them can be set to specific values via; /// ""operators"" in the option itself. for instance on can do:; ///; /// h2->Draw(""SPEC a(30,30,0)"");; ///; /// to draw h2 with TSpectrum2Painter using all the default attributes except; /// the viewing angles. The operators' names are case insensitive (one can use; /// ""a"" or ""A""). Operators parameters are separated by "","". The operators can; /// be put is any order in the option. Operators must be separated by "" "".; /// No "" "" characters should be put in an operator. This help page describes; /// all the available operators.; ///; /// The way ""h2"" will be painted is controlled with 2 parameters the ""Display; /// modes groups"" and the ""Display Modes"".; ///; /// ""Display modes groups"" can take the following values:; ///; /// - 0 = Simple - it covers simple display modes using one color only; /// - 1 = Light - in this group the shading is carried out according to; /// the position of the fictive light source; /// - 2 = Height - in this group the shading is carried out according to; /// the channel contents; /// - 3 = LightHeight - combination of two previous shading algorithms. One; /// can control the weight between both algorithms.; ///; /// ""Display modes"" can take the following values:; ///; /// - 1 = Points.; /// - 2 = Grid.; /// - 3 = Contours.; /// - 4 = Bars.; /// - 5 = LinesX.; /// - 6 = LinesY.; /// - 7 = BarsX.; /// - 8 = BarsY.; /// - 9 = Needles.; /// - 10 = Surface.; /// - 11 = Triangles.; ///; /// Using this function these parameters can be set using the ""dm"" operator; /// in the option. Example:; ///; /// h2->Draw(""SPEC dm(1,2)"");; ///; /// will paint the 2D histogram h2 using the ""Light Display mode group"" and; /// the",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3358,Availability,error,error,3358,"|; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// The Pen Attributes can be changed using pa(color, style, width). Example:; ///; /// h2->Draw(""SPEC dm(1,2) pa(2,1,2)"");; ///; /// sets the line color to 2, line type to 1 and line width to2. Note that if; /// pa() is not specified, the histogram ""h2"" line attributes are used. Note; /// also that operators for SPEC option can be cumulated and specified in; /// any order.; ///; /// The buffer size can be change with bf(size). Example:; ///; /// h2->Draw(""SPEC bf(8000)"");; ///; /// The spectrum painter needs a buffer to paint the spectrum. By default the; /// buffer size is set to 1600. In most cases this buffer size is enough. But; /// if the canvas size is very big, for instance 8000x5000 this buffer size is; /// too small. An error message is issued telling to use the option bf().; ///; /// The number of nodes can be change with n(nodesx, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) chan",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3364,Integrability,message,message,3364,"|; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// The Pen Attributes can be changed using pa(color, style, width). Example:; ///; /// h2->Draw(""SPEC dm(1,2) pa(2,1,2)"");; ///; /// sets the line color to 2, line type to 1 and line width to2. Note that if; /// pa() is not specified, the histogram ""h2"" line attributes are used. Note; /// also that operators for SPEC option can be cumulated and specified in; /// any order.; ///; /// The buffer size can be change with bf(size). Example:; ///; /// h2->Draw(""SPEC bf(8000)"");; ///; /// The spectrum painter needs a buffer to paint the spectrum. By default the; /// buffer size is set to 1600. In most cases this buffer size is enough. But; /// if the canvas size is very big, for instance 8000x5000 this buffer size is; /// too small. An error message is issued telling to use the option bf().; ///; /// The number of nodes can be change with n(nodesx, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) chan",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:4477,Testability,Log,Log,4477,"x, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) changes the scale of the Z-axis Possible values are:; ///; /// - 0 = Linear (default); /// - 1 = Log; /// - 2 = Sqrt; ///; /// If gPad->SetLogz() has been set, log scale on Z-axis is set automatically.; /// No need to use the zs() operator. Note that the X and Y axis are always; /// linear.; ///; /// ci(r,g,b), were r,g and b are floats defines the colors increments.; /// For sophisticated shading (Light, Height and LightHeight Display Modes; /// Groups) the color palette starts from the basic pen color (see pa(); /// function). There is a predefined number of color levels (256). Color in; /// every level is calculated by adding the increments of the r, g, b; /// components to the previous level. Using this function one can change the; /// color increments between two neighbouring color levels. The function does; /// not apply dor the Simple Display Modes Group. The default values are:; /// (1,1,1).; ///; /// ca(color_algorithm) allows to choose the Color Algorithm.; /// To define the colors one can employ one of the following color algorithms; /// (RGB, CMY, CIE, YIQ, HVS ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:4540,Testability,log,log,4540,"x, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) changes the scale of the Z-axis Possible values are:; ///; /// - 0 = Linear (default); /// - 1 = Log; /// - 2 = Sqrt; ///; /// If gPad->SetLogz() has been set, log scale on Z-axis is set automatically.; /// No need to use the zs() operator. Note that the X and Y axis are always; /// linear.; ///; /// ci(r,g,b), were r,g and b are floats defines the colors increments.; /// For sophisticated shading (Light, Height and LightHeight Display Modes; /// Groups) the color palette starts from the basic pen color (see pa(); /// function). There is a predefined number of color levels (256). Color in; /// every level is calculated by adding the increments of the r, g, b; /// components to the previous level. Using this function one can change the; /// color increments between two neighbouring color levels. The function does; /// not apply dor the Simple Display Modes Group. The default values are:; /// (1,1,1).; ///; /// ca(color_algorithm) allows to choose the Color Algorithm.; /// To define the colors one can employ one of the following color algorithms; /// (RGB, CMY, CIE, YIQ, HVS ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:1080,Usability,Simpl,Simple,1080,"ter offers a large set of options/attributes. In the; /// ""option"" parameter each of them can be set to specific values via; /// ""operators"" in the option itself. for instance on can do:; ///; /// h2->Draw(""SPEC a(30,30,0)"");; ///; /// to draw h2 with TSpectrum2Painter using all the default attributes except; /// the viewing angles. The operators' names are case insensitive (one can use; /// ""a"" or ""A""). Operators parameters are separated by "","". The operators can; /// be put is any order in the option. Operators must be separated by "" "".; /// No "" "" characters should be put in an operator. This help page describes; /// all the available operators.; ///; /// The way ""h2"" will be painted is controlled with 2 parameters the ""Display; /// modes groups"" and the ""Display Modes"".; ///; /// ""Display modes groups"" can take the following values:; ///; /// - 0 = Simple - it covers simple display modes using one color only; /// - 1 = Light - in this group the shading is carried out according to; /// the position of the fictive light source; /// - 2 = Height - in this group the shading is carried out according to; /// the channel contents; /// - 3 = LightHeight - combination of two previous shading algorithms. One; /// can control the weight between both algorithms.; ///; /// ""Display modes"" can take the following values:; ///; /// - 1 = Points.; /// - 2 = Grid.; /// - 3 = Contours.; /// - 4 = Bars.; /// - 5 = LinesX.; /// - 6 = LinesY.; /// - 7 = BarsX.; /// - 8 = BarsY.; /// - 9 = Needles.; /// - 10 = Surface.; /// - 11 = Triangles.; ///; /// Using this function these parameters can be set using the ""dm"" operator; /// in the option. Example:; ///; /// h2->Draw(""SPEC dm(1,2)"");; ///; /// will paint the 2D histogram h2 using the ""Light Display mode group"" and; /// the ""Grid Display mode"". The following table summarises all the possible; /// combinations of the ""Display modes groups"" and the ""Display modes"".; ///; /// | | Simple | Light | Height | Light-Height |; /// |-----------",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:1099,Usability,simpl,simple,1099,"ter offers a large set of options/attributes. In the; /// ""option"" parameter each of them can be set to specific values via; /// ""operators"" in the option itself. for instance on can do:; ///; /// h2->Draw(""SPEC a(30,30,0)"");; ///; /// to draw h2 with TSpectrum2Painter using all the default attributes except; /// the viewing angles. The operators' names are case insensitive (one can use; /// ""a"" or ""A""). Operators parameters are separated by "","". The operators can; /// be put is any order in the option. Operators must be separated by "" "".; /// No "" "" characters should be put in an operator. This help page describes; /// all the available operators.; ///; /// The way ""h2"" will be painted is controlled with 2 parameters the ""Display; /// modes groups"" and the ""Display Modes"".; ///; /// ""Display modes groups"" can take the following values:; ///; /// - 0 = Simple - it covers simple display modes using one color only; /// - 1 = Light - in this group the shading is carried out according to; /// the position of the fictive light source; /// - 2 = Height - in this group the shading is carried out according to; /// the channel contents; /// - 3 = LightHeight - combination of two previous shading algorithms. One; /// can control the weight between both algorithms.; ///; /// ""Display modes"" can take the following values:; ///; /// - 1 = Points.; /// - 2 = Grid.; /// - 3 = Contours.; /// - 4 = Bars.; /// - 5 = LinesX.; /// - 6 = LinesY.; /// - 7 = BarsX.; /// - 8 = BarsY.; /// - 9 = Needles.; /// - 10 = Surface.; /// - 11 = Triangles.; ///; /// Using this function these parameters can be set using the ""dm"" operator; /// in the option. Example:; ///; /// h2->Draw(""SPEC dm(1,2)"");; ///; /// will paint the 2D histogram h2 using the ""Light Display mode group"" and; /// the ""Grid Display mode"". The following table summarises all the possible; /// combinations of the ""Display modes groups"" and the ""Display modes"".; ///; /// | | Simple | Light | Height | Light-Height |; /// |-----------",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2158,Usability,Simpl,Simple,2158,"hading algorithms. One; /// can control the weight between both algorithms.; ///; /// ""Display modes"" can take the following values:; ///; /// - 1 = Points.; /// - 2 = Grid.; /// - 3 = Contours.; /// - 4 = Bars.; /// - 5 = LinesX.; /// - 6 = LinesY.; /// - 7 = BarsX.; /// - 8 = BarsY.; /// - 9 = Needles.; /// - 10 = Surface.; /// - 11 = Triangles.; ///; /// Using this function these parameters can be set using the ""dm"" operator; /// in the option. Example:; ///; /// h2->Draw(""SPEC dm(1,2)"");; ///; /// will paint the 2D histogram h2 using the ""Light Display mode group"" and; /// the ""Grid Display mode"". The following table summarises all the possible; /// combinations of the ""Display modes groups"" and the ""Display modes"".; ///; /// | | Simple | Light | Height | Light-Height |; /// |-----------|--------|-------|--------|--------------|; /// | Points | X | X | X | X |; /// | Grid | X | X | X | X |; /// | Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// The Pen Attributes can be changed using pa(color, style, width). Example:; ///; /// h2->Draw(""SPEC dm(1,2) pa(2,1,2)"");; ///; /// sets the line color to 2, line type to 1 and line width to2. Note that if; /// pa() is not specified, the histogram ""h2"" line attributes are used. Note; /// also that operators for SPEC option can be cumulated and specified in; /// any order.; ///; /// The buffer size can be change with bf(size). Example:; ///; /// h2->Draw(""SPEC bf(8000)"");; ///; /// The spectrum painter needs a buffer to paint the spectrum. By default the; /// buffer size is set to 1600. In most cases this buffer size is enough. But; /// if the canvas size is very big, for instance 8000x5000 this buffer size is; /// too small. An error message is issued telling to use the option bf().; ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:5227,Usability,Simpl,Simple,5227,"e around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) changes the scale of the Z-axis Possible values are:; ///; /// - 0 = Linear (default); /// - 1 = Log; /// - 2 = Sqrt; ///; /// If gPad->SetLogz() has been set, log scale on Z-axis is set automatically.; /// No need to use the zs() operator. Note that the X and Y axis are always; /// linear.; ///; /// ci(r,g,b), were r,g and b are floats defines the colors increments.; /// For sophisticated shading (Light, Height and LightHeight Display Modes; /// Groups) the color palette starts from the basic pen color (see pa(); /// function). There is a predefined number of color levels (256). Color in; /// every level is calculated by adding the increments of the r, g, b; /// components to the previous level. Using this function one can change the; /// color increments between two neighbouring color levels. The function does; /// not apply dor the Simple Display Modes Group. The default values are:; /// (1,1,1).; ///; /// ca(color_algorithm) allows to choose the Color Algorithm.; /// To define the colors one can employ one of the following color algorithms; /// (RGB, CMY, CIE, YIQ, HVS models). When the level of a component reaches; /// the limit value one can choose either smooth transition (by decreasing; /// the limit value) or a sharp modulo transition (continuing with 0 value).; /// This makes possible to realize various visual effects. One can choose from; /// the following set of the algorithms:; ///; /// - 0 = RGB Smooth; /// - 1 = RGB Modulo; /// - 2 = CMY Smooth; /// - 3 = CMY Modulo; /// - 4 = CIE Smooth; /// - 5 = CIE Modulo; /// - 6 = YIQ Smooth; /// - 7 = YIQ Modulo; /// - 8 = HVS Smooth; /// - 9 = HVS Modulo; ///; /// This function does not apply on Simple display modes group. Default; /// value is 0. Example:; ///; /// h2->Draw(""SPEC c1(4) dm(0,1) a(30,30,0)"");; ///; /// choose CMY Modulo to paint the ""h2""",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:6060,Usability,Simpl,Simple,6060,"tion). There is a predefined number of color levels (256). Color in; /// every level is calculated by adding the increments of the r, g, b; /// components to the previous level. Using this function one can change the; /// color increments between two neighbouring color levels. The function does; /// not apply dor the Simple Display Modes Group. The default values are:; /// (1,1,1).; ///; /// ca(color_algorithm) allows to choose the Color Algorithm.; /// To define the colors one can employ one of the following color algorithms; /// (RGB, CMY, CIE, YIQ, HVS models). When the level of a component reaches; /// the limit value one can choose either smooth transition (by decreasing; /// the limit value) or a sharp modulo transition (continuing with 0 value).; /// This makes possible to realize various visual effects. One can choose from; /// the following set of the algorithms:; ///; /// - 0 = RGB Smooth; /// - 1 = RGB Modulo; /// - 2 = CMY Smooth; /// - 3 = CMY Modulo; /// - 4 = CIE Smooth; /// - 5 = CIE Modulo; /// - 6 = YIQ Smooth; /// - 7 = YIQ Modulo; /// - 8 = HVS Smooth; /// - 9 = HVS Modulo; ///; /// This function does not apply on Simple display modes group. Default; /// value is 0. Example:; ///; /// h2->Draw(""SPEC c1(4) dm(0,1) a(30,30,0)"");; ///; /// choose CMY Modulo to paint the ""h2"" histogram.; ///; /// lp(x,y,z) set the light position.; /// In Light and LightHeight display modes groups the color palette is; /// calculated according to the fictive light source position in 3-d space.; /// Using this function one can change the position of the source and thus; /// to achieve various graphical effects. This function does not apply for; /// Simple and Height display modes groups. Default is:; /// lp(1000,1000,100).; ///; /// s(shading,shadow) allows to set the shading.; /// The picture's surface is composed of triangles. If desired the edges of; /// the neighbouring triangles can be smoothed (shaded). If desired the; /// display of the shadow can be painted as w",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:6582,Usability,Simpl,Simple,6582,"decreasing; /// the limit value) or a sharp modulo transition (continuing with 0 value).; /// This makes possible to realize various visual effects. One can choose from; /// the following set of the algorithms:; ///; /// - 0 = RGB Smooth; /// - 1 = RGB Modulo; /// - 2 = CMY Smooth; /// - 3 = CMY Modulo; /// - 4 = CIE Smooth; /// - 5 = CIE Modulo; /// - 6 = YIQ Smooth; /// - 7 = YIQ Modulo; /// - 8 = HVS Smooth; /// - 9 = HVS Modulo; ///; /// This function does not apply on Simple display modes group. Default; /// value is 0. Example:; ///; /// h2->Draw(""SPEC c1(4) dm(0,1) a(30,30,0)"");; ///; /// choose CMY Modulo to paint the ""h2"" histogram.; ///; /// lp(x,y,z) set the light position.; /// In Light and LightHeight display modes groups the color palette is; /// calculated according to the fictive light source position in 3-d space.; /// Using this function one can change the position of the source and thus; /// to achieve various graphical effects. This function does not apply for; /// Simple and Height display modes groups. Default is:; /// lp(1000,1000,100).; ///; /// s(shading,shadow) allows to set the shading.; /// The picture's surface is composed of triangles. If desired the edges of; /// the neighbouring triangles can be smoothed (shaded). If desired the; /// display of the shadow can be painted as well. The function does not apply; /// for Simple display modes group. The possible values for shading are:; ///; /// - 0 = Not Shaded; /// - 1 = Shaded; ///; /// The possible values for shadow are:; ///; /// - 0 = Shadows are not painted; /// - 1 = Shadows are painted; ///; /// Default values: s(1,0); ///; /// b(bezier) set the Bezier smoothing.; /// For Simple display modes group and for Grid, LinesX and LinesY display; /// modes one can smooth data using Bezier smoothing algorithm. The function; /// does not apply for other display modes groups and display modes. Possible; /// values are:; ///; /// - 0 = No bezier smoothing; /// - 1 = Bezier smoothing; ///; /// D",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:6951,Usability,Simpl,Simple,6951,"Smooth; /// - 7 = YIQ Modulo; /// - 8 = HVS Smooth; /// - 9 = HVS Modulo; ///; /// This function does not apply on Simple display modes group. Default; /// value is 0. Example:; ///; /// h2->Draw(""SPEC c1(4) dm(0,1) a(30,30,0)"");; ///; /// choose CMY Modulo to paint the ""h2"" histogram.; ///; /// lp(x,y,z) set the light position.; /// In Light and LightHeight display modes groups the color palette is; /// calculated according to the fictive light source position in 3-d space.; /// Using this function one can change the position of the source and thus; /// to achieve various graphical effects. This function does not apply for; /// Simple and Height display modes groups. Default is:; /// lp(1000,1000,100).; ///; /// s(shading,shadow) allows to set the shading.; /// The picture's surface is composed of triangles. If desired the edges of; /// the neighbouring triangles can be smoothed (shaded). If desired the; /// display of the shadow can be painted as well. The function does not apply; /// for Simple display modes group. The possible values for shading are:; ///; /// - 0 = Not Shaded; /// - 1 = Shaded; ///; /// The possible values for shadow are:; ///; /// - 0 = Shadows are not painted; /// - 1 = Shadows are painted; ///; /// Default values: s(1,0); ///; /// b(bezier) set the Bezier smoothing.; /// For Simple display modes group and for Grid, LinesX and LinesY display; /// modes one can smooth data using Bezier smoothing algorithm. The function; /// does not apply for other display modes groups and display modes. Possible; /// values are:; ///; /// - 0 = No bezier smoothing; /// - 1 = Bezier smoothing; ///; /// Default value is: b(0); ///; /// cw(width) set the contour width.; /// This function applies only for the Contours display mode. One can change; /// the width between horizontal slices and thus their density.; /// Default value: cw(50); ///; /// lhw(weight) set the light height weight.; /// For LightHeight display modes group one can change the weight between; //",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:7266,Usability,Simpl,Simple,7266," the color palette is; /// calculated according to the fictive light source position in 3-d space.; /// Using this function one can change the position of the source and thus; /// to achieve various graphical effects. This function does not apply for; /// Simple and Height display modes groups. Default is:; /// lp(1000,1000,100).; ///; /// s(shading,shadow) allows to set the shading.; /// The picture's surface is composed of triangles. If desired the edges of; /// the neighbouring triangles can be smoothed (shaded). If desired the; /// display of the shadow can be painted as well. The function does not apply; /// for Simple display modes group. The possible values for shading are:; ///; /// - 0 = Not Shaded; /// - 1 = Shaded; ///; /// The possible values for shadow are:; ///; /// - 0 = Shadows are not painted; /// - 1 = Shadows are painted; ///; /// Default values: s(1,0); ///; /// b(bezier) set the Bezier smoothing.; /// For Simple display modes group and for Grid, LinesX and LinesY display; /// modes one can smooth data using Bezier smoothing algorithm. The function; /// does not apply for other display modes groups and display modes. Possible; /// values are:; ///; /// - 0 = No bezier smoothing; /// - 1 = Bezier smoothing; ///; /// Default value is: b(0); ///; /// cw(width) set the contour width.; /// This function applies only for the Contours display mode. One can change; /// the width between horizontal slices and thus their density.; /// Default value: cw(50); ///; /// lhw(weight) set the light height weight.; /// For LightHeight display modes group one can change the weight between; /// both shading algorithms. The function does not apply for other display; /// modes groups. Default value is lhw(0.5).; ///; /// cm(enable,color,width,height,style) allows to draw a marker on each node.; /// In addition to the surface drawn using any above given algorithm one can; /// display channel marks. One can control the color as well as the width,; /// height (in pixels) ",MatchSource.CODE_COMMENT,hist/spectrumpainter/src/TSpectrum2Painter.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:645,Availability,error,error,645,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:223,Deployability,update,updates,223,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:279,Deployability,update,updated,279,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:1256,Performance,optimiz,optimized,1256,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:897,Usability,simpl,simplified,897,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:61,Availability,error,error,61,"/// number of input bins which are dropped because they have error=nullptr",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:3,Usability,clear,clear,3,"// clear all results",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:13,Availability,error,error,13,"// return an error matrix as histogram",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:29,Safety,risk,risk,29,"// minimize Stein's unbiased risk estimator using successive calls to DoUnfold at various tau. Optionally, the contributions to SURE (DF and Chi2A) or the L-curve are saved",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:52,Availability,Error,Error,52,"// calculate square roots of the Eigenvalues of the Error matrix",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:3,Security,access,access,3,"// access unfolding results",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:20,Safety,risk,risk,20,"// Stein's unbiased risk estimator; // access input parameters",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:39,Security,access,access,39,"// Stein's unbiased risk estimator; // access input parameters",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:29,Availability,error,error,29,"// get input data inverse of error matrix",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:3,Security,access,access,3,"// access various properties of the result; /// get matrix connecting input and output changes",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfold.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:452,Availability,error,error,452,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, new option isPeriodic; // Version 17.1, in parallel to TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:262,Safety,avoid,avoid,262,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, new option isPeriodic; // Version 17.1, in parallel to TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:172,Security,access,access,172,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, new option isPeriodic; // Version 17.1, in parallel to TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:16,Modifiability,variab,variable,16,"// add an axis (variable bins) to the distribution associated with this node",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:48,Security,access,access,48,// return global factor; /********************* access by global bin number ******/,MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:61,Security,access,access,61,"// get neighbour bins along an axis; /********************** access distribution properties *************/; /// number of bins in the distribution possibly including under/overflow",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h:3,Deployability,update,update,3,"// update fFirstBin and fLastBin",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinning.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinning.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h:227,Deployability,update,updated,227,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for repeated bins with the same width; // Version 17.2, XML interface for class TUnfoldBinning",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinningXML.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h:449,Integrability,interface,interface,449,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for repeated bins with the same width; // Version 17.2, XML interface for class TUnfoldBinning",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinningXML.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h:28,Integrability,interface,interface,28,/********************** XML interface to read binning schemes *************/,MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldBinningXML.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:233,Deployability,update,updated,233,"// Author: Stefan Schmitt; // DESY, 11/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, new method GetDXDY(); // Version 17.7, with bug-fix for curvature regularisation; // Version 17.6, with updated doxygen comments and bug-fixes in TUnfoldBinning; // Version 17.5, bug fix in TUnfold also corrects GetEmatrixSysUncorr(); // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, add scan type RhoSquare; // Version 17.0, support for density regularisation and complex binning schemes",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:284,Modifiability,variab,variable,284,"//////////////////////////////////////////////////////////////////////////; // //; // //; // TUnfoldDensity, an extension of the class TUnfoldSys to correct for //; // migration effects. TUnfoldDensity provides methods to deal with //; // multidimensional complex binning schemes and variable bin widths //; // //; // Citation: S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] //; // //; //////////////////////////////////////////////////////////////////////////; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:34,Safety,detect,detector,34,"/// binning scheme for the input (detector level)",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:13,Modifiability,variab,variable,13,"// scan some variable (e.g. global correlation) and find a minimum using successive calls to DoUnfold(Double_t) at various tau",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:13,Modifiability,variab,variable,13,"// calculate variable for ScanTau()",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:7,Availability,error,error,7,"// get error matrix contribution from uncorrelated errors on the matrix A",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:51,Availability,error,errors,51,"// get error matrix contribution from uncorrelated errors on the matrix A",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:7,Availability,error,error,7,"// get error matrix from uncorrelated error of one background source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:38,Availability,error,error,38,"// get error matrix from uncorrelated error of one background source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:7,Availability,error,error,7,"// get error contribution from input vector",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:13,Availability,error,error,13,"// get total error including systematic,statistical,background,tau errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:67,Availability,error,errors,67,"// get total error including systematic,statistical,background,tau errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:49,Availability,error,errors,49,"// get global correlation coefficients, stat+bgr errors only (from TUnfold)",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:61,Availability,error,errors,61,"// get global correlation coefficients, including systematic errors (from TUnfoldSys)",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldDensity.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldIterativeEM.h:1278,Integrability,interface,interface,1278,"// Author: Stefan Schmitt; // DESY, 19/10/11; // Version 17.9; //////////////////////////////////////////////////////////////////////////; // //; // //; // TUnfold provides functionality to correct data //; // for migration effects. //; // //; // Citation: S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] //; // //; // this class implements the iterative EM unfolding method //; // (also called D'Agostini Method or ""iterative Bayesian method"") //; // which has been ""invented"" independently by numnerous authors //; // to unfold Poisson-distributed, mutually exclusive bins. //; // See e.g. //; // Richardson, W.H., Opt. Soc. Amer. A62 (1972), 55 //; // Lucy, L.B., Astron. J. 79 (1974), 745. //; // Vardi, Y., Shepp, L.A. and Kaufman, L., //; // J. Amer. Stat. Assoc. 80 (1985), 8. //; // Multhei, H.N. and Schorr, B., Nucl. Instr. Meth. A257 (1987), 371 //; // D'Agostini, G., Nucl. Instr. Meth. A362 (1995), 487 //; // //; // The novelty with this implementation is that the number of //; // iterations can be chosen based on SURE //; // (Stein's unbiased Risk Estimator) //; // See: //; // Tibshirani, R.J. and Rosset, S., J. Amer. Stat. Assoc. 114, 526 //; // [arXiv:1612.09415] //; // //; // This method is there for comparison with the Tihkonov unfolding. //; // The interface is similar to ""TUnfoldDensity"" //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldIterativeEM.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldIterativeEM.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldIterativeEM.h:1063,Safety,Risk,Risk,1063,"// Author: Stefan Schmitt; // DESY, 19/10/11; // Version 17.9; //////////////////////////////////////////////////////////////////////////; // //; // //; // TUnfold provides functionality to correct data //; // for migration effects. //; // //; // Citation: S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] //; // //; // this class implements the iterative EM unfolding method //; // (also called D'Agostini Method or ""iterative Bayesian method"") //; // which has been ""invented"" independently by numnerous authors //; // to unfold Poisson-distributed, mutually exclusive bins. //; // See e.g. //; // Richardson, W.H., Opt. Soc. Amer. A62 (1972), 55 //; // Lucy, L.B., Astron. J. 79 (1974), 745. //; // Vardi, Y., Shepp, L.A. and Kaufman, L., //; // J. Amer. Stat. Assoc. 80 (1985), 8. //; // Multhei, H.N. and Schorr, B., Nucl. Instr. Meth. A257 (1987), 371 //; // D'Agostini, G., Nucl. Instr. Meth. A362 (1995), 487 //; // //; // The novelty with this implementation is that the number of //; // iterations can be chosen based on SURE //; // (Stein's unbiased Risk Estimator) //; // See: //; // Tibshirani, R.J. and Rosset, S., J. Amer. Stat. Assoc. 114, 526 //; // [arXiv:1612.09415] //; // //; // This method is there for comparison with the Tihkonov unfolding. //; // The interface is similar to ""TUnfoldDensity"" //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldIterativeEM.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldIterativeEM.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:622,Availability,error,error,622,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, bug fixes in TUnfold fix problem with GetEmatrixSysUncorr; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.2, bug-fix with the calculation of background errors; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, support for systematic errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:710,Availability,error,errors,710,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, bug fixes in TUnfold fix problem with GetEmatrixSysUncorr; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.2, bug-fix with the calculation of background errors; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, support for systematic errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:978,Availability,error,errors,978,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, bug fixes in TUnfold fix problem with GetEmatrixSysUncorr; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.2, bug-fix with the calculation of background errors; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, support for systematic errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:228,Deployability,update,updated,228,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, bug fixes in TUnfold fix problem with GetEmatrixSysUncorr; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.2, bug-fix with the calculation of background errors; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, support for systematic errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:22,Availability,error,errors,22,"/// Input: normalized errors from input matrix",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:22,Availability,error,errors,22,"/// Input: correlated errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:18,Availability,error,error,18,"/// Input: uncorr error squared from bgr sources",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:41,Availability,error,error,41,"/// Input: background sources correlated error",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:11,Availability,error,error,11,"/// Input: error on tau",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:11,Availability,error,error,11,"/// Input: error on fY prior to bgr subtraction",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:17,Availability,error,error,17,"/// Result: syst.error from fDA2 on fX",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:17,Availability,error,error,17,"/// Result: syst.error from fDA2 on fAx",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:3,Usability,clear,clear,3,"// clear all results",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:32,Availability,error,errors,32,"// common calculations for syst.errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:26,Availability,error,error,26,"// calculate uncorrelated error matrix",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:24,Availability,error,error,24,"// calculate correlated error matrix",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:13,Availability,error,error,13,"// propagate error matrix vyy to the result",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:56,Availability,error,errors,56,"/// matrix is an alternative to the default matrix, the errors are the difference to the original matrix",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:20,Availability,error,error,20,"// add a systematic error source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:7,Availability,error,error,7,"// get error matrix from uncorrelated error of one background source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:38,Availability,error,error,38,"// get error matrix from uncorrelated error of one background source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:7,Availability,error,error,7,"// get error matrix from the scale error of one background source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:35,Availability,error,error,35,"// get error matrix from the scale error of one background source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:7,Availability,error,error,7,"// get error matrix contribution from uncorrelated errors on the matrix A",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:51,Availability,error,errors,51,"// get error matrix contribution from uncorrelated errors on the matrix A",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:7,Availability,error,error,7,"// get error matrix from one systematic source",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:7,Availability,error,error,7,"// get error matrix from tau variation",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:7,Availability,error,error,7,"// get error contribution from input vector",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:13,Availability,error,error,13,"// get total error including systematic,statistical,background,tau errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:67,Availability,error,errors,67,"// get total error including systematic,statistical,background,tau errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:87,Availability,error,errors,87,"// get global correlation coefficients including systematic,statistical,background,tau errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:45,Availability,error,errors,45,"// get total chi**2 including all systematic errors",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:40,Availability,error,error,40,"//Unfolding with support for systematic error propagation",MatchSource.CODE_COMMENT,hist/unfold/inc/TUnfoldSys.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:743,Availability,error,error,743,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:880,Availability,error,error,880,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:993,Availability,error,error,993,"tefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TU",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1073,Availability,error,error,1073,"tefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TU",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3266,Availability,avail,available,3266,"to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various; features to TUnfold, such as:; background subtraction, propagation of systematic uncertainties,; complex multidimensional arrangements of the bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfold are; the getter functions. For TUnfold, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfold:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Basic formulae:<br/>; &chi;<sup>2</sup><sub>A</sub>=(Ax-y)<sup>T</sup>V<sub>yy</sub><sup>-1</sup>(Ax-y)<br/>; &chi;<sup>2</sup><sub>L</sub>=(x-f*x<sub>0</sub>)<sup>T</sup>L<sup>T</sup>L(x-f*x<sub>0</sub>)<br/>; &chi;<sup>2</sup><sub>unf</sub>=&chi;<sup>2</sup><sub>A</sub>+&tau;<sup>2</sup>&chi;<sup>2</sup><sub>L</sub>+&lambda;&Sigma;<sub>i</sub>(Ax-y)<sub>i</sub><br/>; x:result, A:probabi",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:276,Deployability,update,updated,276,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1360,Deployability,update,update,1360,"fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TUnfold; An algorithm to unfold distributions from detector to truth level. TUnfold is used to decompose a measurement y into several sources x,; given the measurement uncertainties and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3254,Deployability,update,updates,3254,"to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various; features to TUnfold, such as:; background subtraction, propagation of systematic uncertainties,; complex multidimensional arrangements of the bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfold are; the getter functions. For TUnfold, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfold:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Basic formulae:<br/>; &chi;<sup>2</sup><sub>A</sub>=(Ax-y)<sup>T</sup>V<sub>yy</sub><sup>-1</sup>(Ax-y)<br/>; &chi;<sup>2</sup><sub>L</sub>=(x-f*x<sub>0</sub>)<sup>T</sup>L<sup>T</sup>L(x-f*x<sub>0</sub>)<br/>; &chi;<sup>2</sup><sub>unf</sub>=&chi;<sup>2</sup><sub>A</sub>+&tau;<sup>2</sup>&chi;<sup>2</sup><sub>L</sub>+&lambda;&Sigma;<sub>i</sub>(Ax-y)<sub>i</sub><br/>; x:result, A:probabi",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1274,Energy Efficiency,reduce,reduce,1274,"fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TUnfold; An algorithm to unfold distributions from detector to truth level. TUnfold is used to decompose a measurement y into several sources x,; given the measurement uncertainties and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:999,Integrability,message,messages,999,"tefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TU",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3593,Performance,perform,performed,3593,"ved class; TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various; features to TUnfold, such as:; background subtraction, propagation of systematic uncertainties,; complex multidimensional arrangements of the bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfold are; the getter functions. For TUnfold, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfold:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Basic formulae:<br/>; &chi;<sup>2</sup><sub>A</sub>=(Ax-y)<sup>T</sup>V<sub>yy</sub><sup>-1</sup>(Ax-y)<br/>; &chi;<sup>2</sup><sub>L</sub>=(x-f*x<sub>0</sub>)<sup>T</sup>L<sup>T</sup>L(x-f*x<sub>0</sub>)<br/>; &chi;<sup>2</sup><sub>unf</sub>=&chi;<sup>2</sup><sub>A</sub>+&tau;<sup>2</sup>&chi;<sup>2</sup><sub>L</sub>+&lambda;&Sigma;<sub>i</sub>(Ax-y)<sub>i</sub><br/>; x:result, A:probabilities, y:data, V<sub>yy</sub>:data; covariance, f:bias scale, x<sub>0</sub>:bias, L:regularisation conditions,; &tau;:regularisation strength, &lambda;:Lagrangian multiplier<br/>; Without area constraint, &lambda; is set to zero, and; &chi;<sup>2</sup><sub>unf</sub> is minimized to determine x. With area; constraint, both x and &la",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:2062,Safety,detect,detector,2062,"fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TUnfold; An algorithm to unfold distributions from detector to truth level. TUnfold is used to decompose a measurement y into several sources x,; given the measurement uncertainties and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1024,Usability,simpl,simplified,1024,"tefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TU",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:2388,Usability,simpl,simple,2388,"scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TUnfold; An algorithm to unfold distributions from detector to truth level. TUnfold is used to decompose a measurement y into several sources x,; given the measurement uncertainties and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various; features to TUnfold, such as:; background subtraction, propagation of systematic uncertainties,; complex multidimensional arrangements of the bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfold are; the getter functions. For TUnfold, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfold:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructo",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3035,Usability,simpl,simply,3035,"utions from detector to truth level. TUnfold is used to decompose a measurement y into several sources x,; given the measurement uncertainties and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various; features to TUnfold, such as:; background subtraction, propagation of systematic uncertainties,; complex multidimensional arrangements of the bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfold are; the getter functions. For TUnfold, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfold:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Basic formulae:<br/>; &chi;<sup>2</sup><sub>A</sub>=(Ax-y)<sup>T</sup>V<sub>yy</sub><sup>-1</sup>(Ax-y)<br/>; &chi;<sup>2</sup><sub>L</sub>=(x-f*x<sub>0</sub>)<sup>T</sup>L<sup>T</sup>L(x-f*x",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:197,Usability,clear,cleared,197,"// delete old results (if any); // this function is virtual, so derived classes may implement their own; // method to flag results as non-valid; // note: the inverse of the input covariance is not cleared; // because it does not change until the input is changed",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:739,Availability,error,error,739,"// main unfolding algorithm. Declared virtual, because other algorithms; // could be implemented; //; // Purpose: unfold y -> x; // Data members required:; // fA: matrix to relate x and y; // fY: measured data points; // fX0: bias on x; // fBiasScale: scale factor for fX0; // fVyy: covariance matrix for y; // fL: regularisation conditions; // fTauSquared: regularisation strength; // fConstraint: whether the constraint is applied; // Data members modified:; // fVyyInv: inverse of input data covariance matrix; // fNdf: number of degrees of freedom; // fEinv: inverse of the matrix needed for unfolding calculations; // fE: the matrix needed for unfolding calculations; // fX: unfolded data points; // fDXDY: derivative of x wrt y (for error propagation); // fVxx: error matrix (covariance matrix) on x; // fAx: estimate of distribution y from unfolded data; // fChi2A: contribution to chi**2 from y-Ax; // fChi2L: contribution to chi**2 from L*(x-x0); // fDXDtauSquared: derivative of x wrt tau; // fDXDAM[0,1]: matrix parts of derivative x wrt A; // fDXDAZ[0,1]: vector parts of derivative x wrt A; // fRhoMax: maximum global correlation coefficient; // fRhoAvg: average global correlation coefficient; // return code:; // fRhoMax if(fRhoMax>=1.0) then the unfolding has failed!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:768,Availability,error,error,768,"// main unfolding algorithm. Declared virtual, because other algorithms; // could be implemented; //; // Purpose: unfold y -> x; // Data members required:; // fA: matrix to relate x and y; // fY: measured data points; // fX0: bias on x; // fBiasScale: scale factor for fX0; // fVyy: covariance matrix for y; // fL: regularisation conditions; // fTauSquared: regularisation strength; // fConstraint: whether the constraint is applied; // Data members modified:; // fVyyInv: inverse of input data covariance matrix; // fNdf: number of degrees of freedom; // fEinv: inverse of the matrix needed for unfolding calculations; // fE: the matrix needed for unfolding calculations; // fX: unfolded data points; // fDXDY: derivative of x wrt y (for error propagation); // fVxx: error matrix (covariance matrix) on x; // fAx: estimate of distribution y from unfolded data; // fChi2A: contribution to chi**2 from y-Ax; // fChi2L: contribution to chi**2 from L*(x-x0); // fDXDtauSquared: derivative of x wrt tau; // fDXDAM[0,1]: matrix parts of derivative x wrt A; // fDXDAZ[0,1]: vector parts of derivative x wrt A; // fRhoMax: maximum global correlation coefficient; // fRhoAvg: average global correlation coefficient; // return code:; // fRhoMax if(fRhoMax>=1.0) then the unfolding has failed!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:36,Availability,error,error,36,"//; // get derivative dx/dy; // for error propagation; // dx/dy = E A# Vyy^-1 ( = B )",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:11,Availability,error,error,11,"//; // get error matrix on x; // fDXDY * Vyy * fDXDY#",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,Usability,clear,clear,3,"// clear row data",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,Deployability,update,update,3,"// update existing row",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:634,Performance,optimiz,optimized,634,"////////////////////////////////////////////////////////////////////////; /// get the inverse or pseudo-inverse of a positive, sparse matrix; ///; /// \param[in] A the sparse matrix to be inverted, has to be positive; /// \param[inout] rankPtr if zero, suppress calculation of pseudo-inverse; /// otherwise the rank of the matrix is returned in *rankPtr; ///; /// return value: 0 or a new sparse matrix; /// <ul>; /// <li>if(rankPtr==nullptr) return the inverse if it exists, or return 0</li>; /// <li>else return a (pseudo-)inverse and store the rank of the matrix in; /// *rankPtr </li>; /// </ul>; ///; /// the matrix inversion is optimized in performance for the case; /// where a large submatrix of A is diagonal",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:647,Performance,perform,performance,647,"////////////////////////////////////////////////////////////////////////; /// get the inverse or pseudo-inverse of a positive, sparse matrix; ///; /// \param[in] A the sparse matrix to be inverted, has to be positive; /// \param[inout] rankPtr if zero, suppress calculation of pseudo-inverse; /// otherwise the rank of the matrix is returned in *rankPtr; ///; /// return value: 0 or a new sparse matrix; /// <ul>; /// <li>if(rankPtr==nullptr) return the inverse if it exists, or return 0</li>; /// <li>else return a (pseudo-)inverse and store the rank of the matrix in; /// *rankPtr </li>; /// </ul>; ///; /// the matrix inversion is optimized in performance for the case; /// where a large submatrix of A is diagonal",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:7,Testability,test,tests,7,"// for tests uncomment this:; // iBlock=iDiagonal;; // conditioning of the iBlock part",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,Safety,sanity check,sanity check,3,"// sanity check:; // (1) sub-matrix swapped[0]..swapped[iDiagonal]; // must not contain off-diagonals; // (2) sub-matrix swapped[0]..swapped[iBlock-1] must be diagonal",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:562,Availability,Error,Error,562,"//=============================================; // matrix inversion starts here; //; // the matrix is split into several parts; // D1 0 0; // A = ( 0 D2 B# ); // 0 B C; //; // D1,D2 are diagonal matrices; //; // first, the D1 part is inverted by calculating 1/D1; // dim(D1)= iDiagonal; // next, the other parts are inverted using Schur complement; //; // 1/D1 0 0; // Ainv = ( 0 E G# ); // 0 G F^-1; //; // where F = C + (-B/D2) B#; // G = (F^-1) (-B/D2); // E = 1/D2 + (-B#/D2) G); //; // the inverse of F is calculated using a Cholesky decomposition; //; // Error handling:; // (a) if rankPtr==nullptr: user requests inverse; //; // if D1 is not strictly positive, return NULL; // if D2 is not strictly positive, return NULL; // if F is not strictly positive (Cholesky decomposition failed); // return NULL; // else; // return Ainv as defined above; //; // (b) if rankPtr !=nullptr: user requests pseudo-inverse; // if D2 is not strictly positive or F is not strictly positive; // calculate singular-value decomposition of; // D2 B#; // ( ) = O D O^-1; // B C; // if some eigenvalues are negative, return NULL; // else calculate pseudo-inverse; // *rankPtr = rank(D1)+rank(D); // else; // calculate pseudo-inverse of D1 (D1_ii==nullptr) ? 0 : 1/D1_ii; // *rankPtr=rank(D1)+nrow(D2)+nrow(C); // return Ainv as defined above",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:10,Testability,test,test,10,"// sanity test",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:243,Usability,simpl,simply,243,"////////////////////////////////////////////////////////////////////////; /// Get bin name of an outpt bin; ///; /// \param[in] iBinX bin number; ///; /// Return value: name of the bin; /// <br/>; /// For TUnfold and TUnfoldSys, this function simply returns the bin; /// number as a string. This function really only makes sense in the; /// context of TUnfoldDensity, where binnig schemes are implemented; /// using the class TUnfoldBinning, and non-trivial bin names are; /// returned.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:160,Integrability,depend,depending,160,"// data members initialized to something different from zero:; // fA: filled from hist_A; // fDA: filled from hist_A; // fX0: filled from hist_A; // fL: filled depending on the regularisation scheme",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:26,Safety,detect,detector,26,"// calculate sum over all detector bins; // excluding the overflow bins",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,Deployability,update,update,3,"// update mapping tables to convert bin number to matrix index",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:209,Availability,error,errors,209,"// set regulatisation on a 1-dimensional curve; // start: first bin; // step: distance between neighbouring bins; // nbin: total number of bins; // regmode: regularisation mode; // return value:; // number of errors (i.e. conditions which have been skipped); // modifies data member fL",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:297,Availability,error,errors,297,"// set regularisation on a 2-dimensional grid of bins; // start_bin: first bin; // step1: distance between bins in 1st direction; // nbin1: number of bins in 1st direction; // step2: distance between bins in 2nd direction; // nbin2: number of bins in 2nd direction; // return value:; // number of errors (i.e. conditions which have been skipped); // modifies data member fL",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:78,Performance,perform,perform,78,"////////////////////////////////////////////////////////////////////////; /// perform the unfolding for a given input and regularisation; ///; /// \param[in] tau_reg regularisation parameter; /// \param[in] input input distribution with uncertainties; /// \param[in] scaleBias (default=0.0) scale factor applied to the bias; ///; /// This is a shortcut for { SetInput(input,scaleBias); DoUnfold(tau); }",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:249,Availability,error,error,249,"// Data members required:; // fA, fX0, fL; // Data members modified:; // those documented in SetInput(); // and those documented in DoUnfold(Double_t); // Return value:; // maximum global correlation coefficient; // NOTE!!! return value >=1.0 means error, and the result is junk; //; // Overflow bins of the input distribution are ignored!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:341,Availability,error,error,341,"////////////////////////////////////////////////////////////////////////; /// Define input data for subsequent calls to DoUnfold(tau); /// \param[in] input input distribution with uncertainties; /// \param[in] scaleBias (default=nullptr) scale factor applied to the bias; /// \param[in] oneOverZeroError (default=nullptr) for bins with zero error, this number defines 1/error.; /// \param[in] hist_vyy (default=nullptr) if non-zero, this defines the data covariance matrix; /// \param[in] hist_vyy_inv (default=nullptr) if non-zero and hist_vyy is; /// set, defines the inverse of the data covariance matrix. This; /// feature can be useful for repeated unfoldings in cases where the; /// inversion of the input covariance matrix is lengthy; ///; /// Return value: nError1+10000*nError2; /// <ul>; /// <li>nError1: number of bins where the uncertainty is zero.; /// these bins either are not used for the unfolding (if; /// oneOverZeroError==nullptr) or 1/uncertainty is set to oneOverZeroError.</li>; /// <li>nError2: return values>10000 are fatal errors, because the; /// unfolding can not be done. The number nError2 corresponds to the; /// number of truth bins which are not constrained by data points.; /// </li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:370,Availability,error,error,370,"////////////////////////////////////////////////////////////////////////; /// Define input data for subsequent calls to DoUnfold(tau); /// \param[in] input input distribution with uncertainties; /// \param[in] scaleBias (default=nullptr) scale factor applied to the bias; /// \param[in] oneOverZeroError (default=nullptr) for bins with zero error, this number defines 1/error.; /// \param[in] hist_vyy (default=nullptr) if non-zero, this defines the data covariance matrix; /// \param[in] hist_vyy_inv (default=nullptr) if non-zero and hist_vyy is; /// set, defines the inverse of the data covariance matrix. This; /// feature can be useful for repeated unfoldings in cases where the; /// inversion of the input covariance matrix is lengthy; ///; /// Return value: nError1+10000*nError2; /// <ul>; /// <li>nError1: number of bins where the uncertainty is zero.; /// these bins either are not used for the unfolding (if; /// oneOverZeroError==nullptr) or 1/uncertainty is set to oneOverZeroError.</li>; /// <li>nError2: return values>10000 are fatal errors, because the; /// unfolding can not be done. The number nError2 corresponds to the; /// number of truth bins which are not constrained by data points.; /// </li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1049,Availability,error,errors,1049,"////////////////////////////////////////////////////////////////////////; /// Define input data for subsequent calls to DoUnfold(tau); /// \param[in] input input distribution with uncertainties; /// \param[in] scaleBias (default=nullptr) scale factor applied to the bias; /// \param[in] oneOverZeroError (default=nullptr) for bins with zero error, this number defines 1/error.; /// \param[in] hist_vyy (default=nullptr) if non-zero, this defines the data covariance matrix; /// \param[in] hist_vyy_inv (default=nullptr) if non-zero and hist_vyy is; /// set, defines the inverse of the data covariance matrix. This; /// feature can be useful for repeated unfoldings in cases where the; /// inversion of the input covariance matrix is lengthy; ///; /// Return value: nError1+10000*nError2; /// <ul>; /// <li>nError1: number of bins where the uncertainty is zero.; /// these bins either are not used for the unfolding (if; /// oneOverZeroError==nullptr) or 1/uncertainty is set to oneOverZeroError.</li>; /// <li>nError2: return values>10000 are fatal errors, because the; /// unfolding can not be done. The number nError2 corresponds to the; /// number of truth bins which are not constrained by data points.; /// </li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:70,Usability,clear,cleared,70,"// Data members modified:; // fY, fVyy, , fBiasScale; // Data members cleared; // fVyyInv, fNdf; // + see ClearResults",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:106,Usability,Clear,ClearResults,106,"// Data members modified:; // fY, fVyy, , fBiasScale; // Data members cleared; // fVyyInv, fNdf; // + see ClearResults",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:13,Availability,error,error,13,"// construct error matrix and inverted error matrix of measured quantities; // from errors of input histogram or use error matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:39,Availability,error,error,39,"// construct error matrix and inverted error matrix of measured quantities; // from errors of input histogram or use error matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:84,Availability,error,errors,84,"// construct error matrix and inverted error matrix of measured quantities; // from errors of input histogram or use error matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:117,Availability,error,error,117,"// construct error matrix and inverted error matrix of measured quantities; // from errors of input histogram or use error matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,Usability,simpl,simple,3,"// simple check whether unfolding is possible, given the matrices fA and fV",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:39,Availability,error,error,39,"// check whether data points with zero error are responsible",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:15,Integrability,depend,depends,15,"/* binlist +="" depends on ignored input bins "";; for(Int_t row=nullptr;row<fA->GetNrows();row++) {; if(dataVyyDiag[row]>0.0) continue;; for(Int_t i=a_rows[row];i<a_rows[row+1];i++) {; if(a_cols[i]!=col) continue;; binlist +="" "";; binlist +=row;; }; } */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:78,Performance,perform,perform,78,"////////////////////////////////////////////////////////////////////////; /// perform the unfolding for a given regularisation parameter tau; ///; /// \param[in] tau regularisation parameter; ///; /// this method sets tau and then calls the core unfolding algorithm",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:555,Modifiability,parameteriz,parameterize,555,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:696,Modifiability,parameteriz,parameterize,696,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:500,Testability,log,logTauX,500,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:641,Testability,log,logTauY,641,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:782,Testability,log,logTauCurvature,782,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:947,Testability,log,logTauX,947,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:955,Testability,log,logTauY,955,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1060,Testability,log,logTauCurvature,1060,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:457,Testability,log,logTauX,457,"//==========================================================; // algorithm:; // (1) do the unfolding for nPoint-1 points; // and store the results in the map; // curve; // (1a) store minimum and maximum tau to curve; // (1b) insert additional points, until nPoint-1 values; // have been calculated; //; // (2) determine the best choice of tau; // do the unfolding for this point; // and store the result in; // curve; // (3) return the result in; // lCurve logTauX logTauY; //==========================================================; // (1) do the unfolding for nPoint-1 points; // and store the results in; // curve; // (1a) store minimum and maximum tau to curve",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:465,Testability,log,logTauY,465,"//==========================================================; // algorithm:; // (1) do the unfolding for nPoint-1 points; // and store the results in the map; // curve; // (1a) store minimum and maximum tau to curve; // (1b) insert additional points, until nPoint-1 values; // have been calculated; //; // (2) determine the best choice of tau; // do the unfolding for this point; // and store the result in; // curve; // (3) return the result in; // lCurve logTauX logTauY; //==========================================================; // (1) do the unfolding for nPoint-1 points; // and store the results in; // curve; // (1a) store minimum and maximum tau to curve",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:63,Availability,error,error,63,"// if the number of degrees of freedom is too small, create an error",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:101,Testability,log,logTauX,101,"//==========================================================; // (3) return the result in; // lCurve logTauX logTauY",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:109,Testability,log,logTauY,109,"//==========================================================; // (3) return the result in; // lCurve logTauX logTauY",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:219,Availability,error,errors,219,"////////////////////////////////////////////////////////////////////////; /// get unfolding result on detector level; ///; /// \param[out] out histogram to store the correlation coefficiencts. The bin; /// contents and errors are overwritten.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// This method returns the unfolding output folded by the response; /// matrix, i.e. the vector Ax.; ///; /// The use of <b>binMap</b> is explained with the documentation of; /// the GetOutput() method; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:102,Safety,detect,detector,102,"////////////////////////////////////////////////////////////////////////; /// get unfolding result on detector level; ///; /// \param[out] out histogram to store the correlation coefficiencts. The bin; /// contents and errors are overwritten.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// This method returns the unfolding output folded by the response; /// matrix, i.e. the vector Ax.; ///; /// The use of <b>binMap</b> is explained with the documentation of; /// the GetOutput() method; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:195,Availability,error,errors,195,"////////////////////////////////////////////////////////////////////////; /// Input vector of measurements; ///; /// \param[out] out histogram to store the measurements. Bin content; /// and bin errors are overwritte.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// Bins which had an uncertainty of zero in the call to SetInput(); /// maye acquire bin contents or bin errors different from the; /// original settings in SetInput().; ///; /// The use of <b>binMap</b> is explained with the documentation of; /// the GetOutput() method; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:418,Availability,error,errors,418,"////////////////////////////////////////////////////////////////////////; /// Input vector of measurements; ///; /// \param[out] out histogram to store the measurements. Bin content; /// and bin errors are overwritte.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// Bins which had an uncertainty of zero in the call to SetInput(); /// maye acquire bin contents or bin errors different from the; /// original settings in SetInput().; ///; /// The use of <b>binMap</b> is explained with the documentation of; /// the GetOutput() method; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:52,Availability,error,error,52,"// calculate the inverse of the contribution to the error matrix; // corresponding to the input data",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:152,Testability,log,log,152,"////////////////////////////////////////////////////////////////////////; /// get value on x-axis of L-curve determined in recent unfolding; ///; /// x=log<sub>10</sub>(GetChi2A())",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:152,Testability,log,log,152,"////////////////////////////////////////////////////////////////////////; /// get value on y-axis of L-curve determined in recent unfolding; ///; /// y=log<sub>10</sub>(GetChi2L())",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:208,Availability,error,errors,208,"////////////////////////////////////////////////////////////////////////; /// get output distribution, possibly cumulated over several bins; ///; /// \param[out] output existing output histogram. content and errors; /// will be updated.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// If nonzero, the array <b>binMap</b> must have dimension n+2, where n; /// corresponds to the number of bins on the truth axis of the response; /// matrix (the histogram specified with the TUnfold; /// constructor). The indexes of <b>binMap</b> correspond to the truth; /// bins (including underflow and overflow) of the response matrix.; /// The element binMap[i] specifies the histogram number in; /// <b>output</b> where the corresponding truth bin will be stored. It is; /// possible to specify the same <b>output</b> bin number for multiple; /// indexes, in which case these bins are added. Set binMap[i]=-1 to; /// ignore an unfolded truth bin. The uncertainties are; /// calculated from the corresponding parts of the covariance matrix,; /// properly taking care of added truth bins.; /// <br/>; /// If the pointer <b>binMap</b> is zero, the bins are mapped; /// one-to-one. Truth bin zero (underflow) is stored in the; /// <b>output</b> underflow, truth bin 1 is stored in bin number 1, etc.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:228,Deployability,update,updated,228,"////////////////////////////////////////////////////////////////////////; /// get output distribution, possibly cumulated over several bins; ///; /// \param[out] output existing output histogram. content and errors; /// will be updated.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// If nonzero, the array <b>binMap</b> must have dimension n+2, where n; /// corresponds to the number of bins on the truth axis of the response; /// matrix (the histogram specified with the TUnfold; /// constructor). The indexes of <b>binMap</b> correspond to the truth; /// bins (including underflow and overflow) of the response matrix.; /// The element binMap[i] specifies the histogram number in; /// <b>output</b> where the corresponding truth bin will be stored. It is; /// possible to specify the same <b>output</b> bin number for multiple; /// indexes, in which case these bins are added. Set binMap[i]=-1 to; /// ignore an unfolded truth bin. The uncertainties are; /// calculated from the corresponding parts of the covariance matrix,; /// properly taking care of added truth bins.; /// <br/>; /// If the pointer <b>binMap</b> is zero, the bins are mapped; /// one-to-one. Truth bin zero (underflow) is stored in the; /// <b>output</b> underflow, truth bin 1 is stored in bin number 1, etc.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:40,Availability,error,error,40,"// here we loop over the columns of the error matrix; // j: counts histogram bins; // index: counts sparse matrix index; // the algorithm makes use of the fact that fHistToX is ordered",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:21,Energy Efficiency,Power,Power,21,"//Double_t e2=TMath::Power(output->GetBinError(destBinI),2.);",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:88,Availability,error,error,88,"////////////////////////////////////////////////////////////////////////; /// add up an error matrix, also respecting the bin mapping; ///; /// \param[inout] ematrix error matrix histogram; /// \param[in] emat error matrix stored with internal mapping (member fXToHist); /// \param[in] binMap mapping of histogram bins; /// \param[in] doClear if true, ematrix is cleared prior to adding; /// elements of emat to it.; ///; /// the array <b>binMap</b> is explained with the method GetOutput(). The; /// matrix emat must have dimension NxN where N=fXToHist.size(); /// The flag <b>doClear</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:166,Availability,error,error,166,"////////////////////////////////////////////////////////////////////////; /// add up an error matrix, also respecting the bin mapping; ///; /// \param[inout] ematrix error matrix histogram; /// \param[in] emat error matrix stored with internal mapping (member fXToHist); /// \param[in] binMap mapping of histogram bins; /// \param[in] doClear if true, ematrix is cleared prior to adding; /// elements of emat to it.; ///; /// the array <b>binMap</b> is explained with the method GetOutput(). The; /// matrix emat must have dimension NxN where N=fXToHist.size(); /// The flag <b>doClear</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:210,Availability,error,error,210,"////////////////////////////////////////////////////////////////////////; /// add up an error matrix, also respecting the bin mapping; ///; /// \param[inout] ematrix error matrix histogram; /// \param[in] emat error matrix stored with internal mapping (member fXToHist); /// \param[in] binMap mapping of histogram bins; /// \param[in] doClear if true, ematrix is cleared prior to adding; /// elements of emat to it.; ///; /// the array <b>binMap</b> is explained with the method GetOutput(). The; /// matrix emat must have dimension NxN where N=fXToHist.size(); /// The flag <b>doClear</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:363,Usability,clear,cleared,363,"////////////////////////////////////////////////////////////////////////; /// add up an error matrix, also respecting the bin mapping; ///; /// \param[inout] ematrix error matrix histogram; /// \param[in] emat error matrix stored with internal mapping (member fXToHist); /// \param[in] binMap mapping of histogram bins; /// \param[in] doClear if true, ematrix is cleared prior to adding; /// elements of emat to it.; ///; /// the array <b>binMap</b> is explained with the method GetOutput(). The; /// matrix emat must have dimension NxN where N=fXToHist.size(); /// The flag <b>doClear</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:111,Availability,error,error,111,"// get global correlation coefficients with arbitrary min map; // rhoi: global correlation histogram; // emat: error matrix; // binMap: for each bin of the original output distribution; // specify the destination bin. A value of -1 means that the bin; // is discarded. 0 means underflow bin, 1 first bin, ...; // binMap[0] : destination of underflow bin; // binMap[1] : destination of first bin; // ...; // return value: maximum global correlation",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:9,Availability,error,error,9,"// remap error matrix; // matrix row i -> origI (fXToHist[i]); // origI -> destI (binMap); // destI -> ematBinI (histToLocalBin)",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:19,Availability,error,error,19,"// invert remapped error matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:110,Availability,error,errors,110,"////////////////////////////////////////////////////////////////////////; /// Initialize bin contents and bin errors for a given histogram; ///; /// \param[out] h histogram; /// \param[in] x new histogram content; ///; /// all histgram errors are set to zero, all contents are set to <b>x</b>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:236,Availability,error,errors,236,"////////////////////////////////////////////////////////////////////////; /// Initialize bin contents and bin errors for a given histogram; ///; /// \param[out] h histogram; /// \param[in] x new histogram content; ///; /// all histgram errors are set to zero, all contents are set to <b>x</b>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:273,Integrability,depend,depends,273,"////////////////////////////////////////////////////////////////////////; /// return Stein's unbiased risk estimator; /// See e.g. arXiv:1612.09415; ///; /// A minimum in the SURE variable is a good choice of regularisation strength; ///; /// NOTE: the calculation of SURE depends on the calculation of DF.; /// See the method GetDF() for caveats with Poisson-distributed data.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:180,Modifiability,variab,variable,180,"////////////////////////////////////////////////////////////////////////; /// return Stein's unbiased risk estimator; /// See e.g. arXiv:1612.09415; ///; /// A minimum in the SURE variable is a good choice of regularisation strength; ///; /// NOTE: the calculation of SURE depends on the calculation of DF.; /// See the method GetDF() for caveats with Poisson-distributed data.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:102,Safety,risk,risk,102,"////////////////////////////////////////////////////////////////////////; /// return Stein's unbiased risk estimator; /// See e.g. arXiv:1612.09415; ///; /// A minimum in the SURE variable is a good choice of regularisation strength; ///; /// NOTE: the calculation of SURE depends on the calculation of DF.; /// See the method GetDF() for caveats with Poisson-distributed data.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:228,Integrability,depend,dependence,228,"////////////////////////////////////////////////////////////////////////; /// return the effecive number of degrees of freedom; /// See e.g. arXiv:1612.09415 and the references therein; ///; /// Here, DF is calculated using the dependence of; /// the unfolding result x on the data y; ///; /// This calculation is done assuming a CONSTANT data variance.; /// I.e. the uncertainties reported to TUnfold in ""SetInput()""; /// ought to be independent of the measurements.; /// This is *NOT* true for standard Poisson-distributed data.; /// In practice the impact is expected to be small",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:104,Safety,risk,risk,104,"////////////////////////////////////////////////////////////////////////; /// minimize Stein's unbiased risk estimator ""SURE""; /// using successive calls to DoUnfold at various tau.; /// Optionally, also the L-curve and its curvature are calculated; /// for comparison. See description of GetSURE(); /// See e.g. arXiv:1612.09415 for the definition of SURE; ///; /// \param[in] nPoint : number of points; /// \param[in] tauMin : lower end of scan-range; /// \param[in] tauMax : upper end of scan-range; /// \param[out] logTauSURE : scan result, SURE as a function of log(tau); /// \param[out] df_chi2A : parametric plot of DF against chi2A; /// \param[out] lCurve : parametric plot (lCurve); ///; /// return value: index of the ""best"" point; ///; /// if tauMin is less than zero of if tauMin is not loer than tauMax, then; /// the scan range is determined automatically; /// if tau=nullptr is included in the scan, then the first x-coordinate; // of the result plot logTauSURE is set to -Infinity",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:519,Testability,log,logTauSURE,519,"////////////////////////////////////////////////////////////////////////; /// minimize Stein's unbiased risk estimator ""SURE""; /// using successive calls to DoUnfold at various tau.; /// Optionally, also the L-curve and its curvature are calculated; /// for comparison. See description of GetSURE(); /// See e.g. arXiv:1612.09415 for the definition of SURE; ///; /// \param[in] nPoint : number of points; /// \param[in] tauMin : lower end of scan-range; /// \param[in] tauMax : upper end of scan-range; /// \param[out] logTauSURE : scan result, SURE as a function of log(tau); /// \param[out] df_chi2A : parametric plot of DF against chi2A; /// \param[out] lCurve : parametric plot (lCurve); ///; /// return value: index of the ""best"" point; ///; /// if tauMin is less than zero of if tauMin is not loer than tauMax, then; /// the scan range is determined automatically; /// if tau=nullptr is included in the scan, then the first x-coordinate; // of the result plot logTauSURE is set to -Infinity",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:567,Testability,log,log,567,"////////////////////////////////////////////////////////////////////////; /// minimize Stein's unbiased risk estimator ""SURE""; /// using successive calls to DoUnfold at various tau.; /// Optionally, also the L-curve and its curvature are calculated; /// for comparison. See description of GetSURE(); /// See e.g. arXiv:1612.09415 for the definition of SURE; ///; /// \param[in] nPoint : number of points; /// \param[in] tauMin : lower end of scan-range; /// \param[in] tauMax : upper end of scan-range; /// \param[out] logTauSURE : scan result, SURE as a function of log(tau); /// \param[out] df_chi2A : parametric plot of DF against chi2A; /// \param[out] lCurve : parametric plot (lCurve); ///; /// return value: index of the ""best"" point; ///; /// if tauMin is less than zero of if tauMin is not loer than tauMax, then; /// the scan range is determined automatically; /// if tau=nullptr is included in the scan, then the first x-coordinate; // of the result plot logTauSURE is set to -Infinity",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:966,Testability,log,logTauSURE,966,"////////////////////////////////////////////////////////////////////////; /// minimize Stein's unbiased risk estimator ""SURE""; /// using successive calls to DoUnfold at various tau.; /// Optionally, also the L-curve and its curvature are calculated; /// for comparison. See description of GetSURE(); /// See e.g. arXiv:1612.09415 for the definition of SURE; ///; /// \param[in] nPoint : number of points; /// \param[in] tauMin : lower end of scan-range; /// \param[in] tauMax : upper end of scan-range; /// \param[out] logTauSURE : scan result, SURE as a function of log(tau); /// \param[out] df_chi2A : parametric plot of DF against chi2A; /// \param[out] lCurve : parametric plot (lCurve); ///; /// return value: index of the ""best"" point; ///; /// if tauMin is less than zero of if tauMin is not loer than tauMax, then; /// the scan range is determined automatically; /// if tau=nullptr is included in the scan, then the first x-coordinate; // of the result plot logTauSURE is set to -Infinity",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:76,Testability,log,logarithmic,76,"// check whether all intervals not including tau=nullptr; // have the same (logarithmic) size",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,Testability,log,log,3,"// log in tau",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:23,Usability,clear,clear,23,"// not a minimum - not clear what to do",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfold.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:452,Availability,error,error,452,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin numb",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:1313,Availability,avail,available,1313,"CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth l",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:3769,Availability,error,error,3769,"ng the; method CreateHistogramOfMigrations()</li>; <li>For data and background, book histograms using the; ""detector level"" binning scheme and the method CreateHistogram()</li>; <li>(if required) for the data covarianve matrix, book a histogram using the; ""detector level"" binning scheme and the method CreateErrorMatrixHistogram()</li>; <li>For truth histograms, book histograms using the; ""truth level"" binning scheme and the method CreateHistogram()</li>; </ul>; The histograms which are booked have all analysis bins arranged on one; axis (global bin number). TUnfoldBinning provides methods to locate; the global bin number:; <ul>; <li>Use the method FindNode() to locate a group of bins (e.g. signal,; control distribution, etc) by their name, then:</li>; <li>Use the method GetGlobalBinNumber() to locate a bin in a; distribution, then:</li>; <li>Use the TH1::Fill() method and the bin number to fill the; appropriate bin in one of the histograms booked above.</li>; </ul>; Unfolding: Specify the response matrix and the binning schemes when; constructing a TUnfoldDensity object. Tell TUnfoldDensity about the; data, bakcground, systematic error histograms using the corresponding; methods of class TUnfoldDensity. Then run the unfolding. Use the; GetXXX() methods to retreive the unfolding results into properly; binned multidimensional histograms.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:1301,Deployability,update,updates,1301,"CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth l",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:262,Safety,avoid,avoid,262,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin numb",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:2268,Safety,detect,detector,2268,"03 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth level. This; can be done using the XML language, use the class TUnfoldBinningXML to; read the binning scheme. The TUnfoldBinning objects can be written to; a root file, preferentially together with the corresponding histograms.</li>; <li>For Monte Carlo, book histograms for the response matrix (detector; vs truth level) using the; method CreateHistogramOfMigrations()</li>; <li>For data and background, book histograms using the; ""detector level"" binning scheme and the method CreateHistogram()</li>; <li>(if required) for the data covarianve matrix, book a histogram using the; ""detector level"" binning scheme and the method CreateErrorMatrixHistogram()</li>; <li>For truth histograms, book histograms using the; ""truth level"" binning scheme and the method CreateHistogram()</li>; </ul>; The histograms which are booked have all analysis bins arranged on one; axis (global bin number). TUnfoldBinning provides methods to locate; the global bi",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:2592,Safety,detect,detector,2592,"by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth level. This; can be done using the XML language, use the class TUnfoldBinningXML to; read the binning scheme. The TUnfoldBinning objects can be written to; a root file, preferentially together with the corresponding histograms.</li>; <li>For Monte Carlo, book histograms for the response matrix (detector; vs truth level) using the; method CreateHistogramOfMigrations()</li>; <li>For data and background, book histograms using the; ""detector level"" binning scheme and the method CreateHistogram()</li>; <li>(if required) for the data covarianve matrix, book a histogram using the; ""detector level"" binning scheme and the method CreateErrorMatrixHistogram()</li>; <li>For truth histograms, book histograms using the; ""truth level"" binning scheme and the method CreateHistogram()</li>; </ul>; The histograms which are booked have all analysis bins arranged on one; axis (global bin number). TUnfoldBinning provides methods to locate; the global bin number:; <ul>; <li>Use the method FindNode() to locate a group of bins (e.g. signal,; control distribution, etc) by their name, then:</li>; <li>Use the method GetGlobalBinNumber() to locate a bin in a; distribution, then:</li>; <li>Use the TH1::Fill() method and the bin number to fill the; appropriate bin in one of the histograms booked above.</li>; </ul>; Unfolding: Specify the response matrix and the binning schemes when; constructing a TUnfoldDensity object. Tell TUnfoldDensity about the; data, bakcground, systematic error histograms using the corresponding; methods of class TUnfoldDensity. Then run t",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:2729,Safety,detect,detector,2729,"by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth level. This; can be done using the XML language, use the class TUnfoldBinningXML to; read the binning scheme. The TUnfoldBinning objects can be written to; a root file, preferentially together with the corresponding histograms.</li>; <li>For Monte Carlo, book histograms for the response matrix (detector; vs truth level) using the; method CreateHistogramOfMigrations()</li>; <li>For data and background, book histograms using the; ""detector level"" binning scheme and the method CreateHistogram()</li>; <li>(if required) for the data covarianve matrix, book a histogram using the; ""detector level"" binning scheme and the method CreateErrorMatrixHistogram()</li>; <li>For truth histograms, book histograms using the; ""truth level"" binning scheme and the method CreateHistogram()</li>; </ul>; The histograms which are booked have all analysis bins arranged on one; axis (global bin number). TUnfoldBinning provides methods to locate; the global bin number:; <ul>; <li>Use the method FindNode() to locate a group of bins (e.g. signal,; control distribution, etc) by their name, then:</li>; <li>Use the method GetGlobalBinNumber() to locate a bin in a; distribution, then:</li>; <li>Use the TH1::Fill() method and the bin number to fill the; appropriate bin in one of the histograms booked above.</li>; </ul>; Unfolding: Specify the response matrix and the binning schemes when; constructing a TUnfoldDensity object. Tell TUnfoldDensity about the; data, bakcground, systematic error histograms using the corresponding; methods of class TUnfoldDensity. Then run t",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:2878,Safety,detect,detector,2878,"by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth level. This; can be done using the XML language, use the class TUnfoldBinningXML to; read the binning scheme. The TUnfoldBinning objects can be written to; a root file, preferentially together with the corresponding histograms.</li>; <li>For Monte Carlo, book histograms for the response matrix (detector; vs truth level) using the; method CreateHistogramOfMigrations()</li>; <li>For data and background, book histograms using the; ""detector level"" binning scheme and the method CreateHistogram()</li>; <li>(if required) for the data covarianve matrix, book a histogram using the; ""detector level"" binning scheme and the method CreateErrorMatrixHistogram()</li>; <li>For truth histograms, book histograms using the; ""truth level"" binning scheme and the method CreateHistogram()</li>; </ul>; The histograms which are booked have all analysis bins arranged on one; axis (global bin number). TUnfoldBinning provides methods to locate; the global bin number:; <ul>; <li>Use the method FindNode() to locate a group of bins (e.g. signal,; control distribution, etc) by their name, then:</li>; <li>Use the method GetGlobalBinNumber() to locate a bin in a; distribution, then:</li>; <li>Use the TH1::Fill() method and the bin number to fill the; appropriate bin in one of the histograms booked above.</li>; </ul>; Unfolding: Specify the response matrix and the binning schemes when; constructing a TUnfoldDensity object. Tell TUnfoldDensity about the; data, bakcground, systematic error histograms using the corresponding; methods of class TUnfoldDensity. Then run t",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:172,Security,access,access,172,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, bug fix in GetNonemptyNode() and non-const access of tree; // Version 17.7, bug fix in ExtractHistogram; // Version 17.6, bug fix to avoid possible crash in method; // CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin numb",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:147,Modifiability,variab,variables,147,"/********************* setup **************************/; ////////////////////////////////////////////////////////////////////////; /// initialize variables for a given number of bins",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:78,Deployability,update,update,78,"////////////////////////////////////////////////////////////////////////; /// update fFirstBin and fLastBin members of this node and its children; ///; /// \param[in] startWithRootNode if true, start the update with the root node",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:204,Deployability,update,update,204,"////////////////////////////////////////////////////////////////////////; /// update fFirstBin and fLastBin members of this node and its children; ///; /// \param[in] startWithRootNode if true, start the update with the root node",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:7,Deployability,update,update,7,"// now update count for all children",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:370,Deployability,integrat,integrate,370,"////////////////////////////////////////////////////////////////////////; /// return the number of histogram bins required when storing; /// this binning in a one-dimensional histogram; ///; /// \param[in] originalAxisBinning if true, try to have the histogram; /// axis reflect precisely the relevant axis of the binnnig scheme; /// \param[in] axisSteering steering to integrate over axis and/or; /// skip underflow and overflow bins; ///; /// returns the number of bins of the TH1, where the underflow/overflow; /// are not used, unless the distribution has only one axis and; /// originalAxisBinning=true); /// <br/>; /// axisSteering is a string as follows:; /// ""axis[options];axis[options];...""; /// where: axis = name or * is an identifier of an axis (* matches all); /// and: options is any combination of the letters C,U,O (other; /// letters are ignored).; /// <br>; /// The letter C means that the corresponding axis is collapsed into; /// one bin, i.e. one dimension is removed from the counting.; /// The letters U,O remove for the matching axis the underflow.overflow; /// bins from the counting",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:370,Integrability,integrat,integrate,370,"////////////////////////////////////////////////////////////////////////; /// return the number of histogram bins required when storing; /// this binning in a one-dimensional histogram; ///; /// \param[in] originalAxisBinning if true, try to have the histogram; /// axis reflect precisely the relevant axis of the binnnig scheme; /// \param[in] axisSteering steering to integrate over axis and/or; /// skip underflow and overflow bins; ///; /// returns the number of bins of the TH1, where the underflow/overflow; /// are not used, unless the distribution has only one axis and; /// originalAxisBinning=true); /// <br/>; /// axisSteering is a string as follows:; /// ""axis[options];axis[options];...""; /// where: axis = name or * is an identifier of an axis (* matches all); /// and: options is any combination of the letters C,U,O (other; /// letters are ignored).; /// <br>; /// The letter C means that the corresponding axis is collapsed into; /// one bin, i.e. one dimension is removed from the counting.; /// The letters U,O remove for the matching axis the underflow.overflow; /// bins from the counting",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:577,Integrability,depend,depends,577,"////////////////////////////////////////////////////////////////////////; /// fill bin map for a single node; ///; /// \param[in] hist the histogram representing this node (used if nDim>0); /// \param[in] startBin start bin in the bin map; /// \param[in] nDim number of dimensions to resolve; /// \param[in] axisList[3] TUnfoldBinning axis numbers corresponding; /// to the axes of <b>hist</b>; /// \param[in] axisSteering see documentation of CreateHistogram(); /// \param[out] binMap the bin map to fill; ///; /// returns the number of bins mapped.; /// <br>; /// The result depends on the parameter <b>nDim</b> as follows; /// <ul>; /// <li> nDim==nullptr: bins are mapped in linear order, ignore hist and; /// axisList</li>; /// <li> nDim==hist->GetDimension():; /// bins are mapped to ""hist"" bin numbers; /// the corresponding TUnfoldBinning axes are taken from; /// axisList[]</li>; /// <li>nDim=1 and hist->GetDimension()>1:; /// bins are mapped to the x-axis of ""hist""; /// the corresponding TUnfoldBinning axis is taken from; /// axisList[0]</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:124,Availability,error,error,124,"// histogram has more dimensions than the binning scheme; // and the binning scheme has one axis only; //; // special case: error histogram is 2-d; // create nor error if ndim==1 && hist->GetDimension()==2",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:162,Availability,error,error,162,"// histogram has more dimensions than the binning scheme; // and the binning scheme has one axis only; //; // special case: error histogram is 2-d; // create nor error if ndim==1 && hist->GetDimension()==2",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:25,Deployability,integrat,integrated,25,"// bins on this axis are integrated over",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:25,Integrability,integrat,integrated,25,"// bins on this axis are integrated over",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:25,Deployability,integrat,integrated,25,"// bins on this axis are integrated over",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:25,Integrability,integrat,integrated,25,"// bins on this axis are integrated over",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:209,Availability,error,error,209,"// extract a distribution from the given set of global bins; // input:; // histogramName : name of the histogram which is created; // globalBins : histogram with all bins; // globalBinsEmatrix : corresponding error matrix; // if this pointer is zero, only diagonal errors; // are considered; // originalAxisBinning : extract histogram with proper binning; // (if possible); // axisSteering; // ""pattern1;pattern2;...;patternN""; // patternI = axis[mode]; // axis = name or *; // mode = C|U|O; // C: collapse axis into one bin; // U: discard underflow bin; // O: discard overflow bin",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:265,Availability,error,errors,265,"// extract a distribution from the given set of global bins; // input:; // histogramName : name of the histogram which is created; // globalBins : histogram with all bins; // globalBinsEmatrix : corresponding error matrix; // if this pointer is zero, only diagonal errors; // are considered; // originalAxisBinning : extract histogram with proper binning; // (if possible); // axisSteering; // ""pattern1;pattern2;...;patternN""; // patternI = axis[mode]; // axis = name or *; // mode = C|U|O; // C: collapse axis into one bin; // U: discard underflow bin; // O: discard overflow bin",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:23,Security,access,access,23,"/********************* access by global bin number ******/; ////////////////////////////////////////////////////////////////////////; /// get the name of a bin; ///; /// \param[in] iBin global bin number; ///; /// returns a string describing the bin",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1085,Availability,avail,available,1085,"el to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for the ""repeat"" attribute for element Bin; // Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:227,Deployability,update,updated,227,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for the ""repeat"" attribute for element Bin; // Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1073,Deployability,update,updates,1073,"el to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for the ""repeat"" attribute for element Bin; // Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1456,Safety,detect,detector,1456," Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3"" />; <Bin location=""overflow""/>; <Axis name=""eta"" lowEdge=""-3"">; <Bin repeat=""2"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""4"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""2"" width=""0.5"" />; <Axis name=""discriminator"" lowEdge=""0"">; <Bin width=""0.15"" />; <Bin repeat=""2"" width=""0.35"" />; <Bin width=""0.15"" />; </Axis>; </Axis>; </Axis>; </BinningNode>; </Bin",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1840,Safety,detect,detector,1840,"ion bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3"" />; <Bin location=""overflow""/>; <Axis name=""eta"" lowEdge=""-3"">; <Bin repeat=""2"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""4"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""2"" width=""0.5"" />; <Axis name=""discriminator"" lowEdge=""0"">; <Bin width=""0.15"" />; <Bin repeat=""2"" width=""0.35"" />; <Bin width=""0.15"" />; </Axis>; </Axis>; </Axis>; </BinningNode>; </BinningNode>; <BinningNode name=""generator"" firstbin=""1"" factor=""1"">; <BinningNode name=""signal"" firstbin=""1"" factor=""1"">; <Axis name=""ptgen"" lowEdge=""4"">; <Bin location=""underflow"" />; <Bin width=""1"" />; <Bin width=""2"" />; <Bin width=""3"" />; <Bin location=""overflow"" />; <Axis name=""etagen"" lowEdge=""-2"">; <Bin location=""underflow"" />; <Bin width=""1.5"" />; <Bin width=""1"" />; <Bin width=""1.5"" />; <Bin location=""overflow"" />; </Axis>; </Axis>; </Binn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1895,Safety,detect,detectordistribution,1895,"ion bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3"" />; <Bin location=""overflow""/>; <Axis name=""eta"" lowEdge=""-3"">; <Bin repeat=""2"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""4"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""2"" width=""0.5"" />; <Axis name=""discriminator"" lowEdge=""0"">; <Bin width=""0.15"" />; <Bin repeat=""2"" width=""0.35"" />; <Bin width=""0.15"" />; </Axis>; </Axis>; </Axis>; </BinningNode>; </BinningNode>; <BinningNode name=""generator"" firstbin=""1"" factor=""1"">; <BinningNode name=""signal"" firstbin=""1"" factor=""1"">; <Axis name=""ptgen"" lowEdge=""4"">; <Bin location=""underflow"" />; <Bin width=""1"" />; <Bin width=""2"" />; <Bin width=""3"" />; <Bin location=""overflow"" />; <Axis name=""etagen"" lowEdge=""-2"">; <Bin location=""underflow"" />; <Bin width=""1.5"" />; <Bin width=""1"" />; <Bin width=""1.5"" />; <Bin location=""overflow"" />; </Axis>; </Axis>; </Binn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1365,Security,validat,validation,1365,"es in TUnfoldBinning; // Version 17.3, support for the ""repeat"" attribute for element Bin; // Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3"" />; <Bin location=""overflow""/>; <Axis name=""eta"" lowEdge=""-3"">; <Bin repeat=""2"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""4"" width=""0.5"" />; <Bin width=""1"" />; <Bin repeat=""2"" width=""0.5"" />; <Axis name=""discriminator"" lowEdge=""0"">; <Bin width=""0.15"" />; <Bin repea",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldBinningXML.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1838,Availability,avail,available,1838,"tector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. The binning schemes may be coded in the XML language,; for reading use TUnfoldBinningXML.</li>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>Repeated calls to SubtractBackground() to specify background; sources</li>; <li>Repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanTau()</li>; </ul>; <li>Unfolding results are retrieved using ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:255,Deployability,update,updated,255,"// Author: Stefan Schmitt, Amnon Harel; // DESY and CERN, 11/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, new method GetDXDY(); // Version 17.7, with bug-fix for curvature regularisation; // Version 17.6, with updated doxygen comments and bug-fixes in TUnfoldBinning; // Version 17.5, bug fix in TUnfold also corrects GetEmatrixSysUncorr(); // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, with new options 'N' and 'c' for axis regularisation steering; // Version 17.1, add scan type RhoSquare, small bug fixes with useAxisBinning; // Version 17.0, support for density regularisation, complex binning schemes, tau scan; /** \class TUnfoldDensity; An algorithm to unfold distributions from detector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. T",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1826,Deployability,update,updates,1826,"tector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. The binning schemes may be coded in the XML language,; for reading use TUnfoldBinningXML.</li>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>Repeated calls to SubtractBackground() to specify background; sources</li>; <li>Repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanTau()</li>; </ul>; <li>Unfolding results are retrieved using ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:4551,Modifiability,variab,variable,4551,"ined with the help of auxillary; measurements.; <br/>; In TUnfoldDensity, such complex binning schemes are handled with the help; of the class TUnfoldBinning. For both the measurement and the truth; there is a tree structure. The tree nodes may correspond to single; bins (e.g. nuisance parameters) or may hold multi-dimensional distributions.; <br/>; For example, the ""measurement"" tree could have two leaves, one for; the primary distribution and one for auxillary measurements.; Similarly, the ""truth"" tree could have two leaves, one for the; signal and one for the background.; Each of the leaves may then have a multi-dimensional distribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" in",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:5149,Modifiability,variab,variable,5149,"ribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" introduces no correlation.; Regularisation on 1st or 2nd derivatives adds positive correlations.; <br/>; For these reasons, ""size"" regularisation does not work well with; the tau-scan: the higher tau, the smaller rho, but there is no minimum.; As a result, large values of tau (too strong regularisation) are found.; In contrast, the tau-scan is expected to work better with 1st or 2nd; derivative regularisation, because at some point the negative; correlations from migrations are approximately cancelled by the; positive correlations from the regularisation conditions.; <br/>; whichever algorithm is used, the output has to be checked:; ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:2496,Performance,perform,performed,2496,"mplex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. The binning schemes may be coded in the XML language,; for reading use TUnfoldBinningXML.</li>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>Repeated calls to SubtractBackground() to specify background; sources</li>; <li>Repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanTau()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>; A detailed documentation of the various GetXXX() methods to control; systematic uncertainties is given with the method TUnfoldSys. <h3>Why to use complex binning schemes</h3>. in literature on unfolding, the ""standard"" test case is a; one-dimensional distribution without underflow or overflow bins.; The migration matrix is almost diagonal.; <br/>; <b>This ""standard"" case is rarely realized for real problems.</b>; <br/>; Often one has to deal with multi-dimensional distributions.; In addition, there are underflow and overflow bins; or other background bins, possibly determined with the help of auxillary; measurements.; <br/>; In TUnfoldDensity, such complex binning schemes a",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:820,Safety,detect,detector,820,"// Author: Stefan Schmitt, Amnon Harel; // DESY and CERN, 11/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, new method GetDXDY(); // Version 17.7, with bug-fix for curvature regularisation; // Version 17.6, with updated doxygen comments and bug-fixes in TUnfoldBinning; // Version 17.5, bug fix in TUnfold also corrects GetEmatrixSysUncorr(); // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, with new options 'N' and 'c' for axis regularisation steering; // Version 17.1, add scan type RhoSquare, small bug fixes with useAxisBinning; // Version 17.0, support for density regularisation, complex binning schemes, tau scan; /** \class TUnfoldDensity; An algorithm to unfold distributions from detector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. T",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:4827,Safety,predict,prediction,4827,"ple, the ""measurement"" tree could have two leaves, one for; the primary distribution and one for auxillary measurements.; Similarly, the ""truth"" tree could have two leaves, one for the; signal and one for the background.; Each of the leaves may then have a multi-dimensional distribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" introduces no correlation.; Regularisation on 1st or 2nd derivatives adds positive correlations.; <br/>; For these reasons, ""size"" regularisation does not work well with; the tau-scan: the higher tau, the smaller rho, but there is no minimum.; As a result, large values of tau (too strong regularisation) are found.; In contrast, the tau-scan is expected to wor",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:3074,Testability,test,test,3074,"i>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>Repeated calls to SubtractBackground() to specify background; sources</li>; <li>Repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanTau()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>; A detailed documentation of the various GetXXX() methods to control; systematic uncertainties is given with the method TUnfoldSys. <h3>Why to use complex binning schemes</h3>. in literature on unfolding, the ""standard"" test case is a; one-dimensional distribution without underflow or overflow bins.; The migration matrix is almost diagonal.; <br/>; <b>This ""standard"" case is rarely realized for real problems.</b>; <br/>; Often one has to deal with multi-dimensional distributions.; In addition, there are underflow and overflow bins; or other background bins, possibly determined with the help of auxillary; measurements.; <br/>; In TUnfoldDensity, such complex binning schemes are handled with the help; of the class TUnfoldBinning. For both the measurement and the truth; there is a tree structure. The tree nodes may correspond to single; bins (e.g. nuisance parameters) or may hold multi-dimensional distributions.; <br/>; For example, the ""measurement"" tree could have two leaves, one for; the primary distribution and one for auxillary measurements.; Similarly, the ""truth"" tree could have two leaves, one for the; signal and one for the background.; Each of the leaves may then have a multi-dimensional distribution.; <br/>; Th",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:5098,Testability,test,test,5098,"ribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" introduces no correlation.; Regularisation on 1st or 2nd derivatives adds positive correlations.; <br/>; For these reasons, ""size"" regularisation does not work well with; the tau-scan: the higher tau, the smaller rho, but there is no minimum.; As a result, large values of tau (too strong regularisation) are found.; In contrast, the tau-scan is expected to work better with 1st or 2nd; derivative regularisation, because at some point the negative; correlations from migrations are approximately cancelled by the; positive correlations from the regularisation conditions.; <br/>; whichever algorithm is used, the output has to be checked:; ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1167,Usability,simpl,simple,1167,"// Version 17.6, with updated doxygen comments and bug-fixes in TUnfoldBinning; // Version 17.5, bug fix in TUnfold also corrects GetEmatrixSysUncorr(); // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, with new options 'N' and 'c' for axis regularisation steering; // Version 17.1, add scan type RhoSquare, small bug fixes with useAxisBinning; // Version 17.0, support for density regularisation, complex binning schemes, tau scan; /** \class TUnfoldDensity; An algorithm to unfold distributions from detector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. The binning schemes may be coded in the XML language,; for reading use TUnfoldBinningXML.</li>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1244,Usability,simpl,simple,1244,"////////////////////////////////////////////////////////////////////////; /// set up response matrix A, uncorrelated uncertainties of A,; /// regularisation scheme and binning schemes; ///; /// \param[in] hist_A matrix that describes the migrations; /// \param[in] histmap mapping of the histogram axes to the unfolding output; /// \param[in] regmode (default=kRegModeSize) global regularisation mode; /// \param[in] constraint (default=kEConstraintArea) type of constraint; /// \param[in] densityMode (default=kDensityModeBinWidthAndUser); /// regularisation scale factors to construct the matrix L; /// \param[in] outputBins (default=nullptr) binning scheme for truth (unfolding output); /// \param[in] inputBins (default=nullptr) binning scheme for measurement (unfolding; /// input); /// \param[in] regularisationDistribution (default=nullptr) selectin of; /// regularized distribution; /// \param[in] regularisationAxisSteering (default=nullptr) detailed; /// regularisation steeringfor selected distribution; ///; /// The parameters <b>hist_A, histmap, constraint</b> are; /// explained with the TUnfoldSys constructor.; /// <br/>; /// The parameters <b>outputBins,inputBins</b> set the binning; /// schemes. If these arguments are zero, simple binning schemes are; /// constructed which correspond to the axes of the histogram; /// <b>hist_A</b>.; /// <br/>; /// The parameters; /// <b>regmode, densityMode, regularisationDistribution, regularisationAxisSteering</b>; /// together control how the initial matrix L of regularisation conditions; /// is constructed. as explained in RegularizeDistribution().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1530,Integrability,wrap,wrap,1530,"////////////////////////////////////////////////////////////////////////; /// set up regularisation conditions; ///; /// \param[in] regmode basic regularisation mode (see class TUnfold); /// \param[in] densityMode how to apply bin-wise factors; /// \param[in] distribution name of the TUnfoldBinning node for which; /// the regularisation conditions shall be set (zero matches all nodes); /// \param[in] axisSteering regularisation fine-tuning; ///; /// <b>axisSteering</b> is a string with several tokens, separated by; /// a semicolon: ""axisName[options];axisName[options];..."".; /// <dl>; /// <dt>axisName</dt>; /// <dd>the name of an axis. The special name * matches all.; /// So the argument <b>distribution</b> selects one (or all); /// distributions. Witin the selected distribution(s), steering options may be; /// specified for each axis (or for all axes) to define the; /// regularisation conditions.</dd>; /// <dt>options</dt>; /// <dd>one or several character as follows<br/>; /// u : exclude underflow bin from derivatives along this axis<br/>; /// o : exclude overflow bin from derivatives along this axis<br/>; /// U : exclude underflow bin<br/>; /// O : exclude overflow bin<br/>; /// b : use bin width for derivative calculation<br/>; /// B : same as 'b', in addition normalize to average bin width<br/>; /// N : completely exclude derivatives along this axis<br/>; /// p : axis is periodic (e.g. azimuthal angle), so; /// include derivatives built from combinations involving bins at; /// both ends of the axis ""wrap around""; /// </dd>; /// </dl>; /// example: <b>axisSteering</b>=""*[UOB]"" uses bin widths to calculate; /// derivatives but underflow/overflow bins are not regularized",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1797,Deployability,integrat,integrate,1797," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:2109,Deployability,integrat,integrate,2109," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1797,Integrability,integrat,integrate,1797," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:2109,Integrability,integrat,integrate,2109," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1816,Modifiability,variab,variable,1816," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:2128,Modifiability,variab,variable,2128," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:707,Availability,error,errors,707,"////////////////////////////////////////////////////////////////////////; /// retreive a background source in a new histogram; ///; /// \param[in] histogramName name of the histogram; /// \param[in] bgrSource the background source to retreive; /// \param[in] histogramTitle (default=nullptr) title of the histogram; /// \param[in] distributionName (default=nullptr) identifier of the distribution to be extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; /// \param[in] includeError (default=3) type of background errors to; /// be included (+1 uncorrelated bgr errors, +2 correlated bgr errors); ///; /// returns a new histogram. See method GetOutput() for a detailed; /// description of the arguments",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:755,Availability,error,errors,755,"////////////////////////////////////////////////////////////////////////; /// retreive a background source in a new histogram; ///; /// \param[in] histogramName name of the histogram; /// \param[in] bgrSource the background source to retreive; /// \param[in] histogramTitle (default=nullptr) title of the histogram; /// \param[in] distributionName (default=nullptr) identifier of the distribution to be extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; /// \param[in] includeError (default=3) type of background errors to; /// be included (+1 uncorrelated bgr errors, +2 correlated bgr errors); ///; /// returns a new histogram. See method GetOutput() for a detailed; /// description of the arguments",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:781,Availability,error,errors,781,"////////////////////////////////////////////////////////////////////////; /// retreive a background source in a new histogram; ///; /// \param[in] histogramName name of the histogram; /// \param[in] bgrSource the background source to retreive; /// \param[in] histogramTitle (default=nullptr) title of the histogram; /// \param[in] distributionName (default=nullptr) identifier of the distribution to be extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; /// \param[in] includeError (default=3) type of background errors to; /// be included (+1 uncorrelated bgr errors, +2 correlated bgr errors); ///; /// returns a new histogram. See method GetOutput() for a detailed; /// description of the arguments",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:78,Security,access,access,78,"////////////////////////////////////////////////////////////////////////; /// access matrix of regularisation conditions in a new histogram; ///; /// \param[in] histogramName name of the histogram; /// \param[in] histogramTitle (default=nullptr) title of the histogram; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// returns a new histogram. if histogramTitle is null, choose a title; /// automatically.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:571,Energy Efficiency,monitor,monitoring,571,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:634,Energy Efficiency,monitor,monitoring,634,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:716,Energy Efficiency,monitor,monitoring,716,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1125,Modifiability,variab,variable,1125,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1626,Modifiability,variab,variables,1626,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1033,Performance,Perform,Perform,1033,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:341,Testability,log,log,341,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:618,Testability,log,logTauXPlot,618,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:674,Testability,log,log,674,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:700,Testability,log,logTauYPlot,700,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:756,Testability,log,log,756,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:63,Availability,error,error,63,"// if the number of degrees of freedom is too small, create an error",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:86,Testability,log,log,86,"// insert additional points; // points are inserted such that the largest interval in log(tau); // is divided into two smaller intervals; // however, there is a penalty term for subdividing intervals; // which are far away from the minimum",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:44,Testability,log,log,44,"// insert additional points such that large log(tau) intervals; // near the minimum rho are divided into two",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:112,Testability,log,logTauX,112,"//==========================================================; // (3) return the result in; // scanResult lCurve logTauX logTauY",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:120,Testability,log,logTauY,120,"//==========================================================; // (3) return the result in; // scanResult lCurve logTauX logTauY",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:8,Testability,log,logT,8,"//cout<<logT[n]<<"" ""<< x[n]<<"" ""<<y[n]<<""\n"";",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:145,Modifiability,variab,variable,145,"////////////////////////////////////////////////////////////////////////; /// calculate the function for ScanTau(); ///; /// \param[in] mode the variable to be calculated; /// \param[in] distribution distribution for which the variable; /// is to be calculated; /// \param[in] axisSteering detailed steering for selecting bins on; /// the axes of the distribution (see method GetRhoItotal()); ///; /// return value: the scan result for the given choice of tau (for; /// which the unfolding was performed prior to calling this method); /// <br/>; /// In ScanTau() the unfolding is repeated for various choices of tau.; /// For each tau, after unfolding, GetScanVariable() is called to; /// determine the scan result for this choice of tau.; /// <br/>; /// the following modes are implemented; /// <ul>; /// <li>kEScanTauRhoAvg : average (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoSquaredAvg : average (stat+bgr) global correlation squared</li>; /// <li>kEScanTauRhoMax : maximum (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoAvgSys : average (stat+bgr+sys) global correlation</li>; /// <li>kEScanTauRhoAvgSquaredSys : average (stat+bgr+sys) global correlation squared</li>; /// <li>kEScanTauRhoMaxSys : maximum (stat+bgr+sys) global; /// correlation</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:227,Modifiability,variab,variable,227,"////////////////////////////////////////////////////////////////////////; /// calculate the function for ScanTau(); ///; /// \param[in] mode the variable to be calculated; /// \param[in] distribution distribution for which the variable; /// is to be calculated; /// \param[in] axisSteering detailed steering for selecting bins on; /// the axes of the distribution (see method GetRhoItotal()); ///; /// return value: the scan result for the given choice of tau (for; /// which the unfolding was performed prior to calling this method); /// <br/>; /// In ScanTau() the unfolding is repeated for various choices of tau.; /// For each tau, after unfolding, GetScanVariable() is called to; /// determine the scan result for this choice of tau.; /// <br/>; /// the following modes are implemented; /// <ul>; /// <li>kEScanTauRhoAvg : average (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoSquaredAvg : average (stat+bgr) global correlation squared</li>; /// <li>kEScanTauRhoMax : maximum (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoAvgSys : average (stat+bgr+sys) global correlation</li>; /// <li>kEScanTauRhoAvgSquaredSys : average (stat+bgr+sys) global correlation squared</li>; /// <li>kEScanTauRhoMaxSys : maximum (stat+bgr+sys) global; /// correlation</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:494,Performance,perform,performed,494,"////////////////////////////////////////////////////////////////////////; /// calculate the function for ScanTau(); ///; /// \param[in] mode the variable to be calculated; /// \param[in] distribution distribution for which the variable; /// is to be calculated; /// \param[in] axisSteering detailed steering for selecting bins on; /// the axes of the distribution (see method GetRhoItotal()); ///; /// return value: the scan result for the given choice of tau (for; /// which the unfolding was performed prior to calling this method); /// <br/>; /// In ScanTau() the unfolding is repeated for various choices of tau.; /// For each tau, after unfolding, GetScanVariable() is called to; /// determine the scan result for this choice of tau.; /// <br/>; /// the following modes are implemented; /// <ul>; /// <li>kEScanTauRhoAvg : average (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoSquaredAvg : average (stat+bgr) global correlation squared</li>; /// <li>kEScanTauRhoMax : maximum (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoAvgSys : average (stat+bgr+sys) global correlation</li>; /// <li>kEScanTauRhoAvgSquaredSys : average (stat+bgr+sys) global correlation squared</li>; /// <li>kEScanTauRhoMaxSys : maximum (stat+bgr+sys) global; /// correlation</li>; /// </ul>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldDensity.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldIterativeEM.cxx:18,Availability,error,errors,18,"// add up Poisson errors squared",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldIterativeEM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldIterativeEM.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldIterativeEM.cxx:18,Availability,error,errors,18,"// add up Poisson errors squared",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldIterativeEM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldIterativeEM.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:598,Availability,error,error,598,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:861,Availability,error,errors,861,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:907,Availability,error,errors,907,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:2446,Availability,avail,available,2446,"nfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfoldSys are; the getter functions. For TUnfoldSys, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background n",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3237,Availability,avail,available,3237," simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <t",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3505,Availability,error,error,3505,"ation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBac",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3766,Availability,error,errors,3766,"() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3813,Availability,error,errors,3813,"() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3882,Availability,error,errors,3882,"tematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>st",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4157,Availability,error,error,4157,"olding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unf",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4184,Availability,error,error,4184,"ic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4339,Availability,error,error,4339,"ic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4513,Availability,error,errors,4513,"ys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods p",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4564,Availability,error,errors,4564,"ys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods p",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4760,Availability,error,errors,4760,"ys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods p",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5261,Availability,error,error,5261,"matrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5398,Availability,error,errors,5398,"risation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5439,Availability,error,errors,5439,"risation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5485,Availability,error,errors,5485,"risation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5542,Availability,error,error,5542,"risation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5618,Availability,error,errors,5618,"risation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:228,Deployability,update,updated,228,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:2434,Deployability,update,updates,2434,"nfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfoldSys are; the getter functions. For TUnfoldSys, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background n",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:2929,Performance,perform,performed,2929,"; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfoldSys are; the getter functions. For TUnfoldSys, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the his",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:997,Safety,detect,detector,997,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3557,Security,Access,Access,3557,"onstructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3592,Security,Access,Access,3592,"onstructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; ",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1414,Usability,simpl,simple,1414,"nd background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfoldSys are; the getter functions. For TUnfoldSys, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:2229,Usability,simpl,simply,2229,"s A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfoldSys are; the getter functions. For TUnfoldSys, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties availab",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:23,Availability,error,errors,23,"// save the normalized errors on hist_A; // to the matrices fDAinRelSq and fDAinColRelSq",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:24,Availability,error,errors,24,"// quadratic sum of all errors from all bins,; // including under/overflow bins",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Availability,error,error,3,"// error on this bin",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:248,Availability,error,error,248,"////////////////////////////////////////////////////////////////////////; /// Specify a correlated systematic uncertainty; ///; /// \param[in] sysError alternative matrix or matrix of absolute/relative shifts; /// \param[in] name identifier of the error source; /// \param[in] histmap mapping of the histogram axes; /// \param[in] mode format of the error source; ///; /// <b>sysError</b> corresponds to a one-sigma variation. If; /// may be given in various forms, specified by <b>mode</b>; /// <ul>; /// <li><b>mode=kSysErrModeMatrix</b> the histogram <b>sysError</b>; /// corresponds to an alternative response matrix.</li>; /// <li><b>mode=kSysErrModeShift</b> the content of the histogram <b>sysError</b> are the absolute shifts of the response matrix; /// <li><b>mode=kSysErrModeRelative</b> the content of the histogram <b>sysError</b>; /// specifies the relative uncertainties; /// </ul>; /// Internally, all three cases are transformed to the case <b>mode=kSysErrModeMatrix</b>.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:350,Availability,error,error,350,"////////////////////////////////////////////////////////////////////////; /// Specify a correlated systematic uncertainty; ///; /// \param[in] sysError alternative matrix or matrix of absolute/relative shifts; /// \param[in] name identifier of the error source; /// \param[in] histmap mapping of the histogram axes; /// \param[in] mode format of the error source; ///; /// <b>sysError</b> corresponds to a one-sigma variation. If; /// may be given in various forms, specified by <b>mode</b>; /// <ul>; /// <li><b>mode=kSysErrModeMatrix</b> the histogram <b>sysError</b>; /// corresponds to an alternative response matrix.</li>; /// <li><b>mode=kSysErrModeShift</b> the content of the histogram <b>sysError</b> are the absolute shifts of the response matrix; /// <li><b>mode=kSysErrModeRelative</b> the content of the histogram <b>sysError</b>; /// specifies the relative uncertainties; /// </ul>; /// Internally, all three cases are transformed to the case <b>mode=kSysErrModeMatrix</b>.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:35,Security,access,accessed,35,"// a copy of fA is made. It can be accessed inside the loop; // without having to take care that the sparse structure of *fA; // otherwise, *fA may be accidentally destroyed by asking; // for an element which is zero.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:20,Integrability,depend,depending,20,"// get bin content, depending on histmap",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:78,Performance,perform,perform,78,"////////////////////////////////////////////////////////////////////////; /// perform background subtraction; ///; /// This prepares the data members for the base class TUnfold, such; /// that the background is properly taken into account.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Usability,simpl,simple,3,"// simple copy",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:17,Availability,error,error,17,"// copy original error matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:31,Availability,error,errors,31,"// add uncorrelated background errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:29,Availability,error,errors,29,"// add correlated background errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:103,Availability,error,errors,103,"// Define the input data for subsequent calls to DoUnfold(Double_t); // input: input distribution with errors; // scaleBias: scale factor applied to the bias; // oneOverZeroError: for bins with zero error, this number defines 1/error.; // Return value: number of bins with bad error; // +10000*number of unconstrained output bins; // Note: return values>=10000 are fatal errors,; // for the given input, the unfolding can not be done!; // Calls the SetInput method of the base class, then renames the input; // vectors fY and fVyy, then performs the background subtraction; // Data members modified:; // fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; // and those modified by TUnfold::SetInput(); // and those modified by DoBackgroundSubtraction()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:199,Availability,error,error,199,"// Define the input data for subsequent calls to DoUnfold(Double_t); // input: input distribution with errors; // scaleBias: scale factor applied to the bias; // oneOverZeroError: for bins with zero error, this number defines 1/error.; // Return value: number of bins with bad error; // +10000*number of unconstrained output bins; // Note: return values>=10000 are fatal errors,; // for the given input, the unfolding can not be done!; // Calls the SetInput method of the base class, then renames the input; // vectors fY and fVyy, then performs the background subtraction; // Data members modified:; // fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; // and those modified by TUnfold::SetInput(); // and those modified by DoBackgroundSubtraction()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:228,Availability,error,error,228,"// Define the input data for subsequent calls to DoUnfold(Double_t); // input: input distribution with errors; // scaleBias: scale factor applied to the bias; // oneOverZeroError: for bins with zero error, this number defines 1/error.; // Return value: number of bins with bad error; // +10000*number of unconstrained output bins; // Note: return values>=10000 are fatal errors,; // for the given input, the unfolding can not be done!; // Calls the SetInput method of the base class, then renames the input; // vectors fY and fVyy, then performs the background subtraction; // Data members modified:; // fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; // and those modified by TUnfold::SetInput(); // and those modified by DoBackgroundSubtraction()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:277,Availability,error,error,277,"// Define the input data for subsequent calls to DoUnfold(Double_t); // input: input distribution with errors; // scaleBias: scale factor applied to the bias; // oneOverZeroError: for bins with zero error, this number defines 1/error.; // Return value: number of bins with bad error; // +10000*number of unconstrained output bins; // Note: return values>=10000 are fatal errors,; // for the given input, the unfolding can not be done!; // Calls the SetInput method of the base class, then renames the input; // vectors fY and fVyy, then performs the background subtraction; // Data members modified:; // fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; // and those modified by TUnfold::SetInput(); // and those modified by DoBackgroundSubtraction()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:371,Availability,error,errors,371,"// Define the input data for subsequent calls to DoUnfold(Double_t); // input: input distribution with errors; // scaleBias: scale factor applied to the bias; // oneOverZeroError: for bins with zero error, this number defines 1/error.; // Return value: number of bins with bad error; // +10000*number of unconstrained output bins; // Note: return values>=10000 are fatal errors,; // for the given input, the unfolding can not be done!; // Calls the SetInput method of the base class, then renames the input; // vectors fY and fVyy, then performs the background subtraction; // Data members modified:; // fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; // and those modified by TUnfold::SetInput(); // and those modified by DoBackgroundSubtraction()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:537,Performance,perform,performs,537,"// Define the input data for subsequent calls to DoUnfold(Double_t); // input: input distribution with errors; // scaleBias: scale factor applied to the bias; // oneOverZeroError: for bins with zero error, this number defines 1/error.; // Return value: number of bins with bad error; // +10000*number of unconstrained output bins; // Note: return values>=10000 are fatal errors,; // for the given input, the unfolding can not be done!; // Calls the SetInput method of the base class, then renames the input; // vectors fY and fVyy, then performs the background subtraction; // Data members modified:; // fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; // and those modified by TUnfold::SetInput(); // and those modified by DoBackgroundSubtraction()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:176,Availability,error,errors,176,"////////////////////////////////////////////////////////////////////////; /// Specify a source of background; ///; /// \param[in] bgr background distribution with uncorrelated errors; /// \param[in] name identifier for this background source; /// \param[in] scale normalisation factor applied to the background; /// \param[in] scaleError normalisation uncertainty; ///; /// The contribution <b>scale</b>*<b>bgr</b> is subtracted from the; /// measurement prior to unfolding. The following contributions are; /// added to the input covarianc ematrix; /// <ul>; /// <li>using the uncorrelated histogram errors <b>dbgr</b>, the contribution; /// (<b>scale</b>*<b>dbgr<sub>i</sub></b>)<sup>2</sup> is added to the; /// diagonals of the covariance</li>; /// <li>using the histogram contents, the background normalisation uncertainty contribution; /// <b>dscale</b>*<b>bgr<sub>i</sub></b> <b>dscale</b>*<b>bgr<sub>j</sub></b>; /// is added to the covariance matrix</li>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:601,Availability,error,errors,601,"////////////////////////////////////////////////////////////////////////; /// Specify a source of background; ///; /// \param[in] bgr background distribution with uncorrelated errors; /// \param[in] name identifier for this background source; /// \param[in] scale normalisation factor applied to the background; /// \param[in] scaleError normalisation uncertainty; ///; /// The contribution <b>scale</b>*<b>bgr</b> is subtracted from the; /// measurement prior to unfolding. The following contributions are; /// added to the input covarianc ematrix; /// <ul>; /// <li>using the uncorrelated histogram errors <b>dbgr</b>, the contribution; /// (<b>scale</b>*<b>dbgr<sub>i</sub></b>)<sup>2</sup> is added to the; /// diagonals of the covariance</li>; /// <li>using the histogram contents, the background normalisation uncertainty contribution; /// <b>dscale</b>*<b>bgr<sub>i</sub></b> <b>dscale</b>*<b>bgr<sub>j</sub></b>; /// is added to the covariance matrix</li>",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:172,Availability,error,errors,172,"////////////////////////////////////////////////////////////////////////; /// get background into a histogram; ///; /// \param[inout] bgrHist target histogram, content and errors will be altered; /// \param[in] bgrSource (default=nullptr) name of backgrond source or zero; /// to add all sources of background; /// \param[in] binMap (default=nullptr) remap histogram bins; /// \param[in] includeError (default=3) include uncorrelated(1),; /// correlated (2) or both (3) sources of uncertainty in the; /// histogram errors; /// \param[in] clearHist (default=true) reset histogram before adding; /// up the specified background sources; ///; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearHist</b> may be used to add background from; /// several sources in successive calls to GetBackground().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:515,Availability,error,errors,515,"////////////////////////////////////////////////////////////////////////; /// get background into a histogram; ///; /// \param[inout] bgrHist target histogram, content and errors will be altered; /// \param[in] bgrSource (default=nullptr) name of backgrond source or zero; /// to add all sources of background; /// \param[in] binMap (default=nullptr) remap histogram bins; /// \param[in] includeError (default=3) include uncorrelated(1),; /// correlated (2) or both (3) sources of uncertainty in the; /// histogram errors; /// \param[in] clearHist (default=true) reset histogram before adding; /// up the specified background sources; ///; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearHist</b> may be used to add background from; /// several sources in successive calls to GetBackground().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:538,Usability,clear,clearHist,538,"////////////////////////////////////////////////////////////////////////; /// get background into a histogram; ///; /// \param[inout] bgrHist target histogram, content and errors will be altered; /// \param[in] bgrSource (default=nullptr) name of backgrond source or zero; /// to add all sources of background; /// \param[in] binMap (default=nullptr) remap histogram bins; /// \param[in] includeError (default=3) include uncorrelated(1),; /// correlated (2) or both (3) sources of uncertainty in the; /// histogram errors; /// \param[in] clearHist (default=true) reset histogram before adding; /// up the specified background sources; ///; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearHist</b> may be used to add background from; /// several sources in successive calls to GetBackground().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:727,Usability,clear,clearHist,727,"////////////////////////////////////////////////////////////////////////; /// get background into a histogram; ///; /// \param[inout] bgrHist target histogram, content and errors will be altered; /// \param[in] bgrSource (default=nullptr) name of backgrond source or zero; /// to add all sources of background; /// \param[in] binMap (default=nullptr) remap histogram bins; /// \param[in] includeError (default=3) include uncorrelated(1),; /// correlated (2) or both (3) sources of uncertainty in the; /// histogram errors; /// \param[in] clearHist (default=true) reset histogram before adding; /// up the specified background sources; ///; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearHist</b> may be used to add background from; /// several sources in successive calls to GetBackground().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:31,Availability,error,errors,31,"// add uncorrelated background errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:115,Integrability,depend,depend,115,"////////////////////////////////////////////////////////////////////////////////; /// Clear all data members which depend on the unfolding results.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all data members which depend on the unfolding results.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:32,Integrability,depend,depend,32,"// clear all data members which depend on the unfolding results",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Usability,clear,clear,3,"// clear all data members which depend on the unfolding results",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:131,Availability,error,errors,131,"////////////////////////////////////////////////////////////////////////; /// Matrix calculations required to propagate systematic errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:35,Availability,error,errors,35,"// calculate individual systematic errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:287,Usability,clear,clearEmat,287,"////////////////////////////////////////////////////////////////////////; /// Covariance contribution from uncorrelated uncertainties of the; /// response matrix; ///; /// \param[inout] ematrix covariance matrix histogram; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if true, ematrix is cleared prior to adding; /// this covariance matrix contribution; ///; /// This method propagates the uncertainties of the response matrix; /// histogram, specified with the constructor, to the unfolding; /// result. It is assumed that the entries of that histogram are; /// bin-to-bin uncorrelated. In many cases this corresponds to the; /// ""Monte Carlo statistical uncertainties"".; /// <br/>; /// The array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:317,Usability,clear,cleared,317,"////////////////////////////////////////////////////////////////////////; /// Covariance contribution from uncorrelated uncertainties of the; /// response matrix; ///; /// \param[inout] ematrix covariance matrix histogram; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if true, ematrix is cleared prior to adding; /// this covariance matrix contribution; ///; /// This method propagates the uncertainties of the response matrix; /// histogram, specified with the constructor, to the unfolding; /// result. It is assumed that the entries of that histogram are; /// bin-to-bin uncorrelated. In many cases this corresponds to the; /// ""Monte Carlo statistical uncertainties"".; /// <br/>; /// The array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:800,Usability,clear,clearEmat,800,"////////////////////////////////////////////////////////////////////////; /// Covariance contribution from uncorrelated uncertainties of the; /// response matrix; ///; /// \param[inout] ematrix covariance matrix histogram; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if true, ematrix is cleared prior to adding; /// this covariance matrix contribution; ///; /// This method propagates the uncertainties of the response matrix; /// histogram, specified with the constructor, to the unfolding; /// result. It is assumed that the entries of that histogram are; /// bin-to-bin uncorrelated. In many cases this corresponds to the; /// ""Monte Carlo statistical uncertainties"".; /// <br/>; /// The array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:112,Availability,error,errors,112,"////////////////////////////////////////////////////////////////////////; /// propagate uncorrelated systematic errors to a covariance matrix; ///; /// \param[in] m_0 coefficients for error propagation; /// \param[in] m_1 coefficients for error propagation; ///; /// returns the covariance matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:184,Availability,error,error,184,"////////////////////////////////////////////////////////////////////////; /// propagate uncorrelated systematic errors to a covariance matrix; ///; /// \param[in] m_0 coefficients for error propagation; /// \param[in] m_1 coefficients for error propagation; ///; /// returns the covariance matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:239,Availability,error,error,239,"////////////////////////////////////////////////////////////////////////; /// propagate uncorrelated systematic errors to a covariance matrix; ///; /// \param[in] m_0 coefficients for error propagation; /// \param[in] m_1 coefficients for error propagation; ///; /// returns the covariance matrix",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:37,Availability,error,errors,37,"// propagate uncorrelated systematic errors to a covariance matrix; // m0,m1 : coefficients (matrices) for propagating the errors; //; // the error matrix is calculated by standard error propagation, where the; // derivative of the result vector X wrt the matrix A is given by; //; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // where:; // the matrices M0 and M1 are arguments to this function; // the vectors Z0, Z1 : GetDXDAZ(); //; // The matrix A is calculated from a matrix B as; //; // A_ij = B_ij / sum_k B_kj; //; // where k runs over additional indices of B, not present in A.; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:123,Availability,error,errors,123,"// propagate uncorrelated systematic errors to a covariance matrix; // m0,m1 : coefficients (matrices) for propagating the errors; //; // the error matrix is calculated by standard error propagation, where the; // derivative of the result vector X wrt the matrix A is given by; //; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // where:; // the matrices M0 and M1 are arguments to this function; // the vectors Z0, Z1 : GetDXDAZ(); //; // The matrix A is calculated from a matrix B as; //; // A_ij = B_ij / sum_k B_kj; //; // where k runs over additional indices of B, not present in A.; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:142,Availability,error,error,142,"// propagate uncorrelated systematic errors to a covariance matrix; // m0,m1 : coefficients (matrices) for propagating the errors; //; // the error matrix is calculated by standard error propagation, where the; // derivative of the result vector X wrt the matrix A is given by; //; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // where:; // the matrices M0 and M1 are arguments to this function; // the vectors Z0, Z1 : GetDXDAZ(); //; // The matrix A is calculated from a matrix B as; //; // A_ij = B_ij / sum_k B_kj; //; // where k runs over additional indices of B, not present in A.; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:181,Availability,error,error,181,"// propagate uncorrelated systematic errors to a covariance matrix; // m0,m1 : coefficients (matrices) for propagating the errors; //; // the error matrix is calculated by standard error propagation, where the; // derivative of the result vector X wrt the matrix A is given by; //; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // where:; // the matrices M0 and M1 are arguments to this function; // the vectors Z0, Z1 : GetDXDAZ(); //; // The matrix A is calculated from a matrix B as; //; // A_ij = B_ij / sum_k B_kj; //; // where k runs over additional indices of B, not present in A.; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1015,Availability,error,error,1015,"; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1356,Availability,error,errors,1356,"; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1628,Availability,error,errors,1628," for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - sum_j [ G_mj * F_nj ]; // - sum_j [ F_mj * G_nj ]; // + sum_ij [ (dX_m / dA_ij) * (dX_n / dA_lj) * Rsq_ij ]; //; // where:; // F_mj = sum_i [ (dX_m / dA_ij) * A_ij ]; // G_mj = sum_i [ (dX_m / dA_ij) * Rsq_ij ]; //; // In order to avoid explicitly calculating the 3-dimensional tensor; // (dX_m/dA_ij) the sums are evaluated further, using; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // F_mj = M0_mj * (A# Z0)_j - (M1 A)_mj Z1_j; // G_mj = M0_mj * (Rsq# Z0)_j - (M1 Rsq)_mj Z1_j; //; // and; //; // sum_ij [ (dX_m/dA_ij) * (dX_n/dA_ij) * Rsq_ij ] =; // sum_j [ M0_mj * M0_nj * [ sum_i (Z0_i)^2 * Rsq_ij ] ]; // + sum_i [ M1_m",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:2230,Safety,avoid,avoid,2230," ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - sum_j [ G_mj * F_nj ]; // - sum_j [ F_mj * G_nj ]; // + sum_ij [ (dX_m / dA_ij) * (dX_n / dA_lj) * Rsq_ij ]; //; // where:; // F_mj = sum_i [ (dX_m / dA_ij) * A_ij ]; // G_mj = sum_i [ (dX_m / dA_ij) * Rsq_ij ]; //; // In order to avoid explicitly calculating the 3-dimensional tensor; // (dX_m/dA_ij) the sums are evaluated further, using; // dX_k / dA_ij = M0_kj * Z0_i - M1_ki * Z1_j; //; // F_mj = M0_mj * (A# Z0)_j - (M1 A)_mj Z1_j; // G_mj = M0_mj * (Rsq# Z0)_j - (M1 Rsq)_mj Z1_j; //; // and; //; // sum_ij [ (dX_m/dA_ij) * (dX_n/dA_ij) * Rsq_ij ] =; // sum_j [ M0_mj * M0_nj * [ sum_i (Z0_i)^2 * Rsq_ij ] ]; // + sum_i [ M1_mi * M1_ni * [ sum_j (Z1_j)^2 * Rsq_ij ] ]; // - sum_i [ M1_mi * H_ni + M1_ni * H_mi]; // where:; // H_mi = Z0_i * sum_j [ M0_mj * Z1_j * Rsq_ij ]; //; // collect all contributions:; // Vxx_nm = r0 -r1 -r2 +r3 +r4 -r5 -r6; // r0 = sum_j [ F_mj * F_nj * SRsq_j ]; // r1 = sum_j [ G_mj * F_nj ]; // r2 = sum_j [ F_mj * G_nj ]; // r3 = sum_j [ M0_mj * M0_nj * [ sum_i (Z0_i)^2 * Rsq_ij ] ]; // r4 = sum_i [ M1_mi * M1_ni * [ sum_j (Z1_j)^2 * Rsq_ij ] ]; // r5 = sum_i [ M1_mi * H_ni ]; // r6 = sum_i [ M1_ni * H_mi ]; //======================================================; // calculate contributions co",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1041,Usability,Simpl,Simplify,1041,"; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:103,Availability,error,errors,103,"// propagate correlated systematic shift to output vector; // m1,m2 : coefficients for propagating the errors; // dsys : matrix of correlated shifts from this source; // delta_m =; // sum{i,j} {; // ((*m1)(m,j) * (*fVYAx)(i) - (*m2)(m,i) * (*fX)(j))*dsys(i,j) }; // = sum_j (*m1)(m,j) sum_i dsys(i,j) * (*fVYAx)(i); // - sum_i (*m2)(m,i) sum_j dsys(i,j) * (*fX)(j)",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:369,Availability,error,error,369,"////////////////////////////////////////////////////////////////////////; /// correlated one-sigma shifts correspinding to a given systematic uncertainty; ///; /// \param[out] hist_delta histogram to store shifts; /// \param[in] name identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; ///; /// returns true if the error source was found.; /// <br>; /// This method returns the shifts of the unfolding result induced by; /// varying the identified systematic source by one sigma.; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:363,Usability,clear,clearEmat,363,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from a systematic variation of the; /// response matrix; ///; /// \param[inout] ematrix covariance matrix histogram; /// \param[in] name identifier of the systematic variation; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; /// prior to adding the covariance matrix contribution; ///; /// Returns the covariance matrix contribution from shifting the given; /// uncertainty source within one sigma; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:397,Usability,clear,clear,397,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from a systematic variation of the; /// response matrix; ///; /// \param[inout] ematrix covariance matrix histogram; /// \param[in] name identifier of the systematic variation; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; /// prior to adding the covariance matrix contribution; ///; /// Returns the covariance matrix contribution from shifting the given; /// uncertainty source within one sigma; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:690,Usability,clear,clearEmat,690,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from a systematic variation of the; /// response matrix; ///; /// \param[inout] ematrix covariance matrix histogram; /// \param[in] name identifier of the systematic variation; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; /// prior to adding the covariance matrix contribution; ///; /// Returns the covariance matrix contribution from shifting the given; /// uncertainty source within one sigma; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:337,Usability,clear,clearEmat,337,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from background normalisation uncertainty; ///; /// \param[inout] ematrix output histogram; /// \param[in] source identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; /// prior to adding the covariance matrix contribution; ///; /// this method returns the uncertainties on the unfolding result; /// arising from the background source <b>source</b> and its normalisation; /// uncertainty. See method SubtractBackground() how to set the normalisation uncertainty; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:371,Usability,clear,clear,371,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from background normalisation uncertainty; ///; /// \param[inout] ematrix output histogram; /// \param[in] source identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; /// prior to adding the covariance matrix contribution; ///; /// this method returns the uncertainties on the unfolding result; /// arising from the background source <b>source</b> and its normalisation; /// uncertainty. See method SubtractBackground() how to set the normalisation uncertainty; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:785,Usability,clear,clearEmat,785,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from background normalisation uncertainty; ///; /// \param[inout] ematrix output histogram; /// \param[in] source identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; /// prior to adding the covariance matrix contribution; ///; /// this method returns the uncertainties on the unfolding result; /// arising from the background source <b>source</b> and its normalisation; /// uncertainty. See method SubtractBackground() how to set the normalisation uncertainty; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:114,Availability,error,error,114,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from error on regularisation; /// parameter; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the assigned uncertainty on the parameter tau, see method; /// SetTauError().; /// <br>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:287,Usability,clear,clearEmat,287,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from error on regularisation; /// parameter; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the assigned uncertainty on the parameter tau, see method; /// SetTauError().; /// <br>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:321,Usability,clear,clear,321,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from error on regularisation; /// parameter; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the assigned uncertainty on the parameter tau, see method; /// SetTauError().; /// <br>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:610,Usability,clear,clearEmat,610,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from error on regularisation; /// parameter; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the assigned uncertainty on the parameter tau, see method; /// SetTauError().; /// <br>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:13,Availability,error,error,13,"// calculate error matrix from error in regularisation parameter; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:31,Availability,error,error,31,"// calculate error matrix from error in regularisation parameter; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:189,Availability,error,errors,189,"// calculate error matrix from error in regularisation parameter; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:125,Usability,clear,clearEmat,125,"// calculate error matrix from error in regularisation parameter; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:149,Usability,clear,clear,149,"// calculate error matrix from error in regularisation parameter; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:280,Usability,clear,clearEmat,280,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from input measurement uncertainties; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the uncertainties or covariance of the input; /// data. In many cases, these are the ""statistical uncertainties"".; /// <br>; /// The array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:314,Usability,clear,clear,314,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from input measurement uncertainties; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the uncertainties or covariance of the input; /// data. In many cases, these are the ""statistical uncertainties"".; /// <br>; /// The array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:639,Usability,clear,clearEmat,639,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from input measurement uncertainties; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the uncertainties or covariance of the input; /// data. In many cases, these are the ""statistical uncertainties"".; /// <br>; /// The array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:333,Usability,clear,clearEmat,333,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from background uncorrelated uncertainty; ///; /// \param[in] ematrix output histogram; /// \param[in] source identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// arising from the background source <b>source</b> and the uncorrelated; /// (background histogram uncertainties). Also see method SubtractBackground(); /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:367,Usability,clear,clear,367,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from background uncorrelated uncertainty; ///; /// \param[in] ematrix output histogram; /// \param[in] source identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// arising from the background source <b>source</b> and the uncorrelated; /// (background histogram uncertainties). Also see method SubtractBackground(); /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:724,Usability,clear,clearEmat,724,"////////////////////////////////////////////////////////////////////////; /// covariance contribution from background uncorrelated uncertainty; ///; /// \param[in] ematrix output histogram; /// \param[in] source identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// arising from the background source <b>source</b> and the uncorrelated; /// (background histogram uncertainties). Also see method SubtractBackground(); /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:91,Availability,error,error,91,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:179,Availability,error,error,179,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:235,Deployability,update,updated,235,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:308,Usability,clear,clearEmat,308,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:326,Usability,clear,clear,326,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:13,Availability,error,error,13,"// propagate error matrix vyy to the result; // vyy: error matrix on input data fY; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:53,Availability,error,error,53,"// propagate error matrix vyy to the result; // vyy: error matrix on input data fY; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:207,Availability,error,errors,207,"// propagate error matrix vyy to the result; // vyy: error matrix on input data fY; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:143,Usability,clear,clearEmat,143,"// propagate error matrix vyy to the result; // vyy: error matrix on input data fY; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:167,Usability,clear,clear,167,"// propagate error matrix vyy to the result; // vyy: error matrix on input data fY; // ematrix: output; // binMap: see method GetEmatrix(); // clearEmat: set kTRUE to clear the histogram prior to adding the errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:88,Availability,error,error,88,"////////////////////////////////////////////////////////////////////////; /// Get total error matrix, summing up all contributions; ///; /// \param[out] ematrix histogram which will be filled; /// \param[in] binMap (default=nullptr) remapping of histogram bins; ///; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:13,Availability,error,error,13,"// get total error including statistical error; // ematrix: output; // binMap: see method GetEmatrix()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:41,Availability,error,error,41,"// get total error including statistical error; // ematrix: output; // binMap: see method GetEmatrix()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:94,Availability,error,error,94,"////////////////////////////////////////////////////////////////////////; /// determine total error matrix on the vector Ax",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Availability,error,errors,3,"// errors from input vector and from background subtraction",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:27,Availability,error,error,27,"// uncorrelated systematic error",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:25,Availability,error,errors,25,"// correlated systematic errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Availability,error,error,3,"// error on tau",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:94,Availability,error,error,94,"////////////////////////////////////////////////////////////////////////; /// determine total error matrix on the vector x",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Availability,error,errors,3,"// errors from input vector and from background subtraction",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:27,Availability,error,error,27,"// uncorrelated systematic error",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:25,Availability,error,errors,25,"// correlated systematic errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3,Availability,error,error,3,"// error on tau",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:126,Availability,error,errors,126,"////////////////////////////////////////////////////////////////////////; /// calculate total chi**2 including all systematic errors",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:326,Availability,error,error,326,"////////////////////////////////////////////////////////////////////////; /// Get global correlatiocn coefficients, summing up all contributions; ///; /// \param[out] rhoi histogram which will be filled; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[out] invEmat (default=nullptr) inverse of error matrix; ///; /// return the global correlation coefficients, including all error; /// sources. If <b>invEmat</b> is nonzero, the inverse of the error; /// matrix is returned in that histogram; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:407,Availability,error,error,407,"////////////////////////////////////////////////////////////////////////; /// Get global correlatiocn coefficients, summing up all contributions; ///; /// \param[out] rhoi histogram which will be filled; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[out] invEmat (default=nullptr) inverse of error matrix; ///; /// return the global correlation coefficients, including all error; /// sources. If <b>invEmat</b> is nonzero, the inverse of the error; /// matrix is returned in that histogram; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:476,Availability,error,error,476,"////////////////////////////////////////////////////////////////////////; /// Get global correlatiocn coefficients, summing up all contributions; ///; /// \param[out] rhoi histogram which will be filled; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[out] invEmat (default=nullptr) inverse of error matrix; ///; /// return the global correlation coefficients, including all error; /// sources. If <b>invEmat</b> is nonzero, the inverse of the error; /// matrix is returned in that histogram; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:87,Availability,error,errors,87,"// get global correlation coefficients including systematic,statistical,background,tau errors; // rhoi: output histogram; // binMap: for each global bin, indicate in which histogram bin; // to store its content; // invEmat: output histogram for inverse of error matrix; // (pointer may zero if inverse is not requested)",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:256,Availability,error,error,256,"// get global correlation coefficients including systematic,statistical,background,tau errors; // rhoi: output histogram; // binMap: for each global bin, indicate in which histogram bin; // to store its content; // invEmat: output histogram for inverse of error matrix; // (pointer may zero if inverse is not requested)",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:459,Availability,error,errors,459,"////////////////////////////////////////////////////////////////////////; /// map delta to hist_delta, possibly summing up bins; ///; /// \param[out] hist_delta result histogram; /// \param[in] delta vector to be mapped to the histogram; /// \param[in] binMap mapping of histogram bins; ///; /// grooups of bins of <b>delta</b> are mapped to bins of; /// <b>hist_delta</b>. The histogram contents are set to the sum over; /// the group of bins. The histogram errors are reset to zero.; /// <br/>; /// The array <b>binMap</b> is explained with the method GetOutput()",MatchSource.CODE_COMMENT,hist/unfold/src/TUnfoldSys.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:79,Performance,Cache,Cache,79,"//____________________________________________________________________; //; // Cache doc info for all known classes; //",MatchSource.CODE_COMMENT,html/inc/TDocInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,html/inc/TDocInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:8,Performance,cache,cache,8,"// info cache for class documentation",MatchSource.CODE_COMMENT,html/inc/TDocInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:79,Performance,Cache,Cache,79,"//____________________________________________________________________; //; // Cache doc info for all known modules; //",MatchSource.CODE_COMMENT,html/inc/TDocInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:125,Integrability,depend,dependencies,125,"//__________________________________________________________________________; //; // A library's documentation database:; // dependencies and sub-modules; //",MatchSource.CODE_COMMENT,html/inc/TDocInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:3,Integrability,depend,dependencies,3,"// dependencies on other libraries",MatchSource.CODE_COMMENT,html/inc/TDocInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocParser.h:13,Usability,undo,undocumented,13,"// number of undocumented overloads",MatchSource.CODE_COMMENT,html/inc/TDocParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocParser.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocParser.h:41,Security,access,access,41,"// methods as TMethodWrapper objects (by access)",MatchSource.CODE_COMMENT,html/inc/TDocParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocParser.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocParser.h:20,Security,access,access,20,"// data members (by access, plus enums)",MatchSource.CODE_COMMENT,html/inc/TDocParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocParser.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:32,Safety,detect,detect,32,"// inode to TFileSysDir map, to detect softlinks",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Security,hash,hash,3,"// hash map of all filenames without paths",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:18,Security,access,accessible,18,"// whether dot is accessible",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Deployability,Configurat,Configuration,3,"// Configuration setters",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Modifiability,Config,Configuration,3,"// Configuration setters",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Deployability,Configurat,Configuration,3,"// Configuration getters",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Modifiability,Config,Configuration,3,"// Configuration getters",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:16,Deployability,update,update,16,"// tag for last update",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:33,Usability,guid,guide,33,"// Root URL for ROOT's reference guide for libs that are not in fLibURLs",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:11,Integrability,depend,dependencies,11,"// Library dependencies",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:12,Performance,cache,cached,12,"// gClient, cached and queried through CINT",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:14,Deployability,configurat,configuration,14,"// doc syntax configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:14,Modifiability,config,configuration,14,"// doc syntax configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:14,Deployability,configurat,configuration,14,"// link (URL) configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:14,Modifiability,config,configuration,14,"// link (URL) configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:16,Deployability,configurat,configuration,16,"// output style configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:16,Modifiability,config,configuration,16,"// output style configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:8,Deployability,configurat,configuration,8,"// path configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:8,Modifiability,config,configuration,8,"// path configuration",MatchSource.CODE_COMMENT,html/inc/THtml.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:562,Integrability,interface,interfaces,562,"//______________________________________________________________________________; //; // Write the documentation for a class or namespace. The documentation is; // parsed by TDocParser and then passed to TClassDocOutput to generate; // the class doc header, the class description, members overview, and method; // documentation. All generic output functionality is in TDocOutput; it is; // re-used in this derived class.; //; // You usually do not use this class yourself; it is invoked indirectly by; // THtml. Customization of the output should happen via the interfaces defined; // by THtml.; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:7,Security,access,access,7,"// for access",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:209,Integrability,depend,dependencies,209,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class charts for one class in GraphViz/Dot format,; /// i.e. the inheritance diagram, the include dependencies, and the library; /// dependency.; ///; /// Input: out - output file stream",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:244,Integrability,depend,dependency,244,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class charts for one class in GraphViz/Dot format,; /// i.e. the inheritance diagram, the include dependencies, and the library; /// dependency.; ///; /// Input: out - output file stream",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:176,Modifiability,inherit,inheritance,176,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class charts for one class in GraphViz/Dot format,; /// i.e. the inheritance diagram, the include dependencies, and the library; /// dependency.; ///; /// Input: out - output file stream",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:331,Availability,down,down,331,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class tree for one class in HTML; /// (inherited and succeeding classes, called recursively); ///; ///; /// Input: out - output file stream; /// classPtr - pointer to the class; /// dir - direction to traverse tree: up, down or both; ///",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:150,Modifiability,inherit,inherited,150,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class tree for one class in HTML; /// (inherited and succeeding classes, called recursively); ///; ///; /// Input: out - output file stream; /// classPtr - pointer to the class; /// dir - direction to traverse tree: up, down or both; ///",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:104,Availability,down,down,104,"// put it in additional row in table; ////////////////////////////////////////////////////////; // Loop down to child classes",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:8,Energy Efficiency,allocate,allocated,8,"// free allocated memory",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:110,Modifiability,inherit,inherited,110,"////////////////////////////////////////////////////////////////////////////////; /// Build the class tree of inherited members for one class in GraphViz/Dot format; ///; /// Input: filename - output dot file incl. path",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:104,Integrability,depend,dependency,104,"////////////////////////////////////////////////////////////////////////////////; /// Build the include dependency graph for one class in; /// GraphViz/Dot format; ///; /// Input: filename - output dot file incl. path",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:104,Integrability,depend,dependency,104,"////////////////////////////////////////////////////////////////////////////////; /// Build the library dependency graph for one class in; /// GraphViz/Dot format; ///; /// Input: filename - output dot file incl. path",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:3,Integrability,depend,dependencies,3,"// dependencies",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:52,Energy Efficiency,reduce,reduces,52,"// write title; // commented out for now because it reduces overview; /*; len = strlen(classNames[i]);; for (Int_t w = 0; w < (maxLen - len + 2); w++); out << ""."";; out << "" "";. out << ""<a name=\""Title:"";; out << classPtr->GetName();; out << ""\"">"";; ReplaceSpecialChars(out, classPtr->GetTitle());; out << ""</a></tt>"" << std::endl;; */",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:221,Integrability,rout,routine,221,"////////////////////////////////////////////////////////////////////////////////; /// Create an output file with a graphical representation of the class; /// inheritance. If force, replace existing output file.; /// This routine does nothing if fHtml->HaveDot() is true - use; /// ClassDotCharts() instead!",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:158,Modifiability,inherit,inheritance,158,"////////////////////////////////////////////////////////////////////////////////; /// Create an output file with a graphical representation of the class; /// inheritance. If force, replace existing output file.; /// This routine does nothing if fHtml->HaveDot() is true - use; /// ClassDotCharts() instead!",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:463,Modifiability,inherit,inheritance,463,"////////////////////////////////////////////////////////////////////////////////; /// Called by TDocParser::LocateMethods(), this hook writes out the class description; /// found by TDocParser. It's even called if none is found, i.e. if the first method; /// has occurred before a class description is found, so missing class descriptions; /// can be handled.; /// For HTML, its creates the description block, the list of functions and data; /// members, and the inheritance tree or, if Graphviz's dot is found, the class charts.",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:38,Modifiability,inherit,inheritance,38,"// create dot class charts or an html inheritance tree",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:22,Modifiability,inherit,inheritance,22,"// make a link to the inheritance tree (postscript)",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:354,Deployability,update,updates,354,"////////////////////////////////////////////////////////////////////////////////; /// Write method name with return type ret and parameters param to out.; /// Build a link using file and anchor. Cooment it with comment, and; /// show the code codeOneLiner (set if the func consists of only one line; /// of code, immediately surrounded by ""{"",""}""). Also updates fMethodNames's; /// count of method names.",MatchSource.CODE_COMMENT,html/src/TClassDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx:904,Usability,simpl,simply,904,"//______________________________________________________________________________; //; // When THtml parses documentation (through TDocParser), it checks for special; // words (""begin_something"", ""end_something"", where the begin and end are the; // significant part). THtml then searches for a TDocDirective which can handle; // these tags (""whatever"" in the example), passes the text enclosed by these; // tags to the directive, which in turn processes it.; //; // That way, HTML, latex, and C++ macros can be processed by THtml, e.g. to; // generate plain HTML or GIF pictures. The classes reposinsible for parsing; // that are TDocHtmlDirective, TDocLatexDirective, and TDocMacroDirective,; // respecively.; //; // Directives can have optional parameters; these are passed as paranthesis; // enclosed, comma delimited name=value pairs; see SetParameters().; //; // You can implement your own directive simply by deriving from TDocDirective;; // the tag corresponds to TDocDirective's name (e.g. ""HTML"" for ""begin_html"" /; // ""end_html"").; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TDocDirective.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx:158,Usability,simpl,simply,158,"//______________________________________________________________________________; //; // Process a ""begin_html"" / ""end_html"" block. Stop linking keywords and simply; // copy the text enclosed by the directive to the output HTML file.; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TDocDirective.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx:13,Testability,test,test,13,"// needed to test whether ret is indeed an object with a vtable!",MatchSource.CODE_COMMENT,html/src/TDocDirective.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx:37,Deployability,Update,Update,37,"// to get X11 to sync :-( gVirtualX->Update()/Sync() don't do it",MatchSource.CODE_COMMENT,html/src/TDocDirective.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx:38,Security,access,accessible,38,"// remove "".gif""; // TODO: we need an accessible version of the source, i.e. visible w/o javascript",MatchSource.CODE_COMMENT,html/src/TDocDirective.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocDirective.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocInfo.cxx:89,Performance,Cache,Caches,89,"//______________________________________________________________________________; //; // Caches class documentation information, like which module it belongs to,; // and whether THtml should generate documentation for the class.; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TDocInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocInfo.cxx:22,Security,Hash,Hash,22,"// Forward to TClass::Hash(), return -1 if no TClass object was found.",MatchSource.CODE_COMMENT,html/src/TDocInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:3,Deployability,Update,Update,3,"// Update the length of the sections",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:421,Integrability,depend,depending,421,"// std::qsort on solaris wants the sorter to be extern ""C""; /////////////////////////////////////////////////////////////////////////////; /// Friend function for sorting strings, case insensitive; ///; ///; /// Input: name1 - pointer to the first string; /// name2 - pointer to the second string; ///; /// NOTE: This function compares its arguments and returns an integer less; /// than, equal to, or greater than zero, depending on whether name1; /// is lexicographically less than, equal to, or greater than name2,; /// but characters are forced to lower-case prior to comparison.; ///; ///",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:659,Availability,avail,available,659,"//______________________________________________________________________________; //; // THtml generated documentation is written to file by TDocOutput. So far only; // output of HTML is implemented. Customization of the output should be done; // with THtml's interfaces - TDocOutput should not be used nor re-implemented; // directly.; //; // TDocOutput generates the index tables:; // * classes (THtml invokes TClassDocOutput for each),; // * inheritance hierarchy,; // * types and typedefs,; // * libraries,; // * the product index, and; // * the module index (including the links to per-module documentation).; // It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; // from it.; //; // TDocOutput also writes all pages' header and footer, which can be customized; // by calling THtml::SetHeader(), THtml::SetFooter().; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:260,Integrability,interface,interfaces,260,"//______________________________________________________________________________; //; // THtml generated documentation is written to file by TDocOutput. So far only; // output of HTML is implemented. Customization of the output should be done; // with THtml's interfaces - TDocOutput should not be used nor re-implemented; // directly.; //; // TDocOutput generates the index tables:; // * classes (THtml invokes TClassDocOutput for each),; // * inheritance hierarchy,; // * types and typedefs,; // * libraries,; // * the product index, and; // * the module index (including the links to per-module documentation).; // It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; // from it.; //; // TDocOutput also writes all pages' header and footer, which can be customized; // by calling THtml::SetHeader(), THtml::SetFooter().; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:445,Modifiability,inherit,inheritance,445,"//______________________________________________________________________________; //; // THtml generated documentation is written to file by TDocOutput. So far only; // output of HTML is implemented. Customization of the output should be done; // with THtml's interfaces - TDocOutput should not be used nor re-implemented; // directly.; //; // TDocOutput generates the index tables:; // * classes (THtml invokes TClassDocOutput for each),; // * inheritance hierarchy,; // * types and typedefs,; // * libraries,; // * the product index, and; // * the module index (including the links to per-module documentation).; // It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; // from it.; //; // TDocOutput also writes all pages' header and footer, which can be customized; // by calling THtml::SetHeader(), THtml::SetFooter().; //______________________________________________________________________________",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:134,Deployability,Update,Update,134,"////////////////////////////////////////////////////////////////////////////////; /// Add a link around str, with title comment.; /// Update str so it surrounds the link.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:199,Usability,Simpl,Simply,199,"////////////////////////////////////////////////////////////////////////////////; /// adjust the path of links for source files, which are in src/, but need; /// to point to relpath (usually ""../""). Simply replaces ""=\""./"" by ""=\""../""",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:291,Integrability,depend,dependency,291,"////////////////////////////////////////////////////////////////////////////////; /// Create the class index for each module, picking up documentation from the; /// module's TModuleDocInfo::GetInputPath() plus the (possibly relative); /// THtml::GetModuleDocPath(). Also creates the library dependency plot if dot; /// exists, see THtml::HaveDot().",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate entry, even if no dependencies",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:30,Integrability,depend,dependencies,30,"// allocate entry, even if no dependencies",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:6,Integrability,depend,dependencies,6,"// if dependencies",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:97,Integrability,depend,dependencies,97,"// while next module; // libCint is missing as we don't have class doc for it; // We need it for dependencies nevertheless, so add it by hand.; /*; sstrCluster << ""subgraph clusterlibCint {"" << std::endl; << ""style=filled;"" << std::endl; << ""color=lightgray;"" << std::endl; << ""label=\""libCint\"";"" << std::endl; << ""\""CINT\"" [style=filled,color=white,fontsize=10]"" << std::endl; << ""}"" << std::endl;; */; // simplify the library dependencies, by removing direct links; // that are equivalent to indirect ones, e.g. instead of having both; // A->C, A->B->C, keep only A->B->C.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:429,Integrability,depend,dependencies,429,"// while next module; // libCint is missing as we don't have class doc for it; // We need it for dependencies nevertheless, so add it by hand.; /*; sstrCluster << ""subgraph clusterlibCint {"" << std::endl; << ""style=filled;"" << std::endl; << ""color=lightgray;"" << std::endl; << ""label=\""libCint\"";"" << std::endl; << ""\""CINT\"" [style=filled,color=white,fontsize=10]"" << std::endl; << ""}"" << std::endl;; */; // simplify the library dependencies, by removing direct links; // that are equivalent to indirect ones, e.g. instead of having both; // A->C, A->B->C, keep only A->B->C.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:408,Usability,simpl,simplify,408,"// while next module; // libCint is missing as we don't have class doc for it; // We need it for dependencies nevertheless, so add it by hand.; /*; sstrCluster << ""subgraph clusterlibCint {"" << std::endl; << ""style=filled;"" << std::endl; << ""color=lightgray;"" << std::endl; << ""label=\""libCint\"";"" << std::endl; << ""\""CINT\"" [style=filled,color=white,fontsize=10]"" << std::endl; << ""}"" << std::endl;; */; // simplify the library dependencies, by removing direct links; // that are equivalent to indirect ones, e.g. instead of having both; // A->C, A->B->C, keep only A->B->C.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:15,Integrability,depend,dependencies,15,"// for library dependencies of module in library",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:17,Integrability,depend,dependency,17,"// cannot create dependency on iDep directly, use its first module instead.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:380,Deployability,update,updated,380,"////////////////////////////////////////////////////////////////////////////////; /// Add some colors etc to a source entity, contained in str.; /// The type of what's contained in str is given by type.; /// It's called e.g. by TDocParser::BeautifyLine().; /// This function should assume that only str.Begin() is valid.; /// When inserting into str.String(), str.Begin() must be updated.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:418,Deployability,update,updated,418,"////////////////////////////////////////////////////////////////////////////////; /// Add some colors etc to a source entity, contained in str.; /// The type of what's contained in str is given by type.; /// It's called e.g. by TDocParser::BeautifyLine().; /// This function should assume that only str.""End()""; /// (i.e. str.Begin()+str.Length()) is valid.; /// When inserting into str.String(), str.Length() must be updated.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:174,Security,hash,hash,174,"// really 240! It might get some extra prefix or extension; // 8.3 is dead, but e.g. ext2 can only hold 255 chars in a file name.; // So mangle name to ""beginning_of_name""-h""hash"".""extension"", where; // beginning_of_name is short enough such that the full name is <255 characters.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:424,Testability,test,test,424,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a class documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:537,Testability,test,test,537,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a class documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:430,Testability,test,test,430,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a data member documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:543,Testability,test,test,543,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a data member documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:423,Testability,test,test,423,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a type documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:536,Testability,test,test,536,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a type documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:425,Testability,test,test,425,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a method documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:538,Testability,test,test,538,"////////////////////////////////////////////////////////////////////////////////; /// Create a reference to a method documentation page.; /// str encloses the text to create the reference for (e.g. name of instance).; /// comment will be added e.g. as tooltip text.; /// After the reference is put into str.String(), str will enclose the reference; /// and the original text. Example:; /// Input:; /// str.String(): ""a gHtml test""; /// str.Begin(): 2; /// str.Length(): 5; /// Output:; /// str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; /// str.Begin(): 2; /// str.Length(): 30",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:335,Deployability,update,update,335,"////////////////////////////////////////////////////////////////////////////////; /// Write HTML footer; ///; ///; /// Input: out - output file stream; /// dir - usually equal to """" or ""../"", depends of; /// current file directory position, i.e. if; /// file is in the fHtml->GetOutputDir(), then dir will be """"; /// lastUpdate - last update string; /// author - author's name; /// copyright - copyright note; ///; /// Allows optional user provided footer to be written. Root.Html.Footer holds; /// the file name for this footer. For details see THtml::WriteHtmlHeader (here,; /// the ""+"" means the user's footer is written in front of Root's!) Occurrences; /// of %AUTHOR%, %CHANGED%, %GENERATED%, and %COPYRIGHT% in the user's file are replaced by; /// their corresponding values (author, lastUpdate, today, and copyright) before; /// written to out.; /// If no author is set (author == """", e.g. for ClassIndex.html"") skip the whole; /// line of the footer template containing %AUTHOR%. Accordingly for %COPYRIGHT%.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:192,Integrability,depend,depends,192,"////////////////////////////////////////////////////////////////////////////////; /// Write HTML footer; ///; ///; /// Input: out - output file stream; /// dir - usually equal to """" or ""../"", depends of; /// current file directory position, i.e. if; /// file is in the fHtml->GetOutputDir(), then dir will be """"; /// lastUpdate - last update string; /// author - author's name; /// copyright - copyright note; ///; /// Allows optional user provided footer to be written. Root.Html.Footer holds; /// the file name for this footer. For details see THtml::WriteHtmlHeader (here,; /// the ""+"" means the user's footer is written in front of Root's!) Occurrences; /// of %AUTHOR%, %CHANGED%, %GENERATED%, and %COPYRIGHT% in the user's file are replaced by; /// their corresponding values (author, lastUpdate, today, and copyright) before; /// written to out.; /// If no author is set (author == """", e.g. for ClassIndex.html"") skip the whole; /// line of the footer template containing %AUTHOR%. Accordingly for %COPYRIGHT%.",MatchSource.CODE_COMMENT,html/src/TDocOutput.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:27,Modifiability,inherit,inheritance,27,"// current class, defining inheritance sort order",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:360,Testability,test,testMainFrame,360,"//______________________________________________________________________________; ////////////////////////////////////////////////////////////////////////////////; //; // Parse C++ source or header, and extract documentation.; //; // Also handles special macros like; /* Begin_Macro(GUI, source); {; TGMainFrame* f = new TGMainFrame(0, 100, 100);; f->SetName(""testMainFrame""); // that's part of the name of the image; TGButton* b = new TGTextButton(f, ""Test Button"");; f->AddFrame(b);; f->MapSubwindows();; f->Resize(f->GetDefaultSize());. f->MapWindow();; return f; // *HIDE*; }; End_Macro */; // or multiline Latex aligned at =:; /* Begin_Latex(separator='=',align=rcl) C = d #sqrt{#frac{2}{#lambdaD}} #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt; D(x) = d End_Latex */; // even without alignment: Begin_Latex; // x=sin^2(y); // y = #sqrt{sin(x)}; // End_Latex and what about running an external macro?; /* BEGIN_MACRO(source). testmacro.C END_MACRO. and some nested stuff which doesn't work yet: */; // BEGIN_HTML; /* BEGIN_LATEX Wow,^{an}_{image}^{inside}_{a}^{html}_{block}; END_LATEX; */; // END_HTML; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:453,Testability,Test,Test,453,"//______________________________________________________________________________; ////////////////////////////////////////////////////////////////////////////////; //; // Parse C++ source or header, and extract documentation.; //; // Also handles special macros like; /* Begin_Macro(GUI, source); {; TGMainFrame* f = new TGMainFrame(0, 100, 100);; f->SetName(""testMainFrame""); // that's part of the name of the image; TGButton* b = new TGTextButton(f, ""Test Button"");; f->AddFrame(b);; f->MapSubwindows();; f->Resize(f->GetDefaultSize());. f->MapWindow();; return f; // *HIDE*; }; End_Macro */; // or multiline Latex aligned at =:; /* Begin_Latex(separator='=',align=rcl) C = d #sqrt{#frac{2}{#lambdaD}} #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt; D(x) = d End_Latex */; // even without alignment: Begin_Latex; // x=sin^2(y); // y = #sqrt{sin(x)}; // End_Latex and what about running an external macro?; /* BEGIN_MACRO(source). testmacro.C END_MACRO. and some nested stuff which doesn't work yet: */; // BEGIN_HTML; /* BEGIN_LATEX Wow,^{an}_{image}^{inside}_{a}^{html}_{block}; END_LATEX; */; // END_HTML; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:923,Testability,test,testmacro,923,"//______________________________________________________________________________; ////////////////////////////////////////////////////////////////////////////////; //; // Parse C++ source or header, and extract documentation.; //; // Also handles special macros like; /* Begin_Macro(GUI, source); {; TGMainFrame* f = new TGMainFrame(0, 100, 100);; f->SetName(""testMainFrame""); // that's part of the name of the image; TGButton* b = new TGTextButton(f, ""Test Button"");; f->AddFrame(b);; f->MapSubwindows();; f->Resize(f->GetDefaultSize());. f->MapWindow();; return f; // *HIDE*; }; End_Macro */; // or multiline Latex aligned at =:; /* Begin_Latex(separator='=',align=rcl) C = d #sqrt{#frac{2}{#lambdaD}} #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt; D(x) = d End_Latex */; // even without alignment: Begin_Latex; // x=sin^2(y); // y = #sqrt{sin(x)}; // End_Latex and what about running an external macro?; /* BEGIN_MACRO(source). testmacro.C END_MACRO. and some nested stuff which doesn't work yet: */; // BEGIN_HTML; /* BEGIN_LATEX Wow,^{an}_{image}^{inside}_{a}^{html}_{block}; END_LATEX; */; // END_HTML; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:90,Security,access,accessible,90,"////////////////////////////////////////////////////////////////////////////////; /// Add accessible (i.e. non-private) methods of base class bc; /// and its base classes' methods to methodNames.; /// If bc==0, we add fCurrentClass's methods (and also private functions).",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:226,Security,access,access,226,"////////////////////////////////////////////////////////////////////////////////; /// Add data members of fCurrentClass and of bc to datamembers, recursively.; /// Real data members are in idx 0..2 (public, protected, private access),; /// enum constants in idx 3..5.",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:7,Security,access,access,7,"// The access of the enum constant is defined by the access of the enum:; // for CINT, all enum constants are public.; // There is no TClass or TDataType for enum types; instead, use CINT:; /*; No - CINT does not know their access restriction.; With CINT5 we have no way of determining it... ClassInfo_t* enumCI = gInterpreter->ClassInfo_Factory(dm->GetTypeName());; if (enumCI) {; Long_t prop = gInterpreter->ClassInfo_Property(enumCI);; if (kIsPrivate & prop); mtype = 3;; else if (kIsProtected & prop); mtype = 4;; else if (kIsPublic & prop); mtype = 5;; gInterpreter->ClassInfo_Delete(enumCI);; }; */",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:53,Security,access,access,53,"// The access of the enum constant is defined by the access of the enum:; // for CINT, all enum constants are public.; // There is no TClass or TDataType for enum types; instead, use CINT:; /*; No - CINT does not know their access restriction.; With CINT5 we have no way of determining it... ClassInfo_t* enumCI = gInterpreter->ClassInfo_Factory(dm->GetTypeName());; if (enumCI) {; Long_t prop = gInterpreter->ClassInfo_Property(enumCI);; if (kIsPrivate & prop); mtype = 3;; else if (kIsProtected & prop); mtype = 4;; else if (kIsPublic & prop); mtype = 5;; gInterpreter->ClassInfo_Delete(enumCI);; }; */",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:224,Security,access,access,224,"// The access of the enum constant is defined by the access of the enum:; // for CINT, all enum constants are public.; // There is no TClass or TDataType for enum types; instead, use CINT:; /*; No - CINT does not know their access restriction.; With CINT5 we have no way of determining it... ClassInfo_t* enumCI = gInterpreter->ClassInfo_Factory(dm->GetTypeName());; if (enumCI) {; Long_t prop = gInterpreter->ClassInfo_Property(enumCI);; if (kIsPrivate & prop); mtype = 3;; else if (kIsProtected & prop); mtype = 4;; else if (kIsPublic & prop); mtype = 5;; gInterpreter->ClassInfo_Delete(enumCI);; }; */",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:127,Security,hash,hashing,127,"////////////////////////////////////////////////////////////////////////////////; /// Create an anchor from the given line, by hashing it and; /// convertig the hash into a custom base64 string.",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:161,Security,hash,hash,161,"////////////////////////////////////////////////////////////////////////////////; /// Create an anchor from the given line, by hashing it and; /// convertig the hash into a custom base64 string.",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:7,Security,hash,hash,7,"// use hash of line instead of e.g. line number.; // advantages: more stable (lines can move around, we still find them back),; // no need for keeping a line number context",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:86,Energy Efficiency,reduce,reduce,86,"////////////////////////////////////////////////////////////////////////////////; /// reduce method count for method called name,; /// removing it from fMethodCounts once the count reaches 0.",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:3,Deployability,update,update,3,"// update posMethodName to point behind the method",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:34,Deployability,update,update,34,"// if !comment; // check for last update,...",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:114,Integrability,depend,depending,114,"////////////////////////////////////////////////////////////////////////////////; /// Write the class description depending (among others) on fClassDocState.",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:88,Energy Efficiency,reduce,reduces,88,"// Check type identity of candidate signatures. For each argument, check whether it; // reduces the list of candidates to > 0 elements.",MatchSource.CODE_COMMENT,html/src/TDocParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:194,Availability,error,error,194,"////////////////////////////////////////////////////////////////////////////////; /// Set the THtml object owning this object; if it's already set to; /// a different THtml object than issue an error message and signal to; /// the currently set object that we are not belonging to it anymore.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:200,Integrability,message,message,200,"////////////////////////////////////////////////////////////////////////////////; /// Set the THtml object owning this object; if it's already set to; /// a different THtml object than issue an error message and signal to; /// the currently set object that we are not belonging to it anymore.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:284,Availability,avail,available,284,"////////////////////////////////////////////////////////////////////////////////; /// Determine cl's declaration file name. Usually it's just; /// cl->GetDeclFileName(), but sometimes conversions need to be done; /// like include/ to abc/cde/inc/. If no declaration file name is; /// available, look for b/inc/C.h for class A::B::C. out_fsys will contain; /// the file system's (i.e. local machine's) full path name to the file.; /// The function returns false if the class's header file cannot be found.; ///; /// If your software cannot be mapped into this scheme then derive your; /// own class from TFileDefinition and pass it to THtml::SetFileDefinition().",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:255,Availability,avail,available,255,"////////////////////////////////////////////////////////////////////////////////; /// Determine cl's implementation file name. Usually it's just; /// cl->GetImplFileName(), but sometimes conversions need to be done.; /// If no implementation file name is available look for b/src/C.cxx for; /// class A::B::C. out_fsys will contain the file system's (i.e. local; /// machine's) full path name to the file.; /// The function returns false if the class's source file cannot be found.; ///; /// If your software cannot be mapped into this scheme then derive your; /// own class from TFileDefinition and pass it to THtml::SetFileDefinition().",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:1220,Deployability,Configurat,Configuration,1220," please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:2683,Deployability,Configurat,Configuration,2683,"er-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_MACRO</tt>: include a picture generated by a macro</a></li>; <li><a href=""#directive:latex""><tt>BEGIN<!-- -->_LATEX</tt> <tt>END<!-- -->_LATEX</tt>: include a latex picture</a></li>; </ol></li>; <li><a href=""#index"">Product and module index</a></li>; <li><a href=""#aux"">Auxiliary files: style sheet, JavaScript, help page</a></li>; <li><a href=""#charts"">Class Charts</a></li>; <li><a href=""#confvar"">Configuration variables</a></li>; <li><a href=""#how"">Behind the scenes</a></li>; </ol>. <h3><a name=""usage"">I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed clas",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3725,Deployability,Configurat,Configuration,3725,"I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via S",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3754,Deployability,configurat,configuration,3754,"I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via S",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4398,Deployability,configurat,configuration,4398,"sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example a",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4951,Deployability,configurat,configuration,4951,", define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:5701,Deployability,update,updated,5701,"class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories; when ROOT is started, otherwise ROOT will not use it.</p>. <h4><a name=""conf:classdoc"">II.4 Recognizing class documentation</a></h4>. <p>The class documentation has to appear in the header file containing the; class, right in front of its declaration. It is introduced by a string; defined by Root.Html.Description or SetClassDocTag(). See the section on; <a href=""#syntax"">documentation syntax</a> for further details.</p>. <p>Example:</p><pre>; Root.Html.Description: //____________________</pre>. <p>The class documentation will show which include statement is to be used; and which library needs to be linked to access it.; The include file name is determined via; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetDeclFileName"">; TClass::GetDeclFileName()</a>;; leading",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7954,Deployability,configurat,configuration,7954," look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi</tt> appears in the source file.; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // ",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9298,Deployability,configurat,configuration,9298,".html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the ",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:10805,Deployability,update,update,10805," containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the current class's name,; <tt>%SRCFILE%</tt> and <tt>%INCFILE%</tt> by the name of the source and header file, resp.; (as given by <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetImplFileLine"">TClass::GetImplFileName()</a>,; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetImplFileLine"">TClass::GetDeclFileName()</a>).; If the header is not generated for a class, they will be replaced by """".</p>. <p>Root's footer starts with the tag &lt;!--SIGNATURE--&gt;. It includes the; author(s), last update, copyright, the links to the Root home page, to the; user home page, to the index file (ClassIndex.html), to the top of the page; and <tt>this page is automatically generated</tt> information. It ends with the; tags <tt>&lt;/body&gt;&lt;/html&gt;</tt>. If you want to replace it,; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will search for some; tags in your footer: Occurrences of the strings <tt>%AUTHOR%</tt>, <tt>%UPDATE%</tt>, and; <tt>%COPYRIGHT%</tt> are replaced by their; corresponding values before writing the html file. The <tt>%AUTHOR%</tt> tag will be; replaced by the exact string that follows Root.Html.Author, no link; generation will occur.</p>. <h4><a name=""conf:search"">II.7 Links to searches, home page, ViewVC</a></h4>. <p>Additional parameters can be set by Root.Html.Homepage (address of the; user's home page), Root.Html.SearchEngine (search engine for the class; documentation), Root.Html.Search (search URL, where %u is replaced by the; referer and %s by the escaped search expression",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:11248,Deployability,UPDATE,UPDATE,11248,"<tt>%CLASS%</tt> will be replaced by the current class's name,; <tt>%SRCFILE%</tt> and <tt>%INCFILE%</tt> by the name of the source and header file, resp.; (as given by <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetImplFileLine"">TClass::GetImplFileName()</a>,; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetImplFileLine"">TClass::GetDeclFileName()</a>).; If the header is not generated for a class, they will be replaced by """".</p>. <p>Root's footer starts with the tag &lt;!--SIGNATURE--&gt;. It includes the; author(s), last update, copyright, the links to the Root home page, to the; user home page, to the index file (ClassIndex.html), to the top of the page; and <tt>this page is automatically generated</tt> information. It ends with the; tags <tt>&lt;/body&gt;&lt;/html&gt;</tt>. If you want to replace it,; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will search for some; tags in your footer: Occurrences of the strings <tt>%AUTHOR%</tt>, <tt>%UPDATE%</tt>, and; <tt>%COPYRIGHT%</tt> are replaced by their; corresponding values before writing the html file. The <tt>%AUTHOR%</tt> tag will be; replaced by the exact string that follows Root.Html.Author, no link; generation will occur.</p>. <h4><a name=""conf:search"">II.7 Links to searches, home page, ViewVC</a></h4>. <p>Additional parameters can be set by Root.Html.Homepage (address of the; user's home page), Root.Html.SearchEngine (search engine for the class; documentation), Root.Html.Search (search URL, where %u is replaced by the; referer and %s by the escaped search expression), and a ViewVC base URL; Root.Html.ViewCVS. For the latter, the file name is appended or, if; the URL contains %f, %f is replaced by the file name.; All values default to """".</p>. <p>Examples:</p><pre>; Root.Html.Homepage: http://www.enricos-home.it; Root.Html.SearchEngine: http://root.cern.ch/root/Search.phtml; Root.Html.Search: http://www.google.com/search?q=%s+site%3A%u</pre>. <h4><a name=""conf:charset",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20690,Deployability,install,install,20690,"an see an example <a href=""http://root.cern.ch/root/html/HIST_Index.html"">here</a>;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.</p>. <h3><a name=""aux"">VI. Auxiliary files: style sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20924,Deployability,Configurat,Configuration,20924,"yle sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Ro",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20983,Deployability,configurat,configuration,20983,"mentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Root.Html.ViewCVS (default: ) - URL of ViewCVS base; Roo",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:21362,Deployability,update,update,21362,"aphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Root.Html.ViewCVS (default: ) - URL of ViewCVS base; Root.Html.XWho (default: http://consult.cern.ch/xwho/people?) - URL of CERN's xWho; Root.Html.Charset (default: ISO-8859-1) - HTML character set; </pre>. <h3><a name=""how"">IX. Behind the scene</a></h3>. <p>Internally, THtml is just an API class that sets up the list of known; classes, and forwards API invocations to the ""work horses"".; <a href=""http:",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:5782,Integrability,depend,dependencies,5782,"class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories; when ROOT is started, otherwise ROOT will not use it.</p>. <h4><a name=""conf:classdoc"">II.4 Recognizing class documentation</a></h4>. <p>The class documentation has to appear in the header file containing the; class, right in front of its declaration. It is introduced by a string; defined by Root.Html.Description or SetClassDocTag(). See the section on; <a href=""#syntax"">documentation syntax</a> for further details.</p>. <p>Example:</p><pre>; Root.Html.Description: //____________________</pre>. <p>The class documentation will show which include statement is to be used; and which library needs to be linked to access it.; The include file name is determined via; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetDeclFileName"">; TClass::GetDeclFileName()</a>;; leading",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20573,Integrability,depend,dependencies,20573,"d.; Only files ending on <tt>.html</tt> or <tt>.txt</tt> will be taken into account;; the text files will first be run through; <a href=""#THtml:Convert"">THtml::Convert()</a>.; You can see an example <a href=""http://root.cern.ch/root/html/HIST_Index.html"">here</a>;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.</p>. <h3><a name=""aux"">VI. Auxiliary files: style sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for cla",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:1220,Modifiability,Config,Configuration,1220," please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:2683,Modifiability,Config,Configuration,2683,"er-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_MACRO</tt>: include a picture generated by a macro</a></li>; <li><a href=""#directive:latex""><tt>BEGIN<!-- -->_LATEX</tt> <tt>END<!-- -->_LATEX</tt>: include a latex picture</a></li>; </ol></li>; <li><a href=""#index"">Product and module index</a></li>; <li><a href=""#aux"">Auxiliary files: style sheet, JavaScript, help page</a></li>; <li><a href=""#charts"">Class Charts</a></li>; <li><a href=""#confvar"">Configuration variables</a></li>; <li><a href=""#how"">Behind the scenes</a></li>; </ol>. <h3><a name=""usage"">I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed clas",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:2697,Modifiability,variab,variables,2697,"er-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_MACRO</tt>: include a picture generated by a macro</a></li>; <li><a href=""#directive:latex""><tt>BEGIN<!-- -->_LATEX</tt> <tt>END<!-- -->_LATEX</tt>: include a latex picture</a></li>; </ol></li>; <li><a href=""#index"">Product and module index</a></li>; <li><a href=""#aux"">Auxiliary files: style sheet, JavaScript, help page</a></li>; <li><a href=""#charts"">Class Charts</a></li>; <li><a href=""#confvar"">Configuration variables</a></li>; <li><a href=""#how"">Behind the scenes</a></li>; </ol>. <h3><a name=""usage"">I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed clas",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3725,Modifiability,Config,Configuration,3725,"I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via S",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3754,Modifiability,config,configuration,3754,"I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via S",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3820,Modifiability,variab,variable,3820,"I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via S",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4398,Modifiability,config,configuration,4398,"sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example a",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4412,Modifiability,variab,variable,4412,"sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example a",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4951,Modifiability,config,configuration,4951,", define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4965,Modifiability,variab,variable,4965,", define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7176,Modifiability,variab,variables,7176," right in front of its declaration. It is introduced by a string; defined by Root.Html.Description or SetClassDocTag(). See the section on; <a href=""#syntax"">documentation syntax</a> for further details.</p>. <p>Example:</p><pre>; Root.Html.Description: //____________________</pre>. <p>The class documentation will show which include statement is to be used; and which library needs to be linked to access it.; The include file name is determined via; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetDeclFileName"">; TClass::GetDeclFileName()</a>;; leading parts are removed if they match any of the ':' separated entries in; THtml::GetIncludePath().</p>. <h4><a name=""conf:tags"">II.5 Author, copyright, etc.</a></h4>. <p>During the conversion,; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7954,Modifiability,config,configuration,7954," look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi</tt> appears in the source file.; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // ",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7969,Modifiability,variab,variable,7969," look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi</tt> appears in the source file.; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // ",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9298,Modifiability,config,configuration,9298,".html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the ",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9312,Modifiability,variab,variables,9312,".html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the ",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9408,Modifiability,variab,variables,9408,"i><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the current class's name,; <tt>%SRCFILE%</tt> and <tt>%INCFILE%</tt> by the name of the source and header file, resp.; (as given by <a href=""http://",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:13208,Modifiability,variab,variable,13208,"tml.Search: http://www.google.com/search?q=%s+site%3A%u</pre>. <h4><a name=""conf:charset"">II.8 HTML Charset</a></h4>. <p>XHTML 1.0 transitional recommends the specification of the charset in the; content type meta tag, see e.g. <a href=""http://www.w3.org/TR/2002/REC-xhtml1-20020801/"">http://www.w3.org/TR/2002/REC-xhtml1-20020801/</a>; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates it for the HTML output files. It defaults to ISO-8859-1, and; can be changed using Root.Html.Charset.</p>. <p>Example:</p><pre>; Root.Html.Charset: EUC-JP</pre>. <h3><a name=""syntax"">III. Documentation syntax</a></h3>; <h4><a name=""syntax:classdesc"">III.1 Class description</a></h4>. <p>A class description block, which must be placed before the first; member function, has a following form:</p>; <pre>; ////////////////////////////////////////////////////////////////; // //; // TMyClass //; // //; // This is the description block. //; // //; ////////////////////////////////////////////////////////////////; </pre>; <p>The environment variable Root.Html.Description; (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>) contains; the delimiter string (default value: <tt>//_________________</tt>). It means; that you can also write your class description block like this:</p>; <pre>; //_____________________________________________________________; // A description of the class starts with the line above, and; // will take place here !; //; </pre>; <p>Note that <b><i>everything</i></b> until the first non-commented line is considered; as a valid class description block.</p>. <h4><a name=""syntax:classidx"">III.2 Class index</a></h4>. <p>All classes to be documented will have an entry in the ClassIndex.html,; showing their name with a link to their documentation page and a miniature; description. This description for e.g. the class MyClass has to be given; in MyClass's header as a comment right after ClassDef(MyClass, n).</p>. <h4><a name=""syntax:meth"">III.3 Method do",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:14615,Modifiability,variab,variable,14615," here !; //; </pre>; <p>Note that <b><i>everything</i></b> until the first non-commented line is considered; as a valid class description block.</p>. <h4><a name=""syntax:classidx"">III.2 Class index</a></h4>. <p>All classes to be documented will have an entry in the ClassIndex.html,; showing their name with a link to their documentation page and a miniature; description. This description for e.g. the class MyClass has to be given; in MyClass's header as a comment right after ClassDef(MyClass, n).</p>. <h4><a name=""syntax:meth"">III.3 Method documentation</a></h4>; <p>A member function description block starts immediately after '{'; and looks like this:</p>; <pre>; void TWorld::HelloWorldFunc(string *text); {; // This is an example of description for the; // TWorld member function. helloWorld.Print( text );; }; </pre>; Like in a class description block, <b><i>everything</i></b> until the first; non-commented line is considered as a valid member function; description block. If the rootrc variable <tt>Root.Html.DescriptionStyle</tt> is set to; <tt>Doc++</tt> THtml will also look for method documentation in front of; the function implementation. This feature is not recommended; source code; making use of this does not comply to the ROOT documentation standards, which; means future versions of THtml might not support it anymore. <h4><a name=""syntax:datamem"">III.4 Data member documentation</a></h4>. <p>Data members are documented by putting a C++ comment behind their; declaration in the header file, e.g.</p>; <pre>; int fIAmADataMember; // this is a data member; </pre>. <h3><a name=""directive"">IV. Documentation directives</a></h3>; <em>NOTE that THtml does not yet support nested directives; (i.e. latex inside html etc)!</em>. <h4><a name=""directive:html"">IV.1 <tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></h4>. <p>You can insert pure html code into your documentation comments. During the; generation of the documentation, this code will be inser",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20477,Modifiability,inherit,inheritance,20477,"d.; Only files ending on <tt>.html</tt> or <tt>.txt</tt> will be taken into account;; the text files will first be run through; <a href=""#THtml:Convert"">THtml::Convert()</a>.; You can see an example <a href=""http://root.cern.ch/root/html/HIST_Index.html"">here</a>;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.</p>. <h3><a name=""aux"">VI. Auxiliary files: style sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for cla",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20490,Modifiability,inherit,inherited,20490,"d.; Only files ending on <tt>.html</tt> or <tt>.txt</tt> will be taken into account;; the text files will first be run through; <a href=""#THtml:Convert"">THtml::Convert()</a>.; You can see an example <a href=""http://root.cern.ch/root/html/HIST_Index.html"">here</a>;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.</p>. <h3><a name=""aux"">VI. Auxiliary files: style sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for cla",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20924,Modifiability,Config,Configuration,20924,"yle sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Ro",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20938,Modifiability,variab,variables,20938,"yle sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Ro",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20983,Modifiability,config,configuration,20983,"mentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Root.Html.ViewCVS (default: ) - URL of ViewCVS base; Roo",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20997,Modifiability,variab,variables,20997,"mentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Root.Html.ViewCVS (default: ) - URL of ViewCVS base; Roo",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3032,Performance,Load,LoadAllLibs,3032,"umentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_MACRO</tt>: include a picture generated by a macro</a></li>; <li><a href=""#directive:latex""><tt>BEGIN<!-- -->_LATEX</tt> <tt>END<!-- -->_LATEX</tt>: include a latex picture</a></li>; </ol></li>; <li><a href=""#index"">Product and module index</a></li>; <li><a href=""#aux"">Auxiliary files: style sheet, JavaScript, help page</a></li>; <li><a href=""#charts"">Class Charts</a></li>; <li><a href=""#confvar"">Configuration variables</a></li>; <li><a href=""#how"">Behind the scenes</a></li>; </ol>. <h3><a name=""usage"">I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3050,Performance,Load,Load,3050,"umentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_MACRO</tt>: include a picture generated by a macro</a></li>; <li><a href=""#directive:latex""><tt>BEGIN<!-- -->_LATEX</tt> <tt>END<!-- -->_LATEX</tt>: include a latex picture</a></li>; </ol></li>; <li><a href=""#index"">Product and module index</a></li>; <li><a href=""#aux"">Auxiliary files: style sheet, JavaScript, help page</a></li>; <li><a href=""#charts"">Class Charts</a></li>; <li><a href=""#confvar"">Configuration variables</a></li>; <li><a href=""#how"">Behind the scenes</a></li>; </ol>. <h3><a name=""usage"">I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:930,Security,validat,validator,930,"/** \class THtml; \brief Legacy ROOT documentation system. \deprecated; We keep THtml for those who still need it for legacy use cases.; ROOT has since several years moved to [doxygen](https://www.doxygen.nl) as documentation generator.; THtml is not developed nor supported anymore; please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member doc",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:6554,Security,access,access,6554,"mand to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories; when ROOT is started, otherwise ROOT will not use it.</p>. <h4><a name=""conf:classdoc"">II.4 Recognizing class documentation</a></h4>. <p>The class documentation has to appear in the header file containing the; class, right in front of its declaration. It is introduced by a string; defined by Root.Html.Description or SetClassDocTag(). See the section on; <a href=""#syntax"">documentation syntax</a> for further details.</p>. <p>Example:</p><pre>; Root.Html.Description: //____________________</pre>. <p>The class documentation will show which include statement is to be used; and which library needs to be linked to access it.; The include file name is determined via; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetDeclFileName"">; TClass::GetDeclFileName()</a>;; leading parts are removed if they match any of the ':' separated entries in; THtml::GetIncludePath().</p>. <h4><a name=""conf:tags"">II.5 Author, copyright, etc.</a></h4>. <p>During the conversion,; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeA",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:452,Testability,log,logs,452,"/** \class THtml; \brief Legacy ROOT documentation system. \deprecated; We keep THtml for those who still need it for legacy use cases.; ROOT has since several years moved to [doxygen](https://www.doxygen.nl) as documentation generator.; THtml is not developed nor supported anymore; please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member doc",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:650,Usability,guid,guide,650,"/** \class THtml; \brief Legacy ROOT documentation system. \deprecated; We keep THtml for those who still need it for legacy use cases.; ROOT has since several years moved to [doxygen](https://www.doxygen.nl) as documentation generator.; THtml is not developed nor supported anymore; please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member doc",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:157,Availability,error,error,157,"////////////////////////////////////////////////////////////////////////////////; /// Create a THtml object.; /// In case output directory does not exist an error; /// will be printed and gHtml stays 0 also zombie bit will be set.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:107,Availability,avail,available,107,"////////////////////////////////////////////////////////////////////////////////; /// Check whether dot is available in $PATH or in the directory set; /// by SetDotPath()",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9,Deployability,update,update,9,"// force update of this list",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:141,Performance,cache,cached,141,"////////////////////////////////////////////////////////////////////////////////; /// Return the module name for a given class.; /// Use the cached information from fDocEntityInfo.fClasses.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate memory",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3,Usability,clear,clear,3,"// clear the typedefs; we fill them later",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:97,Modifiability,inherit,inheritance,97,"////////////////////////////////////////////////////////////////////////////////; /// Create the inheritance hierarchy diagram for all classes",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:116,Modifiability,inherit,inheriting,116,"////////////////////////////////////////////////////////////////////////////////; /// fill derived with all classes inheriting from cl and their inheritance; /// distance to cl",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:145,Modifiability,inherit,inheritance,145,"////////////////////////////////////////////////////////////////////////////////; /// fill derived with all classes inheriting from cl and their inheritance; /// distance to cl",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:204,Integrability,depend,depending,204,"////////////////////////////////////////////////////////////////////////////////; /// Combined implementation for GetDeclFileName(), GetImplFileName():; /// Return declaration / implementation file name (depending on decl);; /// return the full path if filesys is true.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load all libraries known to ROOT via the rootmap system.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:24,Availability,avail,available,24,"// stl classes won't be available, so no warning",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:24,Availability,avail,available,24,"// stl classes won't be available, so no warning",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:357,Availability,avail,available,357,"////////////////////////////////////////////////////////////////////////////////; /// Entry point of worker threads for multi-threaded MakeAll().; /// info points to an (internal) THtmlThreadInfo object containing the current; /// THtml object, and whether ""force"" was passed to MakeAll().; /// The thread will poll GetNextClass() until no further class is available.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:120,Performance,multi-thread,multi-threaded,120,"////////////////////////////////////////////////////////////////////////////////; /// Entry point of worker threads for multi-threaded MakeAll().; /// info points to an (internal) THtmlThreadInfo object containing the current; /// THtml object, and whether ""force"" was passed to MakeAll().; /// The thread will poll GetNextClass() until no further class is available.",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:94,Modifiability,inherit,inheritance,94,"////////////////////////////////////////////////////////////////////////////////; /// Make an inheritance tree; ///; ///; /// Input: className - name of the class to process; ///",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:128,Availability,avail,available,128,"////////////////////////////////////////////////////////////////////////////////; /// Set whether ""dot"" (a GraphViz utility) is available",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:101,Availability,avail,available,101,"////////////////////////////////////////////////////////////////////////////////; /// Fill the files available in the file system below fPathInfo.fInputPath",MatchSource.CODE_COMMENT,html/src/THtml.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:56,Deployability,configurat,configuration,56,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:254,Deployability,configurat,configuration,254,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:328,Deployability,configurat,configuration,328,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:56,Modifiability,config,configuration,56,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:254,Modifiability,config,configuration,254,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:328,Modifiability,config,configuration,328,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:297,Deployability,configurat,configuration,297,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:297,Modifiability,config,configuration,297,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:97,Deployability,release,release,97,"# The version info for the project you're documenting, acts as replacement for; # |version| and |release|, also used in various other places throughout the; # built documents.; #; # The short version.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:112,Availability,avail,available,112,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; #html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; #html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; #html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; #html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; #html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; #html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:377,Deployability,release,release,377,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; #html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; #html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; #html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; #html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; #html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; #html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:21,Deployability,update,updated,21,"# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:841,Availability,error,error,841,"# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.; #basedir = os.path.dirname(__file__); #man_page_authors = u'Maintained by the Cling Team (<http://compiler-research.org>)'; #command_guide_subpath = 'CommandGuide'; #command_guide_path = os.path.join(basedir, command_guide_subpath); #for name in os.listdir(command_guide_path):; # # Ignore non-ReST files and the index page.; # if not name.endswith('.rst') or name in ('index.rst',):; # continue; #; # # Otherwise, automatically extract the description.; # file_subpath = os.path.join(command_guide_subpath, name); # with open(os.path.join(command_guide_path, name)) as f:; # title = f.readline().rstrip('\n'); # header = f.readline().rstrip('\n'); #; # if len(header) != len(title):; # print((; # ""error: invalid header in %r (does not match title)"" % (; # file_subpath,)), file=sys.stderr); # if ' - ' not in title:; # print((; # (""error: invalid title in %r ""; # ""(expected '<name> - <description>')"") % (; # file_subpath,)), file=sys.stderr); #; # # Split the name out of the title.; # name,description = title.split(' - ', 1); # man_pages.append((file_subpath.replace('.rst',''), name,; # description, man_page_authors, 1)); # If true, show URL addresses after external links.; #man_show_urls = False; # -- Options for Texinfo output ------------------------------------------------; # Grouping the document tree into Texinfo files. List of tuples; # (source start file, target name, title, author,; # dir menu entry, description, category)",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:976,Availability,error,error,976,"# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.; #basedir = os.path.dirname(__file__); #man_page_authors = u'Maintained by the Cling Team (<http://compiler-research.org>)'; #command_guide_subpath = 'CommandGuide'; #command_guide_path = os.path.join(basedir, command_guide_subpath); #for name in os.listdir(command_guide_path):; # # Ignore non-ReST files and the index page.; # if not name.endswith('.rst') or name in ('index.rst',):; # continue; #; # # Otherwise, automatically extract the description.; # file_subpath = os.path.join(command_guide_subpath, name); # with open(os.path.join(command_guide_path, name)) as f:; # title = f.readline().rstrip('\n'); # header = f.readline().rstrip('\n'); #; # if len(header) != len(title):; # print((; # ""error: invalid header in %r (does not match title)"" % (; # file_subpath,)), file=sys.stderr); # if ' - ' not in title:; # print((; # (""error: invalid title in %r ""; # ""(expected '<name> - <description>')"") % (; # file_subpath,)), file=sys.stderr); #; # # Split the name out of the title.; # name,description = title.split(' - ', 1); # man_pages.append((file_subpath.replace('.rst',''), name,; # description, man_page_authors, 1)); # If true, show URL addresses after external links.; #man_show_urls = False; # -- Options for Texinfo output ------------------------------------------------; # Grouping the document tree into Texinfo files. List of tuples; # (source start file, target name, title, author,; # dir menu entry, description, category)",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:81,Usability,guid,guide,81,"# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.; #basedir = os.path.dirname(__file__); #man_page_authors = u'Maintained by the Cling Team (<http://compiler-research.org>)'; #command_guide_subpath = 'CommandGuide'; #command_guide_path = os.path.join(basedir, command_guide_subpath); #for name in os.listdir(command_guide_path):; # # Ignore non-ReST files and the index page.; # if not name.endswith('.rst') or name in ('index.rst',):; # continue; #; # # Otherwise, automatically extract the description.; # file_subpath = os.path.join(command_guide_subpath, name); # with open(os.path.join(command_guide_path, name)) as f:; # title = f.readline().rstrip('\n'); # header = f.readline().rstrip('\n'); #; # if len(header) != len(title):; # print((; # ""error: invalid header in %r (does not match title)"" % (; # file_subpath,)), file=sys.stderr); # if ' - ' not in title:; # print((; # (""error: invalid title in %r ""; # ""(expected '<name> - <description>')"") % (; # file_subpath,)), file=sys.stderr); #; # # Split the name out of the title.; # name,description = title.split(' - ', 1); # man_pages.append((file_subpath.replace('.rst',''), name,; # description, man_page_authors, 1)); # If true, show URL addresses after external links.; #man_show_urls = False; # -- Options for Texinfo output ------------------------------------------------; # Grouping the document tree into Texinfo files. List of tuples; # (source start file, target name, title, author,; # dir menu entry, description, category)",MatchSource.CODE_COMMENT,interpreter/cling/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/ClingCodeCompleteConsumer.h:63,Integrability,interface,interface,63,"/// \ brief Results of the completer to be printed by the text interface.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/ClingCodeCompleteConsumer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/ClingCodeCompleteConsumer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:94,Availability,avail,available,94,"///\brief Whether or not to extend the static scope with new information; /// about the names available only at runtime; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:28,Modifiability,extend,extend,28,"///\brief Whether or not to extend the static scope with new information; /// about the names available only at runtime; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:88,Performance,cache,cache,88,"///\brief Whether or not to generate executable (LLVM IR) code for the input; /// or to cache the incoming declarations in a queue; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:125,Performance,queue,queue,125,"///\brief Whether or not to generate executable (LLVM IR) code for the input; /// or to cache the incoming declarations in a queue; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:217,Integrability,wrap,wrapped,217,"///\brief Prompt input can look weird for the compiler, e.g.; /// void __cling_prompt() { sin(0.1); } // warning: unused function call; /// This flag suppresses these warnings; it should be set whenever input; /// is wrapped.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:10,Performance,Optimiz,Optimization,10,"///\brief Optimization level.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:516,Modifiability,variab,variables,516,"///\brief Helper structure used to provide specific context of the evaluated; /// expression, when needed.; ///; /// Consider:; /// @code; /// int a = 5;; /// const char* b = dep->Symbol(a);; /// @endcode; /// In the particular case we need to pass a context to the evaluator of the; /// unknown symbol. The addresses of the items in the context are not known at; /// compile time, so they cannot be embedded directly. Instead of that we; /// need to create an array of addresses of those context items (mainly; /// variables) and insert them into the evaluated expression at runtime; /// This information is kept using the syntax: ""dep->Symbol(*(int*)@)"",; /// where @ denotes that the runtime address the variable ""a"" is needed.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:707,Modifiability,variab,variable,707,"///\brief Helper structure used to provide specific context of the evaluated; /// expression, when needed.; ///; /// Consider:; /// @code; /// int a = 5;; /// const char* b = dep->Symbol(a);; /// @endcode; /// In the particular case we need to pass a context to the evaluator of the; /// unknown symbol. The addresses of the items in the context are not known at; /// compile time, so they cannot be embedded directly. Instead of that we; /// need to create an array of addresses of those context items (mainly; /// variables) and insert them into the evaluated expression at runtime; /// This information is kept using the syntax: ""dep->Symbol(*(int*)@)"",; /// where @ denotes that the runtime address the variable ""a"" is needed.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:15,Modifiability,variab,variable,15,"/// \brief The variable list.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:15,Modifiability,variab,variable,15,"/// \brief The variable is set if it is required to print out the result of; /// the dynamic expression after evaluation",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:10,Performance,Perform,Performs,10,"///\brief Performs the insertions of the context in the expression just; /// before evaluation. To be used only at runtime.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:34,Performance,load,loading,34,"///\brief Describes the result of loading a library.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:13,Performance,load,loaded,13,"///< library loaded successfully",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:25,Performance,load,loaded,25,"///< library was already loaded",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:5,Performance,load,loading,5,"///< loading the library failed",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:27,Performance,load,loaded,27,"///\brief DynamicLibraries loaded by this Interpreter.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:83,Performance,perform,performs,83,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:302,Performance,load,loader,302,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:388,Performance,load,loader,388,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:470,Performance,load,loads,470,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:83,Performance,perform,performs,83,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename. If still not found it tries to; /// add the platform-specific extensions (such as so, dll, dylib) and; /// retries the lookup (from lookupLibInPaths); /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] filename - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:453,Performance,load,loader,453,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename. If still not found it tries to; /// add the platform-specific extensions (such as so, dll, dylib) and; /// retries the lookup (from lookupLibInPaths); /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] filename - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:539,Performance,load,loader,539,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename. If still not found it tries to; /// add the platform-specific extensions (such as so, dll, dylib) and; /// retries the lookup (from lookupLibInPaths); /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] filename - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:621,Performance,load,loads,621,"///\brief Concatenates current include paths and the system include paths; /// and performs a lookup for the filename. If still not found it tries to; /// add the platform-specific extensions (such as so, dll, dylib) and; /// retries the lookup (from lookupLibInPaths); /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] filename - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:293,Performance,load,loader,293,"///\brief Looks up a library taking into account the current include paths; /// and the system include paths.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///\param[in] variateLibStem - If this param is true, and libStem is ""L"", then; /// we search for ""L"", ""libL"", ""L.so"", ""libL.so"""", etc.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:379,Performance,load,loader,379,"///\brief Looks up a library taking into account the current include paths; /// and the system include paths.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///\param[in] variateLibStem - If this param is true, and libStem is ""L"", then; /// we search for ""L"", ""libL"", ""L.so"", ""libL.so"""", etc.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:461,Performance,load,loads,461,"///\brief Looks up a library taking into account the current include paths; /// and the system include paths.; /// See more information for RPATH and RUNPATH: https://en.wikipedia.org/wiki/Rpath; ///\param[in] libStem - The filename being looked up; ///\param[in] RPath - RPATH as provided by loader library, searching for libStem; ///\param[in] RunPath - RUNPATH as provided by loader library, searching for libStem; ///\param[in] libLoader - The library that loads libStem. Use """" for main program.; ///\param[in] variateLibStem - If this param is true, and libStem is ""L"", then; /// we search for ""L"", ""libL"", ""L.so"", ""libL.so"""", etc.; ///; ///\returns the canonical path to the file or empty string if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:465,Availability,error,error,465,"///\brief Loads a shared library.; ///; ///\param [in] libStem - The file to load.; ///\param [in] permanent - If false, the file can be unloaded later.; ///\param [in] resolved - Whether libStem is an absolute path or resolved; /// from a previous call to DynamicLibraryManager::lookupLibrary; ///; ///\returns kLoadLibSuccess on success, kLoadLibAlreadyLoaded if the library; /// was already loaded, kLoadLibError if the library cannot be found or any; /// other error was encountered.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:10,Performance,Load,Loads,10,"///\brief Loads a shared library.; ///; ///\param [in] libStem - The file to load.; ///\param [in] permanent - If false, the file can be unloaded later.; ///\param [in] resolved - Whether libStem is an absolute path or resolved; /// from a previous call to DynamicLibraryManager::lookupLibrary; ///; ///\returns kLoadLibSuccess on success, kLoadLibAlreadyLoaded if the library; /// was already loaded, kLoadLibError if the library cannot be found or any; /// other error was encountered.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:77,Performance,load,load,77,"///\brief Loads a shared library.; ///; ///\param [in] libStem - The file to load.; ///\param [in] permanent - If false, the file can be unloaded later.; ///\param [in] resolved - Whether libStem is an absolute path or resolved; /// from a previous call to DynamicLibraryManager::lookupLibrary; ///; ///\returns kLoadLibSuccess on success, kLoadLibAlreadyLoaded if the library; /// was already loaded, kLoadLibError if the library cannot be found or any; /// other error was encountered.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:394,Performance,load,loaded,394,"///\brief Loads a shared library.; ///; ///\param [in] libStem - The file to load.; ///\param [in] permanent - If false, the file can be unloaded later.; ///\param [in] resolved - Whether libStem is an absolute path or resolved; /// from a previous call to DynamicLibraryManager::lookupLibrary; ///; ///\returns kLoadLibSuccess on success, kLoadLibAlreadyLoaded if the library; /// was already loaded, kLoadLibError if the library cannot be found or any; /// other error was encountered.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:81,Performance,load,loaded,81,"///\brief Returns true if the file was a dynamic library and it was already; /// loaded.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:27,Performance,load,loaded,27,"/// Find the first not-yet-loaded shared object that contains the symbol; ///; ///\param[in] mangledName - the mangled name to look for.; ///\param[in] searchSystem - whether to decend into system libraries.; ///; ///\returns the library name if found, and empty string otherwise.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h:160,Safety,avoid,avoid,160,"/// \brief LifetimeHandler is used in case of initialization using address; /// on the automatic store (stack) instead of EvaluateT.; ///; /// The reason is to avoid the copy constructors that might be private.; /// This is part of complex transformation, which aims to preserve the; /// code behavior. For example:; /// @code; /// int i = 5;; /// MyClass my(dep->Symbol(i)); /// @endcode; /// where dep->Symbol() is a symbol not known at compile-time; /// transformed into:; /// @code; /// cling::runtime::internal::LifetimeHandler; /// __unique(""dep->Sybmol(*(int*)@)"",(void*[]){&i}, DC, ""MyClass"");; /// MyClass &my(*(MyClass*)__unique.getMemory());; /// @endcode",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h:276,Modifiability,variab,variables,276,"/// \brief Constructs an expression, which creates the object on the; /// free store and tells the interpreter to evaluate it.; ///; /// @param[in] ExprInfo Helper structure that keeps information about; /// the expression that is being replaced and the addresses of the; /// variables that the replaced expression contains.; /// @param[in] DC The declaration context, in which the expression will; /// be evaluated at runtime; /// @param[in] type The type of the object, which will help to delete; /// it, when the LifetimeHandler goes out of scope.; /// @param[in] Interp The current interpreter object, which evaluate will; /// be called upon.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h:11,Usability,Clear,Clears,11,"/// \brief Clears up the free store, when LifetimeHandler goes out of; /// scope.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h:665,Modifiability,variab,variables,665,"/// \brief EvaluateT is used to replace all invalid source code that; /// occurs, when cling's dynamic extensions are enabled.; ///; /// When the interpreter ""sees"" invalid code it marks it and skip all the; /// semantic checks (like with templates). Afterwords all these marked; /// nodes are replaced with a call to EvaluateT, which makes valid; /// C++ code. It is templated because it can be used in expressions and; /// T is the type of the evaluated expression.; ///; /// @tparam T The type of the evaluated expression.; /// @param[in] ExprInfo Helper structure that keeps information about the; /// expression that is being replaced and the addresses of the variables; /// that the replaced expression contains.; /// @param[in] DC The declaration context, in which the expression will be; /// evaluated at runtime.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h:25,Availability,error,error,25,"///\brief Return true if error was diagnosed false otherwise",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Exception.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h:84,Availability,error,errors,84,"///\brief Exception that pulls cling out of runtime-compilation (llvm + clang); /// errors.; ///; /// If user code provokes an llvm::unreachable it will cause this exception; /// to be thrown.; /// Note that this exception is *not* thrown during the execution of the; /// user's code but during its compilation (at runtime).",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Exception.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h:21,Availability,error,errors,21,"// Handle fatal llvm errors by throwing an exception.; // Yes, throwing exceptions in error handlers is bad.; // Doing nothing is pretty terrible, too.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Exception.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h:86,Availability,error,error,86,"// Handle fatal llvm errors by throwing an exception.; // Yes, throwing exceptions in error handlers is bad.; // Doing nothing is pretty terrible, too.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Exception.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:10,Integrability,Wrap,Wrap,10,"///\brief Wrap up the ptx_code in the NVIDIA fatbinary format. The fatbin; /// code is written to m_FatbinFilePath.; ///; ///\returns True, if the fatbinary tool returns 0.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:278,Performance,optimiz,optimization,278,"///\brief Constructor for IncrementalCUDADeviceCompiler; ///; ///\param [in] filePath - All files will generated in the folder of the; /// filePath, except the fatbin file, if it have another path. Have; /// to end with a separator. Can be empty.; ///\param [in] optLevel - The optimization level of the interpreter; /// instance.; /// The value will be copied, because a change of it is not allowed.; ///\param [in] invocationOptions - Contains values for the arguments of; /// the interpreter instance and the NVIDIA tool fatbinary.; ///\param [in] CI - Will be used for m_CuArgs and the include path handling.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:99,Integrability,interface,interface,99,"///\brief Generate an new fatbin file with the path in; /// CudaGpuBinaryFileNames.; ///; /// This interface helps to run everything that the device compiler can run.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param [in] input - The input directly from the UI. Attention, the string; /// must not be wrapped or transformed.; ///; ///\returns true, if all stages of generating fatbin runs right and a new; /// fatbin file is written.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:404,Integrability,interface,interface,404,"///\brief Generate an new fatbin file with the path in; /// CudaGpuBinaryFileNames.; ///; /// This interface helps to run everything that the device compiler can run.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param [in] input - The input directly from the UI. Attention, the string; /// must not be wrapped or transformed.; ///; ///\returns true, if all stages of generating fatbin runs right and a new; /// fatbin file is written.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:567,Integrability,wrap,wrapped,567,"///\brief Generate an new fatbin file with the path in; /// CudaGpuBinaryFileNames.; ///; /// This interface helps to run everything that the device compiler can run.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param [in] input - The input directly from the UI. Attention, the string; /// must not be wrapped or transformed.; ///; ///\returns true, if all stages of generating fatbin runs right and a new; /// fatbin file is written.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:153,Integrability,interface,interface,153,"///\brief Generate an new fatbin file with the path in; /// CudaGpuBinaryFileNames from input line, which doesn't contain; /// statements.; ///; /// The interface circumvents the most of the extra work necessary to; /// compile and run statements.; ///; /// @param[in] input - The input containing only declarations (aka; /// Top Level Declarations); ///; ///\returns true, if all stages of generating fatbin runs right and a new; /// fatbin file is written.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:167,Performance,load,loaded,167,"///\brief Parses input line, which doesn't contain statements. No code; /// generation is done.; ///; /// Same as declare without codegening. Useful when a library is loaded and; /// the header files need to be imported.; ///; ///\param[in] input - The input containing the declarations.; ///; ///\returns true if parsing of the input was correct",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:48,Safety,avoid,avoid,48,"// IgnoreFilesFunc_t takes a const reference to avoid having to; // include the actual definition of PresumedLoc.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:55,Integrability,rout,routines,55,"///\brief Describes the return result of the different routines that do the; /// incremental compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:48,Availability,error,error,48,"///\brief Code generator is unavailable; not an error.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:16,Availability,error,error,16,"///\brief First error value.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:22,Availability,error,error,22,"///\brief Compilation error.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:53,Availability,error,error,53,"///\brief The Transaction had no module (probably an error in CodeGen).",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:17,Safety,safe,safe,17,"///\brief Thread-safe llvm library state.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:44,Integrability,wrap,wrapped,44,"///\brief Cling's execution engine - a well wrapped llvm execution engine.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:40,Integrability,wrap,wrappers,40,"///\brief Cache of compiled destructors wrappers.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Performance,Cache,Cache,10,"///\brief Cache of compiled destructors wrappers.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Deployability,Configurat,Configuration,10,"///\brief Configuration bits that can be changed at runtime. This allows the; /// user to enable/disable specific interpreter extensions.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Modifiability,Config,Configuration,10,"///\brief Configuration bits that can be changed at runtime. This allows the; /// user to enable/disable specific interpreter extensions.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:28,Performance,optimiz,optimization,28,"///\brief Flag toggling the optimization level to be used.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:72,Integrability,interface,interfaces,72,"///\brief Worker function, building block for interpreter's public; /// interfaces.; ///; ///\param [in] input - The input being compiled.; ///\param [in] CompilationOptions - The option set driving the compilation.; ///\param [out] T - The cling::Transaction of the compiled input.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:72,Integrability,interface,interfaces,72,"///\brief Worker function, building block for interpreter's public; /// interfaces.; ///; ///\param [in] input - The input being compiled.; ///\param [in] CompilationOptions - The option set driving the compilation.; ///\param [in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param [out] T - The cling::Transaction of the compiled input.; ///\param [in] wrapPoint - Where in input to begin the wrapper; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:478,Integrability,wrap,wrapPoint,478,"///\brief Worker function, building block for interpreter's public; /// interfaces.; ///; ///\param [in] input - The input being compiled.; ///\param [in] CompilationOptions - The option set driving the compilation.; ///\param [in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param [out] T - The cling::Transaction of the compiled input.; ///\param [in] wrapPoint - Where in input to begin the wrapper; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:518,Integrability,wrap,wrapper,518,"///\brief Worker function, building block for interpreter's public; /// interfaces.; ///; ///\param [in] input - The input being compiled.; ///\param [in] CompilationOptions - The option set driving the compilation.; ///\param [in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param [out] T - The cling::Transaction of the compiled input.; ///\param [in] wrapPoint - Where in input to begin the wrapper; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:484,Deployability,update,updated,484,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Integrability,Wrap,Wraps,10,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:180,Integrability,wrap,wrap,180,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:303,Integrability,wrap,wrap,303,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:360,Integrability,wrap,wrapped,360,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:404,Integrability,Wrap,WrapPoint,404,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:449,Integrability,wrap,wrapper,449,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:471,Integrability,Wrap,WrapPoint,471,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:573,Integrability,wrap,wrapped,573,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:21,Integrability,wrap,wrapper,21,"///\brief Runs given wrapper function.; ///; ///\param [in] fname - The function name.; ///\param [in,out] res - The return result of the run function. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///; ///\returns The result of the execution.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:260,Security,access,access,260,"///\brief Compile the function definition and return its Decl.; ///; ///\param[in] name - name of the function, used to find its Decl.; ///\param[in] code - function definition, starting with 'extern ""C""'.; ///\param[in] withAccessControl - whether to enforce access restrictions.; ///\param[out] T - The cling::Transaction of the input",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Availability,down,down,10,"///\ Shut down the interpreter runtime.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:125,Modifiability,inherit,inherited,125,"///\brief Constructor for child Interpreter.; /// If the parent Interpreter has a replacement DiagnosticConsumer, it is; /// inherited by the child (not owned).; ///\param[in] parentInterpreter - the parent interpreter of this interpreter; ///\param[in] argc - no. of args.; ///\param[in] argv - arguments passed when driver is invoked.; ///\param[in] llvmdir - ???; ///\param[in] extraLibHandle - resolve symbols also from this dylib; ///\param[in] noRuntime - flag to control the presence of runtime universe; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:129,Integrability,wrap,wrapper,129,"///\brief Returns the current or last Transactions source location.; ///; ///\param[in] skipWrapper - skip the length of a cling wrapper; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:27,Availability,avail,available,27,"///\brief Returns the next available valid free source location.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:47,Performance,load,loaded,47,"///\brief Prints the current library paths and loaded libraries.; ///; ///\param[in] S - stream to dump to or nullptr for default (cling::outs); ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:86,Usability,undo,undo,86,"///\brief Dump various internal data.; ///; ///\param[in] what - which data to dump. 'undo', 'ast', 'asttree'; ///\param[in] filter - optional argument to filter data with.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:829,Availability,echo,echo,829,"///\brief Compiles the given input.; ///; /// This interface helps to run everything that cling can run. From; /// declaring header files to running or evaluating single statements.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param[in] input - The input to be compiled.; ///\param[in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param[out] T - The cling::Transaction of the compiled input.; ///\param[in] disableValuePrinting - Whether to echo the expression result.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:51,Integrability,interface,interface,51,"///\brief Compiles the given input.; ///; /// This interface helps to run everything that cling can run. From; /// declaring header files to running or evaluating single statements.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param[in] input - The input to be compiled.; ///\param[in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param[out] T - The cling::Transaction of the compiled input.; ///\param[in] disableValuePrinting - Whether to echo the expression result.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:419,Integrability,interface,interface,419,"///\brief Compiles the given input.; ///; /// This interface helps to run everything that cling can run. From; /// declaring header files to running or evaluating single statements.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param[in] input - The input to be compiled.; ///\param[in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param[out] T - The cling::Transaction of the compiled input.; ///\param[in] disableValuePrinting - Whether to echo the expression result.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:167,Performance,load,loaded,167,"///\brief Parses input line, which doesn't contain statements. No code; /// generation is done.; ///; /// Same as declare without codegening. Useful when a library is loaded and; /// the header files need to be imported.; ///; ///\param[in] input - The input containing the declarations.; ///\param[out] T - The cling::Transaction of the parsed input.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:83,Integrability,rout,routine,83,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; /// This is useful when we start up the interpreter and programatically,; /// later generate a modulemap.; ///; ///\returns true if the module was loaded.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:4,Performance,Load,Loads,4,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; /// This is useful when we start up the interpreter and programatically,; /// later generate a modulemap.; ///; ///\returns true if the module was loaded.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:156,Performance,load,loads,156,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; /// This is useful when we start up the interpreter and programatically,; /// later generate a modulemap.; ///; ///\returns true if the module was loaded.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:319,Performance,load,loaded,319,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; /// This is useful when we start up the interpreter and programatically,; /// later generate a modulemap.; ///; ///\returns true if the module was loaded.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:83,Integrability,rout,routine,83,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; ///\returns true if the module was loaded or already visible.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:4,Performance,Load,Loads,4,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; ///\returns true if the module was loaded or already visible.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:156,Performance,load,loads,156,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; ///\returns true if the module was loaded or already visible.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:207,Performance,load,loaded,207,"/// Loads a C++ Module with a given name by synthesizing an Import decl.; /// This routine checks if there is a modulemap in the current directory; /// and loads it.; ///; ///\returns true if the module was loaded or already visible.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:270,Performance,load,loaded,270,"///\brief Parses input line, which doesn't contain statements. Code; /// generation needed to make the module functional.; ///; /// Same as declare without most of the codegening. Only a few; /// things, like inline function are codegened. Useful when a; /// library is loaded and the header files need to be imported.; ///; ///\param[in] input - The input containing the declarations.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:51,Integrability,interface,interface,51,"///\brief Code completes user input.; ///; /// The interface circumvents the most of the extra work necessary to; /// code complete code.; ///; /// @param[in] line - The input containing the string to be completed.; /// @param[in] cursor - The offset for the completion point.; /// @param[out] completions - The results for teh completion; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:79,Integrability,interface,interface,79,"///\brief Compiles input line, which doesn't contain statements.; ///; /// The interface circumvents the most of the extra work necessary to; /// compile and run statements.; ///; /// @param[in] input - The input containing only declarations (aka; /// Top Level Declarations); /// @param[out] T - The cling::Transaction of the input; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:78,Integrability,interface,interface,78,"///\brief Compiles input line, which contains only expressions.; ///; /// The interface circumvents the most of the extra work necessary extract; /// the declarations from the input.; ///; /// @param[in] input - The input containing only expressions; /// @param[in,out] V - The value of the executed input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:126,Integrability,interface,interface,126,"///\brief Compiles input line, which contains only expressions and prints; /// out the result of its execution.; ///; /// The interface circumvents the most of the extra work necessary extract; /// the declarations from the input.; ///; /// @param[in] input - The input containing only expressions.; /// @param[in,out] V - The value of the executed input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:54,Integrability,interface,interface,54,"///\brief Compiles input line and runs.; ///; /// The interface is the fastest way to compile and run a statement or; /// expression. It just wraps the input into a function definition and runs; /// that function, without any other ""magic"".; ///; /// @param[in] input - The input containing only expressions.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:142,Integrability,wrap,wraps,142,"///\brief Compiles input line and runs.; ///; /// The interface is the fastest way to compile and run a statement or; /// expression. It just wraps the input into a function definition and runs; /// that function, without any other ""magic"".; ///; /// @param[in] input - The input containing only expressions.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Performance,Load,Loads,10,"///\brief Loads a shared library.; ///; ///\param [in] filename - The file to loaded.; ///\param [in] lookup - Whether to try to resolve the filepath; ///; ///\returns kMoreInputExpected is returned when file could not be found; /// otherwise kSuccess or kFailure; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:78,Performance,load,loaded,78,"///\brief Loads a shared library.; ///; ///\param [in] filename - The file to loaded.; ///\param [in] lookup - Whether to try to resolve the filepath; ///; ///\returns kMoreInputExpected is returned when file could not be found; /// otherwise kSuccess or kFailure; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Performance,Load,Loads,10,"///\brief Loads header file; ///; ///\param [in] filename - The file to loaded.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:72,Performance,load,loaded,72,"///\brief Loads header file; ///; ///\param [in] filename - The file to loaded.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:128,Performance,load,loaded,128,"///\brief Loads header file; ///; ///\param [in] filename - The file to loaded.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Performance,Load,Loads,10,"///\brief Loads header file or shared library.; ///; ///\param [in] filename - The file to be loaded.; ///\param [in] allowSharedLib - Whether to try to load the file as shared; /// library.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:94,Performance,load,loaded,94,"///\brief Loads header file or shared library.; ///; ///\param [in] filename - The file to be loaded.; ///\param [in] allowSharedLib - Whether to try to load the file as shared; /// library.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:153,Performance,load,load,153,"///\brief Loads header file or shared library.; ///; ///\param [in] filename - The file to be loaded.; ///\param [in] allowSharedLib - Whether to try to load the file as shared; /// library.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:239,Performance,load,loaded,239,"///\brief Loads header file or shared library.; ///; ///\param [in] filename - The file to be loaded.; ///\param [in] allowSharedLib - Whether to try to load the file as shared; /// library.; ///\param [out] T - Transaction containing the loaded file.; ///\returns result of the compilation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:114,Availability,error,error,114,"///\brief Unloads (forgets) a transaction from AST and JITed symbols.; ///; /// If one of the declarations caused error in clang it is rolled back from; /// the AST. This is essential feature for the error recovery subsystem.; /// This is also a key entry point for the code unloading.; ///; ///\param[in] T - the transaction to unload.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:200,Availability,error,error,200,"///\brief Unloads (forgets) a transaction from AST and JITed symbols.; ///; /// If one of the declarations caused error in clang it is rolled back from; /// the AST. This is essential feature for the error recovery subsystem.; /// This is also a key entry point for the code unloading.; ///; ///\param[in] T - the transaction to unload.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:206,Availability,recover,recovery,206,"///\brief Unloads (forgets) a transaction from AST and JITed symbols.; ///; /// If one of the declarations caused error in clang it is rolled back from; /// the AST. This is essential feature for the error recovery subsystem.; /// This is also a key entry point for the code unloading.; ///; ///\param[in] T - the transaction to unload.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:206,Safety,recover,recovery,206,"///\brief Unloads (forgets) a transaction from AST and JITed symbols.; ///; /// If one of the declarations caused error in clang it is rolled back from; /// the AST. This is essential feature for the error recovery subsystem.; /// This is also a key entry point for the code unloading.; ///; ///\param[in] T - the transaction to unload.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:111,Availability,avail,available,111,"/// Register a DefinitionGenerator to dynamically provide symbols for; /// generated code that are not already available within the process.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:32,Security,access,accessors,32,"///\brief Interpreter callbacks accessors.; /// Note that this class takes ownership of any callback object given to it.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:59,Security,Access,Accesses,59,"///\brief Returns the JIT managed by the Interpreter.; /// Accesses and returns the JIT held in the IncrementalJIT instance; /// managed by m_Executor",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:357,Security,access,access,357,"///\brief Compile extern ""C"" function and return its address.; ///; ///\param[in] name - function name; ///\param[in] code - function definition, must contain 'extern ""C""'; ///\param[in] ifUniq - only compile this function if no function; /// with the same name exists, else return the existing address; ///\param[in] withAccessControl - whether to enforce access restrictions; ///; ///\returns the address of the function or 0 if the compilation failed.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:23,Performance,cache,cache,23,"///\brief Compile (and cache) destructor calls for a record decl. Used by ~Value.; /// They are of type extern ""C"" void()(void* pObj).",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:198,Availability,alive,alive,198,"///\brief Run once the list of registered atexit functions. This is useful; /// when an external process wants to control carefully the teardown because; /// the registered atexit functions require alive interpreter service.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Interpreter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:16,Integrability,interface,interface,16,"/// \brief This interface provides a way to observe the actions of the; /// interpreter as it does its thing. Clients can define their hooks here to; /// implement interpreter level tools.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:57,Energy Efficiency,adapt,adaptors,57,"///\brief Constructs the callbacks with default callback adaptors.; ///; ///\param[in] interp - an interpreter.; ///\param[in] enableExternalSemaSourceCallbacks - creates a default; /// InterpreterExternalSemaSource and attaches it to Sema.; ///\param[in] enablePPCallbacks - creates a default InterpreterPPCallbacks; /// and attaches it to the Preprocessor.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:57,Modifiability,adapt,adaptors,57,"///\brief Constructs the callbacks with default callback adaptors.; ///; ///\param[in] interp - an interpreter.; ///\param[in] enableExternalSemaSourceCallbacks - creates a default; /// InterpreterExternalSemaSource and attaches it to Sema.; ///\param[in] enablePPCallbacks - creates a default InterpreterPPCallbacks; /// and attaches it to the Preprocessor.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:110,Availability,Error,Error,110,"/// \brief This callback is invoked whenever the interpreter failed to load a library.; ///; /// \param[in] - Error message and parameters passed to loadLibrary; /// \returns true if the error was handled.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:187,Availability,error,error,187,"/// \brief This callback is invoked whenever the interpreter failed to load a library.; ///; /// \param[in] - Error message and parameters passed to loadLibrary; /// \returns true if the error was handled.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:116,Integrability,message,message,116,"/// \brief This callback is invoked whenever the interpreter failed to load a library.; ///; /// \param[in] - Error message and parameters passed to loadLibrary; /// \returns true if the error was handled.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:71,Performance,load,load,71,"/// \brief This callback is invoked whenever the interpreter failed to load a library.; ///; /// \param[in] - Error message and parameters passed to loadLibrary; /// \returns true if the error was handled.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:149,Performance,load,loadLibrary,149,"/// \brief This callback is invoked whenever the interpreter failed to load a library.; ///; /// \param[in] - Error message and parameters passed to loadLibrary; /// \returns true if the error was handled.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:10,Integrability,Interface,Interface,10,"///\brief Interface to support locking the interpreter state in case of; /// concurrent usage.; ///; /// Cling assumes that any of its function is invoked in a locked context,; /// but before invoking user code (e.g. static initialization or value; /// printing) cling will calling `EnteringUserCode()`, and once; /// done call `ReturnedFromUserCode()`. Typically the user provided locks; /// would be unlock by `EnteringUserCode()` and lock back in; /// `ReturnedFromUserCode()`. State can be returned from EnteringUserCode; /// and made use of in ReturnedFromUserCode(), to identify pairs of these; /// calls.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:77,Performance,concurren,concurrent,77,"///\brief Interface to support locking the interpreter state in case of; /// concurrent usage.; ///; /// Cling assumes that any of its function is invoked in a locked context,; /// but before invoking user code (e.g. static initialization or value; /// printing) cling will calling `EnteringUserCode()`, and once; /// done call `ReturnedFromUserCode()`. Typically the user provided locks; /// would be unlock by `EnteringUserCode()` and lock back in; /// `ReturnedFromUserCode()`. State can be returned from EnteringUserCode; /// and made use of in ReturnedFromUserCode(), to identify pairs of these; /// calls.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:245,Deployability,release,release,245,"///\brief Lock a region of compilation that is executed by the interpreter; /// during user code execution.; ///; /// When cling is used in multi-threaded environments, all calls to cling; /// are expected to be locked by the caller. Cling will release that lock; /// using `EnteringUserCode()` and re-instate that lock using; /// `ReturnedFromUserCode()` for the duration of the execution of the user; /// code. But that user code can trigger calls to the interpreter itself.; /// These calls are due to instrumented parts of the user code, e.g.; /// `printValue()` calls and `cling::runtime::internal::LifetimeHandler`; /// calls. For those, cling needs to be locked with a mechanism compatible; /// with the mechanism used for `EnteringUserCode()` /; /// `ReturnedFromUserCode()` to avoid deadlocks. Before entering compilation; /// triggered by user code, cling will call; /// `LockCompilationDuringUserCodeExecution()`; after the execution of that; /// code has finished it will call; /// `UnlockCompilationDuringUserCodeExecution()`.; /// Note that after the compilation of that code cling will call; /// `EnteringUserCode()` (before executing) and `ReturnedFromUserCode()`; /// (after execution that code).; ///; /// \returns An optional state object needed for the call to; /// `UnlockCompilationDuringUserCodeExecution(state)`.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:140,Performance,multi-thread,multi-threaded,140,"///\brief Lock a region of compilation that is executed by the interpreter; /// during user code execution.; ///; /// When cling is used in multi-threaded environments, all calls to cling; /// are expected to be locked by the caller. Cling will release that lock; /// using `EnteringUserCode()` and re-instate that lock using; /// `ReturnedFromUserCode()` for the duration of the execution of the user; /// code. But that user code can trigger calls to the interpreter itself.; /// These calls are due to instrumented parts of the user code, e.g.; /// `printValue()` calls and `cling::runtime::internal::LifetimeHandler`; /// calls. For those, cling needs to be locked with a mechanism compatible; /// with the mechanism used for `EnteringUserCode()` /; /// `ReturnedFromUserCode()` to avoid deadlocks. Before entering compilation; /// triggered by user code, cling will call; /// `LockCompilationDuringUserCodeExecution()`; after the execution of that; /// code has finished it will call; /// `UnlockCompilationDuringUserCodeExecution()`.; /// Note that after the compilation of that code cling will call; /// `EnteringUserCode()` (before executing) and `ReturnedFromUserCode()`; /// (after execution that code).; ///; /// \returns An optional state object needed for the call to; /// `UnlockCompilationDuringUserCodeExecution(state)`.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:786,Safety,avoid,avoid,786,"///\brief Lock a region of compilation that is executed by the interpreter; /// during user code execution.; ///; /// When cling is used in multi-threaded environments, all calls to cling; /// are expected to be locked by the caller. Cling will release that lock; /// using `EnteringUserCode()` and re-instate that lock using; /// `ReturnedFromUserCode()` for the duration of the execution of the user; /// code. But that user code can trigger calls to the interpreter itself.; /// These calls are due to instrumented parts of the user code, e.g.; /// `printValue()` calls and `cling::runtime::internal::LifetimeHandler`; /// calls. For those, cling needs to be locked with a mechanism compatible; /// with the mechanism used for `EnteringUserCode()` /; /// `ReturnedFromUserCode()` to avoid deadlocks. Before entering compilation; /// triggered by user code, cling will call; /// `LockCompilationDuringUserCodeExecution()`; after the execution of that; /// code has finished it will call; /// `UnlockCompilationDuringUserCodeExecution()`.; /// Note that after the compilation of that code cling will call; /// `EnteringUserCode()` (before executing) and `ReturnedFromUserCode()`; /// (after execution that code).; ///; /// \returns An optional state object needed for the call to; /// `UnlockCompilationDuringUserCodeExecution(state)`.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:62,Testability,test,testsuite,62,"// end namespace cling; // TODO: Make the build system in the testsuite aware how to build that class; // and extract it out there again.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:7,Testability,test,test,7,"// end test",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InvocationOptions.h:40,Modifiability,variab,variables,40,"///\brief Parse argc, and argv into our variables.; ///; ///\param [in] argc - argument count; ///\param [in] argv - arguments; ///\param [out] Inputs - save all arguments that are inputs/files here; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/InvocationOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InvocationOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:39,Integrability,interface,interface,39,"///\brief Reflection information query interface. The class performs lookups; /// in the currently loaded information in the AST, using the same Parser,; /// Sema and Preprocessor objects.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:60,Performance,perform,performs,60,"///\brief Reflection information query interface. The class performs lookups; /// in the currently loaded information in the AST, using the same Parser,; /// Sema and Preprocessor objects.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:99,Performance,load,loaded,99,"///\brief Reflection information query interface. The class performs lookups; /// in the currently loaded information in the AST, using the same Parser,; /// Sema and Preprocessor objects.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:70,Safety,avoid,avoid,70,"/// A map containing the hash of the lookup buffer. This allows us to avoid; /// allocating memory for parsing when we know nothing has changed. Used by; /// StartParsingRAII.; // We do not want to include ""clang/Basic/SourceLocation.h"" because it makes; // the use of this header at runtime significantly slower.; // We really need llvm::hash_code->clang::FileID mapping but we put opaque; // source location as unsigned to compute the FileID when needed.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:25,Security,hash,hash,25,"/// A map containing the hash of the lookup buffer. This allows us to avoid; /// allocating memory for parsing when we know nothing has changed. Used by; /// StartParsingRAII.; // We do not want to include ""clang/Basic/SourceLocation.h"" because it makes; // the use of this header at runtime significantly slower.; // We really need llvm::hash_code->clang::FileID mapping but we put opaque; // source location as unsigned to compute the FileID when needed.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:31,Performance,cache,cache,31,"/// Number of times we hit the cache.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:34,Performance,cache,cache,34,"/// Number of times we missed the cache.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:181,Availability,failure,failures,181,"///\brief Lookup a type by name, starting from the global; /// namespace.; ///; ///\param [in] typeName - The type to lookup.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\returns On a failed lookup retval.isNull() will be true.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:297,Availability,failure,failures,297,"///\brief Lookup a class declaration by name, starting from the global; /// namespace, also handles struct, union, namespace, and enum.; ///; ///\param [in] className - The name of the class, struct, union,; /// namespace, or enum to lookup.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\param [out] resultType - The type of the class, struct, union,; /// or enum to lookup; NULL otherwise.; ///\param [in] instantiateTemplate - When true, will attempt to instantiate; /// a class template satisfying the rquest.; ///\returns The found declaration or null.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:270,Availability,failure,failures,270,"///\brief Lookup a class template declaration by name, starting from; /// the global namespace, also handles struct, union, namespace, and enum.; ///; ///\param [in] Name - The name of the class template to lookup.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\returns The found declaration or null.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:286,Availability,failure,failures,286,"///\brief Lookup a data member based on its Decl(Context), name.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] dataName - the name of the data member to find.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The value/data member found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:423,Availability,failure,failures,423,"///\brief Lookup a function template based on its Decl(Context), name.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] templateName - the name of the function template to find.; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function template found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:477,Availability,failure,failures,477,"///\brief Lookup a function based on its Decl(Context), name (return any; ///function that matches the name (and constness if requested).; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] funcName - the name of the function to find.; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:533,Availability,failure,failures,533,"///\brief Lookup a function based on its Decl(Context), name and parameters.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] funcName - the name of the function to find.; ///\param [in] funcProto - the function parameter list (without enclosing; /// parantheses). Example: ""size_t,int"".; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:489,Availability,failure,failures,489,"///\brief Lookup a function based on its Decl(Context), name and parameters.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] funcName - the name of the function to find.; ///\param [in] funcProto - the list of types of the function parameters; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:601,Availability,failure,failures,601,"///\brief Lookup a function based on its Decl(Context), name and parameters.; /// where the result if any must have exactly the arguments requested.; ///; ///\param[in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param[in] funcName - the name of the function to find.; ///\param[in] funcProto - the function parameter list (without enclosing; /// parantheses). Example: ""size_t,int"".; ///\param[in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:557,Availability,failure,failures,557,"///\brief Lookup a function based on its Decl(Context), name and parameters.; /// where the result if any must have exactly the arguments requested.; ///; ///\param[in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param[in] funcName - the name of the function to find.; ///\param[in] funcProto - the list of types of the function parameters; ///\param[in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:291,Availability,failure,failures,291,"///\brief Lookup given argument list and return each argument as an; /// expression.; ///; ///\param[in] argList - The string representation of the argument list.; ///\param[out] argExprs - The corresponding expressions to the argList.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:252,Availability,failure,failures,252,"///\brief Test whether a function with the given name exists.; ///; ///\param [in] scopeDecl - scope in which to look for the function.; ///\param [in] funcName - name of the function to look for.; ///\param [in] diagOnOff - whether to diagnose lookup failures.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:10,Testability,Test,Test,10,"///\brief Test whether a function with the given name exists.; ///; ///\param [in] scopeDecl - scope in which to look for the function.; ///\param [in] funcName - name of the function to look for.; ///\param [in] diagOnOff - whether to diagnose lookup failures.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/LookupHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:23,Deployability,configurat,configuration,23,"/// \brief Interpreter configuration bits that can be changed at run-time; /// by the user, e.g. to enable/disable extensions.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:23,Modifiability,config,configuration,23,"/// \brief Interpreter configuration bits that can be changed at run-time; /// by the user, e.g. to enable/disable extensions.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeOptions.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:71,Availability,avail,available,71,"/// \brief Used to stores the declarations, which are going to be; /// available only at runtime. These are cling runtime builtins",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:11,Deployability,Configurat,Configuration,11,"/// \brief Configuration bits for the parent interpreter.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:11,Modifiability,Config,Configuration,11,"/// \brief Configuration bits for the parent interpreter.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:27,Integrability,rout,routines,27,"/// \brief Some of clang's routines rely on valid source locations and; /// source ranges. This member can be looked up and source locations and; /// ranges can be passed in as parameters to these routines.; ///; /// Use instead of SourceLocation() and SourceRange(). This might help,; /// when clang emits diagnostics on artificially inserted AST node.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:197,Integrability,rout,routines,197,"/// \brief Some of clang's routines rely on valid source locations and; /// source ranges. This member can be looked up and source locations and; /// ranges can be passed in as parameters to these routines.; ///; /// Use instead of SourceLocation() and SourceRange(). This might help,; /// when clang emits diagnostics on artificially inserted AST node.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:81,Energy Efficiency,allocate,allocated,81,"///\brief Set the value of the Generic value and return the address; /// for the allocated storage space.; ///\param [in] vpI - The cling::Interpreter for Value.; ///\param [in] vpQT - The opaque ptr for the clang::QualType of value.; ///\param [in] vpT - The opaque ptr for the cling::Transaction.; ///\param [out] vpV - The Value that is created.; ///; ///\returns the address where the value should be put.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:56,Integrability,interface,interface,56,"///\brief Each declaration group came through different interface at; /// different time. We are being conservative and we want to keep all the; /// call sequence that originally occurred in clang.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:86,Integrability,interface,interface,86,"///\brief Each macro pair (is this the same as for decls?)came; /// through different interface at; /// different time. We are being conservative and we want to keep all the; /// call sequence that originally occurred in clang.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:155,Integrability,inject,injected,155,"///\brief All seen declarations, except the deserialized ones.; /// If we collect the declarations by walking the clang::DeclContext we; /// will miss the injected onces (eg. template instantiations).; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:155,Security,inject,injected,155,"///\brief All seen declarations, except the deserialized ones.; /// If we collect the declarations by walking the clang::DeclContext we; /// will miss the injected onces (eg. template instantiations).; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:14,Integrability,wrap,wrapper,14,"///\brief The wrapper function produced by the intepreter if any.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:134,Availability,error,error,134,"// Intentionally use struct instead of pair because we don't need default; // init.; // Add macro decls to be able to revert them for error recovery.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:140,Availability,recover,recovery,140,"// Intentionally use struct instead of pair because we don't need default; // init.; // Add macro decls to be able to revert them for error recovery.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:140,Safety,recover,recovery,140,"// Intentionally use struct instead of pair because we don't need default; // init.; // Add macro decls to be able to revert them for error recovery.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:33,Security,access,access,33,"/// TransactionPool needs direct access to m_State as setState asserts",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:63,Testability,assert,asserts,63,"/// TransactionPool needs direct access to m_State as setState asserts",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:74,Integrability,interface,interface,74,"///\brief Appends a declaration group and source from which consumer; /// interface it came from to the transaction.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:10,Integrability,Wrap,Wraps,10,"///\brief Wraps the declaration into declaration group and appends it to; /// the transaction as if it was seen through HandleTopLevelDecl.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:10,Integrability,Wrap,Wraps,10,"///\brief Wraps the declaration into declaration group and appends it to; /// the transaction as if it was seen through HandleTopLevelDecl, even if; /// it was completed and ready for codegenning.; /// NOTE: Please use with caution!; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:10,Usability,Clear,Clears,10,"///\brief Clears all declarations in the transaction.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Transaction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:109,Availability,avail,available,109,"///\brief A type, value pair.; //; /// Type-safe value access and setting. Simple (built-in) casting is; /// available, but better extract the value using the template; /// parameter that matches the Value's type.; ///; /// The class represents a llvm::GenericValue with its corresponding; /// clang::QualType. Use-cases are expression evaluation, value printing; /// and parameters for function calls.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:44,Safety,safe,safe,44,"///\brief A type, value pair.; //; /// Type-safe value access and setting. Simple (built-in) casting is; /// available, but better extract the value using the template; /// parameter that matches the Value's type.; ///; /// The class represents a llvm::GenericValue with its corresponding; /// clang::QualType. Use-cases are expression evaluation, value printing; /// and parameters for function calls.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:55,Security,access,access,55,"///\brief A type, value pair.; //; /// Type-safe value access and setting. Simple (built-in) casting is; /// available, but better extract the value using the template; /// parameter that matches the Value's type.; ///; /// The class represents a llvm::GenericValue with its corresponding; /// clang::QualType. Use-cases are expression evaluation, value printing; /// and parameters for function calls.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:75,Usability,Simpl,Simple,75,"///\brief A type, value pair.; //; /// Type-safe value access and setting. Simple (built-in) casting is; /// available, but better extract the value using the template; /// parameter that matches the Value's type.; ///; /// The class represents a llvm::GenericValue with its corresponding; /// clang::QualType. Use-cases are expression evaluation, value printing; /// and parameters for function calls.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:55,Energy Efficiency,reduce,reduce,55,"/// \brief The value's type, stored as opaque void* to reduce; /// dependencies.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:67,Integrability,depend,dependencies,67,"/// \brief The value's type, stored as opaque void* to reduce; /// dependencies.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:11,Energy Efficiency,Allocate,Allocate,11,"/// \brief Allocate storage as needed by the type.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:62,Energy Efficiency,reduce,reduce,62,"/// \brief Assert in case of an unsupported type. Outlined to reduce include; /// dependencies.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:82,Integrability,depend,dependencies,82,"/// \brief Assert in case of an unsupported type. Outlined to reduce include; /// dependencies.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:11,Testability,Assert,Assert,11,"/// \brief Assert in case of an unsupported type. Outlined to reduce include; /// dependencies.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:35,Deployability,release,release,35,"// Invalidate other so it will not release.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:102,Security,access,accessed,102,"/// \brief Construct a valid but uninitialized Value. After this call the; /// value's storage can be accessed; i.e. calls ManagedAllocate() if; /// needed.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:3,Safety,Avoid,Avoid,3,"// Avoid including type_traits.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:90,Security,access,accessing,90,"// FIXME: If the cling::Value is destroyed and it handed out an address that; // might be accessing invalid memory.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:97,Testability,Assert,AssertTypeMismatch,97,"// FIXME: Uncomment and debug the various type mismatches.; //#define ASSERT_TYPE_MISMATCH(name) AssertTypeMismatch(STRINGIFY(name))",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:18,Integrability,interface,interface,18,"///\brief Generic interface to value printing.; ///; /// Can be re-implemented to print type-specific details, e.g. as; ///\code; /// template <typename POSSIBLYDERIVED>; /// std::string printValue(const MyClass* const p, POSSIBLYDERIVED* ac,; /// const Value& V);; ///\endcode",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Value.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h:3,Energy Efficiency,Adapt,Adapted,3,"// Adapted from llvm/Support/Compiler.h",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Visibility.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h:3,Modifiability,Adapt,Adapted,3,"// Adapted from llvm/Support/Compiler.h",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Visibility.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h:3,Energy Efficiency,Adapt,Adapted,3,"// Adapted from https://gcc.gnu.org/wiki/Visibility",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Visibility.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h:3,Modifiability,Adapt,Adapted,3,"// Adapted from https://gcc.gnu.org/wiki/Visibility",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Interpreter/Visibility.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:52,Availability,down,down,52,"///\brief Provides storage for the input and tracks down whether the (, [, {; /// are balanced.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:24,Security,validat,validation,24,"///\brief Brace balance validation could encounter.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:15,Security,validat,validation,15,"///\brief Last validation result from `validate()`.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:39,Security,validat,validate,39,"///\brief Last validation result from `validate()`.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:111,Security,validat,validate,111,"///\brief Checks whether the input contains balanced number of braces; ///; ///\param[in] line - Input line to validate.; ///\returns Information about the outcome of the validation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:171,Security,validat,validation,171,"///\brief Checks whether the input contains balanced number of braces; ///; ///\param[in] line - Input line to validate.; ///\returns Information about the outcome of the validation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:23,Security,validat,validation,23,"///\brief Get the last validation result returned by a `validate()` call,; /// which indicates the current state of the collected input.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:56,Security,validat,validate,56,"///\brief Get the last validation result returned by a `validate()` call,; /// which indicates the current state of the collected input.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:42,Modifiability,extend,extends,42,"///\brief Lex a tok::raw_ident token that extends until the next whitespace; /// character, i.e. ' ' or '\t'.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaLexer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaParser.h:398,Usability,undo,undoCommand,398,"/// Command syntax: MetaCommand := < CommandSymbol >< Command >; /// CommandSymbol := '.' | '//.'; /// Command := LCommand | XCommand | qCommand | UCommand |; /// ICommand | OCommand | RawInputCommand |; /// PrintDebugCommand | DynamicExtensionsCommand |; /// HelpCommand | FileExCommand | FilesCommand |; /// ClassCommand | GCommand | StoreStateCommand |; /// CompareStateCommand | StatsCommand | undoCommand; /// LCommand := 'L' [FilePath]; /// TCommand := 'T' FilePath FilePath; /// >Command := '>' FilePath; /// qCommand := 'q'; /// XCommand := 'x' FilePath[ArgList] | 'X' FilePath[ArgList]; /// UCommand := 'U' FilePath; /// ICommand := 'I' [FilePath]; /// OCommand := 'O'[' ']Constant; /// RawInputCommand := 'rawInput' [Constant]; /// PrintDebugCommand := 'printDebug' [Constant]; /// DebugCommand := 'debug' [Constant]; /// StoreStateCommand := 'storeState' ""Ident""; /// CompareStateCommand := 'compareState' ""Ident""; /// StatsCommand := 'stats' ['ast']; /// traceCommand := 'trace' ['ast'] [""Ident""]; /// undoCommand := 'undo' [Constant]; /// DynamicExtensionsCommand := 'dynamicExtensions' [Constant]; /// HelpCommand := 'help'; /// FileExCommand := 'fileEx'; /// FilesCommand := 'files'; /// ClassCommand := 'class' AnyString | 'Class'; /// GCommand := 'g' [Ident]; /// FilePath := AnyString; /// ArgList := (ExtraArgList) ' ' [ArgList]; /// ExtraArgList := AnyString [, ExtraArgList]; /// AnyString := *^(' ' | '\t'); /// Constant := {0-9}; /// Ident := a-zA-Z{a-zA-Z0-9}; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaParser.h:1014,Usability,undo,undoCommand,1014,"/// Command syntax: MetaCommand := < CommandSymbol >< Command >; /// CommandSymbol := '.' | '//.'; /// Command := LCommand | XCommand | qCommand | UCommand |; /// ICommand | OCommand | RawInputCommand |; /// PrintDebugCommand | DynamicExtensionsCommand |; /// HelpCommand | FileExCommand | FilesCommand |; /// ClassCommand | GCommand | StoreStateCommand |; /// CompareStateCommand | StatsCommand | undoCommand; /// LCommand := 'L' [FilePath]; /// TCommand := 'T' FilePath FilePath; /// >Command := '>' FilePath; /// qCommand := 'q'; /// XCommand := 'x' FilePath[ArgList] | 'X' FilePath[ArgList]; /// UCommand := 'U' FilePath; /// ICommand := 'I' [FilePath]; /// OCommand := 'O'[' ']Constant; /// RawInputCommand := 'rawInput' [Constant]; /// PrintDebugCommand := 'printDebug' [Constant]; /// DebugCommand := 'debug' [Constant]; /// StoreStateCommand := 'storeState' ""Ident""; /// CompareStateCommand := 'compareState' ""Ident""; /// StatsCommand := 'stats' ['ast']; /// traceCommand := 'trace' ['ast'] [""Ident""]; /// undoCommand := 'undo' [Constant]; /// DynamicExtensionsCommand := 'dynamicExtensions' [Constant]; /// HelpCommand := 'help'; /// FileExCommand := 'fileEx'; /// FilesCommand := 'files'; /// ClassCommand := 'class' AnyString | 'Class'; /// GCommand := 'g' [Ident]; /// FilePath := AnyString; /// ArgList := (ExtraArgList) ' ' [ArgList]; /// ExtraArgList := AnyString [, ExtraArgList]; /// AnyString := *^(' ' | '\t'); /// Constant := {0-9}; /// Ident := a-zA-Z{a-zA-Z0-9}; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaParser.h:1030,Usability,undo,undo,1030,"/// Command syntax: MetaCommand := < CommandSymbol >< Command >; /// CommandSymbol := '.' | '//.'; /// Command := LCommand | XCommand | qCommand | UCommand |; /// ICommand | OCommand | RawInputCommand |; /// PrintDebugCommand | DynamicExtensionsCommand |; /// HelpCommand | FileExCommand | FilesCommand |; /// ClassCommand | GCommand | StoreStateCommand |; /// CompareStateCommand | StatsCommand | undoCommand; /// LCommand := 'L' [FilePath]; /// TCommand := 'T' FilePath FilePath; /// >Command := '>' FilePath; /// qCommand := 'q'; /// XCommand := 'x' FilePath[ArgList] | 'X' FilePath[ArgList]; /// UCommand := 'U' FilePath; /// ICommand := 'I' [FilePath]; /// OCommand := 'O'[' ']Constant; /// RawInputCommand := 'rawInput' [Constant]; /// PrintDebugCommand := 'printDebug' [Constant]; /// DebugCommand := 'debug' [Constant]; /// StoreStateCommand := 'storeState' ""Ident""; /// CompareStateCommand := 'compareState' ""Ident""; /// StatsCommand := 'stats' ['ast']; /// traceCommand := 'trace' ['ast'] [""Ident""]; /// undoCommand := 'undo' [Constant]; /// DynamicExtensionsCommand := 'dynamicExtensions' [Constant]; /// HelpCommand := 'help'; /// FileExCommand := 'fileEx'; /// FilesCommand := 'files'; /// ClassCommand := 'class' AnyString | 'Class'; /// GCommand := 'g' [Ident]; /// FilePath := AnyString; /// ArgList := (ExtraArgList) ' ' [ArgList]; /// ExtraArgList := AnyString [, ExtraArgList]; /// AnyString := *^(' ' | '\t'); /// Constant := {0-9}; /// Ident := a-zA-Z{a-zA-Z0-9}; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h:20,Security,validat,validator,20,"///\brief The input validator is used to figure out whether to switch to; /// multiline mode or not. Checks for balanced parenthesis, etc.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h:386,Availability,echo,echoing,386,"///\brief Process the input coming from the prompt and possibly returns; /// result of the execution of the last statement.; /// @param[in] input_line - the user input; /// @param[out] compRes - whether compilation was successful; /// @param[out] result - the cling::Value as result of the; /// execution of the last statement; /// @param[in] disableValuePrinting - whether to suppress echoing of the; /// expression result; ///; ///\returns 0 on success or the indentation of the next input line should; /// have in case of multi input mode.; ///\returns -1 if quit was requiested.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:47,Performance,load,loads,47,"///\brief L command includes the given file or loads the given library. If; /// \c file is empty print the list of library paths.; ///; ///\param[in] file - The file/library to be loaded.; ///\param[out] transaction - Transaction containing the loaded file.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:180,Performance,load,loaded,180,"///\brief L command includes the given file or loads the given library. If; /// \c file is empty print the list of library paths.; ///; ///\param[in] file - The file/library to be loaded.; ///\param[out] transaction - Transaction containing the loaded file.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:245,Performance,load,loaded,245,"///\brief L command includes the given file or loads the given library. If; /// \c file is empty print the list of library paths.; ///; ///\param[in] file - The file/library to be loaded.; ///\param[out] transaction - Transaction containing the loaded file.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:29,Performance,optimiz,optimization,29,"///\brief O command sets the optimization level.; ///; ///\param[in] optLevel - The optimization level to set.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:84,Performance,optimiz,optimization,84,"///\brief O command sets the optimization level.; ///; ///\param[in] optLevel - The optimization level to set.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:39,Performance,optimiz,optimization,39,"///\brief O command prints the current optimization level.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:34,Performance,perform,performed,34,"///\brief Actions that need to be performed on occurance of a comment.; ///; /// That is useful when the comments are meaningful for the interpreter. For; /// example when we run in -verify mode.; ///; ///\param[in] comment - The comment to act on.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:24,Performance,perform,performed,24,"///\brief Actions to be performed on a given file. Loads the given file and; /// calls a function with the name of the file.; ///; /// If the function needs arguments they are specified after the filename in; /// parenthesis.; ///; ///\param[in] file - The filename to load.; ///\param[in] args - The optional list of arguments.; ///\param[out] result - If not NULL, will hold the value of the last; /// expression.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:51,Performance,Load,Loads,51,"///\brief Actions to be performed on a given file. Loads the given file and; /// calls a function with the name of the file.; ///; /// If the function needs arguments they are specified after the filename in; /// parenthesis.; ///; ///\param[in] file - The filename to load.; ///\param[in] args - The optional list of arguments.; ///\param[out] result - If not NULL, will hold the value of the last; /// expression.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:269,Performance,load,load,269,"///\brief Actions to be performed on a given file. Loads the given file and; /// calls a function with the name of the file.; ///; /// If the function needs arguments they are specified after the filename in; /// parenthesis.; ///; ///\param[in] file - The filename to load.; ///\param[in] args - The optional list of arguments.; ///\param[out] result - If not NULL, will hold the value of the last; /// expression.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:24,Performance,perform,performed,24,"///\brief Actions to be performed on quit.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:24,Performance,perform,performed,24,"///\brief Actions to be performed on request to cancel continuation.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:24,Performance,perform,performed,24,"///\brief Actions to be performed on unload command.; ///; ///\param[in] file - The file to unload.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:24,Performance,perform,performed,24,"///\brief Actions to be performed on add include path. It registers new; /// folder where header files can be searched. If \c path is empty print the; /// list of include paths.; ///; ///\param[in] path - The path to add to header search.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:176,Deployability,toggle,toggle,176,"///\brief Changes the input mode to raw input. In that mode we act more like; /// a compiler by bypassing many of cling's features.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:88,Deployability,toggle,toggle,88,"///\brief Generates debug info for the JIT.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:113,Deployability,toggle,toggle,113,"///\brief Prints out the the Debug information of the state changes.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:146,Deployability,toggle,toggle,146,"///\brief Switches on/off the experimental dynamic extensions (dynamic; /// scopes) and late binding.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:30,Integrability,message,message,30,"///\brief Prints out the help message with the description of the meta; /// commands.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:46,Modifiability,variab,variables,46,"///\brief Prints out information about global variables.; ///; ///\param[in] varName - The name of the global variable; // if empty prints them all.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:110,Modifiability,variab,variable,110,"///\brief Prints out information about global variables.; ///; ///\param[in] varName - The name of the global variable; // if empty prints them all.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/UserInterface/UserInterface.h:33,Testability,log,logo,33,"///\brief Prints cling's startup logo; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/UserInterface/UserInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/UserInterface/UserInterface.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/UserInterface/UserInterface.h:118,Testability,log,logo,118,"///\brief Drives the interactive prompt talking to the user.; /// @param[in] nologo - whether to show cling's welcome logo or not; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/UserInterface/UserInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/UserInterface/UserInterface.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:68,Integrability,wrap,wrapper,68,"///\brief Checks whether the declaration is a interpreter-generated wrapper; /// function.; ///; ///\param[in] ND - The decl being checked. If null returns false.; ///; ///\returns true if the decl is a interpreter-generated wrapper function.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/AST.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:225,Integrability,wrap,wrapper,225,"///\brief Checks whether the declaration is a interpreter-generated wrapper; /// function.; ///; ///\param[in] ND - The decl being checked. If null returns false.; ///; ///\returns true if the decl is a interpreter-generated wrapper function.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/AST.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:93,Modifiability,variab,variable,93,"///\brief Retrieves the last expression of a function body. If it was a; /// DeclStmt with a variable declaration, creates DeclRefExpr and adds it to; /// the function body.; ///; /// Useful for value printing (deciding where to attach the value printer); /// and value evaluation (deciding that is the type of a value); ///; ///\param[in] FD - The declaration being analyzed.; ///\param[in] FoundAt - The position of the expression to be returned; /// in function's body.; ///\param[in] omitDeclStmts - Whether or not to synthesize DeclRefExpr if; /// there is DeclStmt.; ///\param[in] S - The semantic analysis object used for; /// synthesis of the DeclRefExpr.; ///\returns 0 if the operation wasn't successful.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/AST.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:53,Modifiability,config,configure,53,"///\brief Class containing the information on how to configure the; /// transformation; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/AST.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:98,Usability,simpl,simple,98,"///\brief Class containing static utility functions looking up names. Very; /// useful for quick, simple lookups.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/AST.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:218,Safety,avoid,avoids,218,"///\brief Quick lookup for a single namespace declaration in a given; /// declaration context.; ///; ///\param[in] S - Semantic Analysis object doing the lookup.; ///\param[in] Name - The name we are looking up. The & avoids inclusion of; /// DeclarationName.h (faster at runtime).; ///\param[in] Within - The context within the lookup is done. If 0 the; /// TranslationUnitDecl is used.; ///\returns the found result if single, -1 if multiple or 0 if not found.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/AST.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:82,Modifiability,Inherit,Inherits,82,"///\brief Temporarily override the DiagnosticConsumer in a DiagnosticsEngine; /// Inherits from ReplaceDiagnostics so that forwarding can be done easily; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Diagnostics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:27,Availability,error,errors,27,"///\brief Store all of the errors sent to a DiagnosticsEngine; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Diagnostics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:226,Availability,error,error,226,"///\brief Store all further diagnostics; ///; ///\param[in] Diags - The DiagnosticsEngine instance to override; ///\param[in] Own - Whether the DiagnosticsEngine owns this instance; ///\param[in] Report - Report the collected error on destruction; ///\param[in] Reset - Soft reset the DiagnosticsEngine on destruction; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Diagnostics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:10,Usability,Clear,Clear,10,"///\brief Clear the stored diagnostics; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Diagnostics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:14,Integrability,interface,interface,14,"///\brief STL interface to the stored diagnostics; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Diagnostics.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/OrderedMap.h:15,Integrability,wrap,wrapper,15,"///\brief Thin wrapper class for tracking the order of insertion into a; /// std::unordered_map.; ///; /// Only supports 'emplace' and '[Key]' for insertion of values, and adds an; /// additional parameter to 'erase' so that a mapped value can be moved into; /// local storage before erasing the iterator occurs.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/OrderedMap.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/OrderedMap.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:49,Integrability,wrap,wrapper,49,"///\brief The 'stdout' stream. llvm::raw_ostream wrapper of std::cout; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Output.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:49,Integrability,wrap,wrapper,49,"///\brief The 'stderr' stream. llvm::raw_ostream wrapper of std::cerr; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Output.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:206,Availability,error,errors,206,"///\brief The 'logging' stream. Currently returns cling::errs().; /// This matches clang & gcc prinitng to stderr for certain information.; /// If the host process needs to keep stderr for itself or actual errors,; /// then the function can be edited to return a separate stream.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Output.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:15,Testability,log,logging,15,"///\brief The 'logging' stream. Currently returns cling::errs().; /// This matches clang & gcc prinitng to stderr for certain information.; /// If the host process needs to keep stderr for itself or actual errors,; /// then the function can be edited to return a separate stream.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Output.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:115,Energy Efficiency,allocate,allocated,115,"///\brief Wrappers around buffered llvm::raw_ostreams.; /// outstring<N> with N > 0 are the fastest, using a stack allocated buffer.; /// outstring<0> outputs directly into a std:string.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Output.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:10,Integrability,Wrap,Wrappers,10,"///\brief Wrappers around buffered llvm::raw_ostreams.; /// outstring<N> with N > 0 are the fastest, using a stack allocated buffer.; /// outstring<0> outputs directly into a std:string.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Output.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/ParserStateRAII.h:200,Usability,clear,clear,200,"///\brief Cleanup Parser state after a failed lookup.; ///; /// After a failed lookup we need to discard the remaining unparsed input,; /// restore the original state of the incremental parsing flag, clear any; /// pending diagnostics, restore the suppress diagnostics flag, and restore; /// the spell checking language options.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/ParserStateRAII.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/ParserStateRAII.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h:64,Modifiability,variab,variables,64,"///\brief Platform specific delimiter for splitting environment variables.; /// ':' on Unix, and ';' on Windows",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Paths.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h:58,Modifiability,variab,variable,58,"///\brief Replace all $TOKENS in a string with environent variable values.; ///; /// \param [in,out] Str - String with tokens to replace (in place); /// \param [in] Path - Check if the result is a valid filesystem path.; ///; /// \returns When Path is true, return whether Str was expanded to an; /// existing file-system object.; /// Return value has no meaning when Path is false.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Paths.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h:516,Testability,log,logging,516,"///\brief Look for given file that can be reachable from current working; /// directory or any user supplied include paths in Args. This is useful; /// to look for a file (precompiled header) before a Preprocessor instance; /// has been created.; ///; /// \param [in] Args - The argv vector to look for '-I' & '/I' flags; /// \param [in,out] File - File to look for, may mutate to an absolute path; /// \param [in] FM - File manger to resolve current dir with (can be null); /// \param [in] FileType - File type for logging or nullptr for no logging; ///; /// \return true if File is reachable and is a regular file; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Paths.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h:542,Testability,log,logging,542,"///\brief Look for given file that can be reachable from current working; /// directory or any user supplied include paths in Args. This is useful; /// to look for a file (precompiled header) before a Preprocessor instance; /// has been created.; ///; /// \param [in] Args - The argv vector to look for '-I' & '/I' flags; /// \param [in,out] File - File to look for, may mutate to an absolute path; /// \param [in] FM - File manger to resolve current dir with (can be null); /// \param [in] FileType - File type for logging or nullptr for no logging; ///; /// \return true if File is reachable and is a regular file; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Paths.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:185,Availability,error,errors,185,"///\brief Open a handle to a shared library. On Unix the lib is opened with; /// RTLD_LAZY|RTLD_GLOBAL flags.; ///; /// \param [in] Path - Library to open; /// \param [out] Err - Write errors to this string when given; ///; /// \returns the library handle; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:47,Performance,load,loaded,47,"///\brief Look for given symbol in all modules loaded by the current process; ///; /// \returns The adress of the symbol or null if not found; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:151,Availability,error,errors,151,"///\brief Close a handle to a shared library.; ///; /// \param [in] Lib - Handle to library from previous call to DLOpen; /// \param [out] Err - Write errors to this string when given; ///; /// \returns the library handle; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:17,Availability,error,error,17,"///\brief Get an error message from the last Windows API; ///; /// \param [in] Prefix - Prefix the message with this (ex. API call name); ///; /// \returns true if ::GetLastError returned an error code; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:191,Availability,error,error,191,"///\brief Get an error message from the last Windows API; ///; /// \param [in] Prefix - Prefix the message with this (ex. API call name); ///; /// \returns true if ::GetLastError returned an error code; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:23,Integrability,message,message,23,"///\brief Get an error message from the last Windows API; ///; /// \param [in] Prefix - Prefix the message with this (ex. API call name); ///; /// \returns true if ::GetLastError returned an error code; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:99,Integrability,message,message,99,"///\brief Get an error message from the last Windows API; ///; /// \param [in] Prefix - Prefix the message with this (ex. API call name); ///; /// \returns true if ::GetLastError returned an error code; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:39,Availability,error,error,39,"///\brief Reports the last Windows API error (currently to cling::errs); ///; /// \param [in] Prefix - Prefix the message with this; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:114,Integrability,message,message,114,"///\brief Reports the last Windows API error (currently to cling::errs); ///; /// \param [in] Prefix - Prefix the message with this; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:27,Deployability,install,installed,27,"///\brief Get a path to an installed VisualStudio directory matching:; /// 1. Version that cling was compiled; /// 2. Version that shell is initialized to; /// 3. Highest installed version; ///; /// \param [out] Path - Path to VisualStudio; /// \param [out] WindSDK - Store the path to the Windows SDK here; /// \param [in/out] UniversalSDK - Universal SDK version to match, or empty to; /// match the highest version. On ouput the path to the Universal SDK.; /// \param [in] Verbose - Log progress; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:171,Deployability,install,installed,171,"///\brief Get a path to an installed VisualStudio directory matching:; /// 1. Version that cling was compiled; /// 2. Version that shell is initialized to; /// 3. Highest installed version; ///; /// \param [out] Path - Path to VisualStudio; /// \param [out] WindSDK - Store the path to the Windows SDK here; /// \param [in/out] UniversalSDK - Universal SDK version to match, or empty to; /// match the highest version. On ouput the path to the Universal SDK.; /// \param [in] Verbose - Log progress; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:486,Testability,Log,Log,486,"///\brief Get a path to an installed VisualStudio directory matching:; /// 1. Version that cling was compiled; /// 2. Version that shell is initialized to; /// 3. Highest installed version; ///; /// \param [out] Path - Path to VisualStudio; /// \param [out] WindSDK - Store the path to the Windows SDK here; /// \param [in/out] UniversalSDK - Universal SDK version to match, or empty to; /// match the highest version. On ouput the path to the Universal SDK.; /// \param [in] Verbose - Log progress; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/Platform.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/SourceNormalization.h:538,Integrability,wrap,wrapped,538,"///\brief Determine whether the source needs to be moved into a function.; ///; /// If so, move possible includes directives out of the future body of the; /// function and return the position where the function signature should be; /// inserted.; ///; /// \param source - The source code to analyze; out: the source with; /// re-arranged includes.; /// \param LangOpts - LangOptions to use for lexing.; /// \return The position where the function signature and '{' should be; /// inserted; std::string::npos if this source should not be wrapped.",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/SourceNormalization.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/SourceNormalization.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h:10,Security,Validat,Validate,10,"///\brief Validate a seried of bytes as properly encoded UTF-8; ///; /// \param [in] Str - Pointer to the first byte to validate; /// \param [in] N - Number of bytes to validate; /// \param [in] Loc: std::locale to test if Str is also printable; /// \param [out] IsPrint - Whether all of the characters are printable; ///; /// \return true if Str to Str+N is a valid UTF-8 run.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/UTF8.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h:120,Security,validat,validate,120,"///\brief Validate a seried of bytes as properly encoded UTF-8; ///; /// \param [in] Str - Pointer to the first byte to validate; /// \param [in] N - Number of bytes to validate; /// \param [in] Loc: std::locale to test if Str is also printable; /// \param [out] IsPrint - Whether all of the characters are printable; ///; /// \return true if Str to Str+N is a valid UTF-8 run.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/UTF8.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h:169,Security,validat,validate,169,"///\brief Validate a seried of bytes as properly encoded UTF-8; ///; /// \param [in] Str - Pointer to the first byte to validate; /// \param [in] N - Number of bytes to validate; /// \param [in] Loc: std::locale to test if Str is also printable; /// \param [out] IsPrint - Whether all of the characters are printable; ///; /// \return true if Str to Str+N is a valid UTF-8 run.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/UTF8.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h:215,Testability,test,test,215,"///\brief Validate a seried of bytes as properly encoded UTF-8; ///; /// \param [in] Str - Pointer to the first byte to validate; /// \param [in] N - Number of bytes to validate; /// \param [in] Loc: std::locale to test if Str is also printable; /// \param [out] IsPrint - Whether all of the characters are printable; ///; /// \return true if Str to Str+N is a valid UTF-8 run.; ///",MatchSource.CODE_COMMENT,interpreter/cling/include/cling/Utils/UTF8.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/UTF8.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:10,Modifiability,Inherit,Inherit,10,"///\brief Inherit from that class if you want to change/analyse declarations; /// from the last input before code is generated.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ASTTransformer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:307,Availability,error,error,307,"///\brief Transforms the declaration, forward to Transform(D).; ///; ///\param[in] D - The declaration to be transformed.; ///\param[in] T - The declaration's transaction.; ///\returns The transformation result which will be emitted. Return nullptr; /// if this declaration should not be emitted. Returning error will abort; /// the transaction.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ASTTransformer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:318,Safety,abort,abort,318,"///\brief Transforms the declaration, forward to Transform(D).; ///; ///\param[in] D - The declaration to be transformed.; ///\param[in] T - The declaration's transaction.; ///\returns The transformation result which will be emitted. Return nullptr; /// if this declaration should not be emitted. Returning error will abort; /// the transaction.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ASTTransformer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:306,Availability,error,error,306,"///\brief Transforms the declaration.; ///; /// Subclasses override it in order to provide the needed behavior.; ///; ///\param[in] D - The declaration to be transformed.; ///\returns The transformation result which will be emitted. Return nullptr; /// if this declaration should not be emitted. Returning error will abort; /// the transaction.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ASTTransformer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:317,Safety,abort,abort,317,"///\brief Transforms the declaration.; ///; /// Subclasses override it in order to provide the needed behavior.; ///; ///\param[in] D - The declaration to be transformed.; ///\returns The transformation result which will be emitted. Return nullptr; /// if this declaration should not be emitted. Returning error will abort; /// the transaction.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ASTTransformer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp:179,Deployability,update,updated,179,"///\brief Flag determining the visitor's actions. If true, register autoload; /// entries, i.e. remember the connection between filename and the declaration; /// that needs to be updated on #include of the filename.; /// If false, react on an #include by adjusting the forward decls, e.g. by; /// removing the default template arguments (that will now be provided by; /// the definition read from the include).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp:2,Performance,Cache,CacheFail,2,/*CacheFail*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp:248,Availability,avail,available,248,"// If the top level header is expected to be findable at run-time,; // the direct header might not because the include path might be; // different enough and only the top-header is guaranteed to be seen; // by the user as an interface header to be available on the; // run-time include path.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp:225,Integrability,interface,interface,225,"// If the top level header is expected to be findable at run-time,; // the direct header might not because the include path might be; // different enough and only the top-header is guaranteed to be seen; // by the user as an interface header to be available on the; // run-time include path.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp:2,Security,Hash,HashLoc,2,/*HashLoc*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp:6,Safety,abort,abort,6,"// we abort on the first found candidate.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp:24,Safety,abort,abort,24,"// returning false will abort the in-depth traversal.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp:107,Usability,simpl,simply,107,"// getBody() might return nullptr even though hasBody() is true for; // late template parsed functions. We simply don't do auto auto on; // those.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:184,Safety,avoid,avoid,184,"// LLVM had a bug where constructors with the same priority would not be; // stably sorted. This has been fixed upstream by; // https://github.com/llvm/llvm-project/pull/95532, but to avoid relying; // on a backport this pass works around the issue: The idea is that we; // lower the default priority of concerned constructors to make them sort; // correctly.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:99,Availability,error,error,99,"// We want to keep this GlobalValue around, but have to tell the JIT; // linker that it should not error on duplicate symbols.; // FIXME: Ideally the frontend would never emit duplicate symbols and; // we could just use the old version of saying:; // GV.setLinkage(llvm::GlobalValue::ExternalLinkage);",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:87,Performance,optimiz,optimization,87,"// no change.; // GV is a declaration with no definition. Make sure to prevent any; // optimization that tries to take advantage of the actual definition; // being ""local"" because we have no influence on the memory layout of; // data sections and how ""close"" they are to the code.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:227,Availability,error,errors,227,"// Currently, if Cling sees the ""key function"" of a virtual class, it; // emits typeinfo and vtable variables in every transaction llvm::Module; // that reference them. Turn them into weak linkage to avoid duplicate; // symbol errors from the JIT linker.; // FIXME: This is a hack, we should teach the frontend to emit these; // only once, or mark all duplicates as available_externally (if that; // improves performance due to optimizations).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:100,Modifiability,variab,variables,100,"// Currently, if Cling sees the ""key function"" of a virtual class, it; // emits typeinfo and vtable variables in every transaction llvm::Module; // that reference them. Turn them into weak linkage to avoid duplicate; // symbol errors from the JIT linker.; // FIXME: This is a hack, we should teach the frontend to emit these; // only once, or mark all duplicates as available_externally (if that; // improves performance due to optimizations).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:409,Performance,perform,performance,409,"// Currently, if Cling sees the ""key function"" of a virtual class, it; // emits typeinfo and vtable variables in every transaction llvm::Module; // that reference them. Turn them into weak linkage to avoid duplicate; // symbol errors from the JIT linker.; // FIXME: This is a hack, we should teach the frontend to emit these; // only once, or mark all duplicates as available_externally (if that; // improves performance due to optimizations).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:428,Performance,optimiz,optimizations,428,"// Currently, if Cling sees the ""key function"" of a virtual class, it; // emits typeinfo and vtable variables in every transaction llvm::Module; // that reference them. Turn them into weak linkage to avoid duplicate; // symbol errors from the JIT linker.; // FIXME: This is a hack, we should teach the frontend to emit these; // only once, or mark all duplicates as available_externally (if that; // improves performance due to optimizations).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:200,Safety,avoid,avoid,200,"// Currently, if Cling sees the ""key function"" of a virtual class, it; // emits typeinfo and vtable variables in every transaction llvm::Module; // that reference them. Turn them into weak linkage to avoid duplicate; // symbol errors from the JIT linker.; // FIXME: This is a hack, we should teach the frontend to emit these; // only once, or mark all duplicates as available_externally (if that; // improves performance due to optimizations).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:78,Modifiability,variab,variables,78,"// Add a suffix to the CUDA module ctor/dtor, CUDA specific functions and; // variables to generate a unique name. This is necessary for lazy; // compilation. Without suffix, cling cannot distinguish ctor/dtor, register; // function and and ptx code string of subsequent modules.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:22,Modifiability,variab,variables,22,"// make CUDA specific variables unique",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:97,Energy Efficiency,reduce,reduces,97,"// Replace definitions of weak symbols for which symbols already exist by; // declarations. This reduces the amount of emitted symbols.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:43,Performance,load,loading,43,"// ...or in shared libraries (without auto-loading).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:54,Modifiability,variab,variables,54,"// Heuristically, Windows cannot handle cross-library variables; they; // must be library-local.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:34,Deployability,upgrade,upgrade,34,"// TODO: Remove this pass once we upgrade past LLVM 19 that includes the fix.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:28,Performance,optimiz,optimization,28,"// Handle disabling of LLVM optimization, where we want to preserve the; // internal module before any optimization.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:103,Performance,optimiz,optimization,103,"// Handle disabling of LLVM optimization, where we want to preserve the; // internal module before any optimization.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:61,Energy Efficiency,efficient,efficient,61,"// At O0 and O1 we only run the always inliner which is more efficient. At; // higher optimization levels we run the normal inliner.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:86,Performance,optimiz,optimization,86,"// At O0 and O1 we only run the always inliner which is more efficient. At; // higher optimization levels we run the normal inliner.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:24,Modifiability,plugin,plugins,24,"// Attempt to load pass plugins and register their callbacks with PB.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:14,Performance,load,load,14,"// Attempt to load pass plugins and register their callbacks with PB.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:24,Deployability,pipeline,pipeline,24,"// Use the default pass pipeline. We also have to map our optimization; // levels into one of the distinct levels used to configure the pipeline.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:136,Deployability,pipeline,pipeline,136,"// Use the default pass pipeline. We also have to map our optimization; // levels into one of the distinct levels used to configure the pipeline.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:122,Modifiability,config,configure,122,"// Use the default pass pipeline. We also have to map our optimization; // levels into one of the distinct levels used to configure the pipeline.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:58,Performance,optimiz,optimization,58,"// Use the default pass pipeline. We also have to map our optimization; // levels into one of the distinct levels used to configure the pipeline.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:39,Usability,Simpl,SimpleCompiler,39,"// TM's OptLevel is used to build orc::SimpleCompiler passes for every Module.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/BackendPasses.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CheckEmptyTransactionTransformer.cpp:20,Integrability,wrap,wrapper,20,"// This is an empty wrapper function. Get rid of it.; // We know that it didn't end up in the EE by design.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CheckEmptyTransactionTransformer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CheckEmptyTransactionTransformer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:140,Testability,test,test,140,"// The value of __cplusplus in GCC < 5.0 (e.g. 4.9.3) when; // either -std=c++1y or -std=c++14 is specified is 201300L, which fails; // the test for C++14 or more (201402L) as previously specified.; // I would claim that the check should be relaxed to:",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:30,Availability,failure,failure,30,"// Return the query in Buf on failure",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:19,Security,access,access,19,"// When built with access to the proper Windows APIs, try to actually find; // the correct include paths first. Init for UnivSDK.empty check below.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:154,Testability,test,test,154,"// Windows headers use '__declspec(dllexport) __cdecl' for most funcs; // causing a lot of warnings for different redeclarations (eg. coming from; // the test suite).; // Do not warn about such cases.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:23,Deployability,configurat,configuration,23,"// Technically a valid configuration that just wants to use libClangs; // internal header detection, but for now give a hint about why.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:23,Modifiability,config,configuration,23,"// Technically a valid configuration that just wants to use libClangs; // internal header detection, but for now give a hint about why.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:90,Safety,detect,detection,90,"// Technically a valid configuration that just wants to use libClangs; // internal header detection, but for now give a hint about why.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:119,Testability,log,logic,119,"// FIXME: Handle cases, where the cling is part of a library/framework.; // There we can't rely on the find executable logic.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:117,Availability,error,errors,117,"// FIXME: This requires bufferoverflowu.lib, but adding:; // #pragma comment(lib, ""bufferoverflowu.lib"") still gives errors!; // Opts.setStackProtector(clang::LangOptions::SSPStrong);",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:7,Testability,test,test,7,"// See test/CodeUnloading/PCH/VTables.cpp which implicitly compares clang; // to cling lang options. They should be the same, we should not have to; // give extra lang options to their invocations on any platform.; // Except -fexceptions -fcxx-exceptions.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:517,Availability,error,error,517,"// clang currently supports native __float128 only on few targets, and; // this target does not have it. The most visible consequence of this is; // a specialization; // __is_floating_point_helper<__float128>; // in include/c++/6.3.0/type_traits:344 that clang then rejects. The; // specialization is protected by !if _GLIBCXX_USE_FLOAT128 (which is; // unconditionally set in c++config.h) and #if !__STRICT_ANSI__. Tweak; // the latter by disabling GNUMode.; // the nvptx backend doesn't support 128 bit float; // a error message is not necessary",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:523,Integrability,message,message,523,"// clang currently supports native __float128 only on few targets, and; // this target does not have it. The most visible consequence of this is; // a specialization; // __is_floating_point_helper<__float128>; // in include/c++/6.3.0/type_traits:344 that clang then rejects. The; // specialization is protected by !if _GLIBCXX_USE_FLOAT128 (which is; // unconditionally set in c++config.h) and #if !__STRICT_ANSI__. Tweak; // the latter by disabling GNUMode.; // the nvptx backend doesn't support 128 bit float; // a error message is not necessary",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:380,Modifiability,config,config,380,"// clang currently supports native __float128 only on few targets, and; // this target does not have it. The most visible consequence of this is; // a specialization; // __is_floating_point_helper<__float128>; // in include/c++/6.3.0/type_traits:344 that clang then rejects. The; // specialization is protected by !if _GLIBCXX_USE_FLOAT128 (which is; // unconditionally set in c++config.h) and #if !__STRICT_ANSI__. Tweak; // the latter by disabling GNUMode.; // the nvptx backend doesn't support 128 bit float; // a error message is not necessary",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:102,Availability,error,error,102,"/// \brief Retrieves the clang CC1 specific flags out of the compilation's; /// jobs. Returns NULL on error.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:40,Modifiability,variab,variable,40,"/// \brief Splits the given environment variable by the path separator.; /// Can be used to extract the paths from LD_LIBRARY_PATH.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:17,Testability,assert,assert,17,"// We can't use ""assert.h"" because it is defined in the resource dir, too.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Performance,Load,Load,3,"// Load virtual modulemap overlay file - we set up an OverlayFileSystem; // when calling createFileManager.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:180,Performance,load,load,180,"// Register all modulemaps necessary for cling to run. If we have specified; // -fno-implicit-module-maps then we have to add them explicitly to the list; // of modulemap files to load.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:64,Performance,load,loaded,64,"// Prepend the modulemap files we attached so that they will be loaded.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:23,Availability,error,error,23,"// prevent compilation error G47C585C4: STL1000: Unexpected compiler; // version, expected Clang 6 or newer.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:7,Deployability,configurat,configuration,7,"// Add configuration paths to interpreter's include files.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:7,Modifiability,config,configuration,7,"// Add configuration paths to interpreter's include files.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:15,Deployability,install,installed,15,"// LLVM is not installed. Try resolving clang from its usual location.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Safety,Sanity check,Sanity check,3,"// Sanity check that clang delivered the language standard requested",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:43,Integrability,rout,routines,43,"// Disable outline-atomics on AArch64; the routines __aarch64_* are defined; // in the static library libgcc.a and not necessarily included in libCling; // or otherwise present in the process, so the interpreter has a hard time; // finding them.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Modifiability,Variab,Variables,3,"// Variables for storing the memory of the C-string arguments.; // FIXME: We shouldn't use C-strings in the first place, but just use; // std::string for clang arguments.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:15,Performance,cache,cache,15,"// If we got a cache path, then we are supposed to place any modules; // we have to build in this directory.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:80,Performance,cache,cache,80,"// Disable the module hash. This gives us a flat file layout in the; // modules cache directory. In clang this is used to prevent modules from; // different compiler invocations to not collide, but we only have one; // compiler invocation in cling, so we don't need this.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:22,Security,hash,hash,22,"// Disable the module hash. This gives us a flat file layout in the; // modules cache directory. In clang this is used to prevent modules from; // different compiler invocations to not collide, but we only have one; // compiler invocation in cling, so we don't need this.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:20,Availability,error,error,20,"// FIXME: We get an error ""'cling/module.modulemap' from the precompiled; // header has been overridden"". This comes from a bug that rootcling; // introduces by adding a lot of garbage in the PCH/PCM files because it; // essentially serializes its current state of the AST. That usually; // includes a few memory buffers which override their own contents.; // We know how to remove this: just implement a callback in clang; // which calls back the interpreter when a module file is built. This is; // a lot of work as it needs fixing rootcling. See RE-0003.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:50,Availability,reliab,reliable,50,"// Keep frame pointer to make JIT stack unwinding reliable for profiling",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:11,Performance,optimiz,optimizations,11,"// Disable optimizations and keep frame pointer when debugging, overriding; // other optimization options that might be in argv",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:85,Performance,optimiz,optimization,85,"// Disable optimizations and keep frame pointer when debugging, overriding; // other optimization options that might be in argv",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:28,Integrability,message,messages,28,"// add prefix to diagnostic messages if second compiler instance is existing; // e.g. in CUDA mode",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:21,Availability,error,error,21,"// We appreciate the error message about an unknown flag (or do we? if not; // we should switch to a different DiagEngine for parsing the flags).; // But in general we'll happily go on.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:27,Integrability,message,message,27,"// We appreciate the error message about an unknown flag (or do we? if not; // we should switch to a different DiagEngine for parsing the flags).; // But in general we'll happily go on.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:27,Availability,error,error,27,"// Disable line numbers in error messages and warnings, they don't add much; // to the output and are rather confusing.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:33,Integrability,message,messages,33,"// Disable line numbers in error messages and warnings, they don't add much; // to the output and are rather confusing.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Modifiability,Config,Configure,3,"// Configure our handling of diagnostics.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Performance,Load,Load,3,"// Load target options etc from PCH.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:2,Security,Validat,ValidateDiagnosticOptions,2,/*ValidateDiagnosticOptions=*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:24,Availability,error,error,24,"// If this was the only error, then don't let it stop anything",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Usability,Clear,Clear,3,"// Clear the include so no one else uses it.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:121,Performance,cache,cache,121,"// Build the virtual file, Give it a name that's likely not to ever; // be #included (so we won't get a clash in clang's cache).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:160,Deployability,update,update,160,"// With modules, we now start adding prebuilt module paths to the CI.; // Modules from those paths are treated like they are never out of date; // and we don't update them on demand.; // This mostly helps ROOT where we can't just recompile any out of date; // modules because we would miss the annotations that rootcling creates.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:92,Integrability,depend,dependency,92,"// Push the current module to the build stack so that clang knows when; // we have a cyclic dependency.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:145,Performance,optimiz,optimize,145,"// Enable dynamic opt level switching.; // Set up inlining, even if we switch to O0 later: some transactions' code; // might pass `#pragma cling optimize` levels that require it. This is; // adjusted per transaction in IncrementalParser::codeGenTransaction().",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:26,Deployability,update,update,26,"// ### FIXME:; // Want to update LLVM to 3.9 realease and better testing first, but; // ApplyHeaderSearchOptions shouldn't even be called here:; // 1. It's already been called via CI->createPreprocessor(TU_Complete); // 2. It could corrupt clang's directory cache; // HeaderSearchOptions.::AddSearchPath is a better alternative",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:258,Performance,cache,cache,258,"// ### FIXME:; // Want to update LLVM to 3.9 realease and better testing first, but; // ApplyHeaderSearchOptions shouldn't even be called here:; // 1. It's already been called via CI->createPreprocessor(TU_Complete); // 2. It could corrupt clang's directory cache; // HeaderSearchOptions.::AddSearchPath is a better alternative",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:65,Testability,test,testing,65,"// ### FIXME:; // Want to update LLVM to 3.9 realease and better testing first, but; // ApplyHeaderSearchOptions shouldn't even be called here:; // 1. It's already been called via CI->createPreprocessor(TU_Complete); // 2. It could corrupt clang's directory cache; // HeaderSearchOptions.::AddSearchPath is a better alternative",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/CIFactory.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:59,Performance,cache,cache,59,"// FileInfos are stored as a mapping, and invalidating the cache; // can change iteration order.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:7,Availability,error,error,7,"// Our error recovery purges the cache of the FileEntry, but keeps; // the FileEntry's pointer so that if it was used by smb (like the; // SourceManager) it wouldn't be dangling. In that case we shouldn't; // print the FileName, because semantically it is not there.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:13,Availability,recover,recovery,13,"// Our error recovery purges the cache of the FileEntry, but keeps; // the FileEntry's pointer so that if it was used by smb (like the; // SourceManager) it wouldn't be dangling. In that case we shouldn't; // print the FileName, because semantically it is not there.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:33,Performance,cache,cache,33,"// Our error recovery purges the cache of the FileEntry, but keeps; // the FileEntry's pointer so that if it was used by smb (like the; // SourceManager) it wouldn't be dangling. In that case we shouldn't; // print the FileName, because semantically it is not there.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:13,Safety,recover,recovery,13,"// Our error recovery purges the cache of the FileEntry, but keeps; // the FileEntry's pointer so that if it was used by smb (like the; // SourceManager) it wouldn't be dangling. In that case we shouldn't; // print the FileName, because semantically it is not there.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:212,Security,Access,Accessor,212,"// There is content - a memory buffer or a file.; // We know it's a file because we started off the FileEntry.; // FIXME: LLVM will completely migrate to FileEntryRef.; // We added `isOpen()` in our commit:; // `Accessor to ""is file opened""; this is crucial info for us.`; // Move this logic to FileEntryRef or have a workaround.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:286,Testability,log,logic,286,"// There is content - a memory buffer or a file.; // We know it's a file because we started off the FileEntry.; // FIXME: LLVM will completely migrate to FileEntryRef.; // We added `isOpen()` in our commit:; // `Accessor to ""is file opened""; this is crucial info for us.`; // Move this logic to FileEntryRef or have a workaround.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:82,Energy Efficiency,Allocate,Allocated,82,"// TODO: For future when we relpace the bump allocation with slab.; //; //Out << ""Allocated memory: "" << C.getAllocatedMemory();; //Out << ""Side table allocated memory: "" << C.getSideTableAllocatedMemory();",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp:151,Energy Efficiency,allocate,allocated,151,"// TODO: For future when we relpace the bump allocation with slab.; //; //Out << ""Allocated memory: "" << C.getAllocatedMemory();; //Out << ""Side table allocated memory: "" << C.getSideTableAllocatedMemory();",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClangInternalState.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClangInternalState.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:44,Modifiability,variab,variables,44,"// Put all commands that expand environment variables above this",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:14,Performance,load,load,14,"// No need to load libraries when not executing anything.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:81,Safety,safe,safe,81,"// After we have saved the token reset the current one to something; // which is safe (semi colon usually means empty decl)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:114,Availability,down,down,114,"// We can't PushDeclContext, because we go up and the routine that; // pops the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:54,Integrability,rout,routine,54,"// We can't PushDeclContext, because we go up and the routine that; // pops the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:198,Integrability,wrap,wrapper,198,"// We can't PushDeclContext, because we go up and the routine that; // pops the DeclContext assumes that we drill down always.; // We have to be on the global context. At that point we are in a; // wrapper function so the parent context must be the global.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:2,Performance,Cache,CacheFailures,2,/*CacheFailures*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp:17,Performance,load,load,17,"// #pragma cling(load, ""A"")",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ClingPragmas.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ClingPragmas.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:156,Performance,load,loaded,156,"// This function is called for all ""deserialized"" decls, where the; // ""deserialized"" decl either really comes from an AST file or from; // a header that's loaded to import the AST for a library with a dictionary; // (the non-PCM case).; //; // Functions that are inlined must be sent to CodeGen - they will not have a; // symbol in the library.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:83,Security,expose,expose,83,"// If the decl must be emitted then it will be in the library.; // If not, we must expose it to CodeGen now because it might; // not be in the library. Does this correspond to a weak symbol; // by definition?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:124,Modifiability,variab,variables,124,"// Don't codegen statics coming in from a module; they are already part of; // the library.; // We do need to expose static variables from template instantiations.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:110,Security,expose,expose,110,"// Don't codegen statics coming in from a module; they are already part of; // the library.; // We do need to expose static variables from template instantiations.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:109,Safety,abort,aborts,109,"/// \brief Asserts that the given transaction is not null, otherwise prints a; /// stack trace to stderr and aborts execution.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:11,Testability,Assert,Asserts,11,"/// \brief Asserts that the given transaction is not null, otherwise prints a; /// stack trace to stderr and aborts execution.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:65,Integrability,interface,interface,65,"///\brief Serves as DeclCollector's connector to the PPCallbacks interface.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:20,Safety,safe,safe,20,"// We are sure it's safe to pipe it through the transformers; // Consume late transformers init",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:222,Performance,load,loading,222,"// FIXME: The special namespace treatment (not sending itself to; // CodeGen, but only its content - if the contained decl should be; // emitted) works around issue with the static initialization when; // having a PCH and loading a library. We don't want to generate; // code for the static that will come through the library.; //; // This will be fixed with the clang::Modules. Make sure we remember.; // assert(!getCI()->getLangOpts().Modules && ""Please revisit!"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:406,Testability,assert,assert,406,"// FIXME: The special namespace treatment (not sending itself to; // CodeGen, but only its content - if the contained decl should be; // emitted) works around issue with the static initialization when; // having a PCH and loading a library. We don't want to generate; // code for the static that will come through the library.; //; // This will be fixed with the clang::Modules. Make sure we remember.; // assert(!getCI()->getLangOpts().Modules && ""Please revisit!"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:378,Performance,load,loadModule,378,"// FIXME: This is a temporary fix for the ROOT module preloading mechanism.; // When we preload modules we would like to enable a module as if we called; // clang::Sema::ActOnModuleImport (which does not call HandleTopLevelDecl).; // However, we need a valid source locations as modules are very sensitive; // to them. In order to have a valid source location,; // Interpreter::loadModule calls '#pragma clang module import ""A""', which; // calls HandleTopLevelDecl which causes CodeGen to run the module; // initializers eagerly.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.h:57,Integrability,wrap,wrapper,57,"///\brief Contains the AST transformers operating on the wrapper.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.h:10,Testability,Test,Test,10,"///\brief Test whether the first decl of the DeclGroupRef comes from an AST; /// file.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclCollector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:22,Performance,cache,cache,22,"// Remove the linkage cache. On next access it will calculate it; // considering the new position of the declaration.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:37,Security,access,access,37,"// Remove the linkage cache. On next access it will calculate it; // considering the new position of the declaration.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Usability,Clear,Clear,3,"// Clear linkage for the template pattern.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:14,Usability,clear,clear,14,"// We need to clear linkage for specializations, too.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:9,Performance,cache,cached,9,"// Clear cached linkage for function template decls, too.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Usability,Clear,Clear,3,"// Clear cached linkage for function template decls, too.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:32,Integrability,wrap,wrapper,32,"// We need to emit a new custom wrapper wrapping the stmts",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:40,Integrability,wrap,wrapping,40,"// We need to emit a new custom wrapper wrapping the stmts",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:7,Modifiability,variab,variable,7,"// For variable definitions causing var/function ambiguity such as:; // MyClass my();, C++ standard says it shall be resolved as a function; //; // In the particular context this definition is inside a function; // already, but clang thinks it as a lambda, so we need to ignore the; // check decl context vs lexical decl context.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:121,Deployability,update,update,121,"// The transparent DeclContexts (eg. scopeless enum) doesn't have; // scopes. While extracting their contents we need to update the; // lookup tables and telling them to pick up the new positions; // in the AST.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:11,Integrability,wrap,wrapper,11,"// Put the wrapper after its declarations. (Nice when AST dumping)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Integrability,Wrap,Wrap,3,"// Wrap Stmts into a function body.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:115,Safety,detect,detect,115,"// Figure out the underlying type if this a enum declaration. We need to do; // this early, because it's needed to detect if this is an incompatible; // redeclaration.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:250,Integrability,depend,dependent,250,"// if (Name && SS.isNotEmpty()) {; // // We have a nested-name tag ('struct foo::bar').; // // Check for invalid 'foo::'.; // if (SS.isInvalid()) {; // Name = 0;; // goto CreateNewDecl;; // }; // // If this is a friend or a reference to a class in a dependent; // // context, don't try to make a decl for it.; // if (TUK == TUK_Friend || TUK == TUK_Reference) {; // DC = computeDeclContext(SS, false);; // if (!DC) {; // IsDependent = true;; // return 0;; // }; // } else {; // DC = computeDeclContext(SS, true);; // if (!DC) {; // Diag(SS.getRange().getBegin(),; // diag::err_dependent_nested_name_spec); // << SS.getRange();; // return 0;; // }; // }; // if (RequireCompleteDeclContext(SS, DC)); // return 0;; // SearchDC = DC;; // // Look-up name inside 'foo::'.; // LookupQualifiedName(Previous, DC);; // if (Previous.isAmbiguous()); // return 0;; // if (Previous.empty()) {; // // Name lookup did not find anything. However, if the; // // nested-name-specifier refers to the current instantiation,; // // and that current instantiation has any dependent base; // // classes, we might find something at instantiation time: treat; // // this as a dependent elaborated-type-specifier.; // // But this only makes any sense for reference-like lookups.; // if (Previous.wasNotFoundInCurrentInstantiation() &&; // (TUK == TUK_Reference || TUK == TUK_Friend)) {; // IsDependent = true;; // return 0;; // }; // // A tag 'foo::bar' must already exist.; // Diag(NameLoc, diag::err_not_tag_in_scope); // << Kind << Name << DC << SS.getRange();; // Name = 0;; // Invalid = true;; // goto CreateNewDecl;; // }; //} else",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:1049,Integrability,depend,dependent,1049,"// if (Name && SS.isNotEmpty()) {; // // We have a nested-name tag ('struct foo::bar').; // // Check for invalid 'foo::'.; // if (SS.isInvalid()) {; // Name = 0;; // goto CreateNewDecl;; // }; // // If this is a friend or a reference to a class in a dependent; // // context, don't try to make a decl for it.; // if (TUK == TUK_Friend || TUK == TUK_Reference) {; // DC = computeDeclContext(SS, false);; // if (!DC) {; // IsDependent = true;; // return 0;; // }; // } else {; // DC = computeDeclContext(SS, true);; // if (!DC) {; // Diag(SS.getRange().getBegin(),; // diag::err_dependent_nested_name_spec); // << SS.getRange();; // return 0;; // }; // }; // if (RequireCompleteDeclContext(SS, DC)); // return 0;; // SearchDC = DC;; // // Look-up name inside 'foo::'.; // LookupQualifiedName(Previous, DC);; // if (Previous.isAmbiguous()); // return 0;; // if (Previous.empty()) {; // // Name lookup did not find anything. However, if the; // // nested-name-specifier refers to the current instantiation,; // // and that current instantiation has any dependent base; // // classes, we might find something at instantiation time: treat; // // this as a dependent elaborated-type-specifier.; // // But this only makes any sense for reference-like lookups.; // if (Previous.wasNotFoundInCurrentInstantiation() &&; // (TUK == TUK_Reference || TUK == TUK_Friend)) {; // IsDependent = true;; // return 0;; // }; // // A tag 'foo::bar' must already exist.; // Diag(NameLoc, diag::err_not_tag_in_scope); // << Kind << Name << DC << SS.getRange();; // Name = 0;; // Invalid = true;; // goto CreateNewDecl;; // }; //} else",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:1150,Integrability,depend,dependent,1150,"// if (Name && SS.isNotEmpty()) {; // // We have a nested-name tag ('struct foo::bar').; // // Check for invalid 'foo::'.; // if (SS.isInvalid()) {; // Name = 0;; // goto CreateNewDecl;; // }; // // If this is a friend or a reference to a class in a dependent; // // context, don't try to make a decl for it.; // if (TUK == TUK_Friend || TUK == TUK_Reference) {; // DC = computeDeclContext(SS, false);; // if (!DC) {; // IsDependent = true;; // return 0;; // }; // } else {; // DC = computeDeclContext(SS, true);; // if (!DC) {; // Diag(SS.getRange().getBegin(),; // diag::err_dependent_nested_name_spec); // << SS.getRange();; // return 0;; // }; // }; // if (RequireCompleteDeclContext(SS, DC)); // return 0;; // SearchDC = DC;; // // Look-up name inside 'foo::'.; // LookupQualifiedName(Previous, DC);; // if (Previous.isAmbiguous()); // return 0;; // if (Previous.empty()) {; // // Name lookup did not find anything. However, if the; // // nested-name-specifier refers to the current instantiation,; // // and that current instantiation has any dependent base; // // classes, we might find something at instantiation time: treat; // // this as a dependent elaborated-type-specifier.; // // But this only makes any sense for reference-like lookups.; // if (Previous.wasNotFoundInCurrentInstantiation() &&; // (TUK == TUK_Reference || TUK == TUK_Friend)) {; // IsDependent = true;; // return 0;; // }; // // A tag 'foo::bar' must already exist.; // Diag(NameLoc, diag::err_not_tag_in_scope); // << Kind << Name << DC << SS.getRange();; // Name = 0;; // Invalid = true;; // goto CreateNewDecl;; // }; //} else",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:42,Availability,recover,recovery,42,"// Note: there used to be some attempt at recovery here.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:42,Safety,recover,recovery,42,"// Note: there used to be some attempt at recovery here.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Availability,Recover,Recover,3,"// Recover by making this an anonymous redefinition.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Safety,Recover,Recover,3,"// Recover by making this an anonymous redefinition.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:48,Availability,recover,recovered,48,"// All conflicts with previous declarations are recovered by; // returning the previous declaration.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:48,Safety,recover,recovered,48,"// All conflicts with previous declarations are recovered by; // returning the previous declaration.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:123,Availability,error,error,123,"// If we're defining a specialization and the previous; // definition is from an implicit instantiation, don't emit an; // error here; we'll catch this in the general case below.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:30,Availability,recover,recover,30,"// If this is a redefinition, recover by making this; // struct be anonymous, which will make any later; // references get the previous definition.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:30,Safety,recover,recover,30,"// If this is a redefinition, recover by making this; // struct be anonymous, which will make any later; // references get the previous definition.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:78,Availability,error,error,78,"// The tag name clashes with something else in the target scope,; // issue an error and recover by making this tag be anonymous.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:88,Availability,recover,recover,88,"// The tag name clashes with something else in the target scope,; // issue an error and recover by making this tag be anonymous.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:88,Safety,recover,recover,88,"// The tag name clashes with something else in the target scope,; // issue an error and recover by making this tag be anonymous.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:79,Usability,clear,clear,79,"// The existing declaration isn't relevant to us; we're in a; // new scope, so clear out the previous declaration.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:20,Integrability,wrap,wrapper,20,"///\brief Scans the wrapper for declarations and extracts them onto the; /// global scope.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:41,Modifiability,variab,variable,41,"/// \brief Creates unique name (eg. of a variable). Used internally for; /// AST node synthesis.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:320,Availability,error,error,320,"///\brief Performs semantic checking on a newly-extracted tag declaration.; ///; /// This routine performs all of the type-checking required for a tag; /// declaration once it has been built. It is used both to check tags before; /// they have been moved onto the global scope.; ///; /// Sets NewTD->isInvalidDecl if an error was encountered.; ///; ///\returns true if the tag declaration is redeclaration.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:90,Integrability,rout,routine,90,"///\brief Performs semantic checking on a newly-extracted tag declaration.; ///; /// This routine performs all of the type-checking required for a tag; /// declaration once it has been built. It is used both to check tags before; /// they have been moved onto the global scope.; ///; /// Sets NewTD->isInvalidDecl if an error was encountered.; ///; ///\returns true if the tag declaration is redeclaration.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:10,Performance,Perform,Performs,10,"///\brief Performs semantic checking on a newly-extracted tag declaration.; ///; /// This routine performs all of the type-checking required for a tag; /// declaration once it has been built. It is used both to check tags before; /// they have been moved onto the global scope.; ///; /// Sets NewTD->isInvalidDecl if an error was encountered.; ///; ///\returns true if the tag declaration is redeclaration.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:98,Performance,perform,performs,98,"///\brief Performs semantic checking on a newly-extracted tag declaration.; ///; /// This routine performs all of the type-checking required for a tag; /// declaration once it has been built. It is used both to check tags before; /// they have been moved onto the global scope.; ///; /// Sets NewTD->isInvalidDecl if an error was encountered.; ///; ///\returns true if the tag declaration is redeclaration.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:87,Availability,error,errors,87,"///\brief Validate a variable that is a CXXRecordDecl; ///; /// Currently only reports errors if the var is a lamda that captures by; /// copy.; ///; ///\returns whether an error was reported; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:173,Availability,error,error,173,"///\brief Validate a variable that is a CXXRecordDecl; ///; /// Currently only reports errors if the var is a lamda that captures by; /// copy.; ///; ///\returns whether an error was reported; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:21,Modifiability,variab,variable,21,"///\brief Validate a variable that is a CXXRecordDecl; ///; /// Currently only reports errors if the var is a lamda that captures by; /// copy.; ///; ///\returns whether an error was reported; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:10,Security,Validat,Validate,10,"///\brief Validate a variable that is a CXXRecordDecl; ///; /// Currently only reports errors if the var is a lamda that captures by; /// copy.; ///; ///\returns whether an error was reported; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclExtractor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:14,Energy Efficiency,adapt,adapted,14,"// Copied and adapted from: ASTReaderDecl.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:14,Modifiability,adapt,adapted,14,"// Copied and adapted from: ASTReaderDecl.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:223,Testability,assert,assert,223,"// FIXME: A decl meant to be added in the lookup already exists; // in the lookup table. My assumption is that the DeclUnloader; // adds it here. This needs to be investigated mode. For now; // std::find gets promoted from assert to condition :); // DeclContext::lookup_result::iterator is not an InputIterator; // (const member, thus no op=(const iterator&)), thus we cannot use; // std::find. MSVC actually cares!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:42,Deployability,update,update,42,"// The decl was registered in the lookup, update it.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:14,Energy Efficiency,adapt,adapted,14,"// Copied and adapted from GlobalDCE.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:14,Modifiability,adapt,adapted,14,"// Copied and adapted from GlobalDCE.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:32,Deployability,release,released,32,"// Make sure that all memory is released",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:23,Modifiability,variab,variable,23,"// If this is a global variable, we must make sure to add any global; // values referenced by the initializer to the collection set.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:263,Energy Efficiency,reduce,reduce,263,"// RemoveUnusedGlobalValue - Loop over all of the uses of the specified; // GlobalValue, looking for the constant pointer ref that may be pointing to; // it. If found, check to see if the constant pointer ref is safe to; // destroy, and if so, nuke it. This will reduce the reference count on the; // global value, which might make it deader.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:212,Safety,safe,safe,212,"// RemoveUnusedGlobalValue - Loop over all of the uses of the specified; // GlobalValue, looking for the constant pointer ref that may be pointing to; // it. If found, check to see if the constant pointer ref is safe to; // destroy, and if so, nuke it. This will reduce the reference count on the; // global value, which might make it deader.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:3,Safety,Avoid,Avoid,3,"// Avoid assertion on add.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:9,Testability,assert,assertion,9,"// Avoid assertion on add.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:545,Modifiability,extend,extended,545,"// Template instantiation of templated function first creates a canonical; // declaration and after the actual template specialization. For example:; // template<typename T> T TemplatedF(T t);; // template<> int TemplatedF(int i) { return i + 1; } creates:; // 1. Canonical decl: int TemplatedF(int i);; // 2. int TemplatedF(int i){ return i + 1; }; //; // The template specialization is attached to the list of specialization of; // the templated function.; // When TemplatedF is looked up it finds the templated function and the; // lookup is extended by the templated function with its specializations.; // In the end we don't need to remove the canonical decl because, it; // doesn't end up in the lookup table.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:92,Modifiability,variab,variable,92,"// A template specialization is attached to the list of specialization of; // the templated variable.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:16,Deployability,update,update,16,"// Make sure we update the lookup maps, because the removed decl might; // be registered in the lookup and still findable.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:3,Security,Validat,Validate,3,"// Validate redecl chain by iterating through it.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:44,Modifiability,variab,variable,44,"// templated function issues a lot -Wunused-variable",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:24,Performance,cache,cache,24,"// We need to reset the cache",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:126,Deployability,patch,patch,126,"// Cleanup the lookup tables.; // DeclContexts like EnumDecls don't have lookup maps.; // FIXME: Remove once we upstream this patch: D119675",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:68,Integrability,depend,dependent,68,"// llvm::Module cannot contain:; // * variables and parameters with dependent context;; // * mangled names for parameters;",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:38,Modifiability,variab,variables,38,"// llvm::Module cannot contain:; // * variables and parameters with dependent context;; // * mangled names for parameters;",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:599,Integrability,inject,injects,599,"// The canonical declaration of every specialization is registered with; // the FunctionTemplateDecl.; // Note this might unload too much in the case:; // template<typename T> T f(){ return T();}; // template<> int f();; // template<> int f() { return 0;}; // when the template specialization was forward declared the canonical; // becomes the first forward declaration. If the canonical forward; // declaration was declared outside the set of the decls to unload we have; // to keep it registered as a template specialization.; //; // In order to diagnose mismatches of the specializations, clang 'injects'; // a implicit forward declaration making it very hard distinguish between; // the explicit and the implicit forward declaration. So far the only way; // to distinguish is by source location comparison.; // FIXME: When the misbehavior of clang is fixed we must avoid relying on; // source locations",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:869,Safety,avoid,avoid,869,"// The canonical declaration of every specialization is registered with; // the FunctionTemplateDecl.; // Note this might unload too much in the case:; // template<typename T> T f(){ return T();}; // template<> int f();; // template<> int f() { return 0;}; // when the template specialization was forward declared the canonical; // becomes the first forward declaration. If the canonical forward; // declaration was declared outside the set of the decls to unload we have; // to keep it registered as a template specialization.; //; // In order to diagnose mismatches of the specializations, clang 'injects'; // a implicit forward declaration making it very hard distinguish between; // the explicit and the implicit forward declaration. So far the only way; // to distinguish is by source location comparison.; // FIXME: When the misbehavior of clang is fixed we must avoid relying on; // source locations",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:599,Security,inject,injects,599,"// The canonical declaration of every specialization is registered with; // the FunctionTemplateDecl.; // Note this might unload too much in the case:; // template<typename T> T f(){ return T();}; // template<> int f();; // template<> int f() { return 0;}; // when the template specialization was forward declared the canonical; // becomes the first forward declaration. If the canonical forward; // declaration was declared outside the set of the decls to unload we have; // to keep it registered as a template specialization.; //; // In order to diagnose mismatches of the specializations, clang 'injects'; // a implicit forward declaration making it very hard distinguish between; // the explicit and the implicit forward declaration. So far the only way; // to distinguish is by source location comparison.; // FIXME: When the misbehavior of clang is fixed we must avoid relying on; // source locations",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:118,Security,access,access,118,"// The order in which declarations are removed makes a difference, e.g.; // `MaybeRemoveDeclFromModule()` may require access to type information to; // make up the mangled name.; // Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct; // / union / class / enum) and other declarations. Removal of `TagDecl`s; // is deferred until all the other declarations have been processed.; // Declarations in each group are iterated in reverse order.; // Note that removing from single-linked list invalidates the iterators.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:114,Availability,avail,available,114,"// The first declaration of an unnamed namespace, creates an implicit; // UsingDirectiveDecl that makes the names available in the parent DC (see; // `Sema::ActOnStartNamespaceDef()`).; // If we are reverting such first declaration, make sure we reset the; // anonymous namespace for the parent DeclContext so that the; // implicit UsingDirectiveDecl is created again when parsing the next; // anonymous namespace.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:151,Modifiability,variab,variables,151,"// LinkageSpecDecl: DeclContext; // Re-add any previous declarations so they are reachable throughout the; // translation unit. Also remove any global variables from:; // m_Sema->Context.getExternCContextDecl()",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:8,Integrability,inject,injected,8,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:382,Integrability,Inject,InjectedC,382,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:442,Integrability,Inject,InjectedC,442,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:8,Security,inject,injected,8,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:382,Security,Inject,InjectedC,382,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:442,Security,Inject,InjectedC,442,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:343,Testability,test,test,343,"/// The injected class name in C++ is the name of the class that; /// appears inside the class itself. For example:; ///; /// \code; /// struct C {; /// // C is implicitly declared here as a synonym for the class name.; /// };; ///; /// C::C c; // same as ""C c;""; /// \endcode; // It is another question why it is on the redecl chain.; // The test show it can be either:; // ... <- InjectedC <- C <- ..., i.e previous decl or; // ... <- C <- InjectedC <- ...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:41,Integrability,depend,dependent,41,"// The module cannot contain symbols for dependent decls.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:166,Testability,assert,assert,166,"// if it was successfully removed from the AST we have to check whether; // code was generated and remove it.; // From llvm's mailing list, explanation of the RAUW'd assert:; //; // The problem isn't with your call to; // replaceAllUsesWith per se, the problem is that somebody (I would guess; // the JIT?) is holding it in a ValueMap.; //; // We used to have a problem that some parts of the code would keep a; // mapping like so:; // std::map<Value *, ...>; // while somebody else would modify the Value* without them noticing,; // leading to a dangling pointer in the map. To fix that, we invented the; // ValueMap which puts a Use that doesn't show up in the use_iterator on; // the Value it holds. When the Value is erased or RAUW'd, the ValueMap is; // notified and in this case decides that's not okay and terminates the; // program.; //; // Probably what's happened here is that the calling function has had its; // code generated by the JIT, but not the callee. Thus the JIT emitted a; // call to a generated stub, and will do the codegen of the callee once; // that stub is reached. Of course, once the JIT is in this state, it holds; // on to the Function with a ValueMap in order to prevent things from; // getting out of sync.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:1018,Testability,stub,stub,1018,"// if it was successfully removed from the AST we have to check whether; // code was generated and remove it.; // From llvm's mailing list, explanation of the RAUW'd assert:; //; // The problem isn't with your call to; // replaceAllUsesWith per se, the problem is that somebody (I would guess; // the JIT?) is holding it in a ValueMap.; //; // We used to have a problem that some parts of the code would keep a; // mapping like so:; // std::map<Value *, ...>; // while somebody else would modify the Value* without them noticing,; // leading to a dangling pointer in the map. To fix that, we invented the; // ValueMap which puts a Use that doesn't show up in the use_iterator on; // the Value it holds. When the Value is erased or RAUW'd, the ValueMap is; // notified and in this case decides that's not okay and terminates the; // program.; //; // Probably what's happened here is that the calling function has had its; // code generated by the JIT, but not the callee. Thus the JIT emitted a; // call to a generated stub, and will do the codegen of the callee once; // that stub is reached. Of course, once the JIT is in this state, it holds; // on to the Function with a ValueMap in order to prevent things from; // getting out of sync.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:1076,Testability,stub,stub,1076,"// if it was successfully removed from the AST we have to check whether; // code was generated and remove it.; // From llvm's mailing list, explanation of the RAUW'd assert:; //; // The problem isn't with your call to; // replaceAllUsesWith per se, the problem is that somebody (I would guess; // the JIT?) is holding it in a ValueMap.; //; // We used to have a problem that some parts of the code would keep a; // mapping like so:; // std::map<Value *, ...>; // while somebody else would modify the Value* without them noticing,; // leading to a dangling pointer in the map. To fix that, we invented the; // ValueMap which puts a Use that doesn't show up in the use_iterator on; // the Value it holds. When the Value is erased or RAUW'd, the ValueMap is; // notified and in this case decides that's not okay and terminates the; // program.; //; // Probably what's happened here is that the calling function has had its; // code generated by the JIT, but not the callee. Thus the JIT emitted a; // call to a generated stub, and will do the codegen of the callee once; // that stub is reached. Of course, once the JIT is in this state, it holds; // on to the Function with a ValueMap in order to prevent things from; // getting out of sync.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:63,Availability,redundant,redundant,63,"// Make sure the macro is in the Preprocessor. Not sure if not redundant; // because removeMacro looks for the macro anyway in the DenseMap Macros[]",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:63,Safety,redund,redundant,63,"// Make sure the macro is in the Preprocessor. Not sure if not redundant; // because removeMacro looks for the macro anyway in the DenseMap Macros[]",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:42,Availability,recover,recovered,42,"///\brief The clang code generator, being recovered.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:42,Safety,recover,recovered,42,"///\brief The clang code generator, being recovered.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:121,Performance,cache,caches,121,"///\brief Unloaded declaration contains a SourceLocation, representing a; /// place in the file where it was seen. Clang caches that file and even if; /// a declaration is removed and the file is edited we hit the cached entry.; /// This ADT keeps track of the files from which the unloaded declarations; /// came from so that in the end they could be removed from clang's cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:214,Performance,cache,cached,214,"///\brief Unloaded declaration contains a SourceLocation, representing a; /// place in the file where it was seen. Clang caches that file and even if; /// a declaration is removed and the file is edited we hit the cached entry.; /// This ADT keeps track of the files from which the unloaded declarations; /// came from so that in the end they could be removed from clang's cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:373,Performance,cache,cache,373,"///\brief Unloaded declaration contains a SourceLocation, representing a; /// place in the file where it was seen. Clang caches that file and even if; /// a declaration is removed and the file is edited we hit the cached entry.; /// This ADT keeps track of the files from which the unloaded declarations; /// came from so that in the end they could be removed from clang's cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:37,Integrability,Interface,Interface,37,"/// @name Helpers; /// @{; ///\brief Interface with nice name, forwarding to Visit.; ///; ///\param[in] MD - The MacroDirectiveInfo containing the IdentifierInfo and; /// MacroDirective to forward.; ///\returns true on success.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:118,Performance,cache,cached,118,"///\brief Function that collects the files which we must reread from disk.; ///; /// For example: We must uncache the cached include, which brought a; /// declaration or a macro directive definition in the AST.; ///\param[in] Loc - The source location of the unloaded declaration.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeclUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:68,Availability,error,error,68,"// Ignore any forward declaration issued after a definition. Fixes ""error; // : reference to 'xxx' is ambiguous"" in `class C {}; class C; C foo;`.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:241,Integrability,wrap,wrapper,241,"// Diagnose shadowing of decls in the `std` namespace (see ROOT-5971).; // For unnamed macros, the input is ingested in a single `Interpreter::process()`; // call. Do not emit the warning in that case, as all references are local; // to the wrapper function and this diagnostic might be misleading.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:7,Modifiability,variab,variable,7,"// For variable templates, Transform() is invoked with a VarDecl; get the; // corresponding VarTemplateDecl.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:37,Modifiability,inherit,inherits,37,"// An instantiated function template inherits the declaration context of the; // templated decl. This is used for name mangling; fix it to avoid clashing.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:139,Safety,avoid,avoid,139,"// An instantiated function template inherits the declaration context of the; // templated decl. This is used for name mangling; fix it to avoid clashing.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h:371,Availability,error,error,371,"/// \brief Enables shadowing of definitions, as per https://github.com/root-project/cling/issues/259.; ///; /// A top-level declaration typed in the Cling prompt is nested in a; /// `__cling_N5xxx' inline namespace, so that the newly provided definition; /// doesn't clash, e.g. in unmodified Cling, \code unsigned i = 0U;; /// double i = 1.0; \endcode fails to compile (error: redefinition of 'i' with; /// a different type: 'double' vs 'unsigned int'). To support that, the; /// previous code is transformed into:; /// \code; /// inline namespace __cling_N50 { unsigned i = 0U; }; /// inline namespace __cling_N51 { double i = 1.0; }; /// \endcode; ///; /// While this works for providing a new definition, any non-qualified lookup,; /// i.e. using the name `i` instead of `__cling___N50::i` would be ambiguous.; /// To allow the use of unqualified names, and therefore make this; /// transformation transparent to the user, any previous definition that can; /// be found from the TU scope is hidden from SemaLookup.; ///; /// It is still possible to reach previous definitions through the qualified; /// name `__cling_N5xxx::yyy'.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h:169,Deployability,patch,patch,169,"/// \brief Hide a global declaration from SemaLookup; internally used in; /// `invalidatePreviousDefinitions()'. This directly manipulates lookup; /// tables to avoid a patch to Clang.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h:161,Safety,avoid,avoid,161,"/// \brief Hide a global declaration from SemaLookup; internally used in; /// `invalidatePreviousDefinitions()'. This directly manipulates lookup; /// tables to avoid a patch to Clang.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h:64,Integrability,wrap,wrapper,64,"/// \brief Invalidate previous function definition. If `D` is a wrapper,; /// local declararations may be moved by DeclExtractor; in that case,; /// invalidate all those before DeclExtractor runs.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DefinitionShadower.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeviceKernelInliner.h:463,Availability,error,error,463,"// This ASTTransformer adds an inline attribute to any CUDA __device__ kernel; // that does not have the attribute. Inlining solves a problem caused by; // incremental compilation of PTX code. In a normal compiler, all definitions; // of __global__ and __device__ kernels are in the same translation unit. In; // the incremental compiler, each kernel has its own translation unit. In case; // a __global__ kernel uses a __device__ function, this design caused an error.; // Instead of generating the PTX code of the __device__ kernel in the same file; // as the __global__ kernel, there is only an external declaration of the; // __device__ function. However, PTX does not support an external declaration of; // functions.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DeviceKernelInliner.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeviceKernelInliner.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:45,Modifiability,variab,variables,45,"///\returns substitution of all known linker variables in \c original",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:105,Modifiability,variab,variable,105,"// Handle substitutions (MacOS):; // @rpath - This function does not substitute @rpath, becouse; // this variable is already handled by lookupLibrary where; // @rpath is replaced with all paths from RPATH one by one.; // @executable_path - Main program path.; // @loader_path - Loader library (or main program) path.; //; // Handle substitutions (Linux):; // https://man7.org/linux/man-pages/man8/ld.so.8.html; // $origin - Loader library (or main program) path.; // $lib - lib lib64; // $platform - x86_64 AT_PLATFORM",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:278,Performance,Load,Loader,278,"// Handle substitutions (MacOS):; // @rpath - This function does not substitute @rpath, becouse; // this variable is already handled by lookupLibrary where; // @rpath is replaced with all paths from RPATH one by one.; // @executable_path - Main program path.; // @loader_path - Loader library (or main program) path.; //; // Handle substitutions (Linux):; // https://man7.org/linux/man-pages/man8/ld.so.8.html; // $origin - Loader library (or main program) path.; // $lib - lib lib64; // $platform - x86_64 AT_PLATFORM",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:424,Performance,Load,Loader,424,"// Handle substitutions (MacOS):; // @rpath - This function does not substitute @rpath, becouse; // this variable is already handled by lookupLibrary where; // @rpath is replaced with all paths from RPATH one by one.; // @executable_path - Main program path.; // @loader_path - Loader library (or main program) path.; //; // Handle substitutions (Linux):; // https://man7.org/linux/man-pages/man8/ld.so.8.html; // $origin - Loader library (or main program) path.; // $lib - lib lib64; // $platform - x86_64 AT_PLATFORM",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:48,Performance,load,loaded,48,"// get canonical path name and check if already loaded",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:26,Modifiability,variab,variables,26,"// Subst all known linker variables ($origin, @rpath, etc.)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:56,Availability,error,error,56,"// We emit callback to LibraryLoadingFailed when we get error with error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:67,Availability,error,error,67,"// We emit callback to LibraryLoadingFailed when we get error with error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:73,Integrability,message,message,73,"// We emit callback to LibraryLoadingFailed when we get error with error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:132,Availability,error,errors,132,"// Do not use the identify_magic overload taking a path: It will open the; // file and then mmap its contents, possibly causing bus errors when another; // process truncates the file while we are trying to read it. Instead just; // read the first 1024 bytes, which should be enough for identify_magic to; // do its work.; // TODO: Fix the code upstream and consider going back to calling the; // convenience function after a future LLVM upgrade.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:437,Deployability,upgrade,upgrade,437,"// Do not use the identify_magic overload taking a path: It will open the; // file and then mmap its contents, possibly causing bus errors when another; // process truncates the file while we are trying to read it. Instead just; // read the first 1024 bytes, which should be enough for identify_magic to; // do its work.; // TODO: Fix the code upstream and consider going back to calling the; // convenience function after a future LLVM upgrade.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:35,Security,hash,hash,35,"// This is a GNU implementation of hash used in bloom filter!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:57,Testability,log,log,57,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:69,Testability,log,log,69,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:140,Testability,log,log,140,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:150,Testability,log,log,150,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:165,Testability,log,log,165,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:200,Testability,log,log,200,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:328,Testability,log,log,328,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:338,Testability,log,log,338,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:353,Testability,log,log,353,"// https://hur.st/bloomfilter; //; // n = ceil(m / (-k / log(1 - exp(log(p) / k)))); // p = pow(1 - exp(-k / (m / n)), k); // m = ceil((n * log(p)) / log(1 / pow(2, log(2))));; // k = round((m / n) * log(2));; //; // n = symbolsCount; // p = 0.02; // k = 2 (k1=GNUHash and k2=GNUHash >> bloomShift); // m = ceil((symbolsCount * log(p)) / log(1 / pow(2, log(2))));; // bloomShift = min(5 for bits=32 or 6 for bits=64, log2(symbolsCount)); // bloomSize = ceil((-1.44 * n * log2f(p)) / bits)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:86,Performance,perform,performance,86,"// This function is superhot. No branches here, breaks inlining and makes; // overall performance around 4x slower.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:7,Energy Efficiency,efficient,efficient,7,"/// An efficient representation of a full path to a library which does not; /// duplicate common path patterns reducing the overall memory footprint.; ///; /// For example, `/home/.../lib/libA.so`, m_Path will contain a pointer; /// to `/home/.../lib/`; /// will be stored and .second `libA.so`.; /// This approach reduces the duplicate paths as at one location there may be; /// plenty of libraries.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:315,Energy Efficiency,reduce,reduces,315,"/// An efficient representation of a full path to a library which does not; /// duplicate common path patterns reducing the overall memory footprint.; ///; /// For example, `/home/.../lib/libA.so`, m_Path will contain a pointer; /// to `/home/.../lib/`; /// will be stored and .second `libA.so`.; /// This approach reduces the duplicate paths as at one location there may be; /// plenty of libraries.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:144,Energy Efficiency,efficient,efficient,144,"/// A helper class keeping track of loaded libraries. It implements a fast; /// search O(1) while keeping deterministic iterability in a memory efficient; /// way. The underlying set uses a custom hasher for better efficiency given the; /// specific problem where the library names (m_LibName) are relatively short; /// strings and the base paths (m_Path) are repetitive long strings.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:36,Performance,load,loaded,36,"/// A helper class keeping track of loaded libraries. It implements a fast; /// search O(1) while keeping deterministic iterability in a memory efficient; /// way. The underlying set uses a custom hasher for better efficiency given the; /// specific problem where the library names (m_LibName) are relatively short; /// strings and the base paths (m_Path) are repetitive long strings.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:197,Security,hash,hasher,197,"/// A helper class keeping track of loaded libraries. It implements a fast; /// search O(1) while keeping deterministic iterability in a memory efficient; /// way. The underlying set uses a custom hasher for better efficiency given the; /// specific problem where the library names (m_LibName) are relatively short; /// strings and the base paths (m_Path) are repetitive long strings.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:3,Performance,Cache,Cached,3,"// Cached version of system function lstat",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:14,Performance,cache,cached,14,"// If already cached - retun cached result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:29,Performance,cache,cached,29,"// If already cached - retun cached result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:20,Performance,cache,cache,20,"// If result not in cache - call system function and cache result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:53,Performance,cache,cache,53,"// If result not in cache - call system function and cache result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:3,Performance,Cache,Cached,3,"// Cached version of system function readlink",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:14,Performance,cache,cached,14,"// If already cached - retun cached result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:29,Performance,cache,cached,29,"// If already cached - retun cached result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:20,Performance,cache,cache,20,"// If result not in cache - call system function and cache result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:53,Performance,cache,cache,53,"// If result not in cache - call system function and cache result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:3,Performance,Cache,Cached,3,"// Cached version of system function realpath",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:14,Performance,cache,cached,14,"// If already cached - retun cached result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:29,Performance,cache,cached,29,"// If already cached - retun cached result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:20,Performance,cache,cache,20,"// If result not in cache - call system function and cache result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:53,Performance,cache,cache,53,"// If result not in cache - call system function and cache result",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:13,Deployability,a/b,a/b,13,"// collapse ""a/b/../c"" to ""a/c""",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:275,Performance,optimiz,optimization,275,"/// Bloom filter is a stochastic data structure which can tell us if a symbol; /// name does not exist in a library with 100% certainty. If it tells us it; /// exists this may not be true:; /// https://blogs.oracle.com/solaris/gnu-hash-elf-sections-v2; ///; /// ELF has this optimization in the new linkers by default, It is stored in the; /// gnu.hash section of the object file.; ///; ///\returns true if the symbol may be in the library.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:231,Security,hash,hash-elf-sections-,231,"/// Bloom filter is a stochastic data structure which can tell us if a symbol; /// name does not exist in a library with 100% certainty. If it tells us it; /// exists this may not be true:; /// https://blogs.oracle.com/solaris/gnu-hash-elf-sections-v2; ///; /// ELF has this optimization in the new linkers by default, It is stored in the; /// gnu.hash section of the object file.; ///; ///\returns true if the symbol may be in the library.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:348,Security,hash,hash,348,"/// Bloom filter is a stochastic data structure which can tell us if a symbol; /// name does not exist in a library with 100% certainty. If it tells us it; /// exists this may not be true:; /// https://blogs.oracle.com/solaris/gnu-hash-elf-sections-v2; ///; /// ELF has this optimization in the new linkers by default, It is stored in the; /// gnu.hash section of the object file.; ///; ///\returns true if the symbol may be in the library.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:54,Security,hash,hash,54,"// We need to search if the library doesn't have .gnu.hash section!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:58,Security,hash,hash,58,"// See https://flapenguin.me/2017/05/10/elf-lookup-dt-gnu-hash/ for .gnu.hash; // table layout.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:73,Security,hash,hash,73,"// See https://flapenguin.me/2017/05/10/elf-lookup-dt-gnu-hash/ for .gnu.hash; // table layout.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:13,Energy Efficiency,efficient,efficient,13,"/// A memory efficient llvm::VectorSet. The class provides O(1) search; /// complexity. It is tuned to compare BasePaths first by checking the; /// address and then the representation which models the base path reuse.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:94,Performance,tune,tuned,94,"/// A memory efficient llvm::VectorSet. The class provides O(1) search; /// complexity. It is tuned to compare BasePaths first by checking the; /// address and then the representation which models the base path reuse.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:128,Performance,load,loaded,128,"/// Contains a set of libraries which we gave to the user via ResolveSymbol; /// call and next time we should check if the user loaded them to avoid; /// useless iterations.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:143,Safety,avoid,avoid,143,"/// Contains a set of libraries which we gave to the user via ResolveSymbol; /// call and next time we should check if the user loaded them to avoid; /// useless iterations.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:46,Performance,load,loaded,46,"/// Scan for shared objects which are not yet loaded. They are a our symbol; /// resolution candidate sources.; /// NOTE: We only scan not loaded shared objects.; /// \param[in] searchSystemLibraries - whether to decent to standard system; /// locations for shared objects.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:139,Performance,load,loaded,139,"/// Scan for shared objects which are not yet loaded. They are a our symbol; /// resolution candidate sources.; /// NOTE: We only scan not loaded shared objects.; /// \param[in] searchSystemLibraries - whether to decent to standard system; /// locations for shared objects.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:33,Performance,optimiz,optimization,33,"/// Builds a bloom filter lookup optimization.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:595,Integrability,depend,dependedt,595,"// Examples which we should handle.; // File Real; // /lib/1/1.so /lib/1/1.so // file; // /lib/1/2.so->/lib/1/1.so /lib/1/1.so // file local link; // /lib/1/3.so->/lib/3/1.so /lib/3/1.so // file external link; // /lib/2->/lib/1 // path link; // /lib/2/1.so /lib/1/1.so // path link, file; // /lib/2/2.so->/lib/1/1.so /lib/1/1.so // path link, file local link; // /lib/2/3.so->/lib/3/1.so /lib/3/1.so // path link, file external link; //; // /lib/3/1.so; // /lib/3/2.so->/system/lib/s.so; // /lib/3/3.so; // /system/lib/1.so; //; // libL.so NEEDED/RPATH libR.so /lib/some-rpath/libR.so // needed/dependedt library in libL.so RPATH/RUNPATH or other (in)direct dep; //; // Paths = /lib/1 : /lib/2 : /lib/3; // m_BasePaths = [""/lib/1"", ""/lib/3"", ""/system/lib""]; // m_*Libraries = [<0,""1.so"">, <1,""1.so"">, <2,""s.so"">, <1,""3.so"">]",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:14,Integrability,depend,dependencies,14,"// Handle lib dependencies",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:29,Performance,perform,performance,29,"// Heuristics for workaround performance problems:; // (H1) If RPATH and RUNPATH == """" -> skip handling Deps",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:10,Integrability,depend,dependencies,10,"// Handle dependencies",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:145,Availability,error,error,145,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:35,Performance,load,loading,35,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:278,Performance,load,load,278,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:145,Availability,error,error,145,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:35,Performance,load,loading,35,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:278,Performance,load,load,278,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:21,Security,hash,hash,21,"// Check for the gnu.hash section if ELF.; // If the symbol doesn't exist, exit early.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:145,Availability,error,error,145,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:35,Performance,load,loading,35,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:278,Performance,load,load,278,"// Note, we are at last resort and loading library based on a weak; // symbol is allowed. Otherwise, the JIT will issue an unresolved; // symbol error.; //; // There are other weak symbol kinds (marked as 'V') to denote; // typeinfo and vtables. It is unclear whether we should load such; // libraries or from which library we should resolve the symbol.; // We seem to not have a way to differentiate it from the symbol API.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:37,Safety,detect,detect,37,"// If no hash symbol then iterate to detect symbol; // We Iterate only if BloomFilter and/or SymbolHashTable are not supported.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:9,Security,hash,hash,9,"// If no hash symbol then iterate to detect symbol; // We Iterate only if BloomFilter and/or SymbolHashTable are not supported.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:92,Performance,load,load,92,"// Last call we were asked if a library contains a symbol. Usually, the; // caller wants to load this library. Check if was loaded and remove it; // from our lists of not-yet-loaded libs.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:124,Performance,load,loaded,124,"// Last call we were asked if a library contains a symbol. Usually, the; // caller wants to load this library. Check if was loaded and remove it; // from our lists of not-yet-loaded libs.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:175,Performance,load,loaded,175,"// Last call we were asked if a library contains a symbol. Usually, the; // caller wants to load this library. Check if was loaded and remove it; // from our lists of not-yet-loaded libs.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:28,Usability,clear,clear,28,"// TODO: m_QueriedLibraries.clear ?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:2,Testability,assert,assert,2,"//assert(!m_Dyld && ""Already initialized!"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:62,Integrability,wrap,wrapper,62,"// Handle only DeclRefExprs since they are local and the call wrapper; // won't ""see"" them. Consequently we don't need to handle:; // * DependentScopeDeclRefExpr; // * CallExpr; // * MemberExpr; // * CXXDependentScopeMemberExpr",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:136,Integrability,Depend,DependentScopeDeclRefExpr,136,"// Handle only DeclRefExprs since they are local and the call wrapper; // won't ""see"" them. Consequently we don't need to handle:; // * DependentScopeDeclRefExpr; // * CallExpr; // * MemberExpr; // * CXXDependentScopeMemberExpr",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:28,Integrability,depend,dependent,28,"// Exclude the artificially dependent DeclRefExprs, created by the; // Lookup",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:18,Availability,error,error,18,"// Signal a fatal error.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:18,Availability,error,error,18,"//TODO: Check for error before returning.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:3,Safety,abort,abort,3,"// abort.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:113,Integrability,wrap,wrapper,113,"// If this was the last or the last is not null stmt, means that; // we need to value print.; // If this is in a wrapper function's body then look for VP.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:16,Modifiability,variab,variable,16,"// 2.3 Create a variable from LifetimeHandler.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:133,Modifiability,variab,variable,133,"// 2.4 Call the best-match constructor. The method does overload; // resolution of the constructors and then initializes the new; // variable with it",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:78,Integrability,wrap,wrapper,78,"// Recurse over Decls; they might need transformations, too; e.g. in; // void wrapper() { struct X { void f() { ++dynScope; } }; }",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:3,Usability,Simpl,Simply,3,"// Simply skip the CXXDependentScopeMemberExpr and only use its content.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:136,Integrability,depend,dependent,136,"// Try find out the type of the left-hand-side of the operator; // and give the hint to the right-hand-side in order to replace the; // dependent symbol",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:52,Modifiability,variab,variable,52,"// 1. Get the expression containing @-s and get the variable addresses",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:195,Integrability,wrap,wrapping,195,"// In case when we print non paren inits like int i = h->Draw();; // not int i(h->Draw()). This simplifies the LifetimeHandler's; // constructor, there we don't need to add parenthesis while; // wrapping the expression.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:96,Usability,simpl,simplifies,96,"// In case when we print non paren inits like int i = h->Draw();; // not int i(h->Draw()). This simplifies the LifetimeHandler's; // constructor, there we don't need to add parenthesis while; // wrapping the expression.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:37,Safety,avoid,avoid,37,"// We need valid source locations to avoid assert(InitList.isExplicit()...)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:43,Testability,assert,assert,43,"// We need valid source locations to avoid assert(InitList.isExplicit()...)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:70,Deployability,patch,patch,70,"//BuildCXXNew depends on the SLoc to be; //valid!; // TODO: Propose a patch in clang",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:14,Integrability,depend,depends,14,"//BuildCXXNew depends on the SLoc to be; //valid!; // TODO: Propose a patch in clang",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:15,Testability,test,test,15,"// Here is the test Eval function specialization. Here the CallExpr to the; // function is created.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:208,Integrability,wrap,wrappers,208,"// TODO: Figure out a way to avoid passing in wrong source locations; // of the symbol being replaced. This is important when we calculate the; // size of the memory buffers and may lead to creation of wrong wrappers.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:29,Safety,avoid,avoid,29,"// TODO: Figure out a way to avoid passing in wrong source locations; // of the symbol being replaced. This is important when we calculate the; // size of the memory buffers and may lead to creation of wrong wrappers.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:554,Availability,error,error,554,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:653,Availability,error,error,653,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:791,Availability,recover,recover,791,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1198,Integrability,depend,dependent,1198,"ause it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1556,Integrability,depend,dependent,1556,"t must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1593,Integrability,depend,dependent,1593,"t must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1849,Integrability,depend,dependent,1849,"ed.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the type of; /// the left-hand-side.; ///; /// 2.2 LifetimeHandler - in some more complex situation in order to preserve; /// the behavior the expression must be replaced with more complex structures.; ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:2210,Integrability,depend,dependent,2210," controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the type of; /// the left-hand-side.; ///; /// 2.2 LifetimeHandler - in some more complex situation in order to preserve; /// the behavior the expression must be replaced with more complex structures.; ///; /// 3. Evaluate interface - this is the core function in the interpreter,; /// which does the delayed evaluation. It uses a callback function, which; /// should be reimplemented in the subsystem that provides the runtime types; /// and addresses of the expressions.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:2856,Integrability,interface,interface,2856," controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the type of; /// the left-hand-side.; ///; /// 2.2 LifetimeHandler - in some more complex situation in order to preserve; /// the behavior the expression must be replaced with more complex structures.; ///; /// 3. Evaluate interface - this is the core function in the interpreter,; /// which does the delayed evaluation. It uses a callback function, which; /// should be reimplemented in the subsystem that provides the runtime types; /// and addresses of the expressions.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:171,Modifiability,variab,variables,171,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:514,Performance,perform,performed,514,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:791,Safety,recover,recover,791,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:56,Integrability,depend,dependent,56,"/// \brief Transforms a declaration with initializer of dependent type.; /// If an object on the free store is being initialized we use the; /// EvaluateT; /// If an object on the stack is being initialized it is transformed into; /// reference and an object on the free store is created in order to; /// avoid the copy constructors, which might be private; ///; /// For example:; /// @code; /// int i = 5;; /// MyClass my(dep->Symbol(i)); /// @endcode; /// where dep->Symbol() is of artificially dependent type it is being; /// transformed into:; /// @code; /// cling::runtime::internal::LifetimeHandler; /// __unique(""dep->Sybmol(*(int*)@)"",(void*[]){&i}, DC, ""MyClass"");; /// MyClass &my(*(MyClass*)__unique.getMemory());; /// @endcode; ///; /// Note: here our main priority is to preserve equivalent behavior. We have; /// to clean the heap memory afterwords.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:497,Integrability,depend,dependent,497,"/// \brief Transforms a declaration with initializer of dependent type.; /// If an object on the free store is being initialized we use the; /// EvaluateT; /// If an object on the stack is being initialized it is transformed into; /// reference and an object on the free store is created in order to; /// avoid the copy constructors, which might be private; ///; /// For example:; /// @code; /// int i = 5;; /// MyClass my(dep->Symbol(i)); /// @endcode; /// where dep->Symbol() is of artificially dependent type it is being; /// transformed into:; /// @code; /// cling::runtime::internal::LifetimeHandler; /// __unique(""dep->Sybmol(*(int*)@)"",(void*[]){&i}, DC, ""MyClass"");; /// MyClass &my(*(MyClass*)__unique.getMemory());; /// @endcode; ///; /// Note: here our main priority is to preserve equivalent behavior. We have; /// to clean the heap memory afterwords.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:305,Safety,avoid,avoid,305,"/// \brief Transforms a declaration with initializer of dependent type.; /// If an object on the free store is being initialized we use the; /// EvaluateT; /// If an object on the stack is being initialized it is transformed into; /// reference and an object on the free store is created in order to; /// avoid the copy constructors, which might be private; ///; /// For example:; /// @code; /// int i = 5;; /// MyClass my(dep->Symbol(i)); /// @endcode; /// where dep->Symbol() is of artificially dependent type it is being; /// transformed into:; /// @code; /// cling::runtime::internal::LifetimeHandler; /// __unique(""dep->Sybmol(*(int*)@)"",(void*[]){&i}, DC, ""MyClass"");; /// MyClass &my(*(MyClass*)__unique.getMemory());; /// @endcode; ///; /// Note: here our main priority is to preserve equivalent behavior. We have; /// to clean the heap memory afterwords.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:34,Integrability,depend,dependent,34,"///\brief \c delete t; \c if t is dependent, the whole stmt must be escaped.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:41,Integrability,depend,dependent,41,"///\brief Surrounds member accesses into dependent types; remove on; /// subsitution of its child expression.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:27,Security,access,accesses,27,"///\brief Surrounds member accesses into dependent types; remove on; /// subsitution of its child expression.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:85,Integrability,depend,dependent,85,"/// @{; /// @name Helpers, which simplify node replacement; ///\brief Replaces given dependent AST node with an instantiation of; /// EvaluateT with the deduced type.; ///; /// @param[in] InstTy The deduced type used to create instantiation.; /// @param[in] SubTree The AST node or subtree, which is being replaced.; /// @param[in] ValuePrinterReq Whether to turn on the value printing or not; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:33,Usability,simpl,simplify,33,"/// @{; /// @name Helpers, which simplify node replacement; ///\brief Replaces given dependent AST node with an instantiation of; /// EvaluateT with the deduced type.; ///; /// @param[in] InstTy The deduced type used to create instantiation.; /// @param[in] SubTree The AST node or subtree, which is being replaced.; /// @param[in] ValuePrinterReq Whether to turn on the value printing or not; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:83,Integrability,depend,dependent,83,"///\brief Builds the actual call expression, which is put in the place of; /// the dependent AST node.; ///; /// @param[in] InstTy The deduced type used to create instantiation.; /// @param[in] SubTree The AST node or subtree, which is being replaced.; /// @param[in] CallArgs Proper arguments, which the call will use.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:48,Integrability,depend,dependent,48,"///\brief Checks if the given node is marked as dependent by us.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:41,Modifiability,variab,variable,41,"/// \brief Creates unique name (eg. of a variable). Used internally for; /// AST node synthesis.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/DynamicLookup.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Exception.cpp:293,Energy Efficiency,reduce,reduce,293,"/// Throw an InvalidDerefException if the Arg pointer is invalid.; ///\param Interp: The interpreter that has compiled the code.; ///\param Expr: The expression corresponding determining the pointer value.; ///\param Arg: The pointer to be checked.; ///\returns void*, const-cast from Arg, to reduce the complexity in the; /// calling AST nodes, at the expense of possibly doing a; /// T* -> const void* -> const_cast<void*> -> T* round trip.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Exception.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Exception.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp:15,Availability,avail,available,15,"///\brief Make available to child all decls in parent's decl context; /// that corresponds to child decl context.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp:3,Safety,Avoid,Avoid,3,"// Avoid printing _Bool instead of bool",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp:3,Integrability,Inject,Inject,3,"// Inject a special marker:",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp:3,Security,Inject,Inject,3,"// Inject a special marker:",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp:2,Performance,Cache,CacheFail,2,/*CacheFail*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:451,Integrability,depend,depend,451,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:696,Integrability,depend,depends,696,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:882,Integrability,message,messages,882,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:660,Testability,Log,Log,660,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:849,Testability,log,logging,849,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:878,Testability,log,log,878,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:939,Usability,simpl,simplify,939,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp:22,Energy Efficiency,reduce,reduce,22,"// FIXME : Should not reduce the fine granulated debug options to a simple.; // -g",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp:68,Usability,simpl,simple,68,"// FIXME : Should not reduce the fine granulated debug options to a simple.; // -g",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp:33,Safety,detect,detect,33,"// FIXME : Cling has problems to detect these arguments.; /*; if(langOpts.CUDADeviceFlushDenormalsToZero); m_CuArgs.additionalPtxOpt.push_back(""-fcuda-flush-denormals-to-zero"");; if(langOpts.CUDADeviceApproxTranscendentals); m_CuArgs.additionalPtxOpt.push_back(""-fcuda-approx-transcendentals"");; if(langOpts.CUDAAllowVariadicFunctions); m_CuArgs.additionalPtxOpt.push_back(""-fcuda-allow-variadic-functions"");; */",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp:21,Energy Efficiency,adapt,adapted,21,"// implementation is adapted from clangJIT; // (https://github.com/hfinkel/llvm-project-cxxjit/blob/cxxjit/clang/lib/CodeGen/JIT.cpp); // void *resolveFunction(const void *NTTPValues, const char **TypeStrings,; // unsigned Idx); // The outer header of the fat binary is documented in the CUDA; // fatbinary.h header. As mentioned there, the overall size must be a; // multiple of eight, and so we must make sure that the PTX is.; // We also need to make sure that the buffer is explicitly null; // terminated (cuobjdump, at least, seems to assume that it is).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp:21,Modifiability,adapt,adapted,21,"// implementation is adapted from clangJIT; // (https://github.com/hfinkel/llvm-project-cxxjit/blob/cxxjit/clang/lib/CodeGen/JIT.cpp); // void *resolveFunction(const void *NTTPValues, const char **TypeStrings,; // unsigned Idx); // The outer header of the fat binary is documented in the CUDA; // fatbinary.h header. As mentioned there, the overall size must be a; // multiple of eight, and so we must make sure that the PTX is.; // We also need to make sure that the buffer is explicitly null; // terminated (cuobjdump, at least, seems to assume that it is).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:193,Safety,safe,safe,193,"// It is legal to register an atexit handler from within another atexit; // handler and furthor-more the standard says they need to run in reverse; // order, so this function must be recursion safe.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:29,Safety,avoid,avoid,29,"// Check this case first, to avoid the swap all-together.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:145,Availability,error,error,145,"// This might get called recursively, or a billion of times. Do not generate; // useless output; unresolvedSymbol() is always handed out with an error; // message - that's enough.; //cling::errs() << ""IncrementalExecutor: calling unresolved symbol, ""; // ""see previous error message!\n"";; // throw exception instead?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:269,Availability,error,error,269,"// This might get called recursively, or a billion of times. Do not generate; // useless output; unresolvedSymbol() is always handed out with an error; // message - that's enough.; //cling::errs() << ""IncrementalExecutor: calling unresolved symbol, ""; // ""see previous error message!\n"";; // throw exception instead?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:155,Integrability,message,message,155,"// This might get called recursively, or a billion of times. Do not generate; // useless output; unresolvedSymbol() is always handed out with an error; // message - that's enough.; //cling::errs() << ""IncrementalExecutor: calling unresolved symbol, ""; // ""see previous error message!\n"";; // throw exception instead?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:275,Integrability,message,message,275,"// This might get called recursively, or a billion of times. Do not generate; // useless output; unresolvedSymbol() is always handed out with an error; // message - that's enough.; //cling::errs() << ""IncrementalExecutor: calling unresolved symbol, ""; // ""see previous error message!\n"";; // throw exception instead?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:33,Integrability,depend,dependencies,33,"// FIXME: employ to empty module dependencies *within* the *current* module.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:64,Testability,stub,stubs,64,"// This should force the JIT to recompile the function. But the stubs stay,; // and the JIT reuses the stubs now pointing nowhere, i.e. without updating; // the machine code address. Fix the JIT, or hope that MCJIT helps.; //engine->freeMachineCodeForFunction(*I);",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:103,Testability,stub,stubs,103,"// This should force the JIT to recompile the function. But the stubs stay,; // and the JIT reuses the stubs now pointing nowhere, i.e. without updating; // the machine code address. Fix the JIT, or hope that MCJIT helps.; //engine->freeMachineCodeForFunction(*I);",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:71,Testability,assert,assert,71,"// FIXME: Look at the registration of at_quick_exit and uncomment.; // assert(m_JIT->getSymbolAddress(Name, /*IncludeHostSymbols*/true) &&; // ""The symbol must exist"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:26,Performance,load,loaded,26,"// FIXME: If we split the loaded libraries into a separate JITDylib we should; // be able to delete this code and use something like:; // if (IncludeHostSymbols) {; // if (auto Sym = lookup(<HostSymbolsJD>, Name)) {; // fromJIT = false;; // return Sym;; // }; // }; // if (auto Sym = lookup(<REPLJD>, Name)) {; // fromJIT = true;; // return Sym;; // }; // fromJIT = false;; // return nullptr;",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:22,Modifiability,variab,variable,22,"// Get the function / variable pointer referenced by name.; // We don't care whether something was unresolved before.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:56,Availability,error,error,56,"// We emit callback to LibraryLoadingFailed when we get error with error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:67,Availability,error,error,67,"// We emit callback to LibraryLoadingFailed when we get error with error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:73,Integrability,message,message,73,"// We emit callback to LibraryLoadingFailed when we get error with error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:36,Availability,failure,failures,36,"// FIXME: This causes a lot of test failures, for some reason it causes; // the call to HandleMissingFunction to be elided.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:31,Testability,test,test,31,"// FIXME: This causes a lot of test failures, for some reason it causes; // the call to HandleMissingFunction to be elided.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:100,Modifiability,variab,variable,100,"//llvm::Function *ff = m_engine->FindFunctionNamed(i->c_str());; // i could also reference a global variable, in which case ff == 0.; //if (ff); // funcsToFree.push_back(ff);",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:18,Integrability,interface,interface,18,"///\brief Our JIT interface.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:3,Performance,optimiz,optimizer,3,"// optimizer etc passes",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:52,Security,access,access,52,"///\brief Atomic used as a spin lock to protect the access to m_AtExitFuncs; ///; /// AddAtExitFunc is used at the end of the 'interpreted' user code; /// and before the calling framework has any change of taking back/again; /// its lock protecting the access to cling, so we need to explicit protect; /// again multiple conccurent access.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253,Security,access,access,253,"///\brief Atomic used as a spin lock to protect the access to m_AtExitFuncs; ///; /// AddAtExitFunc is used at the end of the 'interpreted' user code; /// and before the calling framework has any change of taking back/again; /// its lock protecting the access to cling, so we need to explicit protect; /// again multiple conccurent access.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:332,Security,access,access,332,"///\brief Atomic used as a spin lock to protect the access to m_AtExitFuncs; ///; /// AddAtExitFunc is used at the end of the 'interpreted' user code; /// and before the calling framework has any change of taking back/again; /// its lock protecting the access to cling, so we need to explicit protect; /// again multiple conccurent access.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:111,Availability,avail,available,111,"/// Register a DefinitionGenerator to dynamically provide symbols for; /// generated code that are not already available within the process.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:17,Integrability,wrap,wrapper,17,"///\brief Runs a wrapper function.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:322,Availability,avail,available,322,"///\brief Tells the execution to run all registered atexit functions once.; ///; /// This rountine should be used with caution only when an external process; /// wants to carefully control the teardown. For example, if the process; /// has registered its own atexit functions which need the interpreter; /// service to be available when they are being executed.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:147,Performance,optimiz,optimization,147,"///\brief Emit a llvm::Module to the JIT.; ///; /// @param[in] module - The module to pass to the execution engine.; /// @param[in] optLevel - The optimization level to be used.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:114,Availability,avail,available,114,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:84,Integrability,wrap,wrapper,84,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:114,Availability,avail,available,114,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898; // We still have to release the allocations which resets their addresses; // to FinalizedAlloc::InvalidAddr, or the assertion in ~FinalizedAlloc; // will be unhappy...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:205,Deployability,release,release,205,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898; // We still have to release the allocations which resets their addresses; // to FinalizedAlloc::InvalidAddr, or the assertion in ~FinalizedAlloc; // will be unhappy...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:84,Integrability,wrap,wrapper,84,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898; // We still have to release the allocations which resets their addresses; // to FinalizedAlloc::InvalidAddr, or the assertion in ~FinalizedAlloc; // will be unhappy...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:301,Testability,assert,assertion,301,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898; // We still have to release the allocations which resets their addresses; // to FinalizedAlloc::InvalidAddr, or the assertion in ~FinalizedAlloc; // will be unhappy...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:520,Performance,load,loaded,520,"/// A DynamicLibrarySearchGenerator that uses ResourceTracker to remember; /// which symbols were resolved through dlsym during a transaction's reign.; /// Enables JITDyLib forgetting symbols upon unloading of a shared library.; /// While JITDylib::define() *is* invoked for these symbols, there is no RT; /// provided, and thus resource tracking doesn't work, no symbol removal; /// happens upon unloading the corresponding shared library.; ///; /// This might remove more symbols than strictly needed:; /// 1. libA is loaded; /// 2. libB is loaded; /// 3. symbol is resolved from libA; /// 4. libB is unloaded, removing the symbol, too; /// That's fine, it will trigger a subsequent dlsym to re-create the symbol.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:543,Performance,load,loaded,543,"/// A DynamicLibrarySearchGenerator that uses ResourceTracker to remember; /// which symbols were resolved through dlsym during a transaction's reign.; /// Enables JITDyLib forgetting symbols upon unloading of a shared library.; /// While JITDylib::define() *is* invoked for these symbols, there is no RT; /// provided, and thus resource tracking doesn't work, no symbol removal; /// happens upon unloading the corresponding shared library.; ///; /// This might remove more symbols than strictly needed:; /// 1. libA is loaded; /// 2. libB is loaded; /// 3. symbol is resolved from libA; /// 4. libB is unloaded, removing the symbol, too; /// That's fine, it will trigger a subsequent dlsym to re-create the symbol.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:181,Availability,failure,failure,181,"/// Permanently loads the library at the given path and, on success, returns; /// a DynamicLibrarySearchGenerator that will search it for symbol definitions; /// in the library. On failure returns the reason the library failed to load.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:16,Performance,load,loads,16,"/// Permanently loads the library at the given path and, on success, returns; /// a DynamicLibrarySearchGenerator that will search it for symbol definitions; /// in the library. On failure returns the reason the library failed to load.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:230,Performance,load,load,230,"/// Permanently loads the library at the given path and, on success, returns; /// a DynamicLibrarySearchGenerator that will search it for symbol definitions; /// in the library. On failure returns the reason the library failed to load.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:62,Modifiability,variab,variable,62,"// Finally, honor the user's choice by setting an environment variable.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:3,Integrability,Inject,Inject,3,"// Inject a number of symbols that may be in libc_nonshared.a where they are; // not found automatically. Before DefinitionGenerators in ORCv2, this used; // to be done by RTDyldMemoryManager::getSymbolAddressInProcess See also the; // upstream issue https://github.com/llvm/llvm-project/issues/61289.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:3,Security,Inject,Inject,3,"// Inject a number of symbols that may be in libc_nonshared.a where they are; // not found automatically. Before DefinitionGenerators in ORCv2, this used; // to be done by RTDyldMemoryManager::getSymbolAddressInProcess See also the; // upstream issue https://github.com/llvm/llvm-project/issues/61289.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:192,Availability,failure,failure,192,"// FIXME: This should ideally happen in the right order without explicitly; // doing this. We started seeing failing tests (eg, tutorial-hist-cumulative,; // JITLink turned on) with assertion failure in ~FinalizedAlloc after commit; // [cling] Move generators to ProcessSymbols JITDylib; // This likely changed the destruction order that caused the assertion to; // trigger.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:117,Testability,test,tests,117,"// FIXME: This should ideally happen in the right order without explicitly; // doing this. We started seeing failing tests (eg, tutorial-hist-cumulative,; // JITLink turned on) with assertion failure in ~FinalizedAlloc after commit; // [cling] Move generators to ProcessSymbols JITDylib; // This likely changed the destruction order that caused the assertion to; // trigger.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:182,Testability,assert,assertion,182,"// FIXME: This should ideally happen in the right order without explicitly; // doing this. We started seeing failing tests (eg, tutorial-hist-cumulative,; // JITLink turned on) with assertion failure in ~FinalizedAlloc after commit; // [cling] Move generators to ProcessSymbols JITDylib; // This likely changed the destruction order that caused the assertion to; // trigger.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:349,Testability,assert,assertion,349,"// FIXME: This should ideally happen in the right order without explicitly; // doing this. We started seeing failing tests (eg, tutorial-hist-cumulative,; // JITLink turned on) with assertion failure in ~FinalizedAlloc after commit; // [cling] Move generators to ProcessSymbols JITDylib; // This likely changed the destruction order that caused the assertion to; // trigger.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:56,Safety,avoid,avoid,56,"// For JITLink, we only need a custom memory manager to avoid freeing the; // memory segments; the default InProcessMemoryManager (which is mostly; // copied above) already does slab allocation to keep all segments; // together which is needed for exception handling support.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:46,Testability,log,logErrorsToStdErr,46,"// This replaces llvm::orc::ExecutionSession::logErrorsToStdErr:",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:111,Performance,load,loaded,111,"// IncrementalExecutor has its own diagnostics (for; // now) that tries to guess which library needs to be; // loaded.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:310,Performance,load,loading,310,"// Reset the sections of all functions so that they end up in the same text; // section. This is important for TCling on macOS to catch exceptions raised; // by constructors, which requires unwinding information. The addresses in; // the __eh_frame table are relocated against a single __text section when; // loading the MachO binary, which breaks if the call sites of constructors; // end up in a separate init section.; // (see clang::TargetInfo::getStaticInitSectionSpecifier())",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:9,Integrability,inject,inject,9,"// Let's inject it",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:9,Security,inject,inject,9,"// Let's inject it",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:8,Integrability,interface,interface,8,"// This interface is allowed to return nullptr on a missing symbol without; // diagnostics.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:44,Testability,assert,assert,44,"// FIXME: We don't lock recursively. Can we assert it?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:111,Availability,avail,available,111,"/// Register a DefinitionGenerator to dynamically provide symbols for; /// generated code that are not already available within the process.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:159,Energy Efficiency,efficient,efficient,159,"// FIXME: Accept a LLVMContext as well, e.g. the one that was used for the; // particular module in Interpreter, CIFactory or BackendPasses (would be; // more efficient)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:4,Integrability,Inject,Inject,4,"/// Inject a symbol with a known address. Name is not linker mangled, i.e.; /// as known by the IR.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:4,Security,Inject,Inject,4,"/// Inject a symbol with a known address. Name is not linker mangled, i.e.; /// as known by the IR.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:95,Deployability,update,update,95,"/// @brief Get the TargetMachine used by the JIT.; /// Non-const because BackendPasses need to update OptLevel.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:202,Performance,concurren,concurrent,202,"// TODO: We only need the context for materialization. Instead of defining it; // here we might want to pass one in on a per-module basis.; //; // FIXME: Using a single context for all modules prevents concurrent; // compilation.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalJIT.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:398,Deployability,update,updated,398,"/// \brief Overrides the current DiagnosticConsumer to supress many warnings; /// issued as a result of incremental compilation (see `HandleDiagnostic()`).; ///; /// Diagnostics passing the filter are, by default, forwarded to the previous; /// DiagnosticConsumer instance. A different consumer may be specified via; /// `setTargetConsumer()`.; /// In that case, given that internal state might be updated as part of; /// `{Begin,End}SourceFile` (e.g. in TextDiagnosticPrinter), calls to such; /// functions will be forwarded to both, the user-specified and the original; /// consumer; however `HandleDiagnostic()` calls shall only be seen by the; /// former.; ///; /// On destruction, the original (i.e. overridden consumer) is restored.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:6,Availability,error,error,6,"// An error that we need to suppress.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:9,Availability,error,error,9,"// first error",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:21,Availability,error,errors,21,"// else we had other errors, too.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:233,Deployability,update,update,233,"// In principle, for simplicity, we preserve the old behavior of; // delivering diagnostics to just one consumer (that is why we don't emit; // to both), but we allow the ""sink"" to be changed.; // Note, however, that consumers might update their internal state in; // calls to, e.g. `BeginSourceFile()` or `EndSourceFile()` (actually,; // `TextDiagnosticPrinter` is an example of this), so in order to be able; // to restore the original consumer, we need to keep forwarding these; // calls also to `m_PrevClient` (see above).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:21,Usability,simpl,simplicity,21,"// In principle, for simplicity, we preserve the old behavior of; // delivering diagnostics to just one consumer (that is why we don't emit; // to both), but we allow the ""sink"" to be changed.; // Note, however, that consumers might update their internal state in; // calls to, e.g. `BeginSourceFile()` or `EndSourceFile()` (actually,; // `TextDiagnosticPrinter` is an example of this), so in order to be able; // to restore the original consumer, we need to keep forwarding these; // calls also to `m_PrevClient` (see above).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:146,Modifiability,plugin,plugins,146,"// Copied from Frontend/FrontendAction.cpp.; // FIXME: Remove when we switch to a tools-based cling driver.; // If the FrontendPluginRegistry has plugins before loading any shared library; // this means we have linked our plugins. This is useful when cling runs in; // embedded mode (in a shared library). This is the only feasible way to have; // plugins if cling is in a single shared library which is dlopen-ed with; // RTLD_LOCAL. In that situation plugins can still find the cling, clang and; // llvm symbols opened with local visibility.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:222,Modifiability,plugin,plugins,222,"// Copied from Frontend/FrontendAction.cpp.; // FIXME: Remove when we switch to a tools-based cling driver.; // If the FrontendPluginRegistry has plugins before loading any shared library; // this means we have linked our plugins. This is useful when cling runs in; // embedded mode (in a shared library). This is the only feasible way to have; // plugins if cling is in a single shared library which is dlopen-ed with; // RTLD_LOCAL. In that situation plugins can still find the cling, clang and; // llvm symbols opened with local visibility.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:348,Modifiability,plugin,plugins,348,"// Copied from Frontend/FrontendAction.cpp.; // FIXME: Remove when we switch to a tools-based cling driver.; // If the FrontendPluginRegistry has plugins before loading any shared library; // this means we have linked our plugins. This is useful when cling runs in; // embedded mode (in a shared library). This is the only feasible way to have; // plugins if cling is in a single shared library which is dlopen-ed with; // RTLD_LOCAL. In that situation plugins can still find the cling, clang and; // llvm symbols opened with local visibility.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:453,Modifiability,plugin,plugins,453,"// Copied from Frontend/FrontendAction.cpp.; // FIXME: Remove when we switch to a tools-based cling driver.; // If the FrontendPluginRegistry has plugins before loading any shared library; // this means we have linked our plugins. This is useful when cling runs in; // embedded mode (in a shared library). This is the only feasible way to have; // plugins if cling is in a single shared library which is dlopen-ed with; // RTLD_LOCAL. In that situation plugins can still find the cling, clang and; // llvm symbols opened with local visibility.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:161,Performance,load,loading,161,"// Copied from Frontend/FrontendAction.cpp.; // FIXME: Remove when we switch to a tools-based cling driver.; // If the FrontendPluginRegistry has plugins before loading any shared library; // this means we have linked our plugins. This is useful when cling runs in; // embedded mode (in a shared library). This is the only feasible way to have; // plugins if cling is in a single shared library which is dlopen-ed with; // RTLD_LOCAL. In that situation plugins can still find the cling, clang and; // llvm symbols opened with local visibility.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:237,Integrability,rout,routine,237,"// If we are not statically linked, we should register the pragmas ourselves; // because the dlopen happens after creating the clang::Preprocessor which; // calls RegisterBuiltinPragmas.; // FIXME: This can be avoided by refactoring our routine and moving it to; // the CIFactory. This requires an abstraction which allows us to; // conditionally create MultiplexingConsumers.; // Copied from Lex/Pragma.cpp; // Pragmas added by plugins",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:221,Modifiability,refactor,refactoring,221,"// If we are not statically linked, we should register the pragmas ourselves; // because the dlopen happens after creating the clang::Preprocessor which; // calls RegisterBuiltinPragmas.; // FIXME: This can be avoided by refactoring our routine and moving it to; // the CIFactory. This requires an abstraction which allows us to; // conditionally create MultiplexingConsumers.; // Copied from Lex/Pragma.cpp; // Pragmas added by plugins",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:429,Modifiability,plugin,plugins,429,"// If we are not statically linked, we should register the pragmas ourselves; // because the dlopen happens after creating the clang::Preprocessor which; // calls RegisterBuiltinPragmas.; // FIXME: This can be avoided by refactoring our routine and moving it to; // the CIFactory. This requires an abstraction which allows us to; // conditionally create MultiplexingConsumers.; // Copied from Lex/Pragma.cpp; // Pragmas added by plugins",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:210,Safety,avoid,avoided,210,"// If we are not statically linked, we should register the pragmas ourselves; // because the dlopen happens after creating the clang::Preprocessor which; // calls RegisterBuiltinPragmas.; // FIXME: This can be avoided by refactoring our routine and moving it to; // the CIFactory. This requires an abstraction which allows us to; // conditionally create MultiplexingConsumers.; // Copied from Lex/Pragma.cpp; // Pragmas added by plugins",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:13,Availability,error,errors,13,"// Check for errors...",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:19,Deployability,release,released,19,"// Module has been released from Codegen, reset the Diags now.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:19,Availability,error,error,19,"// If there was an error coming from the transformers.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:16,Availability,error,error,16,"// Roll back on error in initializers.; // T maybe pointing to freed memory after this call:; // Interpreter::unload; // IncrementalParser::deregisterTransaction; // TransactionPool::releaseTransaction",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:183,Deployability,release,releaseTransaction,183,"// Roll back on error in initializers.; // T maybe pointing to freed memory after this call:; // Interpreter::unload; // IncrementalParser::deregisterTransaction; // TransactionPool::releaseTransaction",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:3,Deployability,Update,Update,3,"// Update CodeGen to current optimization level, which might be different; // from what it had when constructed.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:29,Performance,optimiz,optimization,29,"// Update CodeGen to current optimization level, which might be different; // from what it had when constructed.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:19,Deployability,release,released,19,"// Module has been released from Codegen, reset the Diags now.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:19,Performance,queue,queue,19,"// Remove from the queue",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:3,Availability,Recover,Recover,3,"// Recover resources if we crash before exiting this method.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:3,Safety,Recover,Recover,3,"// Recover resources if we crash before exiting this method.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:27,Safety,avoid,avoid,27,"// FIXME: Pre-increment to avoid failing tests.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:41,Testability,test,tests,41,"// FIXME: Pre-increment to avoid failing tests.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:123,Integrability,wrap,wrapper,123,"// The completion point is set one a 1-based line/column numbering.; // It relies on the implementation to account for the wrapper extra line.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:3,Availability,Recover,Recover,3,"// Recover resources if we crash before exiting this method.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:3,Safety,Recover,Recover,3,"// Recover resources if we crash before exiting this method.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:57,Availability,error,error,57,"// If never entered the while block, there's a chance an error occured",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:54,Usability,clear,clear,54,"// Diags.Reset(/*soft=*/true);; // Diags.getClient()->clear();",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:116,Integrability,inject,inject,116,"// Don't protect against crashes if we cannot run anything.; // cling might also be in a PCH-generation mode; don't inject our Sema; // pointer into the PCH.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:116,Security,inject,inject,116,"// Don't protect against crashes if we cannot run anything.; // cling might also be in a PCH-generation mode; don't inject our Sema; // pointer into the PCH.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:12,Availability,avail,available,12,"// The next available unique sourcelocation offset. Skip the system sloc 0; // and any offset that may actually exist in the virtual file.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:33,Energy Efficiency,allocate,allocated,33,"///\brief Pool of reusable block-allocated transactions.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:21,Availability,avail,available,21,"/// Returns the next available unique source location. It is an offset into; /// the limitless virtual file. Each time this interface is used it bumps; /// an internal counter. This is very useful for using the various API in; /// clang which expect valid source locations.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:124,Integrability,interface,interface,124,"/// Returns the next available unique source location. It is an offset into; /// the limitless virtual file. Each time this interface is used it bumps; /// an internal counter. This is very useful for using the various API in; /// clang which expect valid source locations.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:220,Usability,Clear,ClearDiagClient,220,"///\brief Commits a transaction if it was complete. I.e pipes it; /// through the consumer chain, including codegen.; ///; ///\param[in] PRT - the transaction (ParseResultTransaction) to be; /// committed; ///\param[in] ClearDiagClient - Reset the DiagnosticsEngine client or not; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:65,Integrability,wrap,wrapper,65,"///\brief Returns the most recent transaction with an input line wrapper,; /// which could well be the current one.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/IncrementalParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:22,Modifiability,plugin,plugins,22,"// Load any requested plugins.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Performance,Load,Load,3,"// Load any requested plugins.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:59,Modifiability,plugin,plugins,59,"// Honor set of `-mllvm` options. This should happen AFTER plugins have been; // loaded!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:81,Performance,load,loaded,81,"// Honor set of `-mllvm` options. This should happen AFTER plugins have been; // loaded!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:271,Usability,simpl,simple,271,"// When using C++ modules, we setup the callbacks now that we have them; // ready before we parse code for the first time. Without C++ modules; // we can't setup the calls now because the clang PCH currently just; // overwrites it in the Initialize method and we have no simple way to; // initialize them earlier. We handle the non-modules case below.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:162,Availability,error,errors,162,"// Initialization is not going well, but we still have to commit what; // we've been given. Don't clear the DiagnosticsConsumer so the caller; // can inspect any errors that have been generated.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:98,Usability,clear,clear,98,"// Initialization is not going well, but we still have to commit what; // we've been given. Don't clear the DiagnosticsConsumer so the caller; // can inspect any errors that have been generated.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:60,Safety,safe,safely,60,"// When not using C++ modules, we now have a PCH and we can safely setup; // our callbacks without fearing that they get overwritten by clang code.; // The modules setup is handled above.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:159,Performance,optimiz,optimization,159,"// Never true, but don't tell the compiler.; // Force symbols needed by runtime to be included in binaries.; // Prevents stripping the symbol due to dead-code optimization.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:8,Integrability,bridg,bridge,8,"// The ""bridge"" between the interpreters.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:32,Availability,alive,alive,32,"// We want to keep the callback alive during the shutdown of Sema, CodeGen; // and the ASTContext. For that to happen we shut down the IncrementalParser; // explicitly, before the implicit destruction (through the unique_ptr) of; // the callbacks.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:126,Availability,down,down,126,"// We want to keep the callback alive during the shutdown of Sema, CodeGen; // and the ASTContext. For that to happen we shut down the IncrementalParser; // explicitly, before the implicit destruction (through the unique_ptr) of; // the callbacks.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:223,Availability,error,error,223,"// The Initialize() function is called twice in CUDA mode. The first time; // the host interpreter is initialized and the second time the device; // interpreter is initialized. Without this if statement, a redefinition; // error would occur because process(), declare(), and parse() are designed; // to process the code in the host and device interpreter when called by the; // host interpreter instance. This means that first the Initialize(); // function of the host interpreter is called and the initialization code is; // processed in the host and device interpreter. It then calls the; // Initialize() function of the device interpreter and throws an error; // because the code was already processed in the host Initialize() function.; //; // declare() is only used to generate a valid Transaction object",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:656,Availability,error,error,656,"// The Initialize() function is called twice in CUDA mode. The first time; // the host interpreter is initialized and the second time the device; // interpreter is initialized. Without this if statement, a redefinition; // error would occur because process(), declare(), and parse() are designed; // to process the code in the host and device interpreter when called by the; // host interpreter instance. This means that first the Initialize(); // function of the host interpreter is called and the initialization code is; // processed in the host and device interpreter. It then calls the; // Initialize() function of the device interpreter and throws an error; // because the code was already processed in the host Initialize() function.; //; // declare() is only used to generate a valid Transaction object",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:74,Performance,load,loading,74,"// PCH/PCM-generation defines syntax-only. If we include definitions,; // loading the PCH/PCM will make the runtime barf about dupe definitions.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:65,Availability,error,error,65,"// FIXME: gCling should be const so assignemnt is a compile time error.; // Currently the name mangling is coming up wrong for the const version; // (on OS X at least, so probably Linux too) and the JIT thinks the symbol; // is undefined in a child Interpreter. And speaking of children, should; // gCling actually be thisCling, so a child Interpreter can only access; // itself? One could use a macro (simillar to __dso_handle) to block; // assignemnt and get around the mangling issue.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:361,Security,access,access,361,"// FIXME: gCling should be const so assignemnt is a compile time error.; // Currently the name mangling is coming up wrong for the const version; // (on OS X at least, so probably Linux too) and the JIT thinks the symbol; // is undefined in a child Interpreter. And speaking of children, should; // gCling actually be thisCling, so a child Interpreter can only access; // itself? One could use a macro (simillar to __dso_handle) to block; // assignemnt and get around the mangling issue.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:581,Availability,fault,fault,581,"// While __dso_handle is still overriden in the JIT below,; // #define __dso_handle is used to mitigate the following problems:; // 1. Type of __dso_handle is void* making assignemnt to it legal; // 2. Making it void* const in cling would mean possible type mismatch; // 3. Cannot override void* __dso_handle in child Interpreter; // 4. On Unix where the symbol actually exists, __dso_handle will be; // linked into the code before the JIT can say otherwise, so:; // [cling] __dso_handle // codegened __dso_handle always printed; // [cling] __cxa_atexit(f, 0, __dso_handle) // seg-fault; // 5. Code that actually uses __dso_handle will fail as a declaration is; // needed which is not possible with the macro.; // 6. Assuming 4 is sorted out in user code, calling __cxa_atexit through; // atexit below isn't linking to the __dso_handle symbol.; // Use __cxa_atexit to intercept all of the following routines",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:899,Integrability,rout,routines,899,"// While __dso_handle is still overriden in the JIT below,; // #define __dso_handle is used to mitigate the following problems:; // 1. Type of __dso_handle is void* making assignemnt to it legal; // 2. Making it void* const in cling would mean possible type mismatch; // 3. Cannot override void* __dso_handle in child Interpreter; // 4. On Unix where the symbol actually exists, __dso_handle will be; // linked into the code before the JIT can say otherwise, so:; // [cling] __dso_handle // codegened __dso_handle always printed; // [cling] __cxa_atexit(f, 0, __dso_handle) // seg-fault; // 5. Code that actually uses __dso_handle will fail as a declaration is; // needed which is not possible with the macro.; // 6. Assuming 4 is sorted out in user code, calling __cxa_atexit through; // atexit below isn't linking to the __dso_handle symbol.; // Use __cxa_atexit to intercept all of the following routines",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:31,Integrability,inject,injected,31,"// Override the helper symbols injected by GenericLLVMIRPlatformSupport,; // before anything can be emitted.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:31,Security,inject,injected,31,"// Override the helper symbols injected by GenericLLVMIRPlatformSupport,; // before anything can be emitted.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:169,Performance,load,loader,169,"// According to the PE Format spec, in ""The .tls Section""; // (http://www.microsoft.com/whdc/system/platform/firmware/PECOFF.mspx):; // 2. When a thread is created, the loader communicates the address; // of the thread's TLS array by placing the address of the thread; // environment block (TEB) in the FS register. A pointer to the TLS; // array is at the offset of 0x2C from the beginning of TEB. This; // behavior is Intel x86-specific.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:60,Deployability,update,update,60,"// If the information about this identifier is out of date, update it from; // the external source.; // FIXME: getIdentifierInfo will probably do this for us once we update; // clang. If so, please remove this manual update.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:166,Deployability,update,update,166,"// If the information about this identifier is out of date, update it from; // the external source.; // FIXME: getIdentifierInfo will probably do this for us once we update; // clang. If so, please remove this manual update.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:217,Deployability,update,update,217,"// If the information about this identifier is out of date, update it from; // the external source.; // FIXME: getIdentifierInfo will probably do this for us once we update; // clang. If so, please remove this manual update.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:35,Performance,load,loaded,35,"///\returns true if the module was loaded.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:177,Availability,error,error,177,"// We cannot use #pragma clang module import because the on-demand modules; // may load a module in the middle of a function body for example. In this; // case this triggers an error:; // fatal error: import of module '...' appears within function '...'; //; // if (declare(""#pragma clang module import \"""" + M->Name + ""\"""") ==; // kSuccess); // return true;; // FIXME: What about importing submodules such as std.blah. This disables; // this functionality.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:194,Availability,error,error,194,"// We cannot use #pragma clang module import because the on-demand modules; // may load a module in the middle of a function body for example. In this; // case this triggers an error:; // fatal error: import of module '...' appears within function '...'; //; // if (declare(""#pragma clang module import \"""" + M->Name + ""\"""") ==; // kSuccess); // return true;; // FIXME: What about importing submodules such as std.blah. This disables; // this functionality.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:83,Performance,load,load,83,"// We cannot use #pragma clang module import because the on-demand modules; // may load a module in the middle of a function body for example. In this; // case this triggers an error:; // fatal error: import of module '...' appears within function '...'; //; // if (declare(""#pragma clang module import \"""" + M->Name + ""\"""") ==; // kSuccess); // return true;; // FIXME: What about importing submodules such as std.blah. This disables; // this functionality.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:114,Performance,load,loading,114,"// Fix C++20 builds caused by commit:; // llvm-project/commit/574ee1c02ef73b66c5957cf93888234b0471695f; // We are loading clang modules here and not C++20 modules",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:110,Modifiability,extend,extend,110,"// When doing parseForModule avoid warning about the user code; // being loaded ... we probably might as well extend this to; // ALL warnings ... but this will suffice for now (working; // around a real bug in QT :().",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:73,Performance,load,loaded,73,"// When doing parseForModule avoid warning about the user code; // being loaded ... we probably might as well extend this to; // ALL warnings ... but this will suffice for now (working; // around a real bug in QT :().",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:29,Safety,avoid,avoid,29,"// When doing parseForModule avoid warning about the user code; // being loaded ... we probably might as well extend this to; // ALL warnings ... but this will suffice for now (working; // around a real bug in QT :().",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:84,Availability,error,errors,84,"// Ignore diagnostics when we tab complete.; // This is because we get redefinition errors due to the import of the decls.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:6,Integrability,wrap,wrapPoint,6,"// If wrapPoint is > length of input, nothing is wrapped!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:49,Integrability,wrap,wrapped,49,"// If wrapPoint is > length of input, nothing is wrapped!",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:770,Availability,error,error,770,"/*; In CallFunc we currently always (intentionally and somewhat necessarily); always fully specify member function template, however this can lead to; an ambiguity with a class template. For example in; roottest/cling/functionTemplate we get:. input_line_171:3:15: warning: lookup of 'set' in member access expression; is ambiguous; using member of 't'; ((t*)obj)->set<int>(*(int*)args[0]);; ^; roottest/cling/functionTemplate/t.h:19:9: note: lookup in the object type; 't' refers here; void set(T targ) {; ^; /usr/include/c++/4.4.5/bits/stl_set.h:87:11: note: lookup from the; current scope refers here; class set; ^; This is an intention warning implemented in clang, see; http://llvm.org/viewvc/llvm-project?view=revision&revision=105518. which 'should have been' an error:. C++ [basic.lookup.classref] requires this to be an error, but,; because it's hard to work around, Clang downgrades it to a warning as; an extension.</p>. // C++98 [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the identifier; // must be looked up to determine whether the < is the beginning of a; // template argument list (14.2) or a less-than operator. The identifier; // is first looked up in the class of the object expression. If the; // identifier is not found, it is then looked up in the context of the; // entire postfix-expression and shall name a class or function template. If; // the lookup in the class of the object expression finds a template, the; // name is also looked up in the context of the entire postfix-expression; // and; // -- if the name is not found, the name found in the class of the; // object expression is used, otherwise; // -- if the name is found in the context of the entire postfix-expression; // and does not name a class template, the name found in the class of the; // object expression is used, otherwise; // -- if the name found is a class template, it must refer to ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:829,Availability,error,error,829,"/*; In CallFunc we currently always (intentionally and somewhat necessarily); always fully specify member function template, however this can lead to; an ambiguity with a class template. For example in; roottest/cling/functionTemplate we get:. input_line_171:3:15: warning: lookup of 'set' in member access expression; is ambiguous; using member of 't'; ((t*)obj)->set<int>(*(int*)args[0]);; ^; roottest/cling/functionTemplate/t.h:19:9: note: lookup in the object type; 't' refers here; void set(T targ) {; ^; /usr/include/c++/4.4.5/bits/stl_set.h:87:11: note: lookup from the; current scope refers here; class set; ^; This is an intention warning implemented in clang, see; http://llvm.org/viewvc/llvm-project?view=revision&revision=105518. which 'should have been' an error:. C++ [basic.lookup.classref] requires this to be an error, but,; because it's hard to work around, Clang downgrades it to a warning as; an extension.</p>. // C++98 [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the identifier; // must be looked up to determine whether the < is the beginning of a; // template argument list (14.2) or a less-than operator. The identifier; // is first looked up in the class of the object expression. If the; // identifier is not found, it is then looked up in the context of the; // entire postfix-expression and shall name a class or function template. If; // the lookup in the class of the object expression finds a template, the; // name is also looked up in the context of the entire postfix-expression; // and; // -- if the name is not found, the name found in the class of the; // object expression is used, otherwise; // -- if the name is found in the context of the entire postfix-expression; // and does not name a class template, the name found in the class of the; // object expression is used, otherwise; // -- if the name found is a class template, it must refer to ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:882,Availability,down,downgrades,882,"/*; In CallFunc we currently always (intentionally and somewhat necessarily); always fully specify member function template, however this can lead to; an ambiguity with a class template. For example in; roottest/cling/functionTemplate we get:. input_line_171:3:15: warning: lookup of 'set' in member access expression; is ambiguous; using member of 't'; ((t*)obj)->set<int>(*(int*)args[0]);; ^; roottest/cling/functionTemplate/t.h:19:9: note: lookup in the object type; 't' refers here; void set(T targ) {; ^; /usr/include/c++/4.4.5/bits/stl_set.h:87:11: note: lookup from the; current scope refers here; class set; ^; This is an intention warning implemented in clang, see; http://llvm.org/viewvc/llvm-project?view=revision&revision=105518. which 'should have been' an error:. C++ [basic.lookup.classref] requires this to be an error, but,; because it's hard to work around, Clang downgrades it to a warning as; an extension.</p>. // C++98 [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the identifier; // must be looked up to determine whether the < is the beginning of a; // template argument list (14.2) or a less-than operator. The identifier; // is first looked up in the class of the object expression. If the; // identifier is not found, it is then looked up in the context of the; // entire postfix-expression and shall name a class or function template. If; // the lookup in the class of the object expression finds a template, the; // name is also looked up in the context of the entire postfix-expression; // and; // -- if the name is not found, the name found in the class of the; // object expression is used, otherwise; // -- if the name is found in the context of the entire postfix-expression; // and does not name a class template, the name found in the class of the; // object expression is used, otherwise; // -- if the name found is a class template, it must refer to ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:300,Security,access,access,300,"/*; In CallFunc we currently always (intentionally and somewhat necessarily); always fully specify member function template, however this can lead to; an ambiguity with a class template. For example in; roottest/cling/functionTemplate we get:. input_line_171:3:15: warning: lookup of 'set' in member access expression; is ambiguous; using member of 't'; ((t*)obj)->set<int>(*(int*)args[0]);; ^; roottest/cling/functionTemplate/t.h:19:9: note: lookup in the object type; 't' refers here; void set(T targ) {; ^; /usr/include/c++/4.4.5/bits/stl_set.h:87:11: note: lookup from the; current scope refers here; class set; ^; This is an intention warning implemented in clang, see; http://llvm.org/viewvc/llvm-project?view=revision&revision=105518. which 'should have been' an error:. C++ [basic.lookup.classref] requires this to be an error, but,; because it's hard to work around, Clang downgrades it to a warning as; an extension.</p>. // C++98 [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the identifier; // must be looked up to determine whether the < is the beginning of a; // template argument list (14.2) or a less-than operator. The identifier; // is first looked up in the class of the object expression. If the; // identifier is not found, it is then looked up in the context of the; // entire postfix-expression and shall name a class or function template. If; // the lookup in the class of the object expression finds a template, the; // name is also looked up in the context of the entire postfix-expression; // and; // -- if the name is not found, the name found in the class of the; // object expression is used, otherwise; // -- if the name is found in the context of the entire postfix-expression; // and does not name a class template, the name found in the class of the; // object expression is used, otherwise; // -- if the name found is a class template, it must refer to ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:990,Security,access,access,990,"/*; In CallFunc we currently always (intentionally and somewhat necessarily); always fully specify member function template, however this can lead to; an ambiguity with a class template. For example in; roottest/cling/functionTemplate we get:. input_line_171:3:15: warning: lookup of 'set' in member access expression; is ambiguous; using member of 't'; ((t*)obj)->set<int>(*(int*)args[0]);; ^; roottest/cling/functionTemplate/t.h:19:9: note: lookup in the object type; 't' refers here; void set(T targ) {; ^; /usr/include/c++/4.4.5/bits/stl_set.h:87:11: note: lookup from the; current scope refers here; class set; ^; This is an intention warning implemented in clang, see; http://llvm.org/viewvc/llvm-project?view=revision&revision=105518. which 'should have been' an error:. C++ [basic.lookup.classref] requires this to be an error, but,; because it's hard to work around, Clang downgrades it to a warning as; an extension.</p>. // C++98 [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the identifier; // must be looked up to determine whether the < is the beginning of a; // template argument list (14.2) or a less-than operator. The identifier; // is first looked up in the class of the object expression. If the; // identifier is not found, it is then looked up in the context of the; // entire postfix-expression and shall name a class or function template. If; // the lookup in the class of the object expression finds a template, the; // name is also looked up in the context of the entire postfix-expression; // and; // -- if the name is not found, the name found in the class of the; // object expression is used, otherwise; // -- if the name is found in the context of the entire postfix-expression; // and does not name a class template, the name found in the class of the; // object expression is used, otherwise; // -- if the name found is a class template, it must refer to ",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:19,Integrability,wrap,wrapper,19,"//; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:11,Integrability,wrap,wrapper,11,"// Get the wrapper function pointer from the ExecutionEngine (the JIT).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:20,Testability,stub,stub,20,"// Don't generate a stub for a destructor that does nothing; // This also fixes printing of lambdas and C structures as they; // have no dtor test/ValuePrinter/Destruction.C",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:142,Testability,test,test,142,"// Don't generate a stub for a destructor that does nothing; // This also fixes printing of lambdas and C structures as they; // have no dtor test/ValuePrinter/Destruction.C",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Integrability,Wrap,Wrap,3,"// Wrap the expression",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:11,Integrability,wrap,wrapped,11,"// We have wrapped and need to disable warnings that are caused by; // non-default C++ at the prompt:",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:6,Integrability,wrap,wrapper,6,"// no wrapper to run",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:2,Performance,Cache,CacheFail,2,/*CacheFail*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:61,Performance,load,load,61,"// Not a source file (canonical name is non-empty) but can't load.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Usability,Clear,Clear,3,"// Clear any stored states that reference the llvm::Module.; // Do it first in case",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:13,Performance,cache,cached,13,"// Clear any cached transaction states.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Usability,Clear,Clear,3,"// Clear any cached transaction states.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:68,Integrability,wrap,wrapper,68,"// The evaluation should happen on the global scope, because of the wrapper; // that is created.; //; // We can't PushDeclContext, because we don't have scope.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Safety,Avoid,Avoid,3,"// Avoid assertion in the ~IncrementalParser.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:9,Testability,assert,assertion,9,"// Avoid assertion in the ~IncrementalParser.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Interpreter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:11,Integrability,wrap,wraps,11,"/// \brief wraps an ExternalASTSource in an ExternalSemaSource. No functional; /// difference between the original source and this wrapper intended.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:131,Integrability,wrap,wrapper,131,"/// \brief wraps an ExternalASTSource in an ExternalSemaSource. No functional; /// difference between the original source and this wrapper intended.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:162,Availability,recover,recovered,162,"/// \brief Provides last resort lookup for failed unqualified lookups.; ///; /// This gets translated into InterpreterCallback's call.; ///; ///\param[out] R The recovered symbol.; ///\param[in] S The scope in which the lookup failed.; ///; ///\returns true if a suitable declaration is found.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:162,Safety,recover,recovered,162,"/// \brief Provides last resort lookup for failed unqualified lookups.; ///; /// This gets translated into InterpreterCallback's call.; ///; ///\param[out] R The recovered symbol.; ///\param[in] S The scope in which the lookup failed.; ///; ///\returns true if a suitable declaration is found.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:3,Integrability,Wrap,Wrap,3,"// Wrap the existing source in a wrapper so that it becomes an; // external sema source. This way we can use the existing multiplexer; // for this.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:33,Integrability,wrap,wrapper,33,"// Wrap the existing source in a wrapper so that it becomes an; // external sema source. This way we can use the existing multiplexer; // for this.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:3,Integrability,Wrap,Wrap,3,"// Wrap both the existing source and our source. We give our own; // source preference to the existing one.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:101,Deployability,patch,patch,101,"// FIXME: we have to remove the external source at destruction time. Needs; // further tweaks of the patch in clang. This will be done later once the; // patch is in clang's mainline.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:154,Deployability,patch,patch,154,"// FIXME: we have to remove the external source at destruction time. Needs; // further tweaks of the patch in clang. This will be done later once the; // patch is in clang's mainline.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:62,Testability,test,testsuite,62,"// end namespace cling; // TODO: Make the build system in the testsuite aware how to build that class; // and extract it out there again.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:55,Testability,test,test,55,"// Only for demo resolve all unknown objects to cling::test::Tester",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:61,Testability,Test,Tester,61,"// Only for demo resolve all unknown objects to cling::test::Tester",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:61,Availability,recover,recover,61,"// Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:61,Safety,recover,recover,61,"// Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:100,Security,access,access,100,"// FIXME: Figure out better way to handle:; // C++ [basic.lookup.classref]p1:; // In a class member access expression (5.2.5), if the . or -> token is; // immediately followed by an identifier followed by a <, the; // identifier must be looked up to determine whether the < is the; // beginning of a template argument list (14.2) or a less-than operator.; // The identifier is first looked up in the class of the object; // expression. If the identifier is not found, it is then looked up in; // the context of the entire postfix-expression and shall name a class; // or function template.; //; // We want to ignore object(.|->)member<template>",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:34,Performance,cache,cached,34,"// TODO: check for . or -> in the cached token stream",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:7,Testability,test,test,7,"// end test",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:198,Usability,clear,clear,198,"// Save and restore the state of the Parser and lexer.; // Note: ROOT::Internal::ParsingStateRAII also save and restore the state of; // Sema, including pending instantiation for example. It is not clear; // whether we need to do so here too or whether we need to also see the; // ""on-going"" semantic information ... For now, we leave Sema untouched.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:108,Availability,error,error,108,"//; // Tell Sema we are not in the process of doing an instantiation.; // fSFINAETrap will reset any SFINAE error count of a SFINAE context from ""above"".; // fSFINAETrap will reset this value to the previous one; the line below is overwriting; // the value set by fSFINAETrap.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:106,Integrability,wrap,wrapper,106,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:18,Performance,cache,cached,18,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:193,Performance,cache,cached,193,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:634,Performance,cache,cache,634,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:227,Safety,safe,safe,227,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:599,Safety,avoid,avoid,599,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:31,Performance,cache,cached,31,"// Compare the contents of the cached buffer and the string we should; // process. If there are hash collisions this assert should trigger; // making it easier to debug.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:96,Security,hash,hash,96,"// Compare the contents of the cached buffer and the string we should; // process. If there are hash collisions this assert should trigger; // making it easier to debug.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:117,Testability,assert,assert,117,"// Compare the contents of the cached buffer and the string we should; // process. If there are hash collisions this assert should trigger; // making it easier to debug.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:198,Integrability,rout,routine,198,"// The Preprocessor will try to set the NumCreatedFIDs but we are; // reparsing and this value was already set. Force reset it to avoid; // triggering an assertion in the setNumCreatedFIDsForFileID routine.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:130,Safety,avoid,avoid,130,"// The Preprocessor will try to set the NumCreatedFIDs but we are; // reparsing and this value was already set. Force reset it to avoid; // triggering an assertion in the setNumCreatedFIDsForFileID routine.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:154,Testability,assert,assertion,154,"// The Preprocessor will try to set the NumCreatedFIDs but we are; // reparsing and this value was already set. Force reset it to avoid; // triggering an assertion in the setNumCreatedFIDsForFileID routine.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:2,Performance,Load,LoadedID,2,/*LoadedID*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:2,Performance,Load,LoadedOffset,2,/*LoadedOffset*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:281,Availability,error,error,281,"///\brief Look for a tag decl based on its name; ///; ///\param declName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultDecl pointer that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:183,Deployability,update,updated,183,"///\brief Look for a tag decl based on its name; ///; ///\param declName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultDecl pointer that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:43,Testability,assert,assertion,43,"// To use Lookup::Named we need to fit the assertion:; // ((!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext(); // || cast<TagDecl>(LookupCtx)->isCompleteDefinition(); // || cast<TagDecl>(LookupCtx)->isBeingDefined()) &&; // ""Declaration context must already be complete!""),; // function LookupQualifiedName, file SemaLookup.cpp, line 1614.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:25,Energy Efficiency,schedul,schedule,25,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:88,Testability,Assert,Assertion,88,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:282,Usability,simpl,simple,282,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:52,Integrability,rout,route,52,"// If there is an ambiguity, we need to go the long route.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:295,Availability,error,error,295,"///\brief Look for a tag decl based on its name; ///; ///\param typeName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultType reference to QualType that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:197,Deployability,update,updated,197,"///\brief Look for a tag decl based on its name; ///; ///\param typeName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultType reference to QualType that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:22,Safety,avoid,avoid,22,"// Use this syntax to avoid the redudant tests in substr.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:41,Testability,test,tests,41,"// Use this syntax to avoid the redudant tests in substr.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:25,Energy Efficiency,schedul,schedule,25,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).; // break;; // the next code executed must be the TransactionRAII below",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:88,Testability,Assert,Assertion,88,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).; // break;; // the next code executed must be the TransactionRAII below",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:282,Usability,simpl,simple,282,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).; // break;; // the next code executed must be the TransactionRAII below",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:29,Testability,assert,assert,29,"//; // Prevent failing on an assert in TryAnnotateCXXScopeToken.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Availability,error,error,3,"// error path",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Availability,error,error,3,"// error path",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Integrability,Depend,Dependent,3,"// Dependent type.; // We do not accept these.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:76,Integrability,depend,dependent,76,"// Type name qualified with ""template"".; // Note: Do we need to check for a dependent type here?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:2,Performance,Load,LoadedID,2,/*LoadedID*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:2,Performance,Load,LoadedOffset,2,/*LoadedOffset*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Availability,error,error,3,"// error path",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:29,Testability,assert,assert,29,"//; // Prevent failing on an assert in TryAnnotateCXXScopeToken.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Availability,error,error,3,"// error path",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Availability,error,error,3,"// error path",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:33,Availability,failure,failure,33,"// Forward decl or instantiation failure, we cannot use it.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:33,Availability,failure,failure,33,"// Forward decl or instantiation failure, we cannot use it.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:371,Safety,avoid,avoid,371,"// Use a very simple parse step that dectect whether the name search (which; // is already supposed to be an unqualified name) is a simple identifier,; // a constructor name or a destructor name. In those 3 cases, we can easily; // create the UnqualifiedId object that would have resulted from the 'real'; // parse. By using this direct creation of the UnqualifiedId, we avoid the; // 'permanent' cost associated with creating a memory buffer and the; // associated FileID.; // If the name is a template or an operator, we revert to the regular parse; // (and its associated permanent cost).; // In the operator case, the additional work is in the case of a conversion; // operator where we would need to 'quickly' parse the type itself (if want; // to avoid the permanent cost).; // In the case with the template the problem gets a bit worse as we need to; // handle potentially arbitrary spaces and ordering; // ('const int' vs 'int const', etc.)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:753,Safety,avoid,avoid,753,"// Use a very simple parse step that dectect whether the name search (which; // is already supposed to be an unqualified name) is a simple identifier,; // a constructor name or a destructor name. In those 3 cases, we can easily; // create the UnqualifiedId object that would have resulted from the 'real'; // parse. By using this direct creation of the UnqualifiedId, we avoid the; // 'permanent' cost associated with creating a memory buffer and the; // associated FileID.; // If the name is a template or an operator, we revert to the regular parse; // (and its associated permanent cost).; // In the operator case, the additional work is in the case of a conversion; // operator where we would need to 'quickly' parse the type itself (if want; // to avoid the permanent cost).; // In the case with the template the problem gets a bit worse as we need to; // handle potentially arbitrary spaces and ordering; // ('const int' vs 'int const', etc.)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:14,Usability,simpl,simple,14,"// Use a very simple parse step that dectect whether the name search (which; // is already supposed to be an unqualified name) is a simple identifier,; // a constructor name or a destructor name. In those 3 cases, we can easily; // create the UnqualifiedId object that would have resulted from the 'real'; // parse. By using this direct creation of the UnqualifiedId, we avoid the; // 'permanent' cost associated with creating a memory buffer and the; // associated FileID.; // If the name is a template or an operator, we revert to the regular parse; // (and its associated permanent cost).; // In the operator case, the additional work is in the case of a conversion; // operator where we would need to 'quickly' parse the type itself (if want; // to avoid the permanent cost).; // In the case with the template the problem gets a bit worse as we need to; // handle potentially arbitrary spaces and ordering; // ('const int' vs 'int const', etc.)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:132,Usability,simpl,simple,132,"// Use a very simple parse step that dectect whether the name search (which; // is already supposed to be an unqualified name) is a simple identifier,; // a constructor name or a destructor name. In those 3 cases, we can easily; // create the UnqualifiedId object that would have resulted from the 'real'; // parse. By using this direct creation of the UnqualifiedId, we avoid the; // 'permanent' cost associated with creating a memory buffer and the; // associated FileID.; // If the name is a template or an operator, we revert to the regular parse; // (and its associated permanent cost).; // In the operator case, the additional work is in the case of a conversion; // operator where we would need to 'quickly' parse the type itself (if want; // to avoid the permanent cost).; // In the case with the template the problem gets a bit worse as we need to; // handle potentially arbitrary spaces and ordering; // ('const int' vs 'int const', etc.)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:17,Safety,avoid,avoid,17,"// See if we can avoid creating the buffer, for now we just look for; // simple indentifier, constructor and destructor.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:73,Usability,simpl,simple,73,"// See if we can avoid creating the buffer, for now we just look for; // simple indentifier, constructor and destructor.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:20,Usability,simpl,simple,20,"// We either have a simple type or a constructor name",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:2,Performance,Load,LoadedID,2,/*LoadedID*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:2,Performance,Load,LoadedOffset,2,/*LoadedOffset*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:24,Availability,failure,failure,24,"//; // Check for lookup failure.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:177,Availability,failure,failure,177,"//; // Convert the passed decl into a nested name specifier,; // a scope spec, and a decl context.; //; // Do this 'early' to save on the expansive parser setup,; // in case of failure.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:24,Availability,failure,failure,24,"//; // Check for lookup failure.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:24,Availability,failure,failure,24,"//; // Check for lookup failure.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:13,Availability,failure,failure,13,"// Deduction failure.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:34,Usability,usab,usable,34,"// if one of the arguments is not usable return empty.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:24,Availability,failure,failure,24,"//; // Check for lookup failure.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:51,Performance,Cache,Cache,51,"// getStringType can be called multiple times with Cache being null, and; // the local cache should be discarded when that occurs.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:87,Performance,cache,cache,87,"// getStringType can be called multiple times with Cache being null, and; // the local cache should be discarded when that occurs.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/LookupHelper.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:53,Integrability,interface,interface,53,"// FIXME: it'd be better to introduce a new Callback interface type; // that does not allow multiplexing, and thus enforces that there; // is only one single listener.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp:55,Performance,cache,cache,55,"///\brief cling_runtime_internal_throwIfInvalidPointer cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp:69,Integrability,depend,dependent,69,"// It is unclear whether this is the correct cast if the type; // is dependent. Hence, For now, we do not expect SynthesizeCheck to; // be run on a function template. It should be run only on function; // instances.; // When this is actually insert in a function template, it seems that; // clang r272382 when instantiating the templates drops one of the part; // of the implicit cast chain.; // Namely in:; /*; `-ImplicitCastExpr 0x1010cea90 <col:4> 'const void *' <BitCast>; `-ImplicitCastExpr 0x1026e0bc0 <col:4> 'const class TAttMarker *'; <UncheckedDerivedToBase (TAttMarker)>; `-ImplicitCastExpr 0x1026e0b48 <col:4> 'class TGraph *' <LValueToRValue>; `-DeclRefExpr 0x1026e0b20 <col:4> 'class TGraph *' lvalue Var 0x1026e09c0; 'g5' 'class TGraph *'; */; // It drops the 2nd lines (ImplicitCastExpr UncheckedDerivedToBase); // clang r227800 seems to actually keep that lines during instantiation.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp:69,Integrability,depend,dependent,69,"// It is unclear whether this is the correct cast if the type; // is dependent. Hence, For now, we do not expect SynthesizeCheck to; // be run on a function template. It should be run only on function; // instances.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/NullDerefProtectionTransformer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp:670,Availability,avail,available,670,"//--------------------------------------------------------------------*- C++ -*-; // CLING - the C++ LLVM-based InterpreterG :); // author: Guilherme Amadio <amadio@cern.ch>; //; // This file is dual-licensed: you can choose to license it under the University; // of Illinois Open Source License or the GNU Lesser General Public License. See; // LICENSE.TXT for details.; //------------------------------------------------------------------------------; //; // This file implements a JITEventListener object that tells perf about JITted; // symbols using perf map files (/tmp/perf-%d.map, where %d = pid of process).; //; // Documentation for this perf jit interface is available at:; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jit-interface.txt; //; //------------------------------------------------------------------------------",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp:657,Integrability,interface,interface,657,"//--------------------------------------------------------------------*- C++ -*-; // CLING - the C++ LLVM-based InterpreterG :); // author: Guilherme Amadio <amadio@cern.ch>; //; // This file is dual-licensed: you can choose to license it under the University; // of Illinois Open Source License or the GNU Lesser General Public License. See; // LICENSE.TXT for details.; //------------------------------------------------------------------------------; //; // This file implements a JITEventListener object that tells perf about JITted; // symbols using perf map files (/tmp/perf-%d.map, where %d = pid of process).; //; // Documentation for this perf jit interface is available at:; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jit-interface.txt; //; //------------------------------------------------------------------------------",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp:786,Integrability,interface,interface,786,"//--------------------------------------------------------------------*- C++ -*-; // CLING - the C++ LLVM-based InterpreterG :); // author: Guilherme Amadio <amadio@cern.ch>; //; // This file is dual-licensed: you can choose to license it under the University; // of Illinois Open Source License or the GNU Lesser General Public License. See; // LICENSE.TXT for details.; //------------------------------------------------------------------------------; //; // This file implements a JITEventListener object that tells perf about JITted; // symbols using perf map files (/tmp/perf-%d.map, where %d = pid of process).; //; // Documentation for this perf jit interface is available at:; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jit-interface.txt; //; //------------------------------------------------------------------------------",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp:189,Availability,error,errors,189,"// For each symbol, we want to check its address and size; // if it's a function and write the information to the perf; // map file, otherwise we just ignore the symbol and any; // related errors. This implementation is adapted from LLVM:; // llvm/src/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp:220,Energy Efficiency,adapt,adapted,220,"// For each symbol, we want to check its address and size; // if it's a function and write the information to the perf; // map file, otherwise we just ignore the symbol and any; // related errors. This implementation is adapted from LLVM:; // llvm/src/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp:220,Modifiability,adapt,adapted,220,"// For each symbol, we want to check its address and size; // if it's a function and write the information to the perf; // map file, otherwise we just ignore the symbol and any; // related errors. This implementation is adapted from LLVM:; // llvm/src/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/PerfJITEventListener.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Threading.h:9,Deployability,Release,Release,9,"//\brief Release the lock by setting the false to false.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Threading.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Threading.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:71,Testability,assert,assert,71,"// FIXME: Enable this once we have a good control on the ownership.; //assert(m_Module.use_count() <= 1 && ""There is still a reference!"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:55,Availability,rollback,rollback,55,"// Ensure `NS` is unloaded from the AST on transaction rollback, e.g. '.undo X'",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:55,Deployability,rollback,rollback,55,"// Ensure `NS` is unloaded from the AST on transaction rollback, e.g. '.undo X'",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:72,Usability,undo,undo,72,"// Ensure `NS` is unloaded from the AST on transaction rollback, e.g. '.undo X'",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:3,Safety,Safe,Safe,3,"// Safe because of the break stmt.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:155,Integrability,depend,dependent,155,"// FIXME: This is possible bug in clang, which will instantiate one and; // the same CXXStaticMemberVar several times. This happens when there are; // two dependent expressions and the first uses another declaration from; // the redeclaration chain. This will force Sema in to instantiate the; // definition (usually the most recent decl in the chain) and then the; // second expression might referece the definition (which was already); // instantiated, but Sema seems not to keep track of these kinds of; // instantiations, even though the points of instantiation are the same!; //; // This should be investigated further when we merge with newest clang.; // This is triggered by running the roottest: ./root/io/newstl",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:39,Integrability,wrap,wrapper,39,"// We want to assert there is only one wrapper per transaction.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:14,Testability,assert,assert,14,"// We want to assert there is only one wrapper per transaction.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:16,Integrability,wrap,wrapper,16,"// register the wrapper if any.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Transaction.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionPool.h:259,Availability,redundant,redundant,259,"// It is twice the size of the block because there might be easily around 8; // transactions in flight which can be empty, which might lead to refill of; // the smallvector and then the return for reuse will exceed the capacity; // of the smallvector causing redundant copy of the elements.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionPool.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionPool.h:259,Safety,redund,redundant,259,"// It is twice the size of the block because there might be easily around 8; // transactions in flight which can be empty, which might lead to refill of; // the smallvector and then the return for reuse will exceed the capacity; // of the smallvector causing redundant copy of the elements.; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionPool.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionPool.h:99,Deployability,release,releaseTransaction,99,"// Only free the memory as anything put in m_Transactions will have; // already been destructed in releaseTransaction",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionPool.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionPool.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:88,Testability,assert,assertion,88,"//FIXME: Move the nested transaction marker out of the decl lists and; // reenable this assertion.; //size_t DeclSize = std::distance(T->decls_begin(), T->decls_end());; //if (T->getCompilationOpts().CodeGenerationForModule); // assert (!DeclSize && ""No parsed decls must happen in parse for module"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:229,Testability,assert,assert,229,"//FIXME: Move the nested transaction marker out of the decl lists and; // reenable this assertion.; //size_t DeclSize = std::distance(T->decls_begin(), T->decls_end());; //if (T->getCompilationOpts().CodeGenerationForModule); // assert (!DeclSize && ""No parsed decls must happen in parse for module"");",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:3,Deployability,Release,Release,3,"// Release the input_line_X file unless verifying diagnostics.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionUnloader.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h:12,Usability,simpl,simple,12,"///\brief A simple eraser class that removes already created AST Nodes.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h:443,Integrability,depend,dependency,443,"///\brief Rolls back given transaction from the AST.; ///; /// Removing includes reseting various internal stuctures in the compiler to; /// their previous states. For example it resets the lookup tables if the; /// declaration has name and can be looked up; Unloads the redeclaration; /// chain if the declaration was redeclarable and so on.; /// Note1: that the code generated for the declaration is not removed yet.; /// Note2: does not do dependency analysis.; ///; ///\param[in] T - The transaction to be removed.; ///\returns true on success.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h:95,Integrability,depend,dependency,95,"///\brief Unloads a single decl. It must not be in any other transaction.; /// This doesn't do dependency tracking. Use with caution.; ///; ///\param[in] D - The decl to be removed.; ///; ///\returns true on success; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/TransactionUnloader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:126,Modifiability,inherit,inherit,126,"///\brief The allocation starts with this layout; it is followed by the; /// value's object at m_Payload. This class does not inherit from; /// llvm::RefCountedBase because deallocation cannot use this type but must; /// free the character array.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:96,Deployability,canary,canary,96,"///\brief Return whether the contained object has been constructed,; /// or rather, whether the canary has been changed.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:10,Deployability,canary,canary,10,"// If the canary values are still there",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:56,Energy Efficiency,allocate,allocated,56,"///\brief Initialize the storage management part of the allocated object.; /// The allocator is referencing it, thus initialize m_RefCnt with 1.; ///\param [in] dtorFunc - the function to be called before deallocation.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:10,Energy Efficiency,Allocate,Allocate,10,"///\brief Allocate the memory needed by the AllocatedValue managing; /// an object of payloadSize bytes, and return the address of the; /// payload object.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:44,Energy Efficiency,Allocate,AllocatedValue,44,"///\brief Allocate the memory needed by the AllocatedValue managing; /// an object of payloadSize bytes, and return the address of the; /// payload object.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:30,Energy Efficiency,allocate,allocated,30,"///\brief This object must be allocated as a char array. Deallocate it as; /// such.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:3,Deployability,Release,Release,3,"// Release old value.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:3,Deployability,Release,Release,3,"// Release old value.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:35,Deployability,release,release,35,"// Invalidate other so it will not release.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:35,Availability,error,errors,35,"// Drop the terminating "" so Utf-8 errors can be detected (""\xeA"")",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:49,Safety,detect,detected,49,"// Drop the terminating "" so Utf-8 errors can be detected (""\xeA"")",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/Value.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:158,Integrability,wrap,wrapper,158,"// We want to support cases such as:; // gCling->evaluate(""if() return 'A' else return 12"", V), that puts in V,; // either A or 12.; // In this case the void wrapper is compiled with the stmts returning; // values. Sema would cast them to void, but the code will still be; // executed. For example:; // int g(); void f () { return g(); } will still call g().; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:118,Integrability,wrap,wrapper,118,"// Any return statement will have been ""healed"" by Sema; // to correspond to the original void return type of the; // wrapper, using a ImplicitCastExpr 'void' <ToVoid>.; // Remove that.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:45,Integrability,depend,dependent,45,"// May happen on auto types which resolve to dependent.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:29,Integrability,depend,depend,29,"//; // Here we don't want to depend on the JIT runFunction, because of its; // limitations, when it comes to return value handling. There it is; // not clear who provides the storage and who cleans it up in a; // platform independent way.; //; // Depending on the type we need to synthesize a call to cling:; // 0) void : set the value's type to void;; // 1) enum, integral, float, double, referece, pointer types :; // call to cling::internal::setValueNoAlloc(...);; // 2) object type (alloc on the stack) :; // cling::internal::setValueWithAlloc; // 2.1) constant arrays:; // call to cling::runtime::internal::copyArray(...); //; // We need to synthesize later:; // Wrapper has signature: void w(cling::Value SVR); // case 1):; // setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); // case 2):; // new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); // case 2.1):; // copyArray(src, placement, size)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:247,Integrability,Depend,Depending,247,"//; // Here we don't want to depend on the JIT runFunction, because of its; // limitations, when it comes to return value handling. There it is; // not clear who provides the storage and who cleans it up in a; // platform independent way.; //; // Depending on the type we need to synthesize a call to cling:; // 0) void : set the value's type to void;; // 1) enum, integral, float, double, referece, pointer types :; // call to cling::internal::setValueNoAlloc(...);; // 2) object type (alloc on the stack) :; // cling::internal::setValueWithAlloc; // 2.1) constant arrays:; // call to cling::runtime::internal::copyArray(...); //; // We need to synthesize later:; // Wrapper has signature: void w(cling::Value SVR); // case 1):; // setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); // case 2):; // new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); // case 2.1):; // copyArray(src, placement, size)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:668,Integrability,Wrap,Wrapper,668,"//; // Here we don't want to depend on the JIT runFunction, because of its; // limitations, when it comes to return value handling. There it is; // not clear who provides the storage and who cleans it up in a; // platform independent way.; //; // Depending on the type we need to synthesize a call to cling:; // 0) void : set the value's type to void;; // 1) enum, integral, float, double, referece, pointer types :; // call to cling::internal::setValueNoAlloc(...);; // 2) object type (alloc on the stack) :; // cling::internal::setValueWithAlloc; // 2.1) constant arrays:; // call to cling::runtime::internal::copyArray(...); //; // We need to synthesize later:; // Wrapper has signature: void w(cling::Value SVR); // case 1):; // setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); // case 2):; // new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); // case 2.1):; // copyArray(src, placement, size)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:152,Usability,clear,clear,152,"//; // Here we don't want to depend on the JIT runFunction, because of its; // limitations, when it comes to return value handling. There it is; // not clear who provides the storage and who cleans it up in a; // platform independent way.; //; // Depending on the type we need to synthesize a call to cling:; // 0) void : set the value's type to void;; // 1) enum, integral, float, double, referece, pointer types :; // call to cling::internal::setValueNoAlloc(...);; // 2) object type (alloc on the stack) :; // cling::internal::setValueWithAlloc; // 2.1) constant arrays:; // call to cling::runtime::internal::copyArray(...); //; // We need to synthesize later:; // Wrapper has signature: void w(cling::Value SVR); // case 1):; // setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); // case 2):; // new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); // case 2.1):; // copyArray(src, placement, size)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:25,Deployability,update,update,25,"// if we had return stmt update to execute the SVR init, even if the; // wrapper returns void.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:73,Integrability,wrap,wrapper,73,"// if we had return stmt update to execute the SVR init, even if the; // wrapper returns void.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:46,Security,access,accessible,46,"// If it has a trivial copy constructor it is accessible and it is callable.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:45,Security,access,accessiblity,45,"// Lookup the copy canstructor and check its accessiblity.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:15,Integrability,wrap,wrapper,15,"// We have the wrapper as Sema's CurContext",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:42,Modifiability,extend,extend,42,"// In case of ExprWithCleanups we need to extend its 'scope' to the call.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:38,Integrability,wrap,wrapper,38,"// Build a reference to Value* in the wrapper, should be; // the only argument of the wrapper.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:86,Integrability,wrap,wrapper,86,"// Build a reference to Value* in the wrapper, should be; // the only argument of the wrapper.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:123,Security,expose,expose,123,"// The expr result is transported as reference, pointer, array, float etc; // based on the desugared type. We should still expose the typedef'ed; // (sugared) type to the cling::Value.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:3,Testability,Test,Test,3,"// Test CallArgs.size to make sure an additional argument (the value); // has been pushed on, if not than we didn't know how to handle the type",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:3,Modifiability,Extend,Extend,3,"// Extend the scope of the temporary cleaner if applicable.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:10,Energy Efficiency,Allocate,Allocate,10,"///\brief Allocate the Value and return the Value; /// for an expression evaluated at the prompt.; ///; ///\param [in] interp - The cling::Interpreter to allocate the SToredValueRef.; ///\param [in] vpQT - The opaque ptr for the clang::QualType of value stored.; ///\param [out] vpStoredValRef - The Value that is allocated.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:154,Energy Efficiency,allocate,allocate,154,"///\brief Allocate the Value and return the Value; /// for an expression evaluated at the prompt.; ///; ///\param [in] interp - The cling::Interpreter to allocate the SToredValueRef.; ///\param [in] vpQT - The opaque ptr for the clang::QualType of value stored.; ///\param [out] vpStoredValRef - The Value that is allocated.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:314,Energy Efficiency,allocate,allocated,314,"///\brief Allocate the Value and return the Value; /// for an expression evaluated at the prompt.; ///; ///\param [in] interp - The cling::Interpreter to allocate the SToredValueRef.; ///\param [in] vpQT - The opaque ptr for the clang::QualType of value stored.; ///\param [out] vpStoredValRef - The Value that is allocated.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:44,Availability,alive,alive,44,"// Here the copy keeps the refcounted value alive.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:33,Modifiability,variab,variable,33,"///\brief cling::runtime::gCling variable cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:42,Performance,cache,cache,42,"///\brief cling::runtime::gCling variable cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:52,Performance,cache,cache,52,"///\brief cling::runtime::internal::setValueNoAlloc cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:54,Performance,cache,cache,54,"///\brief cling::runtime::internal::setValueWithAlloc cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:46,Performance,cache,cache,46,"///\brief cling::runtime::internal::copyArray cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:37,Integrability,depend,depend,37,"///\brief; /// Here we don't want to depend on the JIT runFunction, because of its; /// limitations, when it comes to return value handling. There it is; /// not clear who provides the storage and who cleans it up in a; /// platform independent way.; //; /// Depending on the type we need to synthesize a call to cling:; /// 0) void : do nothing;; /// 1) enum, integral, float, double, referece, pointer types :; /// call to cling::internal::setValueNoAlloc(...);; /// 2) object type (alloc on the stack) :; /// cling::internal::setValueWithAlloc; /// 2.1) constant arrays:; /// call to cling::runtime::internal::copyArray(...); ///; /// We need to synthesize later:; /// Wrapper has signature: void w(cling::Value V); /// case 1):; /// setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); /// case 2):; /// new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); /// case 2.1):; /// copyArray(src, placement, N); ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:259,Integrability,Depend,Depending,259,"///\brief; /// Here we don't want to depend on the JIT runFunction, because of its; /// limitations, when it comes to return value handling. There it is; /// not clear who provides the storage and who cleans it up in a; /// platform independent way.; //; /// Depending on the type we need to synthesize a call to cling:; /// 0) void : do nothing;; /// 1) enum, integral, float, double, referece, pointer types :; /// call to cling::internal::setValueNoAlloc(...);; /// 2) object type (alloc on the stack) :; /// cling::internal::setValueWithAlloc; /// 2.1) constant arrays:; /// call to cling::runtime::internal::copyArray(...); ///; /// We need to synthesize later:; /// Wrapper has signature: void w(cling::Value V); /// case 1):; /// setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); /// case 2):; /// new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); /// case 2.1):; /// copyArray(src, placement, N); ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:672,Integrability,Wrap,Wrapper,672,"///\brief; /// Here we don't want to depend on the JIT runFunction, because of its; /// limitations, when it comes to return value handling. There it is; /// not clear who provides the storage and who cleans it up in a; /// platform independent way.; //; /// Depending on the type we need to synthesize a call to cling:; /// 0) void : do nothing;; /// 1) enum, integral, float, double, referece, pointer types :; /// call to cling::internal::setValueNoAlloc(...);; /// 2) object type (alloc on the stack) :; /// cling::internal::setValueWithAlloc; /// 2.1) constant arrays:; /// call to cling::runtime::internal::copyArray(...); ///; /// We need to synthesize later:; /// Wrapper has signature: void w(cling::Value V); /// case 1):; /// setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); /// case 2):; /// new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); /// case 2.1):; /// copyArray(src, placement, N); ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:162,Usability,clear,clear,162,"///\brief; /// Here we don't want to depend on the JIT runFunction, because of its; /// limitations, when it comes to return value handling. There it is; /// not clear who provides the storage and who cleans it up in a; /// platform independent way.; //; /// Depending on the type we need to synthesize a call to cling:; /// 0) void : do nothing;; /// 1) enum, integral, float, double, referece, pointer types :; /// call to cling::internal::setValueNoAlloc(...);; /// 2) object type (alloc on the stack) :; /// cling::internal::setValueWithAlloc; /// 2.1) constant arrays:; /// call to cling::runtime::internal::copyArray(...); ///; /// We need to synthesize later:; /// Wrapper has signature: void w(cling::Value V); /// case 1):; /// setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); /// case 2):; /// new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); /// case 2.1):; /// copyArray(src, placement, N); ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:12,Performance,cache,cache,12,"// Find and cache cling::runtime::gCling, setValueNoAlloc,; // setValueWithAlloc on first request.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:52,Integrability,rout,routines,52,"// GCC 4.x doesn't have the proper UTF-8 conversion routines. So use the; // LLVM conversion routines (which require a buffer 4x string length).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:93,Integrability,rout,routines,93,"// GCC 4.x doesn't have the proper UTF-8 conversion routines. So use the; // LLVM conversion routines (which require a buffer 4x string length).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:32,Integrability,interface,interface,32,"// Implements the CValuePrinter interface.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:6,Integrability,wrap,wrap,6,"// No wrap",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:10,Integrability,wrap,wrap,10,"// Quoted wrap",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:17,Integrability,wrap,wrap,17,"// Prefix quoted wrap",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:6,Availability,error,error,6,"// no error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:12,Integrability,message,message,12,"// no error message.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:164,Energy Efficiency,reduce,reduces,164,"// initialized only once as a static function variable; // Include ""RuntimePrintValue.h"" only on the first printing.; // This keeps the interpreter lightweight and reduces the startup time.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp:46,Modifiability,variab,variable,46,"// initialized only once as a static function variable; // Include ""RuntimePrintValue.h"" only on the first printing.; // This keeps the interpreter lightweight and reduces the startup time.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinter.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinter.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp:3,Deployability,Update,Update,3,"// Update the CompoundStmt body, avoiding alloc/dealloc of all the el.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp:33,Safety,avoid,avoiding,33,"// Update the CompoundStmt body, avoiding alloc/dealloc of all the el.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp:3,Usability,Clear,Clear,3,"// Clear the artificial NullStmt-s",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp:86,Integrability,wrap,wrapper,86,"// FIXME: Why it is here? Shouldn't it be in DeclExtractor?; // if no body remove the wrapper",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h:60,Performance,cache,cache,60,"///\brief cling runtime ""Cannot find cling_PrintValue(...)"" cache.; ///",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h:413,Availability,error,error,413,"///\brief Tries to attach a value printing mechanism to the given decl group; /// ref.; ///; ///\param[in] FD - wrapper function that the value printer will attached to.; ///; ///\returns true if the attachment was considered as success. I.e. even if; /// even if the value printer wasn't attached because of the compilation; /// options disallowint it - it will return still true. Returns false on; /// critical error.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h:112,Integrability,wrap,wrapper,112,"///\brief Tries to attach a value printing mechanism to the given decl group; /// ref.; ///; ///\param[in] FD - wrapper function that the value printer will attached to.; ///; ///\returns true if the attachment was considered as success. I.e. even if; /// even if the value printer wasn't attached because of the compilation; /// options disallowint it - it will return still true. Returns false on; /// critical error.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h:12,Performance,cache,cache,12,"// Find and cache cling::runtime on first request.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:56,Modifiability,inherit,inherited,56,"//decl->getKind() != Decl::Function, but decl has type, inherited from FunctionDecl.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:15,Testability,assert,asserts,15,"//Just in case asserts were deleted from ctor:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:52,Security,access,access,52,"//we print a list of base classes as one line, with access specifiers and 'virtual' if needed.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:18,Usability,clear,clear,18,"//it's not really clear, if I should really check this.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:37,Usability,clear,clear,37,"// Timur.Pocheptsov: it's not really clear, if I should really check this:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/Display.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:40,Performance,queue,queue,40,"// we have to merge the tokens from the queue until we reach eof token or; // space token",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:53,Usability,undo,undo,53,"// If we had a token, we need a path; empty means to undo a redirect",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaParser.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaParser.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:158,Safety,avoid,avoid,158,"// Flush now or can drop the buffer when dup2 is called with Fd later.; // This seems only neccessary when piping stdout or stderr, but do it; // for ttys to avoid over complicated code for minimal benefit.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:138,Testability,test,test,138,"// After a redirection from stdout into stderr then undirecting stdout, the; // console will loose line-buffering. To get arround this we test if stdout; // is a tty during construction, and if so mark the case when stdout has; // returned from a redirection into stderr, then handle it ~RedirectOutput.; // We need two bits for 3 possible states.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:23,Integrability,rout,routine,23,"// Exception safe push routine",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:13,Safety,safe,safe,13,"// Exception safe push routine",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:36,Availability,failure,failure,36,"// Call ::dup2 and report errMsg on failure",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:3,Usability,Clear,Clear,3,"// Clear the flag so restore below will ignore R for scope",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:18,Energy Efficiency,reduce,reduce,18,"// Clear match to reduce lScope (kSTDBOTH -> kSTDOUT or kSTDERR)",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:3,Usability,Clear,Clear,3,"// Clear match to reduce lScope (kSTDBOTH -> kSTDOUT or kSTDERR)",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:3,Availability,Failure,Failure,3,"// Failure",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:45,Safety,safe,safe,45,"// 50% printable for ASCII files should be a safe guess.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:115,Deployability,upgrade,upgrade,115,"// More text (comments) are okay after the last '}', but; // we can not easily find it to remove it (so we need to upgrade; // this code to better handle the case with comments or; // preprocessor code before and after the leading { and; // trailing })",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:157,Performance,load,loading,157,"// In case of libraries we get .L lib.so, which might automatically pull in; // decls (from header files). Thus we want to take the restore point before; // loading of the file and revert exclusively if needed.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:26,Performance,Load,Load,26,"// fprintf(stderr,""DEBUG: Load for %s unloadPoint is %p\n"", file.str().c_str(), unloadPoint);",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:107,Usability,undo,undo,107,"//FIXME: search for the transaction, i.e. verify that it has not already; // been unloaded, e.g. through `.undo X'.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:2,Performance,Cache,CacheFailure,2,/*CacheFailure=*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:8,Availability,avail,available,8,"// Only available in clang's trunk:",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:22,Testability,assert,assert,22,"// FIXME: This should assert.",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:35,Availability,failure,failure,35,"//FIXME: should this be success or failure?",MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:2,Performance,Cache,CacheFailure,2,/*CacheFailure=*/,MatchSource.CODE_COMMENT,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/UserInterface/UserInterface.cpp:90,Testability,log,logging,90,"// std::strtoull() returns 0 if the parsing fails.; // zero HistSize will disable history logging to file.; // refer to textinput::History::AppendToFile()",MatchSource.CODE_COMMENT,interpreter/cling/lib/UserInterface/UserInterface.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/UserInterface/UserInterface.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:14,Energy Efficiency,adapt,adapted,14,"// copied and adapted from CodeGen::CodeGenModule::getMangledName",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:14,Modifiability,adapt,adapted,14,"// copied and adapted from CodeGen::CodeGenModule::getMangledName",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:106,Integrability,interface,interfaces,106,"// The allocator in ASTContext is mutable ...; // Keep the argument const to be inline will all the other interfaces; // like: NestedNameSpecifier::Create",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:26,Energy Efficiency,allocate,allocate,26,"// If desugaring happened allocate new type in the AST.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:26,Energy Efficiency,allocate,allocate,26,"// If desugaring happened allocate new type in the AST.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:82,Modifiability,variab,variable,82,"// Out-of-line definitions shouldn't be pushed into scope in C++.; // Out-of-line variable and function definitions shouldn't even in C.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:127,Performance,Perform,PerformPendingInstantiations,127,"// Check if the declaration is template instantiation, which is not in; // any DeclContext yet, because it came from; // Sema::PerformPendingInstantiations; // if (isa<FunctionDecl>(D) &&; // cast<FunctionDecl>(D)->getTemplateInstantiationPattern()); // return false;",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:67,Integrability,rout,routine,67,"// WARNING:; //; // The large blocks of commented-out code in this routine; // are there to support doing more desugaring in the future,; // we will probably have to.; //; // Do not delete until we are completely sure we will; // not be changing this routine again!; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:251,Integrability,rout,routine,251,"// WARNING:; //; // The large blocks of commented-out code in this routine; // are there to support doing more desugaring in the future,; // we will probably have to.; //; // Do not delete until we are completely sure we will; // not be changing this routine again!; //",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:106,Integrability,interface,interfaces,106,"// The allocator in ASTContext is mutable ...; // Keep the argument const to be inline will all the other interfaces; // like: NestedNameSpecifier::Create",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:64,Safety,avoid,avoid,64,"// if (!original_prefix); // move qualifiers on the outer type (avoid 'std::const string'!)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:86,Availability,avail,available,86,"/*; // We really need to find a way to propagate/keep the opaque typedef; // that are available in TST to the aliased type. We would need; // to do something like:. QualType targetType = TST->getAliasedType();; QualType resubst = ReSubstTemplateArg(targetType,TST);; return GetPartiallyDesugaredTypeImpl(Ctx, resubst, TypeConfig,; fullyQualifyType,; fullyQualifyTmpltArg);. // But this is not quite right (ReSubstTemplateArg is from TMetaUtils); // as it does not resubst for. template <typename T> using myvector = std::vector<T>;; myvector<Double32_t> vd32d;. // and does not work at all for. template<class T> using ptr = T*;; ptr<Double32_t> p2;. // as the target is not a template.; */; // So for now just return move on with the least lose we can do",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:26,Energy Efficiency,allocate,allocate,26,"// If desugaring happened allocate new type in the AST.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:26,Energy Efficiency,allocate,allocate,26,"// If desugaring happened allocate new type in the AST.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:23,Safety,avoid,avoid,23,"// TODO: Find a way to avoid creating new types, if the input is already; // fully qualified.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:97,Integrability,depend,dependent,97,"// We are in the case of a type(def) that was declared in a; // class template but is *not* type dependent. In clang, it gets; // attached to the class template declaration rather than any; // specific class template instantiation. This result in 'odd'; // fully qualified typename:; // vector<_Tp,_Alloc>::size_type; // Make the situation is 'useable' but looking a bit odd by; // picking a random instance as the declaring context.; // FIXME: We should not use the iterators here to check if we are in; // a template specialization. clTempl != cxxdecl already tell us that; // is the case. It seems that we rely on a side-effect from triggering; // deserializations to support 'some' use-case. See ROOT-9709.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp:42,Safety,avoid,avoid,42,"// move the qualifiers on the outer type (avoid 'std::const string'!)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/AST.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/AST.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Diagnostics.cpp:32,Deployability,release,release,32,"// Take the std::unique_ptr and release it, we have the raw one",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Diagnostics.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Diagnostics.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Diagnostics.cpp:12,Availability,error,errors,12,"///< Report errors on destruction",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Diagnostics.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Diagnostics.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:22,Modifiability,variab,variable,22,"//search for next env variable",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Paths.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:3,Energy Efficiency,Adapt,Adapted,3,"// Adapted from clang/lib/Frontend/CompilerInvocation.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Paths.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:3,Modifiability,Adapt,Adapted,3,"// Adapted from clang/lib/Frontend/CompilerInvocation.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Paths.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:25,Testability,log,log,25,"// Don't write same same log entry twice when FilePath == Path",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Paths.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:28,Testability,log,log,28,"// Exiting early, but still log all non-existant paths that we have",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Paths.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:3,Safety,Avoid,Avoid,3,"// Avoid duplicates",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/Paths.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:24,Performance,cache,cache,24,"// A simple round-robin cache: what enters first, leaves first.; // MRU cache wasn't worth the extra CPU cycles.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:72,Performance,cache,cache,72,"// A simple round-robin cache: what enters first, leaves first.; // MRU cache wasn't worth the extra CPU cycles.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:5,Usability,simpl,simple,5,"// A simple round-robin cache: what enters first, leaves first.; // MRU cache wasn't worth the extra CPU cycles.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:123,Availability,avail,available,123,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:230,Availability,down,down,230,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:3,Performance,Concurren,Concurrent,3,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:33,Performance,cache,cache,33,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:69,Performance,cache,cache,69,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:140,Performance,cache,cache,140,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:189,Performance,cache,cache,189,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:261,Performance,cache,cache,261,"// Concurrent writes to the same cache element can result in invalid cache; // elements, causing pointer address not being available in the cache even; // though they should be, i.e. false cache misses. While can cause a; // slow-down, the cost for keeping the cache thread-local or atomic is; // much higher (yes, this was measured).",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:57,Energy Efficiency,power,power,57,"// Address of page containing P, assuming page_size is a power of 2",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:14,Availability,error,error,14,"// get dlopen error if there is one",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:13,Availability,error,error,13,"// overwrite error if dlsym caused one",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:20,Availability,error,error,20,"// only get dlclose error if dlopen & dlsym haven't emited one",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformPosix.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:181,Usability,Simpl,Simply,181,"// The destination buffer must be empty as an invariant of the conversion; // function; but this function is sometimes called in a loop that passes; // in the same buffer, however. Simply clear it out so we can overwrite it",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:188,Usability,clear,clear,188,"// The destination buffer must be empty as an invariant of the conversion; // function; but this function is sometimes called in a loop that passes; // in the same buffer, however. Simply clear it out so we can overwrite it",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:39,Usability,clear,clear,39,"// Save input SDKVersion to match, and clear SDKVersion for > comparsion",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:80,Testability,test,test,80,"// There could be subfolders like ""wdf"" in the ""Include"" directory, so only; // test names that start with ""10."" or match input.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:13,Deployability,Install,InstallDir,13,"// Test that InstallDir is indeed there before keeping this index.; // Open the chosen key path remainder.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:3,Testability,Test,Test,3,"// Test that InstallDir is indeed there before keeping this index.; // Open the chosen key path remainder.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:216,Modifiability,variab,variable,216,"// The Visual Studio 2017 path is very different than the previous versions,; // and even the registry entries are different, so for now let's try the; // trivial way first (using the 'VCToolsInstallDir' environment variable)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:25,Modifiability,variab,variables,25,"// Check the environment variables that vsvars32.bat sets.; // We don't do this first so we can run from other VSStudio shells properly",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:10,Modifiability,variab,variables,10,"// __imp_ variables are indirection pointers, so use malloc to simulate that",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:22,Performance,load,loaded,22,"// In reverse so user loaded modules are searched first",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:87,Modifiability,inherit,inherits,87,"// Create new output read handle. Set the Properties to FALSE, otherwise the; // child inherits the properties and, as a result, non-closeable handles to; // the pipes are created.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:9,Modifiability,inherit,inheritable,9,"// Close inheritable copies of the handles you do not want to be inherited.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:65,Modifiability,inherit,inherited,65,"// Close inheritable copies of the handles you do not want to be inherited.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:3,Energy Efficiency,Adapt,Adapted,3,"// Adapted from VisualStudio/VC/crt/src/vcruntime/throw.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:3,Modifiability,Adapt,Adapted,3,"// Adapted from VisualStudio/VC/crt/src/vcruntime/throw.cpp",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:32,Usability,resume,resume,32,"// Exception flags (we don't do resume)",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/PlatformWin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:23,Security,expose,exposes,23,"///\brief A Lexer that exposes preprocessor directives.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:10,Testability,Test,Test,10,"///\brief Test if a given token is a valid identifier for the current language; ///; /// \param Tok - Token, advanced to first token to test; /// \return - The valid identifier or empty llvm::StringRef",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:136,Testability,test,test,136,"///\brief Test if a given token is a valid identifier for the current language; ///; /// \param Tok - Token, advanced to first token to test; /// \return - The valid identifier or empty llvm::StringRef",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:154,Security,hash,hash,154,"///\brief Lex, forwarding to Lexer::LexFromRawLexer, and keeping track of; /// preprocessor directives to provide a tok::eod corresponding to a; /// tok::hash.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:10,Testability,Test,Test,10,"///\brief Test if the given input is a function or class definition; ///; /// \param Tok - Token, advanced to first token to test; /// \param First - First token identifier.; /// \param[out] HasBody - if set to `true`, the function/class body follows;; /// thus, the caller needs to consume tokens until the; /// closing `}`; /// \return - Typeof definition, function/method or class",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:125,Testability,test,test,125,"///\brief Test if the given input is a function or class definition; ///; /// \param Tok - Token, advanced to first token to test; /// \param First - First token identifier.; /// \param[out] HasBody - if set to `true`, the function/class body follows;; /// thus, the caller needs to consume tokens until the; /// closing `}`; /// \return - Typeof definition, function/method or class",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:30,Availability,redundant,redundant,30,"// Identifier(Tok).empty() is redundant 1st time, but simplifies code",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:30,Safety,redund,redundant,30,"// Identifier(Tok).empty() is redundant 1st time, but simplifies code",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:54,Usability,simpl,simplifies,54,"// Identifier(Tok).empty() is redundant 1st time, but simplifies code",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:293,Safety,detect,detection,293,"// ##TODO; // Lex the argument identifiers so we can know if this is a declaration; // RVAL IDENT(A,B,C) -> could be:; //; // T inst(a,b,c); -> class instance; // T func(T0 a, T1 b, T2 c); -> func declaration; //; // Without macro expansion it's difficult to distinguish cases, but as the; // detection can fail because of macros already, would it be enough to check; // that there are two idents not separated by commas between parenthesis?; // It still wouldn't work for RVAL IDENT(), but -Wno-vexing-parse could be; // passed to clang in initialization.; //; // Maybe the best would be to lookup the Decl IDENT to see if its a class?",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:42,Integrability,wrap,wrap,42,"// Skip PP directives; they just move the wrap point.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:65,Integrability,wrap,wrap,65,"// Reached EOF before seeing a non-preproc token.; // Nothing to wrap.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:3,Safety,detect,detect,3,"// detect the attribute (__global__, __device__ and __host__) of CUDA; // kernels at the beginning of a function definition; // FIXME: should replaced by a generic solution",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:67,Safety,detect,detection,67,"// if attribute was found, skip the token and use the function; // detection later",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:207,Integrability,wrap,wrap,207,"// Prior behavior was to return getFileOffset, which was only used as an; // in a test against std::string::npos. By returning 0 we preserve prior; // behavior to pass the test against std::string::npos and wrap everything",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:82,Testability,test,test,82,"// Prior behavior was to return getFileOffset, which was only used as an; // in a test against std::string::npos. By returning 0 we preserve prior; // behavior to pass the test against std::string::npos and wrap everything",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:172,Testability,test,test,172,"// Prior behavior was to return getFileOffset, which was only used as an; // in a test against std::string::npos. By returning 0 we preserve prior; // behavior to pass the test against std::string::npos and wrap everything",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:101,Integrability,wrap,wrap,101,"// FIXME: Using definitions and declarations should be decl extracted.; // Until we have that, don't wrap them if they are the only input.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:37,Integrability,wrap,wrap,37,"// EOF while looking for semi. Don't wrap.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:125,Integrability,wrap,wrapped,125,"// There is ""more"" - let's assume this input consists of a using; // declaration or definition plus some code that should be wrapped.; //; // We need to include the ';' in the offset as this will be a; // non-wrapped statement.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:209,Integrability,wrap,wrapped,209,"// There is ""more"" - let's assume this input consists of a using; // declaration or definition plus some code that should be wrapped.; //; // We need to include the ';' in the offset as this will be a; // non-wrapped statement.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:3,Integrability,Wrap,Wrap,3,"// Wrap everything after '}'",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:3,Integrability,Wrap,Wrap,3,"// Wrap everything after ';'",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:38,Integrability,wrap,wrap,38,"// If nothing left to lex, then don't wrap any of it",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:49,Integrability,wrap,wrapped,49,"// There is something else here that needs to be wrapped.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:87,Integrability,wrap,wrapPoint,87,"// FIXME: in the future, continue lexing to extract relevant PP directives;; // return wrapPoint; // There is something else here that needs to be wrapped.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:147,Integrability,wrap,wrapped,147,"// FIXME: in the future, continue lexing to extract relevant PP directives;; // return wrapPoint; // There is something else here that needs to be wrapped.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:46,Integrability,wrap,wrap,46,"// We have only had PP directives; no need to wrap.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/SourceNormalization.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:3,Energy Efficiency,Adapt,Adapted,3,"// Adapted from utf8++",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:3,Modifiability,Adapt,Adapted,3,"// Adapted from utf8++",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:3,Performance,Cache,Cached,3,"// Cached the correct isprint variant rather than checking in a loop.; //; // If output handles UTF-8 and string is UTF-8, then validate against UTF-8.; // If string is UTF-8 validate printable against std::isprint<char32_t>.; // If nothing is UTF-8 validate against std::isprint<char> .",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:128,Security,validat,validate,128,"// Cached the correct isprint variant rather than checking in a loop.; //; // If output handles UTF-8 and string is UTF-8, then validate against UTF-8.; // If string is UTF-8 validate printable against std::isprint<char32_t>.; // If nothing is UTF-8 validate against std::isprint<char> .",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:175,Security,validat,validate,175,"// Cached the correct isprint variant rather than checking in a loop.; //; // If output handles UTF-8 and string is UTF-8, then validate against UTF-8.; // If string is UTF-8 validate printable against std::isprint<char32_t>.; // If nothing is UTF-8 validate against std::isprint<char> .",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:250,Security,validat,validate,250,"// Cached the correct isprint variant rather than checking in a loop.; //; // If output handles UTF-8 and string is UTF-8, then validate against UTF-8.; // If string is UTF-8 validate printable against std::isprint<char32_t>.; // If nothing is UTF-8 validate against std::isprint<char> .",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:9,Energy Efficiency,allocate,allocate,9,"// Block allocate the next chunk",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:99,Security,validat,validate,99,"// A const char* string may not neccessarily be utf8.; // When the locale can output utf8 strings, validate it as utf8 first.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:3,Usability,Simpl,Simple,3,"// Simple printable string, just return it now.",MatchSource.CODE_COMMENT,interpreter/cling/lib/Utils/UTF8.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Def2.h:91,Modifiability,inherit,inheritant,91,"// NonTemplateParmDecls should only print one default fwd decl, i.e it should; // omit the inheritant default arguments.",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Def2.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Def2.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:16,Testability,test,test,16,"//end namespace test",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Fail.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:16,Testability,test,test,16,"//end namespace test // This problem is bypassed by skipping types containing ""::""",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Fail.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:16,Testability,test,test,16,"//end namespace test // This is bypassed by forcibly removing restrict from types; // namespace test { //default template arg; // template <typename T,int MAX=100> class Stack {; // };; // Stack<int> FunctionReturningStack(){return Stack<int>();}; // }//end namespace test // Fixed with callback, strip old default args before including new file; // namespace test {; // //#include<tuple> //'tie' function; // //commented out to skip huge output; // } //Fixed bug in VisitFunctionDecl",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Fail.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:96,Testability,test,test,96,"//end namespace test // This is bypassed by forcibly removing restrict from types; // namespace test { //default template arg; // template <typename T,int MAX=100> class Stack {; // };; // Stack<int> FunctionReturningStack(){return Stack<int>();}; // }//end namespace test // Fixed with callback, strip old default args before including new file; // namespace test {; // //#include<tuple> //'tie' function; // //commented out to skip huge output; // } //Fixed bug in VisitFunctionDecl",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Fail.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:268,Testability,test,test,268,"//end namespace test // This is bypassed by forcibly removing restrict from types; // namespace test { //default template arg; // template <typename T,int MAX=100> class Stack {; // };; // Stack<int> FunctionReturningStack(){return Stack<int>();}; // }//end namespace test // Fixed with callback, strip old default args before including new file; // namespace test {; // //#include<tuple> //'tie' function; // //commented out to skip huge output; // } //Fixed bug in VisitFunctionDecl",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Fail.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:360,Testability,test,test,360,"//end namespace test // This is bypassed by forcibly removing restrict from types; // namespace test { //default template arg; // template <typename T,int MAX=100> class Stack {; // };; // Stack<int> FunctionReturningStack(){return Stack<int>();}; // }//end namespace test // Fixed with callback, strip old default args before including new file; // namespace test {; // //#include<tuple> //'tie' function; // //commented out to skip huge output; // } //Fixed bug in VisitFunctionDecl",MatchSource.CODE_COMMENT,interpreter/cling/test/Autoloading/Fail.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h:25,Testability,TEST,TEST,25,"// expected-warning@3 {{'TEST' macro redefined}}; // expected-note@2 {{previous definition is here}}; // expected-warning@4 {{'TEST' macro redefined}}; // expected-note@3 {{previous definition is here}}; // expected-warning@5 {{'TEST' macro redefined}}; // expected-note@4 {{previous definition is here}}; // expected-warning@6 {{'TEST' macro redefined}}; // expected-note@5 {{previous definition is here}}",MatchSource.CODE_COMMENT,interpreter/cling/test/CodeUnloading/Macros.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h:127,Testability,TEST,TEST,127,"// expected-warning@3 {{'TEST' macro redefined}}; // expected-note@2 {{previous definition is here}}; // expected-warning@4 {{'TEST' macro redefined}}; // expected-note@3 {{previous definition is here}}; // expected-warning@5 {{'TEST' macro redefined}}; // expected-note@4 {{previous definition is here}}; // expected-warning@6 {{'TEST' macro redefined}}; // expected-note@5 {{previous definition is here}}",MatchSource.CODE_COMMENT,interpreter/cling/test/CodeUnloading/Macros.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h:229,Testability,TEST,TEST,229,"// expected-warning@3 {{'TEST' macro redefined}}; // expected-note@2 {{previous definition is here}}; // expected-warning@4 {{'TEST' macro redefined}}; // expected-note@3 {{previous definition is here}}; // expected-warning@5 {{'TEST' macro redefined}}; // expected-note@4 {{previous definition is here}}; // expected-warning@6 {{'TEST' macro redefined}}; // expected-note@5 {{previous definition is here}}",MatchSource.CODE_COMMENT,interpreter/cling/test/CodeUnloading/Macros.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h:331,Testability,TEST,TEST,331,"// expected-warning@3 {{'TEST' macro redefined}}; // expected-note@2 {{previous definition is here}}; // expected-warning@4 {{'TEST' macro redefined}}; // expected-note@3 {{previous definition is here}}; // expected-warning@5 {{'TEST' macro redefined}}; // expected-note@4 {{previous definition is here}}; // expected-warning@6 {{'TEST' macro redefined}}; // expected-note@5 {{previous definition is here}}",MatchSource.CODE_COMMENT,interpreter/cling/test/CodeUnloading/Macros.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h:26,Testability,TEST,TEST,26,"// expected-warning@27 {{'TEST' macro redefined}}; // expected-note@26 {{previous definition is here}}",MatchSource.CODE_COMMENT,interpreter/cling/test/CodeUnloading/Macros.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/CodeUnloading/Macros.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/HeaderFileProtector.h:12,Availability,error,error,12,"// expected-error {{use of undeclared identifier}}",MatchSource.CODE_COMMENT,interpreter/cling/test/ErrorRecovery/HeaderFileProtector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/HeaderFileProtector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/MacroDef.h:12,Availability,error,error,12,"// expected-error {{use of undeclared identifier}}",MatchSource.CODE_COMMENT,interpreter/cling/test/ErrorRecovery/MacroDef.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/MacroDef.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/Redeclarables.h:12,Availability,error,error,12,"// expected-error {{use of undeclared identifier}}",MatchSource.CODE_COMMENT,interpreter/cling/test/ErrorRecovery/Redeclarables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/Redeclarables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/SubsequentDecls.h:433,Availability,error,error,433,"//------------------------------------------------------------------------------; // CLING - the C++ LLVM-based InterpreterG :); //; // This file is dual-licensed: you can choose to license it under the University; // of Illinois Open Source License or the GNU Lesser General Public License. See; // LICENSE.TXT for details.; //------------------------------------------------------------------------------; // This file contains an error (redefinition of '__my_i') and it gets included; // so all the contents should be reverted from the AST transparently.; // Template specializations",MatchSource.CODE_COMMENT,interpreter/cling/test/ErrorRecovery/SubsequentDecls.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/SubsequentDecls.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/SubsequentDecls.h:12,Availability,error,error,12,"// expected-error {{redefinition of '__my_i'}}",MatchSource.CODE_COMMENT,interpreter/cling/test/ErrorRecovery/SubsequentDecls.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/ErrorRecovery/SubsequentDecls.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp:32,Integrability,inject,injected,32,"/// Definitions of declarations injected also into cling.; /// NOTE: this could also stay in a header #included here and into cling, but; /// for the sake of simplicity we just redeclare them here.",MatchSource.CODE_COMMENT,interpreter/cling/tools/demo/cling-demo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp:32,Security,inject,injected,32,"/// Definitions of declarations injected also into cling.; /// NOTE: this could also stay in a header #included here and into cling, but; /// for the sake of simplicity we just redeclare them here.",MatchSource.CODE_COMMENT,interpreter/cling/tools/demo/cling-demo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp:158,Usability,simpl,simplicity,158,"/// Definitions of declarations injected also into cling.; /// NOTE: this could also stay in a header #included here and into cling, but; /// for the sake of simplicity we just redeclare them here.",MatchSource.CODE_COMMENT,interpreter/cling/tools/demo/cling-demo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp:39,Deployability,Update,Update,39,"// The value that will be modified; // Update the value of res by passing it to the interpreter.",MatchSource.CODE_COMMENT,interpreter/cling/tools/demo/cling-demo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/demo/cling-demo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:118,Testability,test,test,118,"// If we are running with -verify a reported has to be returned as unsuccess.; // This is relevant especially for the test suite.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:19,Availability,error,error,19,"// If there was an error that came from the verifier we must return 1 as; // an exit code for the process. This will make the test fail as expected.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:126,Testability,test,test,126,"// If there was an error that came from the verifier we must return 1 as; // an exit code for the process. This will make the test fail as expected.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:12,Availability,error,error,12,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:135,Availability,error,error,135,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:88,Modifiability,variab,variable,88,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:29,Safety,avoid,avoid,29,"// Suppress error dialogs to avoid hangs on build nodes.; // One can use an environment variable (Cling_GuiOnAssert) to enable; // the error dialogs.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:9,Availability,error,errors,9,"// If no errors have been reported, try perror",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:56,Performance,perform,performance,56,"// Only for test/OutputRedirect.C, but shouldn't affect performance too much.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp:12,Testability,test,test,12,"// Only for test/OutputRedirect.C, but shouldn't affect performance too much.",MatchSource.CODE_COMMENT,interpreter/cling/tools/driver/cling.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/driver/cling.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/Kernel.cpp:50,Availability,failure,failure,50,"/// Evaluate a string of code. Returns nullptr on failure.; /// Returns a string representation of the expression (can be """") on success.",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/Kernel.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/Kernel.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/Kernel.cpp:20,Integrability,interface,interfaces,20,"/// Code completion interfaces.; /// Start completion of code. Returns a handle to be passed to; /// cling_complete_next() to iterate over the completion options. Returns nulptr; /// if no completions are known.",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/Kernel.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/Kernel.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:71,Availability,error,error,71,"#If cling is not a symlink try a regular file; #readlink returns POSIX error EINVAL (22) if the; #argument is not a symlink",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:14,Modifiability,variab,variable,14,"# Environment variable CLING_OPTS used to pass arguments to cling",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:24,Integrability,message,messages,24,"""""""publish display-data messages on IOPub.; """"""",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:63,Integrability,message,messages,63,"""""""Capture stdout, stderr and sideband. Forward them as stream messages.""""""",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/setup.py:105,Safety,sanity check,sanity check,105,"#-----------------------------------------------------------------------------; # Minimal Python version sanity check; #-----------------------------------------------------------------------------",MatchSource.CODE_COMMENT,interpreter/cling/tools/Jupyter/kernel/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/setup.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:13,Deployability,install,install,13,"# Needs brew install python. We should only install if we need the; # functionality",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:44,Deployability,install,install,44,"# Needs brew install python. We should only install if we need the; # functionality",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:7,Modifiability,Refactor,Refactor,7,"# TODO Refactor all fetch_ functions to use this class will remove a lot of dup",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:17,Deployability,release,release,17,"# If development release, then add revision to the version",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:19,Deployability,install,installation,19,"# Cleanup previous installation directory if any",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Modifiability,config,configure,2,"# configure cling",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:19,Deployability,install,installation,19,"# Cleanup previous installation directory if any",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:41,Availability,down,download,41,"# We get zip instead of git clone to not download git history",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:13,Testability,test,tests,13,"# Run single tests on CI with this; # runSingleTest('Prompt/ValuePrinter/Regression.C'); # runSingleTest('Prompt/ValuePrinter')",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Performance,Optimiz,Optimize,2,"# Optimize binary compression",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:131,Integrability,Depend,Depends,131,"'''; Source: cling; Section: devel; Priority: optional; Maintainer: Cling Developer Team <cling-dev@cern.ch>; Uploaders: %s; Build-Depends: debhelper (>= 9.0.0); Standards-Version: 3.9.5; Homepage: http://cling.web.cern.ch/; Vcs-Git: http://root.cern.ch/git/cling.git; Vcs-Browser: http://root.cern.ch/gitweb?p=cling.git;a=summary. Package: cling; Priority: optional; Architecture: any; Depends: ${shlibs:Depends}, ${misc:Depends}; Description: interactive C++ interpreter; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers.; .; One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development.; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:387,Integrability,Depend,Depends,387,"'''; Source: cling; Section: devel; Priority: optional; Maintainer: Cling Developer Team <cling-dev@cern.ch>; Uploaders: %s; Build-Depends: debhelper (>= 9.0.0); Standards-Version: 3.9.5; Homepage: http://cling.web.cern.ch/; Vcs-Git: http://root.cern.ch/git/cling.git; Vcs-Browser: http://root.cern.ch/gitweb?p=cling.git;a=summary. Package: cling; Priority: optional; Architecture: any; Depends: ${shlibs:Depends}, ${misc:Depends}; Description: interactive C++ interpreter; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers.; .; One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development.; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:405,Integrability,Depend,Depends,405,"'''; Source: cling; Section: devel; Priority: optional; Maintainer: Cling Developer Team <cling-dev@cern.ch>; Uploaders: %s; Build-Depends: debhelper (>= 9.0.0); Standards-Version: 3.9.5; Homepage: http://cling.web.cern.ch/; Vcs-Git: http://root.cern.ch/git/cling.git; Vcs-Browser: http://root.cern.ch/gitweb?p=cling.git;a=summary. Package: cling; Priority: optional; Architecture: any; Depends: ${shlibs:Depends}, ${misc:Depends}; Description: interactive C++ interpreter; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers.; .; One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development.; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:422,Integrability,Depend,Depends,422,"'''; Source: cling; Section: devel; Priority: optional; Maintainer: Cling Developer Team <cling-dev@cern.ch>; Uploaders: %s; Build-Depends: debhelper (>= 9.0.0); Standards-Version: 3.9.5; Homepage: http://cling.web.cern.ch/; Vcs-Git: http://root.cern.ch/git/cling.git; Vcs-Browser: http://root.cern.ch/gitweb?p=cling.git;a=summary. Package: cling; Priority: optional; Architecture: any; Depends: ${shlibs:Depends}, ${misc:Depends}; Description: interactive C++ interpreter; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers.; .; One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development.; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:947,Performance,perform,performance,947,"'''; Source: cling; Section: devel; Priority: optional; Maintainer: Cling Developer Team <cling-dev@cern.ch>; Uploaders: %s; Build-Depends: debhelper (>= 9.0.0); Standards-Version: 3.9.5; Homepage: http://cling.web.cern.ch/; Vcs-Git: http://root.cern.ch/git/cling.git; Vcs-Browser: http://root.cern.ch/gitweb?p=cling.git;a=summary. Package: cling; Priority: optional; Architecture: any; Depends: ${shlibs:Depends}, ${misc:Depends}; Description: interactive C++ interpreter; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers.; .; One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development.; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:191,Deployability,Release,Release,191,'''; %define __spec_install_post %{nil}; %define debug_package %{nil}; %define __os_install_post %{_dbpath}/brp-compress. Summary: Interactive C++ interpreter; Name: cling; Version: 0.2~dev; Release: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:282,Deployability,release,release,282,"'''; License: LGPLv2+ or NCSA; Group: Development/Languages/Other; SOURCE0 : %{name}-%{version}.tar.bz2; URL: http://cling.web.cern.ch/; Vendor: Developed by The ROOT Team; CERN and Fermilab; Packager: Anirudha Bose <ani07nov@gmail.com>. BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root. %description; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers. One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development. %prep; %setup; mkdir -p $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc; mv $RPM_BUILD_DIR/%{name}-%{version}/bin/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/docs/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc/; mv $RPM_BUILD_DIR/%{name}-%{version}/lib/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/include/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/share/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share. rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/docs; rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/share. if [ ${RPM_ARCH} = 'x86_64' ]; then; mv $RPM_BUILD_DIR/%{name}-%{version}/usr/lib $RPM_BUILD_DIR/%{name}-%{version}/usr/lib64; fi. %build; # Empty section. %install; rm -rf %{buildroot}; mkdir -p %{buildroot}. # in builddir; cp -a * %{buildroot}. %clean; rm -rf %{buildroot}. %files; %defattr(-,root,root,-); %{_bindir}/*",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1837,Deployability,install,install,1837,"Team; CERN and Fermilab; Packager: Anirudha Bose <ani07nov@gmail.com>. BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root. %description; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers. One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development. %prep; %setup; mkdir -p $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc; mv $RPM_BUILD_DIR/%{name}-%{version}/bin/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/docs/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc/; mv $RPM_BUILD_DIR/%{name}-%{version}/lib/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/include/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/share/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share. rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/docs; rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/share. if [ ${RPM_ARCH} = 'x86_64' ]; then; mv $RPM_BUILD_DIR/%{name}-%{version}/usr/lib $RPM_BUILD_DIR/%{name}-%{version}/usr/lib64; fi. %build; # Empty section. %install; rm -rf %{buildroot}; mkdir -p %{buildroot}. # in builddir; cp -a * %{buildroot}. %clean; rm -rf %{buildroot}. %files; %defattr(-,root,root,-); %{_bindir}/*; %{_includedir}/*; %{_libdir}/*; %{_datadir}/*. %changelog; * Sun Apr 13 2014 Anirudha Bose <ani07nov@gmail.com>; - Initial SPEC file of Cling for RPM packaging; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:780,Performance,perform,performance,780,"'''; License: LGPLv2+ or NCSA; Group: Development/Languages/Other; SOURCE0 : %{name}-%{version}.tar.bz2; URL: http://cling.web.cern.ch/; Vendor: Developed by The ROOT Team; CERN and Fermilab; Packager: Anirudha Bose <ani07nov@gmail.com>. BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root. %description; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers. One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development. %prep; %setup; mkdir -p $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc; mv $RPM_BUILD_DIR/%{name}-%{version}/bin/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/docs/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc/; mv $RPM_BUILD_DIR/%{name}-%{version}/lib/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/include/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/share/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share. rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/docs; rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/share. if [ ${RPM_ARCH} = 'x86_64' ]; then; mv $RPM_BUILD_DIR/%{name}-%{version}/usr/lib $RPM_BUILD_DIR/%{name}-%{version}/usr/lib64; fi. %build; # Empty section. %install; rm -rf %{buildroot}; mkdir -p %{buildroot}. # in builddir; cp -a * %{buildroot}. %clean; rm -rf %{buildroot}. %files; %defattr(-,root,root,-); %{_bindir}/*",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1056,Deployability,Install,InstallDir,1056," Cling setup script %s; !define APP_NAME ""Cling""; !define COMP_NAME ""CERN""; !define WEB_SITE ""http://cling.web.cern.ch/""; !define VERSION ""%s""; !define COPYRIGHT ""Copyright © 2007-2014 by the Authors; Developed by The ROOT Team, CERN and Fermilab""; !define DESCRIPTION ""Interactive C++ interpreter""; !define INSTALLER_NAME ""%s""; !define MAIN_APP_EXE ""cling.exe""; !define INSTALL_TYPE ""SetShellVarContext current""; !define PRODUCT_ROOT_KEY ""HKLM""; !define PRODUCT_KEY ""Software\\Cling"". ###############################################################################. VIProductVersion ""%s.0.0""; VIAddVersionKey ""ProductName"" ""${APP_NAME}""; VIAddVersionKey ""CompanyName"" ""${COMP_NAME}""; VIAddVersionKey ""LegalCopyright"" ""${COPYRIGHT}""; VIAddVersionKey ""FileDescription"" ""${DESCRIPTION}""; VIAddVersionKey ""FileVersion"" ""${VERSION}"". ###############################################################################. SetCompressor /SOLID Lzma; Name ""${APP_NAME}""; Caption ""${APP_NAME}""; OutFile ""${INSTALLER_NAME}""; BrandingText ""${APP_NAME}""; XPStyle on; InstallDir ""C:\\Cling\\cling-${VERSION}"". ###############################################################################; ; MUI settings; !include ""MUI.nsh"". !define MUI_ABORTWARNING; !define MUI_UNABORTWARNING; !define MUI_HEADERIMAGE. ; Theme; !define MUI_ICON ""%s\\LLVM.ico""; !define MUI_UNICON ""%s\\Contrib\\Graphics\\Icons\\orange-uninstall.ico"". !insertmacro MUI_PAGE_WELCOME. !define MUI_LICENSEPAGE_TEXT_BOTTOM ""The source code for Cling is freely redistributable under the terms of the GNU Lesser General Public License (LGPL) as published by the Free Software Foundation.""; !define MUI_LICENSEPAGE_BUTTON ""Next >""; !insertmacro MUI_PAGE_LICENSE ""%s"". !insertmacro MUI_PAGE_DIRECTORY. !insertmacro MUI_PAGE_INSTFILES. !define MUI_FINISHPAGE_RUN ""$INSTDIR\\bin\\${MAIN_APP_EXE}""; !insertmacro MUI_PAGE_FINISH. !insertmacro MUI_UNPAGE_CONFIRM. !insertmacro MUI_UNPAGE_INSTFILES. !insertmacro MUI_UNPAGE_FINISH. !insertmacro MUI_LANGUAGE ""Engli",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2116,Safety,Detect,DetectWinVer,2116," Developed by The ROOT Team, CERN and Fermilab""; !define DESCRIPTION ""Interactive C++ interpreter""; !define INSTALLER_NAME ""%s""; !define MAIN_APP_EXE ""cling.exe""; !define INSTALL_TYPE ""SetShellVarContext current""; !define PRODUCT_ROOT_KEY ""HKLM""; !define PRODUCT_KEY ""Software\\Cling"". ###############################################################################. VIProductVersion ""%s.0.0""; VIAddVersionKey ""ProductName"" ""${APP_NAME}""; VIAddVersionKey ""CompanyName"" ""${COMP_NAME}""; VIAddVersionKey ""LegalCopyright"" ""${COPYRIGHT}""; VIAddVersionKey ""FileDescription"" ""${DESCRIPTION}""; VIAddVersionKey ""FileVersion"" ""${VERSION}"". ###############################################################################. SetCompressor /SOLID Lzma; Name ""${APP_NAME}""; Caption ""${APP_NAME}""; OutFile ""${INSTALLER_NAME}""; BrandingText ""${APP_NAME}""; XPStyle on; InstallDir ""C:\\Cling\\cling-${VERSION}"". ###############################################################################; ; MUI settings; !include ""MUI.nsh"". !define MUI_ABORTWARNING; !define MUI_UNABORTWARNING; !define MUI_HEADERIMAGE. ; Theme; !define MUI_ICON ""%s\\LLVM.ico""; !define MUI_UNICON ""%s\\Contrib\\Graphics\\Icons\\orange-uninstall.ico"". !insertmacro MUI_PAGE_WELCOME. !define MUI_LICENSEPAGE_TEXT_BOTTOM ""The source code for Cling is freely redistributable under the terms of the GNU Lesser General Public License (LGPL) as published by the Free Software Foundation.""; !define MUI_LICENSEPAGE_BUTTON ""Next >""; !insertmacro MUI_PAGE_LICENSE ""%s"". !insertmacro MUI_PAGE_DIRECTORY. !insertmacro MUI_PAGE_INSTFILES. !define MUI_FINISHPAGE_RUN ""$INSTDIR\\bin\\${MAIN_APP_EXE}""; !insertmacro MUI_PAGE_FINISH. !insertmacro MUI_UNPAGE_CONFIRM. !insertmacro MUI_UNPAGE_INSTFILES. !insertmacro MUI_UNPAGE_FINISH. !insertmacro MUI_LANGUAGE ""English"". ###############################################################################. Function .onInit; Call DetectWinVer; Call CheckPrevVersion; FunctionEnd. ; file section; Section ""MainFiles""; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:25,Deployability,install,installed,25,"# Insert the files to be installed",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:326,Deployability,install,installation,326,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1074,Deployability,install,installed,1074,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1260,Deployability,install,installed,1260," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1452,Deployability,install,installation,1452," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1983,Deployability,install,installation,1983," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2092,Deployability,install,installation,2092," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2148,Deployability,install,installation,2148," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1012,Integrability,Message,MessageBox,1012,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1408,Integrability,Message,MessageBox,1408," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1929,Integrability,Message,MessageBox,1929," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:31,Safety,detect,detect,31,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:58,Safety,abort,abort,58,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:122,Safety,Detect,DetectWinVer,122,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:317,Safety,Abort,Aborting,317,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1182,Safety,Abort,Abort,1182,"icrosoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1498,Safety,detect,detected,1498," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1537,Safety,Abort,Abort,1537," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2018,Safety,detect,detected,2018," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2189,Safety,Abort,Abort,2189," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2203,Usability,Clear,ClearErrors,2203," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:92,Deployability,configurat,configuration,92,"###############################################################################; # argparse configuration #; ###############################################################################",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:92,Modifiability,config,configuration,92,"###############################################################################; # argparse configuration #; ###############################################################################",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Modifiability,Variab,Variable,2,"# Variable overrides",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:90,Modifiability,variab,variables,90,"###############################################################################; # Global variables #; ###############################################################################",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:16,Testability,log,log,16,"# Make sure git log is invoked without a pager.",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,Deployability,install,install,29,'''; CPT will now attempt to install the distro package automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Availability,Error,Error,2,"# Error out",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:21,Safety,detect,detected,21,"# Extensions will be detected anyway by set_ext()",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:16,Testability,test,test,16,"# TODO: Need to test this in other platforms",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Testability,log,logic,2,"# logic is too confusing supporting both at the same time",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,Deployability,update,update,29,'''; CPT will now attempt to update/install the requisite packages automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:36,Deployability,install,install,36,'''; CPT will now attempt to update/install the requisite packages automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:5,Deployability,Install,Install,5,'''; Install/update the required packages by:; sudo apt-get update; sudo apt-get install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:13,Deployability,update,update,13,'''; Install/update the required packages by:; sudo apt-get update; sudo apt-get install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:60,Deployability,update,update,60,'''; Install/update the required packages by:; sudo apt-get update; sudo apt-get install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:81,Deployability,install,install,81,'''; Install/update the required packages by:; sudo apt-get update; sudo apt-get install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:70,Deployability,install,installation,70,"# Check Windows registry for keys that prove an MS Visual Studio 14.0 installation",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,Deployability,update,update,29,'''; CPT will now attempt to update/install the requisite packages automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:36,Deployability,install,install,36,'''; CPT will now attempt to update/install the requisite packages automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:5,Deployability,Install,Install,5,'''; Install/update the required packages by:; sudo yum install git cmake gcc gcc-c++ rpm-build; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:13,Deployability,update,update,13,'''; Install/update the required packages by:; sudo yum install git cmake gcc gcc-c++ rpm-build; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:56,Deployability,install,install,56,'''; Install/update the required packages by:; sudo yum install git cmake gcc gcc-c++ rpm-build; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,Deployability,update,update,29,'''; CPT will now attempt to update/install the requisite packages automatically. Make sure you have MacPorts installed.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:36,Deployability,install,install,36,'''; CPT will now attempt to update/install the requisite packages automatically. Make sure you have MacPorts installed.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:110,Deployability,install,installed,110,'''; CPT will now attempt to update/install the requisite packages automatically. Make sure you have MacPorts installed.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:5,Deployability,Install,Install,5,'''; Install/update the required packages by:; sudo port -v selfupdate; sudo port install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:13,Deployability,update,update,13,'''; Install/update the required packages by:; sudo port -v selfupdate; sudo port install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:82,Deployability,install,install,82,'''; Install/update the required packages by:; sudo port -v selfupdate; sudo port install {0} {1}; ''',MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:49,Deployability,integrat,integrated,49,"# This is an internal option in CPT, meant to be integrated into Cling's build system.",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:49,Integrability,integrat,integrated,49,"# This is an internal option in CPT, meant to be integrated into Cling's build system.",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/cpt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:15,Deployability,configurat,configuration,15,"# General view configuration",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/settings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:15,Modifiability,config,configuration,15,"# General view configuration",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/settings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,Deployability,configurat,configuration,12,"# Icon view configuration",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/settings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,Modifiability,config,configuration,12,"# Icon view configuration",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/settings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,Deployability,configurat,configuration,12,"# List view configuration",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/settings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,Modifiability,config,configuration,12,"# List view configuration",MatchSource.CODE_COMMENT,interpreter/cling/tools/packaging/settings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:50,Modifiability,plugin,plugin,50,"// return false; // Tells clang not to create the plugin.",MatchSource.CODE_COMMENT,interpreter/cling/tools/plugins/example/DemoPlugin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/plugins/example/DemoPlugin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/plugins/example/DemoPlugin.cpp:16,Modifiability,Plugin,PluginASTAction,16,"// Register the PluginASTAction in the registry.",MatchSource.CODE_COMMENT,interpreter/cling/tools/plugins/example/DemoPlugin.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/plugins/example/DemoPlugin.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/www/scripts/require.js:73,Deployability,Release,Released,73,"/*; RequireJS 2.2.0 Copyright jQuery Foundation and other contributors.; Released under MIT license, http://github.com/requirejs/requirejs/LICENSE; */",MatchSource.CODE_COMMENT,interpreter/cling/www/scripts/require.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/www/scripts/require.js
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:56,Deployability,configurat,configuration,56,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:254,Deployability,configurat,configuration,254,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:328,Deployability,configurat,configuration,328,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:56,Modifiability,config,configuration,56,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:254,Modifiability,config,configuration,254,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:328,Modifiability,config,configuration,328,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:298,Deployability,configurat,configuration,298,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; # sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:298,Modifiability,config,configuration,298,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; # sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:112,Availability,avail,available,112,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; # html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; # html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:379,Deployability,release,release,379,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; # html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; # html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:21,Deployability,update,updated,21,"# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; # html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; # html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; # html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; # html_additional_pages = {}; # If false, no module index is generated.; # html_domain_indices = True; # If false, no index is generated.; # html_use_index = True; # If true, the index is split into individual pages for each letter.; # html_split_index = False; # If true, links to the reST sources are added to the pages.; # html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; # html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; # html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; # html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; # html_file_suffix = None; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:81,Usability,guid,guide,81,# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:72,Deployability,configurat,configuration,72,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:270,Deployability,configurat,configuration,270,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:344,Deployability,configurat,configuration,344,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:72,Modifiability,config,configuration,72,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:270,Modifiability,config,configuration,270,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:344,Modifiability,config,configuration,344,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:298,Deployability,configurat,configuration,298,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; # sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:298,Modifiability,config,configuration,298,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; # sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:97,Deployability,release,release,97,"# The version info for the project you're documenting, acts as replacement for; # |version| and |release|, also used in various other places throughout the; # built documents.; #; # The short version.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:112,Availability,avail,available,112,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; # html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; # html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:379,Deployability,release,release,379,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; # html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; # html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:21,Deployability,update,updated,21,"# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; # html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; # html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; # html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; # html_additional_pages = {}; # If false, no module index is generated.; # html_domain_indices = True; # If false, no index is generated.; # html_use_index = True; # If true, the index is split into individual pages for each letter.; # html_split_index = False; # If true, links to the reST sources are added to the pages.; # html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; # html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; # html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; # html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; # html_file_suffix = None; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:265,Deployability,configurat,configuration,265,"# Documents to append as an appendix to all manuals.; # texinfo_appendices = []; # If false, no module index is generated.; # texinfo_domain_indices = True; # How to display URL addresses: 'footnote', 'no', or 'inline'.; # texinfo_show_urls = 'footnote'; # Example configuration for intersphinx: refer to the Python standard library.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:265,Modifiability,config,configuration,265,"# Documents to append as an appendix to all manuals.; # texinfo_appendices = []; # If false, no module index is generated.; # texinfo_domain_indices = True; # How to display URL addresses: 'footnote', 'no', or 'inline'.; # texinfo_show_urls = 'footnote'; # Example configuration for intersphinx: refer to the Python standard library.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/mismatched_deallocator_example.cpp:86,Energy Efficiency,allocate,allocated,86,// warn +dataWithBytesNoCopy:length:freeWhenDone: cannot take; // ownership of memory allocated by 'new',MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/checkers/mismatched_deallocator_example.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/mismatched_deallocator_example.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp:25,Energy Efficiency,allocate,allocated,25,// warn: deleting memory allocated by alloca,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp:25,Deployability,release,released,25,// warn: attempt to free released,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp:82,Energy Efficiency,allocate,allocated,82,// warn: argument to 'delete[]' is offset by 4 bytes; // from the start of memory allocated by 'new[]',MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:60,Deployability,update,update,60,#!/usr/bin/env python3; # A tool to parse ASTMatchers.h and update the documentation in; # ../LibASTMatchersReference.html automatically. Run from the; # directory in which this file is located to update the docs.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:197,Deployability,update,update,197,#!/usr/bin/env python3; # A tool to parse ASTMatchers.h and update the documentation in; # ../LibASTMatchersReference.html automatically. Run from the; # directory in which this file is located to update the docs.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:54,Deployability,toggle,toggle,54,"""""""; <tr><td>%(result)s</td><td class=""name"" onclick=""toggle('%(id)s')""><a name=""%(id)sAnchor"">%(name)s</a></td><td>%(args)s</td></tr>; <tr><td colspan=""4"" class=""doc"" id=""%(id)s""><pre>%(comment)s</pre></td></tr>; """"""",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:2,Performance,Cache,Cache,2,# Cache for doxygen urls we have already verified.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:3,Integrability,Wrap,Wrap,3,"""""""Wrap a likely AST node name in a link to its clang docs. We want to do this only if the page exists, in which case it will be; referenced from the class index page.; """"""",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:188,Usability,Usab,Usable,188,"""""""Extracts a list of result types from the given comment. We allow annotations in the comment of the matcher to specify what; nodes a matcher can match on. Those comments have the form:; Usable as: Any Matcher | (Matcher<T1>[, Matcher<t2>[, ...]]). Returns ['*'] in case of 'Any Matcher', or ['T1', 'T2', ...].; Returns the empty list if no 'Usable as' specification could be; parsed.; """"""",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:343,Usability,Usab,Usable,343,"""""""Extracts a list of result types from the given comment. We allow annotations in the comment of the matcher to specify what; nodes a matcher can match on. Those comments have the form:; Usable as: Any Matcher | (Matcher<T1>[, Matcher<t2>[, ...]]). Returns ['*'] in case of 'Any Matcher', or ['T1', 'T2', ...].; Returns the empty list if no 'Usable as' specification could be; parsed.; """"""",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:184,Testability,assert,asserts,184,"""""""Parse the matcher out of the given declaration and comment. If 'allowed_types' is set, it contains a list of node types the matcher; can match on, as extracted from the static type asserts in the matcher; definition.; """"""",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:222,Testability,assert,asserts,222,"# Parse the ast matchers.; # We alternate between two modes:; # body = True: We parse the definition of a matcher. We need; # to parse the full definition before adding a matcher, as the; # definition might contain static asserts that specify the result; # type.; # body = False: We parse the comments and declaration of the matcher.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_help.py:82,Deployability,update,update,82,#!/usr/bin/env python3; # A tool to parse the output of `clang-format --help` and update the; # documentation in ../ClangFormat.rst automatically.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_format_help.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_help.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_style.py:83,Deployability,update,update,83,#!/usr/bin/env python3; # A tool to parse the FormatStyle struct from Format.h and update the; # documentation in ../ClangFormatStyleOptions.rst automatically.; # Run from the directory in which this file is located to update the docs.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_format_style.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_style.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_style.py:219,Deployability,update,update,219,#!/usr/bin/env python3; # A tool to parse the FormatStyle struct from Format.h and update the; # documentation in ../ClangFormatStyleOptions.rst automatically.; # Run from the directory in which this file is located to update the docs.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/dump_format_style.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_style.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/generate_formatted_state.py:28,Security,hash,hash,28,"""""""Get the get SHA in short hash form.""""""",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/docs/tools/generate_formatted_state.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/generate_formatted_state.py
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp:397,Modifiability,plugin,plugin,397,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an annotation to every function in; // translation units that start with #pragma enable_annotate.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:397,Modifiability,plugin,plugin,397,"//===- Attribute.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an an annotation to file-scope declarations; // with the 'example' attribute.; //; // This plugin is used by clang/test/Frontend/plugin-attribute tests.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:506,Modifiability,plugin,plugin,506,"//===- Attribute.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an an annotation to file-scope declarations; // with the 'example' attribute.; //; // This plugin is used by clang/test/Frontend/plugin-attribute tests.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:544,Modifiability,plugin,plugin-attribute,544,"//===- Attribute.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an an annotation to file-scope declarations; // with the 'example' attribute.; //; // This plugin is used by clang/test/Frontend/plugin-attribute tests.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:530,Testability,test,test,530,"//===- Attribute.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an an annotation to file-scope declarations; // with the 'example' attribute.; //; // This plugin is used by clang/test/Frontend/plugin-attribute tests.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:561,Testability,test,tests,561,"//===- Attribute.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an an annotation to file-scope declarations; // with the 'example' attribute.; //; // This plugin is used by clang/test/Frontend/plugin-attribute tests.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:80,Modifiability,plugin,plugin,80,"// GNU-style __attribute__((""example"")) and C++/C23-style [[example]] and; // [[plugin::example]] supported.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:393,Modifiability,plugin,plugin,393,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Attribute plugin to mark a virtual method as ``call_super``, subclasses must; // call it in the overridden method.; //; // This example shows that attribute plugins combined with ``PluginASTAction``; // in Clang can do some of the same things which Java Annotations do.; //; // Unlike the other attribute plugin examples, this one does not attach an; // attribute AST node to the declaration AST node. Instead, it keeps a separate; // list of attributed declarations, which may be faster than using; // ``Decl::getAttr<T>()`` in some cases. The disadvantage of this approach is; // that the attribute is not part of the AST, which means that dumping the AST; // will lose the attribute information, pretty printing the AST won't write the; // attribute back out to source, and AST matchers will not be able to match; // against the attribute on the declaration.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:540,Modifiability,plugin,plugins,540,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Attribute plugin to mark a virtual method as ``call_super``, subclasses must; // call it in the overridden method.; //; // This example shows that attribute plugins combined with ``PluginASTAction``; // in Clang can do some of the same things which Java Annotations do.; //; // Unlike the other attribute plugin examples, this one does not attach an; // attribute AST node to the declaration AST node. Instead, it keeps a separate; // list of attributed declarations, which may be faster than using; // ``Decl::getAttr<T>()`` in some cases. The disadvantage of this approach is; // that the attribute is not part of the AST, which means that dumping the AST; // will lose the attribute information, pretty printing the AST won't write the; // attribute back out to source, and AST matchers will not be able to match; // against the attribute on the declaration.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:564,Modifiability,Plugin,PluginASTAction,564,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Attribute plugin to mark a virtual method as ``call_super``, subclasses must; // call it in the overridden method.; //; // This example shows that attribute plugins combined with ``PluginASTAction``; // in Clang can do some of the same things which Java Annotations do.; //; // Unlike the other attribute plugin examples, this one does not attach an; // attribute AST node to the declaration AST node. Instead, it keeps a separate; // list of attributed declarations, which may be faster than using; // ``Decl::getAttr<T>()`` in some cases. The disadvantage of this approach is; // that the attribute is not part of the AST, which means that dumping the AST; // will lose the attribute information, pretty printing the AST won't write the; // attribute back out to source, and AST matchers will not be able to match; // against the attribute on the declaration.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:688,Modifiability,plugin,plugin,688,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Attribute plugin to mark a virtual method as ``call_super``, subclasses must; // call it in the overridden method.; //; // This example shows that attribute plugins combined with ``PluginASTAction``; // in Clang can do some of the same things which Java Annotations do.; //; // Unlike the other attribute plugin examples, this one does not attach an; // attribute AST node to the declaration AST node. Instead, it keeps a separate; // list of attributed declarations, which may be faster than using; // ``Decl::getAttr<T>()`` in some cases. The disadvantage of this approach is; // that the attribute is not part of the AST, which means that dumping the AST; // will lose the attribute information, pretty printing the AST won't write the; // attribute back out to source, and AST matchers will not be able to match; // against the attribute on the declaration.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:3,Performance,Cache,Cached,3,// Cached methods which are marked as 'call_super'.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:20,Safety,avoid,avoid,20,// Uses this way to avoid add an annotation attr to the AST.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp:404,Modifiability,plugin,plugin,404,"//===- LLVMPrintFunctionNames.cpp; //---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which simply prints the names of all the functions; // within the generated LLVM code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp:417,Usability,simpl,simply,417,"//===- LLVMPrintFunctionNames.cpp; //---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which simply prints the names of all the functions; // within the generated LLVM code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PluginsOrder/PluginsOrder.cpp:7,Modifiability,Plugin,PluginsOrder,7,"//===- PluginsOrder.cpp ---------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/PluginsOrder/PluginsOrder.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PluginsOrder/PluginsOrder.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:397,Modifiability,plugin,plugin,397,"//===- PrintFunctionNames.cpp ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which simply prints the names of all the top-level decls; // in the input file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:410,Usability,simpl,simply,410,"//===- PrintFunctionNames.cpp ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which simply prints the names of all the top-level decls; // in the input file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:337,Modifiability,plugin,plugin,337,// This demonstrates how to force instantiation of some templates in; // -fdelayed-template-parsing mode. (Note: Doing this unconditionally for; // all templates is similar to not using -fdelayed-template-parsig in the; // first place.); // The advantage of doing this in HandleTranslationUnit() is that all; // codegen (when using -add-plugin) is completely finished and this can't; // affect the compiler output.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:11,Availability,error,error,11,// Example error handling.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h:92,Integrability,wrap,wraps,92,/// \returns The ImplicitParamDecl associated with \c self if this; /// AnalysisDeclContext wraps an ObjCMethodDecl or nullptr otherwise.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h:7,Integrability,wrap,wraps,7,"/// It wraps the AnalysisDeclContext to represent both the call stack with; /// the help of StackFrameContext and inside the function calls the; /// BlockInvocationContext. It is needed for context sensitive analysis to; /// model entering, leaving or inlining function calls.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h:35,Safety,safe,safe,35,// FIXME: Come up with a more type-safe way to model context-sensitivity.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h:17,Integrability,interface,interface,17,// Pointer to an interface that can provide function bodies for; // declarations from external source.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnalysisDeclContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnyCall.h:399,Performance,perform,performing,399,"//=== AnyCall.h - Abstraction over different callables --------*- C++ -*--//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A utility class for performing generic operations over different callables.; //; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/AnyCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnyCall.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnyCall.h:10,Modifiability,inherit,inherited,10,"/// A C++ inherited constructor produced by a ""using T::T"" directive",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/AnyCall.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/AnyCall.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/BodyFarm.h:31,Safety,avoid,avoid,31,/// Remove copy constructor to avoid accidental copying.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/BodyFarm.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/BodyFarm.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:491,Availability,avail,available,491,"//===- CallGraph.h - AST-based Call graph -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the AST-based CallGraph.; //; // A call graph for functions whose definitions/bodies are available in the; // current translation unit. The graph has a ""virtual"" root node that contains; // edges to all externally available functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:616,Availability,avail,available,616,"//===- CallGraph.h - AST-based Call graph -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the AST-based CallGraph.; //; // A call graph for functions whose definitions/bodies are available in the; // current translation unit. The graph has a ""virtual"" root node that contains; // edges to all externally available functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:55,Modifiability,extend,extends,55,"/// The AST-based call graph.; ///; /// The call graph extends itself with the given declarations by implementing; /// the recursive AST visitor, which constructs the graph by visiting the given; /// declarations.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:138,Integrability,depend,dependent,138,/// Populate the call graph with the functions in the given; /// declaration.; ///; /// Recursively walks the declaration to find all the dependent Decls as well.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:57,Availability,avail,available,57,"/// Get the virtual root of the graph, all the functions available externally; /// are represented as callees of the node.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:13,Security,access,access,13,/// Iterator access to callees/children of the node.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:46,Testability,assert,asserting,46,"/// Convert to the specified CFGElement type, asserting that this; /// CFGElement is of the desired type.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:176,Modifiability,config,config,176,/// Represents the point where a loop ends.; /// This element is only produced when building the CFG for the static; /// analyzer and hidden behind the 'cfg-loopexit' analyzer config flag.; ///; /// Note: a loop exit element can be reached even when the loop body was never; /// entered.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:35,Testability,assert,assertions,35,"/// Number of different kinds, for assertions. We subtract 1 so that; /// to keep receiving compiler warnings when we don't cover all enum values; /// in a switch.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:1261,Performance,optimiz,optimized-out,1261,"/// Represents a single basic block in a source-level CFG.; /// It consists of:; ///; /// (1) A set of statements/expressions (which may contain subexpressions).; /// (2) A ""terminator"" statement (not in the set of statements).; /// (3) A list of successors and predecessors.; ///; /// Terminator: The terminator represents the type of control-flow that occurs; /// at the end of the basic block. The terminator is a Stmt* referring to an; /// AST node that has control-flow: if-statements, breaks, loops, etc.; /// If the control-flow is conditional, the condition expression will appear; /// within the set of statements in the block (usually the last statement).; ///; /// Predecessors: the order in the set of predecessors is arbitrary.; ///; /// Successors: the order in the set of successors is NOT arbitrary. We; /// currently have the following orderings based on the terminator:; ///; /// Terminator | Successor Ordering; /// ------------------|------------------------------------; /// if | Then Block; Else Block; /// ? operator | LHS expression; RHS expression; /// logical and/or | expression that consumes the op, RHS; /// vbase inits | already handled by the most derived class; not yet; ///; /// But note that any of that may be NULL in case of optimized-out edges.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:1078,Testability,log,logical,1078,"/// Represents a single basic block in a source-level CFG.; /// It consists of:; ///; /// (1) A set of statements/expressions (which may contain subexpressions).; /// (2) A ""terminator"" statement (not in the set of statements).; /// (3) A list of successors and predecessors.; ///; /// Terminator: The terminator represents the type of control-flow that occurs; /// at the end of the basic block. The terminator is a Stmt* referring to an; /// AST node that has control-flow: if-statements, breaks, loops, etc.; /// If the control-flow is conditional, the condition expression will appear; /// within the set of statements in the block (usually the last statement).; ///; /// Predecessors: the order in the set of predecessors is arbitrary.; ///; /// Successors: the order in the set of successors is NOT arbitrary. We; /// currently have the following orderings based on the terminator:; ///; /// Terminator | Successor Ordering; /// ------------------|------------------------------------; /// if | Then Block; Else Block; /// ? operator | LHS expression; RHS expression; /// logical and/or | expression that consumes the op, RHS; /// vbase inits | already handled by the most derived class; not yet; ///; /// But note that any of that may be NULL in case of optimized-out edges.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:149,Integrability,wrap,wrapper,149,"/// A convenience class for comparing CFGElements, since methods of CFGBlock; /// like operator[] return CFGElements by value. This is practically a wrapper; /// around a (CFGBlock, Index) pair.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:93,Modifiability,variab,variable,93,"/// An (optional) label that prefixes the executable statements in the block.; /// When this variable is non-NULL, it is either an instance of LabelStmt,; /// SwitchCase or CXXCatchStmt.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:441,Performance,Optimiz,Optimization,441,"/// This bit is set when the basic block contains a function call; /// or implicit destructor that is attributed as 'noreturn'. In that case,; /// control cannot technically ever proceed past this block. All such blocks; /// will have a single immediate successor: the exit block. This allows them; /// to be easily reached from the exit block and using this bit quickly; /// recognized without scanning the contents of the block.; ///; /// Optimization Note: This bit could be profitably folded with Terminator's; /// storage if the memory usage of CFGBlock becomes an issue.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:83,Availability,error,error,83,/// CFGCallback defines methods that should be called when a logical; /// operator error is found when building the CFG.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:61,Testability,log,logical,61,/// CFGCallback defines methods that should be called when a logical; /// operator error is found when building the CFG.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:403,Usability,simpl,simply,403,"/// Represents a source-level, intra-procedural CFG that represents the; /// control-flow of a Stmt. The Stmt can represent an entire function body,; /// or a single expression. A CFG will always contain one empty block that; /// represents the Exit point of the CFG. A CFG will also contain a designated; /// Entry block. The CFG solely represents control-flow; it consists of; /// CFGBlocks which are simply containers of Stmt*'s in the AST the CFG; /// was constructed from.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:224,Energy Efficiency,allocate,allocated,224,//===--------------------------------------------------------------------===//; // CFG Introspection.; //===--------------------------------------------------------------------===//; /// Returns the total number of BlockIDs allocated (which start at 0).,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:186,Integrability,interface,interface,186,/// Return the total number of CFGBlocks within the CFG This is simply a; /// renaming of the getNumBlockIDs(). This is necessary because the dominator; /// implementation needs such an interface.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:64,Usability,simpl,simply,64,/// Return the total number of CFGBlocks within the CFG This is simply a; /// renaming of the getNumBlockIDs(). This is necessary because the dominator; /// implementation needs such an interface.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:62,Availability,down,down,62,"/// Returns true if the CFG has no branches. Usually it boils down to the CFG; /// having exactly three blocks (entry, the actual code, exit), but sometimes; /// more blocks appear due to having control flow that can be fully; /// resolved in compile time.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:101,Deployability,continuous,continuous,101,"/// Identifies a list of statements.; ///; /// Can either identify a single arbitrary Stmt object, a continuous sequence of; /// child statements inside a CompoundStmt or no statements at all.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:109,Deployability,continuous,continuous,109,/// Constructs a StmtSequence holding multiple statements.; ///; /// The resulting StmtSequence identifies a continuous sequence of statements; /// in the body of the given CompoundStmt. Which statements of the body should; /// be identified needs to be specified by providing a start and end index; /// that describe a non-empty sub-array in the body of the given CompoundStmt.; ///; /// \param Stmt A CompoundStmt that contains all statements in its body.; /// \param D The Decl containing this Stmt.; /// \param StartIndex The inclusive start index in the children array of; /// \p Stmt; /// \param EndIndex The exclusive end index in the children array of \p Stmt.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:239,Integrability,interface,interface,239,/// Constrains the given list of clone groups with the given constraint.; ///; /// The constraint is expected to have a method with the signature; /// `void constrain(std::vector<CloneDetector::CloneGroup> &Sequences)`; /// as this is the interface that the CloneDetector uses for applying the; /// constraint. The constraint is supposed to directly modify the passed list; /// so that all clones in the list fulfill the specific property this; /// constraint ensures.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:66,Security,hash,hashing,66,"/// This constraint moves clones into clone groups of type II via hashing.; ///; /// Clones with different hash values are moved into separate clone groups.; /// Collisions are possible, and this constraint does nothing to address this; /// them. Add the slower RecursiveCloneTypeIIVerifyConstraint later in the; /// constraint chain, not necessarily immediately, to eliminate hash collisions; /// through a more detailed analysis.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:107,Security,hash,hash,107,"/// This constraint moves clones into clone groups of type II via hashing.; ///; /// Clones with different hash values are moved into separate clone groups.; /// Collisions are possible, and this constraint does nothing to address this; /// them. Add the slower RecursiveCloneTypeIIVerifyConstraint later in the; /// constraint chain, not necessarily immediately, to eliminate hash collisions; /// through a more detailed analysis.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:377,Security,hash,hash,377,"/// This constraint moves clones into clone groups of type II via hashing.; ///; /// Clones with different hash values are moved into separate clone groups.; /// Collisions are possible, and this constraint does nothing to address this; /// them. Add the slower RecursiveCloneTypeIIVerifyConstraint later in the; /// constraint chain, not necessarily immediately, to eliminate hash collisions; /// through a more detailed analysis.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:334,Energy Efficiency,efficient,efficiently,334,"/// This constraint moves clones into clone groups of type II by comparing them.; ///; /// Clones that aren't type II clones are moved into separate clone groups.; /// In contrast to the RecursiveCloneTypeIIHashConstraint, all clones in a clone; /// group are guaranteed to be type II clones of each other, but it is too; /// slow to efficiently handle large amounts of clones.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:209,Performance,perform,performance,209,"/// Calculates the complexity of the given StmtSequence.; /// \param Limit The limit of complexity we probe for. After reaching; /// this limit during calculation, this method is exiting; /// early to improve performance and returns this limit.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:43,Modifiability,variab,variables,43,/// Analyzes the pattern of the referenced variables in a statement.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:33,Modifiability,variab,variable,33,/// Describes an occurrence of a variable reference in a statement.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:47,Modifiability,Variab,Variables,47,/// The index of the associated VarDecl in the Variables vector.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:40,Modifiability,variab,variable,40,/// The statement in the code where the variable was referenced.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:34,Modifiability,variab,variables,34,/// All occurrences of referenced variables in the order of appearance.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:23,Modifiability,variab,variables,23,/// List of referenced variables in the order of appearance.; /// Every item in this list is unique.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:15,Modifiability,variab,variable,15,/// Adds a new variable referenced to this pattern.; /// \param VarDecl The declaration of the variable that is referenced.; /// \param Mention The SourceRange where this variable is referenced.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:95,Modifiability,variab,variable,95,/// Adds a new variable referenced to this pattern.; /// \param VarDecl The declaration of the variable that is referenced.; /// \param Mention The SourceRange where this variable is referenced.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:171,Modifiability,variab,variable,171,/// Adds a new variable referenced to this pattern.; /// \param VarDecl The declaration of the variable that is referenced.; /// \param Mention The SourceRange where this variable is referenced.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:25,Modifiability,variab,variable,25,/// Adds each referenced variable from the given statement.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:15,Modifiability,Variab,VariablePattern,15,/// Creates an VariablePattern object with information about the given; /// StmtSequence.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:119,Availability,error,error,119,/// Describes two clones that reference their variables in a different pattern; /// which could indicate a programming error.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:46,Modifiability,variab,variables,46,/// Describes two clones that reference their variables in a different pattern; /// which could indicate a programming error.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:8,Modifiability,variab,variable,8,/// The variable which referencing in this clone was against the pattern.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:14,Modifiability,variab,variable,14,/// Where the variable was referenced.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:8,Modifiability,variab,variable,8,/// The variable that should have been referenced to follow the pattern.; /// If Suggestion is a nullptr then it's not possible to fix the pattern; /// by referencing a different variable in this clone.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:179,Modifiability,variab,variable,179,/// The variable that should have been referenced to follow the pattern.; /// If Suggestion is a nullptr then it's not possible to fix the pattern; /// by referencing a different variable in this clone.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:61,Modifiability,variab,variable,61,/// The first clone in the pair which always has a suggested variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:60,Modifiability,variab,variable,60,/// This other clone in the pair which can have a suggested variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:95,Modifiability,Variab,VariablePattern,95,"/// Counts the differences between this pattern and the given one.; /// \param Other The given VariablePattern to compare with.; /// \param FirstMismatch Output parameter that will be filled with information; /// about the first difference between the two patterns. This parameter; /// can be a nullptr, in which case it will be ignored.; /// \return Returns the number of differences between the pattern this object; /// is following and the given VariablePattern.; ///; /// For example, the following statements all have the same pattern and this; /// function would return zero:; ///; /// if (a < b) return a; return b;; /// if (x < y) return x; return y;; /// if (u2 < u1) return u2; return u1;; ///; /// But the following statement has a different pattern (note the changed; /// variables in the return statements) and would have two differences when; /// compared with one of the statements above.; ///; /// if (a < b) return b; return a;; ///; /// This function should only be called if the related statements of the given; /// pattern and the statements of this objects are clones of each other.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:449,Modifiability,Variab,VariablePattern,449,"/// Counts the differences between this pattern and the given one.; /// \param Other The given VariablePattern to compare with.; /// \param FirstMismatch Output parameter that will be filled with information; /// about the first difference between the two patterns. This parameter; /// can be a nullptr, in which case it will be ignored.; /// \return Returns the number of differences between the pattern this object; /// is following and the given VariablePattern.; ///; /// For example, the following statements all have the same pattern and this; /// function would return zero:; ///; /// if (a < b) return a; return b;; /// if (x < y) return x; return y;; /// if (u2 < u1) return u2; return u1;; ///; /// But the following statement has a different pattern (note the changed; /// variables in the return statements) and would have two differences when; /// compared with one of the statements above.; ///; /// if (a < b) return b; return a;; ///; /// This function should only be called if the related statements of the given; /// pattern and the statements of this objects are clones of each other.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:784,Modifiability,variab,variables,784,"/// Counts the differences between this pattern and the given one.; /// \param Other The given VariablePattern to compare with.; /// \param FirstMismatch Output parameter that will be filled with information; /// about the first difference between the two patterns. This parameter; /// can be a nullptr, in which case it will be ignored.; /// \return Returns the number of differences between the pattern this object; /// is following and the given VariablePattern.; ///; /// For example, the following statements all have the same pattern and this; /// function would return zero:; ///; /// if (a < b) return a; return b;; /// if (x < y) return x; return y;; /// if (u2 < u1) return u2; return u1;; ///; /// But the following statement has a different pattern (note the changed; /// variables in the return statements) and would have two differences when; /// compared with one of the statements above.; ///; /// if (a < b) return b; return a;; ///; /// This function should only be called if the related statements of the given; /// pattern and the statements of this objects are clones of each other.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:38,Modifiability,variab,variables,38,/// Ensures that all clones reference variables in the same pattern.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:522,Availability,avail,available,522,"//===-- CodeInjector.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::CodeInjector interface which is responsible for; /// injecting AST of function definitions that may not be available in the; /// original source.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:428,Integrability,interface,interface,428,"//===-- CodeInjector.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::CodeInjector interface which is responsible for; /// injecting AST of function definitions that may not be available in the; /// original source.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:468,Integrability,inject,injecting,468,"//===-- CodeInjector.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::CodeInjector interface which is responsible for; /// injecting AST of function definitions that may not be available in the; /// original source.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:468,Security,inject,injecting,468,"//===-- CodeInjector.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::CodeInjector interface which is responsible for; /// injecting AST of function definitions that may not be available in the; /// original source.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:117,Availability,avail,available,117,"/// CodeInjector is an interface which is responsible for injecting AST; /// of function definitions that may not be available in the original source.; ///; /// The getBody function will be called each time the static analyzer examines a; /// function call that has no definition available in the current translation; /// unit. If the returned statement is not a null pointer, it is assumed to be; /// the body of a function which will be used for the analysis. The source of; /// the body can be arbitrary, but it is advised to use memoization to avoid; /// unnecessary reparsing of the external source that provides the body of the; /// functions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:280,Availability,avail,available,280,"/// CodeInjector is an interface which is responsible for injecting AST; /// of function definitions that may not be available in the original source.; ///; /// The getBody function will be called each time the static analyzer examines a; /// function call that has no definition available in the current translation; /// unit. If the returned statement is not a null pointer, it is assumed to be; /// the body of a function which will be used for the analysis. The source of; /// the body can be arbitrary, but it is advised to use memoization to avoid; /// unnecessary reparsing of the external source that provides the body of the; /// functions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:23,Integrability,interface,interface,23,"/// CodeInjector is an interface which is responsible for injecting AST; /// of function definitions that may not be available in the original source.; ///; /// The getBody function will be called each time the static analyzer examines a; /// function call that has no definition available in the current translation; /// unit. If the returned statement is not a null pointer, it is assumed to be; /// the body of a function which will be used for the analysis. The source of; /// the body can be arbitrary, but it is advised to use memoization to avoid; /// unnecessary reparsing of the external source that provides the body of the; /// functions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:58,Integrability,inject,injecting,58,"/// CodeInjector is an interface which is responsible for injecting AST; /// of function definitions that may not be available in the original source.; ///; /// The getBody function will be called each time the static analyzer examines a; /// function call that has no definition available in the current translation; /// unit. If the returned statement is not a null pointer, it is assumed to be; /// the body of a function which will be used for the analysis. The source of; /// the body can be arbitrary, but it is advised to use memoization to avoid; /// unnecessary reparsing of the external source that provides the body of the; /// functions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:548,Safety,avoid,avoid,548,"/// CodeInjector is an interface which is responsible for injecting AST; /// of function definitions that may not be available in the original source.; ///; /// The getBody function will be called each time the static analyzer examines a; /// function call that has no definition available in the current translation; /// unit. If the returned statement is not a null pointer, it is assumed to be; /// the body of a function which will be used for the analysis. The source of; /// the body can be arbitrary, but it is advised to use memoization to avoid; /// unnecessary reparsing of the external source that provides the body of the; /// functions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:58,Security,inject,injecting,58,"/// CodeInjector is an interface which is responsible for injecting AST; /// of function definitions that may not be available in the original source.; ///; /// The getBody function will be called each time the static analyzer examines a; /// function call that has no definition available in the current translation; /// unit. If the returned statement is not a null pointer, it is assumed to be; /// the body of a function which will be used for the analysis. The source of; /// the body can be arbitrary, but it is advised to use memoization to avoid; /// unnecessary reparsing of the external source that provides the body of the; /// functions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:37,Usability,simpl,simple,37,// ConstructionContextItem should be simple enough so that it was easy to; // re-construct it from the AST node it captures. For that reason we provide; // simple implicit conversions from all sorts of supported AST nodes.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:156,Usability,simpl,simple,156,// ConstructionContextItem should be simple enough so that it was easy to; // re-construct it from the AST node it captures. For that reason we provide; // simple implicit conversions from all sorts of supported AST nodes.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:5,Modifiability,polymorphi,polymorphic,5,// A polymorphic version of the previous calls with dynamic type check.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:278,Energy Efficiency,allocate,allocated,278,"/// The construction site - the statement that triggered the construction; /// for one of its parts. For instance, stack variable declaration statement; /// triggers construction of itself or its elements if it's an array,; /// new-expression triggers construction of the newly allocated object(s).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:121,Modifiability,variab,variable,121,"/// The construction site - the statement that triggered the construction; /// for one of its parts. For instance, stack variable declaration statement; /// triggers construction of itself or its elements if it's an array,; /// new-expression triggers construction of the newly allocated object(s).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:126,Modifiability,variab,variable,126,"/// The construction site is not necessarily a statement. It may also be a; /// CXXCtorInitializer, which means that a member variable is being; /// constructed during initialization of the object that contains it.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:66,Modifiability,layers,layers,66,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:238,Modifiability,layers,layers,238,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:331,Modifiability,variab,variable,331,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:450,Modifiability,variab,variable,450,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:776,Modifiability,Layers,Layers,776,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:835,Modifiability,layers,layers,835,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:1013,Modifiability,layers,layers,1013,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:1119,Modifiability,layers,layers,1119,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:1180,Modifiability,layers,layers,1180,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:1259,Usability,user-friendly,user-friendly,1259,"/// Construction context can be seen as a linked list of multiple layers.; /// Sometimes a single trigger is not enough to describe the construction; /// site. That's what causing us to have a chain of ""partial"" construction; /// context layers. Some examples:; /// - A constructor within in an aggregate initializer list within a variable; /// would have a construction context of the initializer list with; /// the parent construction context of a variable.; /// - A constructor for a temporary that needs to be both destroyed; /// and materialized into an elidable copy constructor would have a; /// construction context of a CXXBindTemporaryExpr with the parent; /// construction context of a MaterializeTemproraryExpr.; /// Not all of these are currently supported.; /// Layers are created gradually while traversing the AST, and layers that; /// represent the outmost AST nodes are built first, while the node that; /// immediately contains the constructor would be built last and capture the; /// previous layers as its parents. Construction context captures the last layer; /// (which has links to the previous layers) and classifies the seemingly; /// arbitrary chain of layers into one of the possible ways of constructing; /// an object in C++ for user-friendly experience.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:259,Security,access,accessor,259,/// ConstructionContext's subclasses describe different ways of constructing; /// an object in C++. The context re-captures the essential parent AST nodes; /// of the CXXConstructExpr it is assigned to and presents these nodes; /// through easy-to-understand accessor methods.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:9,Integrability,rout,routine,9,// A sub-routine of createFromLayers() that deals with temporary objects; // that need to be materialized. The BTE argument is for the situation when; // the object also needs to be bound for destruction.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:9,Integrability,rout,routine,9,// A sub-routine of createFromLayers() that deals with temporary objects; // that need to be bound for destruction. Automatically finds out if the; // object also needs to be materialized and delegates to; // createMaterializedTemporaryFromLayers() if necessary.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:86,Integrability,wrap,wrap,86,"/// Consume the construction context layer, together with its parent layers,; /// and wrap it up into a complete construction context. May return null; /// if layers do not form any supported construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:69,Modifiability,layers,layers,69,"/// Consume the construction context layer, together with its parent layers,; /// and wrap it up into a complete construction context. May return null; /// if layers do not form any supported construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:159,Modifiability,layers,layers,159,"/// Consume the construction context layer, together with its parent layers,; /// and wrap it up into a complete construction context. May return null; /// if layers do not form any supported construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:37,Modifiability,variab,variable,37,/// An abstract base class for local variable constructors.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:48,Modifiability,variab,variable,48,"/// Represents construction into a simple local variable, eg. T var(123);.; /// If a variable has an initializer, eg. T var = makeT();, then the final; /// elidable copy-constructor from makeT() into var would also be a simple; /// variable constructor handled by this class.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:85,Modifiability,variab,variable,85,"/// Represents construction into a simple local variable, eg. T var(123);.; /// If a variable has an initializer, eg. T var = makeT();, then the final; /// elidable copy-constructor from makeT() into var would also be a simple; /// variable constructor handled by this class.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:232,Modifiability,variab,variable,232,"/// Represents construction into a simple local variable, eg. T var(123);.; /// If a variable has an initializer, eg. T var = makeT();, then the final; /// elidable copy-constructor from makeT() into var would also be a simple; /// variable constructor handled by this class.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:35,Usability,simpl,simple,35,"/// Represents construction into a simple local variable, eg. T var(123);.; /// If a variable has an initializer, eg. T var = makeT();, then the final; /// elidable copy-constructor from makeT() into var would also be a simple; /// variable constructor handled by this class.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:220,Usability,simpl,simple,220,"/// Represents construction into a simple local variable, eg. T var(123);.; /// If a variable has an initializer, eg. T var = makeT();, then the final; /// elidable copy-constructor from makeT() into var would also be a simple; /// variable constructor handled by this class.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:42,Modifiability,variab,variable,42,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:285,Modifiability,variab,variable,285,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:573,Modifiability,variab,variable,573,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:650,Modifiability,variab,variable,650,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:35,Usability,simpl,simple,35,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:278,Usability,simpl,simple,278,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:566,Usability,simpl,simple,566,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:643,Usability,simpl,simple,643,"/// Represents construction into a simple variable with an initializer syntax,; /// with a single constructor, eg. T var = makeT();. Such construction context; /// may only appear in C++17 because previously it was split into a temporary; /// object constructor and an elidable simple variable copy-constructor and; /// we were producing separate construction contexts for these constructors.; /// In C++17 we have a single construction context that combines both.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple variable constructor on the AST level;; /// in this case we provide a simple variable construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:329,Usability,simpl,simple,329,"/// Represents construction into a field or a base class within a bigger object; /// via a constructor initializer, with a single constructor, eg.; /// T(): field(Field(123)) { ... }. Such construction context may only appear; /// in C++17 because previously it was split into a temporary object constructor; /// and an elidable simple constructor-initializer copy-constructor and we were; /// producing separate construction contexts for these constructors. In C++17; /// we have a single construction context that combines both. Note that if the; /// object has trivial destructor, then this code is indistinguishable from; /// a simple constructor-initializer constructor on the AST level; in this case; /// we provide a simple constructor-initializer construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:632,Usability,simpl,simple,632,"/// Represents construction into a field or a base class within a bigger object; /// via a constructor initializer, with a single constructor, eg.; /// T(): field(Field(123)) { ... }. Such construction context may only appear; /// in C++17 because previously it was split into a temporary object constructor; /// and an elidable simple constructor-initializer copy-constructor and we were; /// producing separate construction contexts for these constructors. In C++17; /// we have a single construction context that combines both. Note that if the; /// object has trivial destructor, then this code is indistinguishable from; /// a simple constructor-initializer constructor on the AST level; in this case; /// we provide a simple constructor-initializer construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:724,Usability,simpl,simple,724,"/// Represents construction into a field or a base class within a bigger object; /// via a constructor initializer, with a single constructor, eg.; /// T(): field(Field(123)) { ... }. Such construction context may only appear; /// in C++17 because previously it was split into a temporary object constructor; /// and an elidable simple constructor-initializer copy-constructor and we were; /// producing separate construction contexts for these constructors. In C++17; /// we have a single construction context that combines both. Note that if the; /// object has trivial destructor, then this code is indistinguishable from; /// a simple constructor-initializer constructor on the AST level; in this case; /// we provide a simple constructor-initializer construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:50,Energy Efficiency,allocate,allocated,50,"/// Represents immediate initialization of memory allocated by operator new,; /// eg. new T(123);.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:125,Usability,simpl,simply,125,"// Both BTE and MTE can be null here, all combinations possible.; // Even though for now at least one should be non-null, we simply haven't; // implemented the other case yet (this would be a temporary in the middle; // of nowhere that doesn't have a non-trivial destructor).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:165,Security,access,accessing,165,"/// MaterializeTemporaryExpr is non-null as long as the temporary is actually; /// used after construction, eg. by binding to a reference (lifetime; /// extension), accessing a field, calling a method, or passing it into; /// a function (an elidable copy or move constructor would be a common; /// example) by reference.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:245,Modifiability,extend,extended,245,"/// Represents a temporary object that is not constructed for the purpose of; /// being immediately copied/moved by an elidable copy/move-constructor.; /// This includes temporary objects ""in the middle of nowhere"" like T(123) and; /// lifetime-extended temporaries.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:241,Modifiability,variab,variable,241,"/// Represents a temporary object that is constructed for the sole purpose; /// of being immediately copied by an elidable copy/move constructor.; /// For example, T t = T(123); includes a temporary T(123) that is immediately; /// copied to variable t. In such cases the elidable copy can (but not; /// necessarily should) be omitted (""elided"") according to the rules of the; /// language; the constructor would then construct variable t directly.; /// This construction context contains information of the elidable constructor; /// and its respective construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:427,Modifiability,variab,variable,427,"/// Represents a temporary object that is constructed for the sole purpose; /// of being immediately copied by an elidable copy/move constructor.; /// For example, T t = T(123); includes a temporary T(123) that is immediately; /// copied to variable t. In such cases the elidable copy can (but not; /// necessarily should) be omitted (""elided"") according to the rules of the; /// language; the constructor would then construct variable t directly.; /// This construction context contains information of the elidable constructor; /// and its respective construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:489,Usability,simpl,simple,489,"/// Represents a temporary object that is being immediately returned from a; /// function by value, eg. return t; or return T(123); in C++17.; /// In C++17 there is not going to be an elidable copy constructor at the; /// return site. However, the usual temporary-related bureaucracy (CXXBindTemporaryExpr,; /// MaterializeTemporaryExpr) is normally located in the caller function's AST.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple returned value constructor on the AST level;; /// in this case we provide a simple returned value construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:572,Usability,simpl,simple,572,"/// Represents a temporary object that is being immediately returned from a; /// function by value, eg. return t; or return T(123); in C++17.; /// In C++17 there is not going to be an elidable copy constructor at the; /// return site. However, the usual temporary-related bureaucracy (CXXBindTemporaryExpr,; /// MaterializeTemporaryExpr) is normally located in the caller function's AST.; /// Note that if the object has trivial destructor, then this code is; /// indistinguishable from a simple returned value constructor on the AST level;; /// in this case we provide a simple returned value construction context.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:54,Security,hash,hashes,54,"//===---------- IssueHash.h - Generate identification hashes ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:418,Availability,avail,available,418,"/// Returns an opaque identifier for a diagnostic.; ///; /// This opaque identifier is intended to be stable even when the source code; /// is changed. It allows to track diagnostics in the long term, for example,; /// find which diagnostics are ""new"", maintain a database of suppressed; /// diagnostics etc.; ///; /// We may introduce more variants of issue hashes in the future; /// but older variants will still be available for compatibility.; ///; /// This hash is based on the following information:; /// - Name of the checker that emitted the diagnostic.; /// - Warning message.; /// - Name of the enclosing declaration.; /// - Contents of the line of code with the issue, excluding whitespace.; /// - Column number (but not the line number! - which makes it stable).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:577,Integrability,message,message,577,"/// Returns an opaque identifier for a diagnostic.; ///; /// This opaque identifier is intended to be stable even when the source code; /// is changed. It allows to track diagnostics in the long term, for example,; /// find which diagnostics are ""new"", maintain a database of suppressed; /// diagnostics etc.; ///; /// We may introduce more variants of issue hashes in the future; /// but older variants will still be available for compatibility.; ///; /// This hash is based on the following information:; /// - Name of the checker that emitted the diagnostic.; /// - Warning message.; /// - Name of the enclosing declaration.; /// - Contents of the line of code with the issue, excluding whitespace.; /// - Column number (but not the line number! - which makes it stable).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:359,Security,hash,hashes,359,"/// Returns an opaque identifier for a diagnostic.; ///; /// This opaque identifier is intended to be stable even when the source code; /// is changed. It allows to track diagnostics in the long term, for example,; /// find which diagnostics are ""new"", maintain a database of suppressed; /// diagnostics etc.; ///; /// We may introduce more variants of issue hashes in the future; /// but older variants will still be available for compatibility.; ///; /// This hash is based on the following information:; /// - Name of the checker that emitted the diagnostic.; /// - Warning message.; /// - Name of the enclosing declaration.; /// - Contents of the line of code with the issue, excluding whitespace.; /// - Column number (but not the line number! - which makes it stable).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:462,Security,hash,hash,462,"/// Returns an opaque identifier for a diagnostic.; ///; /// This opaque identifier is intended to be stable even when the source code; /// is changed. It allows to track diagnostics in the long term, for example,; /// find which diagnostics are ""new"", maintain a database of suppressed; /// diagnostics etc.; ///; /// We may introduce more variants of issue hashes in the future; /// but older variants will still be available for compatibility.; ///; /// This hash is based on the following information:; /// - Name of the checker that emitted the diagnostic.; /// - Warning message.; /// - Name of the enclosing declaration.; /// - Contents of the line of code with the issue, excluding whitespace.; /// - Column number (but not the line number! - which makes it stable).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:59,Security,hash,hash,59,"/// Get the unhashed string representation of the V1 issue hash.; /// When hashed, it becomes the actual issue hash. Useful for testing.; /// See GetIssueHashV1() for more information.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:75,Security,hash,hashed,75,"/// Get the unhashed string representation of the V1 issue hash.; /// When hashed, it becomes the actual issue hash. Useful for testing.; /// See GetIssueHashV1() for more information.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:111,Security,hash,hash,111,"/// Get the unhashed string representation of the V1 issue hash.; /// When hashed, it becomes the actual issue hash. Useful for testing.; /// See GetIssueHashV1() for more information.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h:128,Testability,test,testing,128,"/// Get the unhashed string representation of the V1 issue hash.; /// When hashed, it becomes the actual issue hash. Useful for testing.; /// See GetIssueHashV1() for more information.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/IssueHash.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/MacroExpansionContext.h:1559,Modifiability,variab,variable,1559,"// namespace detail; /// MacroExpansionContext tracks the macro expansions processed by the; /// Preprocessor. It means that it can track source locations from a single; /// translation unit. For every macro expansion it can tell you what text will; /// be substituted.; ///; /// It was designed to deal with:; /// - regular macros; /// - macro functions; /// - variadic macros; /// - transitive macro expansions; /// - macro redefinition; /// - unbalanced parenthesis; ///; /// \code{.c}; /// void bar();; /// #define retArg(x) x; /// #define retArgUnclosed retArg(bar(); /// #define BB CC; /// #define applyInt BB(int); /// #define CC(x) retArgUnclosed; ///; /// void unbalancedMacros() {; /// applyInt );; /// //^~~~~~~~~~^ is the substituted range; /// // Substituted text is ""applyInt )""; /// // Expanded text is ""bar()""; /// }; ///; /// #define expandArgUnclosedCommaExpr(x) (x, bar(), 1; /// #define f expandArgUnclosedCommaExpr; ///; /// void unbalancedMacros2() {; /// int x = f(f(1)) )); // Look at the parenthesis!; /// // ^~~~~~^ is the substituted range; /// // Substituted text is ""f(f(1))""; /// // Expanded text is ""((1,bar(),1,bar(),1""; /// }; /// \endcode; /// \remark Currently we don't respect the whitespaces between expanded tokens,; /// so the output for this example might differ from the -E compiler; /// invocation.; /// \remark All whitespaces are consumed while constructing the expansion.; /// After all identifier a single space inserted to produce a valid C; /// code even if identifier follows an other identifiers such as; /// variable declarations.; /// \remark MacroExpansionContext object must outlive the Preprocessor; /// parameter.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/MacroExpansionContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/MacroExpansionContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:428,Integrability,interface,interfaces,428,"//===- PathDiagnostic.h - Path-Specific Diagnostic Handling -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PathDiagnostic-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:96,Integrability,interface,interface,96,//===----------------------------------------------------------------------===//; // High-level interface for handlers of path-sensitive diagnostics.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:67,Availability,error,errors,67,/// Whether the consumer should treat consumed diagnostics as hard errors.; /// Useful for breaking your build when issues are found.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:43,Modifiability,rewrite,rewrite,43,/// Whether the consumer should attempt to rewrite the source file; /// with fix-it hints attached to the diagnostics it consumes.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:18,Security,hash,hash,18,/// A precomputed hash tag used for uniquing PDFileEntry objects.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h:405,Integrability,interface,interface,405,"//==- ProgramPoint.h - Program Points for Path-Sensitive Analysis --*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface ProgramPoint, which identifies a; // distinct location in a function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h:48,Testability,assert,asserting,48,"/// Convert to the specified ProgramPoint type, asserting that this; /// ProgramPoint is of the desired type.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h:31,Security,hash,hash,31,// For use with DenseMap. This hash is probably slow.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:50,Integrability,message,message,50,/// The argument is treated as if an -autorelease message had been sent to; /// the referenced object.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:84,Integrability,bridg,bridge,84,/// The argument has its reference count decreased by 1 to model; /// a transferred bridge cast under ARC.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:158,Availability,alive,alive,158,"/// The argument is treated as potentially escaping, meaning that; /// even when its reference count hits 0 it should be treated as still; /// possibly being alive as someone else *may* be holding onto the object.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:4,Performance,Perform,Performs,4,/// Performs the combined functionality of DecRef and StopTrackingHard.; ///; /// The models the effect that the called function decrements the reference; /// count of the argument and all typestate tracking on that argument; /// should cease.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:41,Deployability,release,release,41,/// RetEffect summarizes a call's retain/release behavior with respect; /// to its return value.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:85,Energy Efficiency,Adapt,Adapters,85,//===----------------------------------------------------------------------===//; // Adapters for FoldingSet.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:85,Integrability,Adapter,Adapters,85,//===----------------------------------------------------------------------===//; // Adapters for FoldingSet.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:85,Modifiability,Adapt,Adapters,85,//===----------------------------------------------------------------------===//; // Adapters for FoldingSet.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:57,Integrability,message,message,57,"/// Receiver - If this summary applies to an Objective-C message expression,; /// this is the effect applied to the state of the receiver.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:43,Integrability,message,message,43,/// Sets the effect on the receiver of the message.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:4,Testability,Test,Test,4,"/// Test if two retain summaries are identical. Note that merely equivalent; /// summaries are not necessarily identical (for example, if an explicit; /// argument effect matches the default effect).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:24,Usability,simpl,simple,24,/// A retain summary is simple if it has no ArgEffects other than the default.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:145,Performance,cache,cache,145,"// Walk the super chain. If we find a hit with a parent, we'll end; // up returning that summary. We actually allow that key (null,S), as; // we cache summaries for the null ObjCInterfaceDecl* to allow us to; // generate initial summaries without having to worry about NSObject; // being declared.; // FIXME: We may change this at some point.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:3,Performance,Cache,Cache,3,// Cache the summary with original key to make the next lookup faster; // and return the iterator.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:4,Usability,Simpl,SimpleSummaries,4,/// SimpleSummaries - Used for uniquing summaries that don't have special; /// effects.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:318,Integrability,message,messages,318,"/// Special case '[super init];' and '[self init];'; ///; /// Even though calling '[super init]' without assigning the result to self; /// and checking if the parent returns 'nil' is a bad pattern, it is common.; /// Additionally, our Self Init checker already warns about it. To avoid; /// overwhelming the user with messages from both checkers, we model the case; /// of '[super init]' in cases when it is not consumed by another expression; /// as if the call preserves the value of 'self'; essentially, assuming it can; /// never fail and return 'nil'.; /// Note, we don't want to just stop tracking the value since we want the; /// RetainCount checker to report leaks and use-after-free if SelfInit checker; /// is turned off.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:280,Safety,avoid,avoid,280,"/// Special case '[super init];' and '[self init];'; ///; /// Even though calling '[super init]' without assigning the result to self; /// and checking if the parent returns 'nil' is a bad pattern, it is common.; /// Additionally, our Self Init checker already warns about it. To avoid; /// overwhelming the user with messages from both checkers, we model the case; /// of '[super init]' in cases when it is not consumed by another expression; /// as if the call preserves the value of 'self'; essentially, assuming it can; /// never fail and return 'nil'.; /// Note, we don't want to just stop tracking the value since we want the; /// RetainCount checker to report leaks and use-after-free if SelfInit checker; /// is turned off.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:177,Security,validat,validation,177,"/// Determine whether a declaration @c D of correspondent type (return; /// type for functions/methods) @c QT has any of the given attributes,; /// provided they pass necessary validation checks AND tracking the given; /// attribute is enabled.; /// Returns the object kind corresponding to the present attribute, or; /// std::nullopt, if none of the specified attributes are present.; /// Crashes if passed an attribute which is not explicitly handled.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:11,Safety,avoid,avoid,11,"// Used to avoid allocating long-term (BPAlloc'd) memory for default retain; // summaries. If a function or method looks like it has a default summary, but; // it has annotations, the annotations are added to the stack-based template; // and then copied into managed memory.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CalledOnceCheck.h:145,Safety,detect,detects,145,"/// Check given CFG for 'called once' parameter violations.; ///; /// It traverses the function and tracks how such parameters are used.; /// It detects two main violations:; /// * parameter is called twice; /// * parameter is not called; ///; /// \param AC -- context.; /// \param Handler -- a handler for found violations.; /// \param CheckConventionalParameters -- true, if we want to check parameters; /// not explicitly marked as 'called once', but having the same requirements; /// according to conventions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CalledOnceCheck.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CalledOnceCheck.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CFGReachabilityAnalysis.h:16,Performance,perform,performs,16,"// A class that performs reachability queries for CFGBlocks. Several internal; // checks in this checker require reachability information. The requests all; // tend to have a common destination, so we lazily do a predecessor search; // from the destination node and cache the results to prevent work; // duplication.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CFGReachabilityAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CFGReachabilityAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CFGReachabilityAnalysis.h:266,Performance,cache,cache,266,"// A class that performs reachability queries for CFGBlocks. Several internal; // checks in this checker require reachability information. The requests all; // tend to have a common destination, so we lazily do a predecessor search; // from the destination node and cache the results to prevent work; // duplication.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CFGReachabilityAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/CFGReachabilityAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:38,Modifiability,variab,variable,38,// No state information for the given variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:16,Modifiability,variab,variable,16,/// Warn that a variable's state doesn't match at the entry and exit; /// of a loop.; ///; /// \param Loc -- The location of the end of the loop.; ///; /// \param VariableName -- The name of the variable that has a mismatched; /// state.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:163,Modifiability,Variab,VariableName,163,/// Warn that a variable's state doesn't match at the entry and exit; /// of a loop.; ///; /// \param Loc -- The location of the end of the loop.; ///; /// \param VariableName -- The name of the variable that has a mismatched; /// state.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:195,Modifiability,variab,variable,195,/// Warn that a variable's state doesn't match at the entry and exit; /// of a loop.; ///; /// \param Loc -- The location of the end of the loop.; ///; /// \param VariableName -- The name of the variable that has a mismatched; /// state.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:34,Availability,error,errors,34,/// Warn about use-while-consumed errors.; /// \param MethodName -- The name of the method that was incorrectly; /// invoked.; ///; /// \param State -- The state the object was used in.; ///; /// \param Loc -- The SourceLocation of the method invocation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:34,Availability,error,errors,34,/// Warn about use-while-consumed errors.; /// \param MethodName -- The name of the method that was incorrectly; /// invoked.; ///; /// \param State -- The state the object was used in.; ///; /// \param VariableName -- The name of the variable that holds the unique; /// value.; ///; /// \param Loc -- The SourceLocation of the method invocation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:203,Modifiability,Variab,VariableName,203,/// Warn about use-while-consumed errors.; /// \param MethodName -- The name of the method that was incorrectly; /// invoked.; ///; /// \param State -- The state the object was used in.; ///; /// \param VariableName -- The name of the variable that holds the unique; /// value.; ///; /// \param Loc -- The SourceLocation of the method invocation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:235,Modifiability,variab,variable,235,/// Warn about use-while-consumed errors.; /// \param MethodName -- The name of the method that was incorrectly; /// invoked.; ///; /// \param State -- The state the object was used in.; ///; /// \param VariableName -- The name of the variable that holds the unique; /// value.; ///; /// \param Loc -- The SourceLocation of the method invocation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:4,Usability,Clear,Clear,4,/// Clear the TmpMap.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:38,Modifiability,variab,variable,38,/// Get the consumed state of a given variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:38,Modifiability,variab,variable,38,/// Set the consumed state of a given variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:4,Testability,Test,Tests,4,/// Tests to see if there is a mismatch in the states stored in two; /// maps.; ///; /// \param Other -- The second map to compare against.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:48,Integrability,wrap,wrapper,48,"/// \returns the root DomTreeNode, which is the wrapper for CFGBlock.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Testability,Test,Tests,4,/// Tests whether \p A dominates \p B.; /// Note a block always dominates itself.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Testability,Test,Tests,4,"/// Tests whether \p A properly dominates \p B.; /// \returns false if \p A is the same block as \p B, otherwise whether A; /// dominates B.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Deployability,Update,Update,4,/// Update the dominator tree information when a node's immediate dominator; /// changes.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Testability,Test,Tests,4,/// Tests whether \p A is reachable from the entry block.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Deployability,Release,Releases,4,/// Releases the memory held by the dominator tree.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:39,Integrability,depend,dependencies,39,// Lazily retrieves the set of control dependencies to \p A.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:28,Integrability,depend,dependent,28,/// Whether \p A is control dependent on \p B.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:27,Integrability,depend,dependencies,27,// Dumps immediate control dependencies for each block.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ExprMutationAnalyzer.h:16,Integrability,wrap,wrapper,16,// A convenient wrapper around ExprMutationAnalyzer for analyzing function; // params.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ExprMutationAnalyzer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ExprMutationAnalyzer.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h:774,Energy Efficiency,Efficient,Efficient,774,"//===- IntervalPartition.h - CFG Partitioning into Intervals -----*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines functionality for partitioning a CFG into intervals and; // building a weak topological order (WTO) of the nodes, based on the; // partitioning. The concepts and implementations for the graph partitioning; // are based on the presentation in ""Compilers"" by Aho, Sethi and Ullman (the; // ""dragon book""), pages 664-666. The concepts around WTOs is taken from the; // paper ""Efficient chaotic iteration strategies with widenings,"" by; // F. Bourdoncle ([Bourdoncle1993]).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h:138,Usability,guid,guide,138,"/// A _weak topological ordering_ (WTO) of CFG nodes provides a total order over; /// the CFG (defined in `WTOCompare`, below), which can guide the order in which; /// to visit nodes in fixpoint computations over the CFG.; ///; /// Roughly, a WTO a) groups the blocks so that loop heads are grouped with; /// their bodies and any nodes they dominate after the loop and b) orders the; /// groups topologically. As a result, the blocks in a series of loops are; /// ordered such that all nodes in loop `i` are earlier in the order than nodes; /// in loop `j`. This ordering, when combined with widening, bounds the number; /// of times a node must be visited for a dataflow algorithm to reach a; /// fixpoint. For the precise definition of a WTO and its properties, see; /// [Bourdoncle1993].; ///; /// Here, we provide a simplified WTO which drops its nesting structure,; /// maintaining only the ordering itself. The ordering is built from the limit; /// flow graph of `Cfg` (derived from iteratively partitioning it into; /// intervals) if and only if it is reducible (its limit flow graph has one; /// node). Returns `nullopt` when `Cfg` is not reducible.; ///; /// This WTO construction is described in Section 4.2 of [Bourdoncle1993].",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h:820,Usability,simpl,simplified,820,"/// A _weak topological ordering_ (WTO) of CFG nodes provides a total order over; /// the CFG (defined in `WTOCompare`, below), which can guide the order in which; /// to visit nodes in fixpoint computations over the CFG.; ///; /// Roughly, a WTO a) groups the blocks so that loop heads are grouped with; /// their bodies and any nodes they dominate after the loop and b) orders the; /// groups topologically. As a result, the blocks in a series of loops are; /// ordered such that all nodes in loop `i` are earlier in the order than nodes; /// in loop `j`. This ordering, when combined with widening, bounds the number; /// of times a node must be visited for a dataflow algorithm to reach a; /// fixpoint. For the precise definition of a WTO and its properties, see; /// [Bourdoncle1993].; ///; /// Here, we provide a simplified WTO which drops its nesting structure,; /// maintaining only the ordering itself. The ordering is built from the limit; /// flow graph of `Cfg` (derived from iteratively partitioning it into; /// intervals) if and only if it is reducible (its limit flow graph has one; /// node). Returns `nullopt` when `Cfg` is not reducible.; ///; /// This WTO construction is described in Section 4.2 of [Bourdoncle1993].",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:30,Modifiability,Variab,Variable,30,"//===- LiveVariables.h - Live Variable Analysis for Source CFGs -*- C++ --*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements Live Variables analysis for source-level CFGs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:407,Modifiability,Variab,Variables,407,"//===- LiveVariables.h - Live Variable Analysis for Source CFGs -*- C++ --*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements Live Variables analysis for source-level CFGs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:25,Modifiability,variab,variables,25,/// Called when the live variables analysis registers; /// that a variable is killed.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:66,Modifiability,variab,variable,66,/// Called when the live variables analysis registers; /// that a variable is killed.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:21,Modifiability,variab,variable,21,/// Return true if a variable is live at the end of a; /// specified block.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:22,Modifiability,variab,variable,22,"/// Returns true if a variable is live at the beginning of the; /// the statement. This query only works if liveness information; /// has been recorded at the statement level (see runOnAllBlocks), and; /// only returns liveness information for block-level expressions.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:24,Modifiability,variab,variable,24,/// Print to stderr the variable liveness information associated with; /// each basic block.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/PostOrderCFGView.h:93,Integrability,interface,interface,93,"/// Implements a set of CFGBlocks using a BitVector.; ///; /// This class contains a minimal interface, primarily dictated by the SetType; /// template parameter of the llvm::po_iterator template, as used with; /// external storage. We also use this set to keep track of which CFGBlocks we; /// visit during the analysis.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/PostOrderCFGView.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/PostOrderCFGView.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/PostOrderCFGView.h:52,Integrability,interface,interface,52,"// po_iterator requires this iterator, but the only interface needed is the; // value_type type.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/PostOrderCFGView.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/PostOrderCFGView.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:426,Safety,safe,safety,426,"//===- ThreadSafety.h -------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; //; // A intra-procedural analysis for thread safety (e.g. deadlocks and race; // conditions), based off of an annotation system.; //; // See http://clang.llvm.org/docs/LanguageExtensions.html#thread-safety-annotation-checking; // for more information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:580,Safety,safe,safety-annotation-checking,580,"//===- ThreadSafety.h -------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; //; // A intra-procedural analysis for thread safety (e.g. deadlocks and race; // conditions), based off of an annotation system.; //; // See http://clang.llvm.org/docs/LanguageExtensions.html#thread-safety-annotation-checking; // for more information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:131,Availability,error,error,131,/// This enum distinguishes between different kinds of operations that may; /// need to be protected by locks. We use this enum in error handling.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:20,Modifiability,variab,variable,20,/// Dereferencing a variable (e.g. p in *p = 5;),MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:25,Modifiability,variab,variable,25,/// Reading or writing a variable (e.g. x in x = 5;),MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:22,Modifiability,variab,variable,22,/// Passing a guarded variable by reference.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:25,Modifiability,variab,variable,25,/// Passing a pt-guarded variable by reference.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:24,Modifiability,variab,variable,24,/// Returning a guarded variable by reference.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:27,Modifiability,variab,variable,27,/// Returning a pt-guarded variable by reference.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:96,Availability,error,error,96,"/// This enum distinguishes between different kinds of lock actions. For; /// example, it is an error to write a variable protected by shared version of a; /// mutex.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:113,Modifiability,variab,variable,113,"/// This enum distinguishes between different kinds of lock actions. For; /// example, it is an error to write a variable protected by shared version of a; /// mutex.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:84,Modifiability,variab,variable,84,/// This enum distinguishes between different ways to access (read or write) a; /// variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:54,Security,access,access,54,/// This enum distinguishes between different ways to access (read or write) a; /// variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:14,Modifiability,variab,variable,14,/// Reading a variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:14,Modifiability,variab,variable,14,/// Writing a variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:29,Safety,safe,safety,29,/// Handler class for thread safety warnings.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:257,Availability,error,error,257,"/// Warn about unlock function calls that do not have a prior matching lock; /// expression.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Loc -- The SourceLocation of the Unlock; /// \param LocPreviousUnlock -- If valid, the location of a previous Unlock.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:263,Integrability,message,message,263,"/// Warn about unlock function calls that do not have a prior matching lock; /// expression.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Loc -- The SourceLocation of the Unlock; /// \param LocPreviousUnlock -- If valid, the location of a previous Unlock.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:273,Availability,error,error,273,"/// Warn about an unlock function call that attempts to unlock a lock with; /// the incorrect lock kind. For instance, a shared lock being unlocked; /// exclusively, or vice versa.; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param Expected -- the kind of lock expected.; /// \param Received -- the kind of lock received.; /// \param LocLocked -- The SourceLocation of the Lock.; /// \param LocUnlock -- The SourceLocation of the Unlock.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:279,Integrability,message,message,279,"/// Warn about an unlock function call that attempts to unlock a lock with; /// the incorrect lock kind. For instance, a shared lock being unlocked; /// exclusively, or vice versa.; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param Expected -- the kind of lock expected.; /// \param Received -- the kind of lock received.; /// \param LocLocked -- The SourceLocation of the Lock.; /// \param LocUnlock -- The SourceLocation of the Unlock.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:233,Availability,error,error,233,"/// Warn about lock function calls for locks which are already held.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LocLocked -- The location of the first lock expression.; /// \param LocDoubleLock -- The location of the second lock expression.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:239,Integrability,message,message,239,"/// Warn about lock function calls for locks which are already held.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LocLocked -- The location of the first lock expression.; /// \param LocDoubleLock -- The location of the second lock expression.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:483,Availability,error,error,483,"/// Warn about situations where a mutex is sometimes held and sometimes not.; /// The three situations are:; /// 1. a mutex is locked on an ""if"" branch but not the ""else"" branch,; /// 2, or a mutex is only held at the start of some loop iterations,; /// 3. or when a mutex is locked but not unlocked inside a function.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LocLocked -- The location of the lock expression where the mutex is; /// locked; /// \param LocEndOfScope -- The location of the end of the scope where the; /// mutex is no longer held; /// \param LEK -- which of the three above cases we should warn for",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:489,Integrability,message,message,489,"/// Warn about situations where a mutex is sometimes held and sometimes not.; /// The three situations are:; /// 1. a mutex is locked on an ""if"" branch but not the ""else"" branch,; /// 2, or a mutex is only held at the start of some loop iterations,; /// 3. or when a mutex is locked but not unlocked inside a function.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LocLocked -- The location of the lock expression where the mutex is; /// locked; /// \param LocEndOfScope -- The location of the end of the scope where the; /// mutex is no longer held; /// \param LEK -- which of the three above cases we should warn for",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:347,Availability,error,error,347,"/// Warn when a mutex is held exclusively and shared at the same point. For; /// example, if a mutex is locked exclusively during an if branch and shared; /// during the else branch.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Loc1 -- The location of the first lock expression.; /// \param Loc2 -- The location of the second lock expression.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:353,Integrability,message,message,353,"/// Warn when a mutex is held exclusively and shared at the same point. For; /// example, if a mutex is locked exclusively during an if branch and shared; /// during the else branch.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Loc1 -- The location of the first lock expression.; /// \param Loc2 -- The location of the second lock expression.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:112,Modifiability,variab,variable,112,/// Warn when a protected operation occurs while no locks are held.; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param AK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:190,Modifiability,variab,variable,190,/// Warn when a protected operation occurs while no locks are held.; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param AK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:199,Security,access,access,199,/// Warn when a protected operation occurs while no locks are held.; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param AK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:237,Security,access,access,237,/// Warn when a protected operation occurs while no locks are held.; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param AK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:416,Availability,error,error,416,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:422,Integrability,message,message,422,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:229,Modifiability,variab,variable,229,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:307,Modifiability,variab,variable,307,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:316,Security,access,access,316,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:461,Security,access,access,461,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:345,Availability,error,error,345,"/// Warn when a function is called while an excluded mutex is locked. For; /// example, the mutex may be locked inside the function.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param FunName -- The name of the function; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Loc -- The location of the function call.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:351,Integrability,message,message,351,"/// Warn when a function is called while an excluded mutex is locked. For; /// example, the mutex may be locked inside the function.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param FunName -- The name of the function; /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param Loc -- The location of the function call.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:56,Integrability,depend,dependencies,56,/// Warn that there is a cycle in acquired_before/after dependencies.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:38,Safety,safe,safety,38,"/// Check a function's CFG for thread-safety violations.; ///; /// We traverse the blocks in the CFG, compute the set of mutexes that are held; /// at the end of each block, and issue warnings for thread safety violations.; /// Each block in the CFG is traversed exactly once.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:204,Safety,safe,safety,204,"/// Check a function's CFG for thread-safety violations.; ///; /// We traverse the blocks in the CFG, compute the set of mutexes that are held; /// at the end of each block, and issue warnings for thread safety violations.; /// Each block in the CFG is traversed exactly once.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:81,Security,access,access,81,/// Helper function that returns a LockKind required for the given level; /// of access.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:399,Safety,safe,safety,399,"//===- ThreadSafetyCommon.h -------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Parts of thread safety analysis that are not specific to thread safety; // itself have been factored into classes here, where they can be potentially; // used by other analyses. Currently these include:; //; // * Generalize clang CFG visitors.; // * Conversion of the clang CFG to SSA form.; // * Translation of clang Exprs to TIL SExprs; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:447,Safety,safe,safety,447,"//===- ThreadSafetyCommon.h -------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Parts of thread safety analysis that are not specific to thread safety; // itself have been factored into classes here, where they can be potentially; // used by other analyses. Currently these include:; //; // * Generalize clang CFG visitors.; // * Conversion of the clang CFG to SSA form.; // * Translation of clang Exprs to TIL SExprs; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:765,Safety,RISK,RISK,765,"//===- ThreadSafetyCommon.h -------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Parts of thread safety analysis that are not specific to thread safety; // itself have been factored into classes here, where they can be potentially; // used by other analyses. Currently these include:; //; // * Generalize clang CFG visitors.; // * Conversion of the clang CFG to SSA form.; // * Translation of clang Exprs to TIL SExprs; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:43,Integrability,interface,interface,43,// namespace sx; // This class defines the interface of a clang CFG Visitor.; // CFGWalker will invoke the following methods.; // Note that methods are not virtual; the visitor is templatized.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:33,Performance,perform,perform,33,"// Enter the CFG for Decl D, and perform any initial setup operations.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:22,Performance,perform,perform,22,"// Leave the CFG, and perform any final cleanup operations.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:77,Safety,safe,safety,77,"// TODO: move this back into ThreadSafety.cpp; // This is specific to thread safety. It is here because; // translateAttrExpr needs it, but that should be moved too.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:38,Modifiability,variab,variable,38,// FIXME: we don't always have a self-variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:15,Modifiability,variab,variable,15,// Translate a variable reference.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:100,Modifiability,variab,variables,100,// Translate a clang statement or expression to a TIL expression.; // Also performs substitution of variables; Ctx provides the context.; // Dispatches on the type of S.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:75,Performance,perform,performs,75,// Translate a clang statement or expression to a TIL expression.; // Also performs substitution of variables; Ctx provides the context.; // Dispatches on the type of S.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:24,Modifiability,variab,variables,24,// Map from clang local variables to indices in a LVarDefinitionMap.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:18,Modifiability,variab,variable,18,// Map from local variable indices to SSA variables (or constants).,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:42,Modifiability,variab,variables,42,// Map from local variable indices to SSA variables (or constants).,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:3,Modifiability,Variab,Variable,3,// Variable to use for 'this'. May be null.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h:24,Modifiability,Variab,Variables,24,// Map from Stmt to TIL Variables,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h:418,Testability,log,logical,418,"//===- ThreadSafetyLogical.h -----------------------------------*- C++ --*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file defines a representation for logical expressions with SExpr leaves; // that are used as part of fact-checking capability expressions.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h:4,Testability,Log,Logical,4,"/// Logical implication. Returns true if the LExpr implies RHS, i.e. if; /// the LExpr holds, then RHS must hold. For example, (A & B) implies A.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h:4,Testability,Log,Logical,4,"/// Logical implication. Returns true if LHS implies RHS, i.e. if LHS; /// holds, then RHS must hold. For example, (A & B) implies A.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyLogical.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1819,Availability,avail,available,1819,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:659,Integrability,depend,dependencies,659,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1467,Modifiability,variab,variables,1467,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:478,Safety,safe,safety,478,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:738,Safety,safe,safety,738,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1279,Safety,safe,safety,1279,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1665,Safety,safe,safety,1665,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1892,Safety,RISK,RISK,1892,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1541,Security,hash,hash-based,1541,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:403,Usability,simpl,simple,403,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1330,Usability,simpl,simple,1330,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,Extend,Extend,3,// Extend precision of numeric type,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:193,Energy Efficiency,allocate,allocated,193,"/// ValueTypes are data types that can actually be held in registers.; /// All variables and expressions must have a value type.; /// Pointer types are further subdivided into the various heap-allocated; /// types, such as functions, records, etc.; /// Structured types that are passed by value (e.g. complex numbers); /// require special handling; they use BT_ValueRef, and size ST_0.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:79,Modifiability,variab,variables,79,"/// ValueTypes are data types that can actually be held in registers.; /// All variables and expressions must have a value type.; /// Pointer types are further subdivided into the various heap-allocated; /// types, such as functions, records, etc.; /// Structured types that are passed by value (e.g. complex numbers); /// require special handling; they use BT_ValueRef, and size ST_0.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:324,Integrability,interface,interface,324,"// Subclasses of SExpr must define the following:; //; // This(const This& E, ...) {; // copy constructor: construct copy of E, with some additional arguments.; // }; //; // template <class V>; // typename V::R_SExpr traverse(V &Vs, typename V::R_Ctx Ctx) {; // traverse all subexpressions, following the traversal/rewriter interface.; // }; //; // template <class C> typename C::CType compare(CType* E, C& Cmp) {; // compare all subexpressions, following the comparator interface; // }",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:471,Integrability,interface,interface,471,"// Subclasses of SExpr must define the following:; //; // This(const This& E, ...) {; // copy constructor: construct copy of E, with some additional arguments.; // }; //; // template <class V>; // typename V::R_SExpr traverse(V &Vs, typename V::R_Ctx Ctx) {; // traverse all subexpressions, following the traversal/rewriter interface.; // }; //; // template <class C> typename C::CType compare(CType* E, C& Cmp) {; // compare all subexpressions, following the comparator interface; // }",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:315,Modifiability,rewrite,rewriter,315,"// Subclasses of SExpr must define the following:; //; // This(const This& E, ...) {; // copy constructor: construct copy of E, with some additional arguments.; // }; //; // template <class V>; // typename V::R_SExpr traverse(V &Vs, typename V::R_Ctx Ctx) {; // traverse all subexpressions, following the traversal/rewriter interface.; // }; //; // template <class C> typename C::CType compare(CType* E, C& Cmp) {; // compare all subexpressions, following the comparator interface; // }",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:555,Energy Efficiency,allocate,allocate,555,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:53,Modifiability,variab,variables,53,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:76,Modifiability,variab,variable,76,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:147,Modifiability,Variab,Variable,147,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:186,Modifiability,variab,variable,186,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:224,Modifiability,variab,variable,224,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:400,Modifiability,variab,variable,400,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:477,Modifiability,variab,variable,477,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:588,Modifiability,variab,variable,588,"// namespace ThreadSafetyTIL; // Nodes which declare variables; /// A named variable, e.g. ""x"".; ///; /// There are two distinct places in which a Variable can appear in the AST.; /// A variable declaration introduces a new variable, and can occur in 3 places:; /// Let-expressions: (Let (x = t) u); /// Functions: (Function (x : t) u); /// Self-applicable functions (SFunction (x) t); ///; /// If a variable occurs in any other location, it is a reference to an existing; /// variable declaration -- e.g. 'x' in (x * y + z). To save space, we don't; /// allocate a separate AST node for variable references; a reference is just a; /// pointer to the original declaration.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:8,Modifiability,variab,variable,8,/// Let-variable,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:23,Modifiability,variab,variable,23,"/// Return the kind of variable (let, function param, or self)",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:27,Modifiability,variab,variable,27,"/// Return the name of the variable, if any.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:42,Modifiability,variab,variable,42,"/// Return the clang declaration for this variable, if any.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:33,Modifiability,variab,variable,33,"/// Return the definition of the variable.; /// For let-vars, this is the setting expression.; /// For function and self parameters, it is the type of the variable.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:155,Modifiability,variab,variable,155,"/// Return the definition of the variable.; /// For let-vars, this is the setting expression.; /// For function and self parameters, it is the type of the variable.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:8,Integrability,rout,routine,8,// This routine is only called for variable references.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:35,Modifiability,variab,variable,35,// This routine is only called for variable references.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:19,Modifiability,variab,variable,19,// The name of the variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:34,Modifiability,variab,variable,34,// The clang declaration for this variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:35,Energy Efficiency,allocate,allocated,35,"/// A Literal pointer to an object allocated in memory.; /// At compile time, pointer literals are represented by symbolic names.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:13,Modifiability,variab,variable,13,"// This is a variable declaration, so traverse the definition.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:12,Modifiability,rewrite,rewriter,12,// Tell the rewriter to enter the scope of the function.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:121,Deployability,update,update,121,"// A self-variable points to the SFunction itself.; // A rewrite must introduce the variable with a null definition, and update; // it after 'this' has been rewritten.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:10,Modifiability,variab,variable,10,"// A self-variable points to the SFunction itself.; // A rewrite must introduce the variable with a null definition, and update; // it after 'this' has been rewritten.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:57,Modifiability,rewrite,rewrite,57,"// A self-variable points to the SFunction itself.; // A rewrite must introduce the variable with a null definition, and update; // it after 'this' has been rewritten.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:84,Modifiability,variab,variable,84,"// A self-variable points to the SFunction itself.; // A rewrite must introduce the variable with a null definition, and update; // it after 'this' has been rewritten.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:5,Modifiability,rewrite,rewrite,5,// A rewrite operation will call SFun constructor to set Vvd->Definition.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Modifiability,rewrite,rewrite,3,// rewrite constructor,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:4,Energy Efficiency,Allocate,Allocate,4,/// Allocate memory for a new value on the heap or stack.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:4,Performance,Load,Load,4,/// Load a value from memory.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:4,Usability,Simpl,Simple,4,"/// Simple arithmetic unary operations, e.g. negate and not.; /// These operations have no side-effects.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:4,Usability,Simpl,Simple,4,"/// Simple arithmetic binary operations, e.g. +, -, etc.; /// These operations have no side effects.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:110,Integrability,depend,depending,110,"/// Phi Node, for code in SSA form.; /// Each Phi node has an array of possible values that it can take,; /// depending on where control flow comes from.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:183,Availability,redundant,redundant,183,"// In minimal SSA form, all Phi nodes are MultiVal.; // During conversion to SSA, incomplete Phi nodes may be introduced, which; // are later determined to be SingleVal, and are thus redundant.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:183,Safety,redund,redundant,183,"// In minimal SSA form, all Phi nodes are MultiVal.; // During conversion to SSA, incomplete Phi nodes may be introduced, which; // are later determined to be SingleVal, and are thus redundant.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:40,Modifiability,variab,variable,40,"/// Return the clang declaration of the variable for this Phi node, if any.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:18,Modifiability,variab,variable,18,/// Set the clang variable associated with this Phi node.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:21,Energy Efficiency,allocate,allocate,21,// The arena used to allocate this block.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:90,Modifiability,variab,variable,90,"/// An identifier, e.g. 'foo' or 'x'.; /// This is a pseduo-term; it will be lowered to a variable or projection.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:13,Modifiability,variab,variable,13,"// This is a variable declaration, so traverse the definition.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:12,Modifiability,rewrite,rewriter,12,// Tell the rewriter to enter the scope of the let variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:51,Modifiability,variab,variable,51,// Tell the rewriter to enter the scope of the let variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:487,Safety,Safe,Safety,487,"//===- ThreadSafetyTraverse.h -----------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a framework for doing generic traversals and rewriting; // operations over the Thread Safety TIL.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:543,Safety,RISK,RISK,543,"//===- ThreadSafetyTraverse.h -----------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a framework for doing generic traversals and rewriting; // operations over the Thread Safety TIL.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:637,Energy Efficiency,reduce,reduceX,637,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:905,Energy Efficiency,reduce,reduceX,905,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:985,Energy Efficiency,reduce,reduceX,985,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:14,Integrability,interface,interface,14,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:1129,Integrability,interface,interface,1129,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:254,Security,hash,hashing,254,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:218,Deployability,update,updates,218,"// Traverse an expression -- returning a result of type R_SExpr.; // Override this method to do something for every expression, regardless; // of which kind it is.; // E is a reference, so this can be use for in-place updates.; // The type T must be a subclass of SExpr.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:90,Deployability,update,updates,90,// Override this method to do something for every expression.; // Does not allow in-place updates.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:25,Energy Efficiency,reduce,reducers,25,// Base class for simple reducers that don't much care about the context.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:18,Usability,simpl,simple,18,// Base class for simple reducers that don't much care about the context.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:83,Energy Efficiency,reduce,reduced,83,// Create context for a subexpression that occurs in a position that; // should be reduced lazily. (e.g. code body).,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:34,Modifiability,rewrite,rewrite,34,// Base class for traversals that rewrite an SExpr to another SExpr.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:101,Energy Efficiency,allocate,allocated,101,// R_SExpr is the result type for a traversal.; // A copy or non-destructive rewrite returns a newly allocated term.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:77,Modifiability,rewrite,rewrite,77,// R_SExpr is the result type for a traversal.; // A copy or non-destructive rewrite returns a newly allocated term.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:26,Integrability,interface,interface,26,"// Container is a minimal interface used to store results when traversing; // SExprs of variable arity, such as Phi, Goto, and SCFG.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:88,Modifiability,variab,variable,88,"// Container is a minimal interface used to store results when traversing; // SExprs of variable arity, such as Phi, Goto, and SCFG.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:3,Energy Efficiency,Allocate,Allocate,3,// Allocate a new container with a capacity for n elements.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:53,Availability,failure,failure,53,"// A visitor returns a bool, representing success or failure.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:49,Usability,simpl,simple,49,"// Result type for the comparison, e.g. bool for simple equality,; // or int for lexigraphic comparison (-1, 0, 1). Must have one value which; // denotes ""true"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:36,Modifiability,variab,variables,36,// TODO -- handle alpha-renaming of variables,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:49,Usability,simpl,simple,49,"// Result type for the comparison, e.g. bool for simple equality,; // or int for lexigraphic comparison (-1, 0, 1). Must have one value which; // denotes ""true"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:36,Modifiability,variab,variables,36,// TODO -- handle alpha-renaming of variables,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:8,Availability,redundant,redundant,8,// Omit redundant decls.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:8,Safety,redund,redundant,8,// Omit redundant decls.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:3,Integrability,Wrap,Wrap,3,// Wrap expr in () if necessary.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:95,Energy Efficiency,allocate,allocated,95,"// Simple wrapper class to abstract away from the details of memory management.; // SExprs are allocated in pools, and deallocated all at once.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:10,Integrability,wrap,wrapper,10,"// Simple wrapper class to abstract away from the details of memory management.; // SExprs are allocated in pools, and deallocated all at once.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:3,Usability,Simpl,Simple,3,"// Simple wrapper class to abstract away from the details of memory management.; // SExprs are allocated in pools, and deallocated all at once.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:5,Usability,simpl,simple,5,"// A simple fixed size array class that does not manage its own memory,; // suitable for use with bump pointer allocation.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:3,Usability,Clear,Clear,3,// Clear vector. The vector must be writable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:15,Modifiability,variab,variable,15,"/// A use of a variable, which might be uninitialized.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:35,Modifiability,variab,variable,35,/// The expression which uses this variable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:43,Modifiability,variab,variable,43,/// Is this use uninitialized whenever the variable declaration is reached?,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:82,Modifiability,variab,variable,82,/// The use is uninitialized the first time it is reached after we reach; /// the variable's declaration.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:44,Modifiability,variab,variable,44,/// Branches which inevitably result in the variable being used uninitialized.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:34,Modifiability,variab,variable,34,/// Called when the uninitialized variable is used at the given expression.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:34,Modifiability,variab,variable,34,/// Called when the uninitialized variable is used as const refernce argument.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:34,Modifiability,variab,variable,34,/// Called when the uninitialized variable analysis detects the; /// idiom 'int x = x'. All other uses of 'x' within the initializer; /// are handled by handleUseOfUninitVariable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h:52,Safety,detect,detects,52,/// Called when the uninitialized variable analysis detects the; /// idiom 'int x = x'. All other uses of 'x' within the initializer; /// are handled by handleUseOfUninitVariable.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UninitializedValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:7,Safety,Unsafe,UnsafeBufferUsage,7,"//===- UnsafeBufferUsage.h - Replace pointers with modern C++ ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an analysis that aids replacing buffer accesses through; // raw pointers with safer C++ abstractions such as containers and views/spans.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:479,Safety,safe,safer,479,"//===- UnsafeBufferUsage.h - Replace pointers with modern C++ ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an analysis that aids replacing buffer accesses through; // raw pointers with safer C++ abstractions such as containers and views/spans.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:440,Security,access,accesses,440,"//===- UnsafeBufferUsage.h - Replace pointers with modern C++ ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an analysis that aids replacing buffer accesses through; // raw pointers with safer C++ abstractions such as containers and views/spans.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:23,Modifiability,variab,variables,23,"/// Returns the set of variables (including `Var`) that need to be fixed; /// together in one step.; ///; /// `Var` must be a variable that needs fix (so it must be in a group).; /// `HasParm` is an optional argument that will be set to true if the set of; /// variables, where `Var` is in, contains parameters.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:126,Modifiability,variab,variable,126,"/// Returns the set of variables (including `Var`) that need to be fixed; /// together in one step.; ///; /// `Var` must be a variable that needs fix (so it must be in a group).; /// `HasParm` is an optional argument that will be set to true if the set of; /// variables, where `Var` is in, contains parameters.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:261,Modifiability,variab,variables,261,"/// Returns the set of variables (including `Var`) that need to be fixed; /// together in one step.; ///; /// `Var` must be a variable that needs fix (so it must be in a group).; /// `HasParm` is an optional argument that will be set to true if the set of; /// variables, where `Var` is in, contains parameters.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:35,Modifiability,variab,variables,35,"/// Returns the non-empty group of variables that include parameters of the; /// analyzing function, if such a group exists. An empty group, otherwise.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:8,Integrability,interface,interface,8,/// The interface that lets the caller handle unsafe buffer usage analysis; /// results by overriding this class's handle... methods.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:46,Safety,unsafe,unsafe,46,/// The interface that lets the caller handle unsafe buffer usage analysis; /// results by overriding this class's handle... methods.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:158,Integrability,message,message,158,// A self-debugging facility that you can use to notify the user when; // suggestions or fixits are incomplete.; // Uses std::function to avoid computing the message when it won't; // actually be displayed.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:138,Safety,avoid,avoid,138,// A self-debugging facility that you can use to notify the user when; // suggestions or fixits are incomplete.; // Uses std::function to avoid computing the message when it won't; // actually be displayed.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:20,Safety,unsafe,unsafe,20,/// Invoked when an unsafe operation over raw pointers is found.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:46,Modifiability,variab,variable,46,/// Invoked when a fix is suggested against a variable. This function groups; /// all variables that must be fixed together (i.e their types must be changed; /// to the same target type to prevent type mismatches) into a single fixit.; ///; /// `D` is the declaration of the callable under analysis that owns `Variable`; /// and all of its group mates.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:86,Modifiability,variab,variables,86,/// Invoked when a fix is suggested against a variable. This function groups; /// all variables that must be fixed together (i.e their types must be changed; /// to the same target type to prevent type mismatches) into a single fixit.; ///; /// `D` is the declaration of the callable under analysis that owns `Variable`; /// and all of its group mates.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:310,Modifiability,Variab,Variable,310,/// Invoked when a fix is suggested against a variable. This function groups; /// all variables that must be fixed together (i.e their types must be changed; /// to the same target type to prevent type mismatches) into a single fixit.; ///; /// `D` is the declaration of the callable under analysis that owns `Variable`; /// and all of its group mates.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:3,Testability,Test,Tests,3,// Tests if any two `FixItHint`s in `FixIts` conflict. Two `FixItHint`s; // conflict if they have overlapping source ranges.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h:4,Performance,Cache,Cached,4,"/// Cached ""raise"" selector.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h:4,Performance,Cache,Cached,4,"/// Cached identifier for ""NSException"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h:4,Performance,Cache,Cached,4,/// Cached set of selectors in NSException that are 'noreturn'.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h:29,Integrability,message,message,29,/// Return true if the given message expression is known to never; /// return.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/DomainSpecific/ObjCNoReturn.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:24,Integrability,wrap,wrapping,24,/// Creates a BoolValue wrapping a particular formula.; ///; /// Passing in the same formula will result in the same BoolValue.; /// FIXME: Interning BoolValues but not other Values is inconsistent.; /// Decide whether we want Value interning or not.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:29,Integrability,wrap,wraps,29,"/// Creates a fresh atom and wraps in in an AtomicBoolValue.; /// FIXME: For now, identical-address AtomicBoolValue <=> identical atom.; /// Stop relying on pointer identity and remove this guarantee.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:186,Usability,Simpl,Simplifications,186,"// Factories for boolean formulas.; // Formulas are interned: passing the same arguments return the same result.; // For commutative operations like And/Or, interning ignores order.; // Simplifications are applied: makeOr(X, X) => X, etc.; /// Returns a formula for the conjunction of `LHS` and `RHS`.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:30,Modifiability,variab,variable,30,/// Returns a formula for the variable A.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:33,Modifiability,variab,variable,33,"/// Returns a new atomic boolean variable, distinct from any other.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:105,Performance,perform,perform,105,"/// Creates a fresh flow condition and returns a token that identifies it. The; /// token can be used to perform various operations on the flow condition such; /// as adding constraints to it, forking it, joining it with another flow; /// condition, or checking implications.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:28,Safety,avoid,avoid,28,// Indices that are used to avoid recreating the same integer literals and; // composite boolean values.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/ControlFlowContext.h:58,Performance,perform,perform,58,/// Holds CFG and other derived context that is needed to perform dataflow; /// analysis.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/ControlFlowContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/ControlFlowContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/ControlFlowContext.h:83,Availability,avail,available,83,"/// Returns the `Decl` containing the statement used to construct the CFG, if; /// available.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/ControlFlowContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/ControlFlowContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:44,Safety,avoid,avoid,44,// FIXME: change the signature of join() to avoid copying here.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:59,Availability,avail,available,59,// The first-choice implementation: use `widen` when it is available.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:297,Availability,error,error,297,"/// Performs dataflow analysis and returns a mapping from basic block IDs to; /// dataflow analysis states that model the respective basic blocks. The; /// returned vector, if any, will have the same size as the number of CFG; /// blocks, with indices corresponding to basic block IDs. Returns an error if; /// the dataflow analysis cannot be performed successfully. Otherwise, calls; /// `PostVisitCFG` on each CFG element with the final analysis results at that; /// program point.; ///; /// `MaxBlockVisits` caps the number of block visits during analysis. See; /// `runTypeErasedDataflowAnalysis` for a full description. The default value is; /// essentially arbitrary -- large enough to accommodate what seems like any; /// reasonable CFG, but still small enough to limit the cost of hitting the; /// limit.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:4,Performance,Perform,Performs,4,"/// Performs dataflow analysis and returns a mapping from basic block IDs to; /// dataflow analysis states that model the respective basic blocks. The; /// returned vector, if any, will have the same size as the number of CFG; /// blocks, with indices corresponding to basic block IDs. Returns an error if; /// the dataflow analysis cannot be performed successfully. Otherwise, calls; /// `PostVisitCFG` on each CFG element with the final analysis results at that; /// program point.; ///; /// `MaxBlockVisits` caps the number of block visits during analysis. See; /// `runTypeErasedDataflowAnalysis` for a full description. The default value is; /// essentially arbitrary -- large enough to accommodate what seems like any; /// reasonable CFG, but still small enough to limit the cost of hitting the; /// limit.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:343,Performance,perform,performed,343,"/// Performs dataflow analysis and returns a mapping from basic block IDs to; /// dataflow analysis states that model the respective basic blocks. The; /// returned vector, if any, will have the same size as the number of CFG; /// blocks, with indices corresponding to basic block IDs. Returns an error if; /// the dataflow analysis cannot be performed successfully. Otherwise, calls; /// `PostVisitCFG` on each CFG element with the final analysis results at that; /// program point.; ///; /// `MaxBlockVisits` caps the number of block visits during analysis. See; /// `runTypeErasedDataflowAnalysis` for a full description. The default value is; /// essentially arbitrary -- large enough to accommodate what seems like any; /// reasonable CFG, but still small enough to limit the cost of hitting the; /// limit.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:91,Energy Efficiency,adapt,adapter,91,// Create an analysis class that is derived from `DataflowAnalysis`. This is an; // SFINAE adapter that allows us to call two different variants of constructor; // (either with or without the optional `Environment` parameter).; // FIXME: Make all classes derived from `DataflowAnalysis` take an `Environment`; // parameter in their constructor so that we can get rid of this abomination.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:91,Integrability,adapter,adapter,91,// Create an analysis class that is derived from `DataflowAnalysis`. This is an; // SFINAE adapter that allows us to call two different variants of constructor; // (either with or without the optional `Environment` parameter).; // FIXME: Make all classes derived from `DataflowAnalysis` take an `Environment`; // parameter in their constructor so that we can get rid of this abomination.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:91,Modifiability,adapt,adapter,91,// Create an analysis class that is derived from `DataflowAnalysis`. This is an; // SFINAE adapter that allows us to call two different variants of constructor; // (either with or without the optional `Environment` parameter).; // FIXME: Make all classes derived from `DataflowAnalysis` take an `Environment`; // parameter in their constructor so that we can get rid of this abomination.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:158,Availability,error,error,158,"/// Runs a dataflow analysis over the given function and then runs `Diagnoser`; /// over the results. Returns a list of diagnostics for `FuncDecl` or an; /// error. Currently, errors can occur (at least) because the analysis requires; /// too many iterations over the CFG or the SAT solver times out.; ///; /// The default value of `MaxSATIterations` was chosen based on the following; /// observations:; /// - Non-pathological calls to the solver typically require only a few hundred; /// iterations.; /// - This limit is still low enough to keep runtimes acceptable (on typical; /// machines) in cases where we hit the limit.; ///; /// `MaxBlockVisits` caps the number of block visits during analysis. See; /// `runDataflowAnalysis` for a full description and explanation of the default; /// value.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:176,Availability,error,errors,176,"/// Runs a dataflow analysis over the given function and then runs `Diagnoser`; /// over the results. Returns a list of diagnostics for `FuncDecl` or an; /// error. Currently, errors can occur (at least) because the analysis requires; /// too many iterations over the CFG or the SAT solver times out.; ///; /// The default value of `MaxSATIterations` was chosen based on the following; /// observations:; /// - Non-pathological calls to the solver typically require only a few hundred; /// iterations.; /// - This limit is still low enough to keep runtimes acceptable (on typical; /// machines) in cases where we hit the limit.; ///; /// `MaxBlockVisits` caps the number of block visits during analysis. See; /// `runDataflowAnalysis` for a full description and explanation of the default; /// value.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:159,Testability,log,logger,159,"/// If provided, analysis details will be recorded here.; /// (This is always non-null within an AnalysisContext, the framework; /// provides a fallback no-op logger).",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:2,Testability,Log,Logger,2,/*Logger=*/,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:3,Modifiability,Extend,Extends,3,// Extends the set of modeled field declarations.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:100,Integrability,depend,dependencies,100,/// Adds all constraints of the flow condition identified by `Token` and all; /// of its transitive dependencies to `Constraints`.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:579,Integrability,depend,depend,579,"// Flow conditions are tracked symbolically: each unique flow condition is; // associated with a fresh symbolic variable (token), bound to the clause that; // defines the flow condition. Conceptually, each binding corresponds to an; // ""iff"" of the form `FC <=> (C1 ^ C2 ^ ...)` where `FC` is a flow condition; // token (an atomic boolean) and `Ci`s are the set of constraints in the flow; // flow condition clause. The set of constraints (C1 ^ C2 ^ ...) are stored in; // the `FlowConditionConstraints` map, keyed by the token of the flow; // condition.; //; // Flow conditions depend on other flow conditions if they are created using; // `forkFlowCondition` or `joinFlowConditions`. The graph of flow condition; // dependencies is stored in the `FlowConditionDeps` map.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:718,Integrability,depend,dependencies,718,"// Flow conditions are tracked symbolically: each unique flow condition is; // associated with a fresh symbolic variable (token), bound to the clause that; // defines the flow condition. Conceptually, each binding corresponds to an; // ""iff"" of the form `FC <=> (C1 ^ C2 ^ ...)` where `FC` is a flow condition; // token (an atomic boolean) and `Ci`s are the set of constraints in the flow; // flow condition clause. The set of constraints (C1 ^ C2 ^ ...) are stored in; // the `FlowConditionConstraints` map, keyed by the token of the flow; // condition.; //; // Flow conditions depend on other flow conditions if they are created using; // `forkFlowCondition` or `joinFlowConditions`. The graph of flow condition; // dependencies is stored in the `FlowConditionDeps` map.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h:112,Modifiability,variab,variable,112,"// Flow conditions are tracked symbolically: each unique flow condition is; // associated with a fresh symbolic variable (token), bound to the clause that; // defines the flow condition. Conceptually, each binding corresponds to an; // ""iff"" of the form `FC <=> (C1 ^ C2 ^ ...)` where `FC` is a flow condition; // token (an atomic boolean) and `Ci`s are the set of constraints in the flow; // flow condition clause. The set of constraints (C1 ^ C2 ^ ...) are stored in; // the `FlowConditionConstraints` map, keyed by the token of the flow; // condition.; //; // Flow conditions depend on other flow conditions if they are created using; // `forkFlowCondition` or `joinFlowConditions`. The graph of flow condition; // dependencies is stored in the `FlowConditionDeps` map.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysisContext.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:182,Modifiability,variab,variables,182,/// Holds the state of the program (store and heap) at a given program point.; ///; /// WARNING: Symbolic values that are created by the environment for static; /// local and global variables are not currently invalidated on function calls.; /// This is unsound and should be taken into account when designing dataflow; /// analyses.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:641,Availability,avail,available,641,"/// This function may widen the current value -- replace it with an; /// approximation that can reach a fixed point more quickly than iterated; /// application of the transfer function alone. The previous value is; /// provided to inform the choice of widened value. The function must also; /// serve as a comparison operation, by indicating whether the widened value; /// is equivalent to the previous value.; ///; /// Returns either:; ///; /// `nullptr`, if this value is not of interest to the model, or; ///; /// `&Prev`, if the widened value is equivalent to `Prev`, or; ///; /// A non-null value that approximates `Current`. `Prev` is available to; /// inform the chosen approximation.; ///; /// `PrevEnv` and `CurrentEnv` can be used to query child values and path; /// condition implications of `Prev` and `Current`, respectively.; ///; /// Requirements:; ///; /// `Prev` and `Current` must model values of type `Type`.; ///; /// `Prev` and `Current` must be assigned to the same storage location in; /// `PrevEnv` and `CurrentEnv`, respectively.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:30,Energy Efficiency,reduce,reduces,30,"// The default implementation reduces to just comparison, since comparison; // is required by the API, even if no widening is performed.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:126,Performance,perform,performed,126,"// The default implementation reduces to just comparison, since comparison; // is required by the API, even if no widening is performed.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:82,Modifiability,variab,variables,82,"/// Assigns storage locations and values to all parameters, captures, global; /// variables, fields and functions referenced in the function currently being; /// analyzed.; ///; /// Requirements:; ///; /// The function must have a body, i.e.; /// `FunctionDecl::doesThisDecalarationHaveABody()` must be true.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:137,Testability,assert,assert-fails,137,"/// Returns the result of casting `getStorageLocation(...)` to a subclass of; /// `StorageLocation` (using `cast_or_null<T>`).; /// This assert-fails if the result of `getStorageLocation(...)` is not of; /// type `T *`; if the storage location is not guaranteed to have type `T *`,; /// consider using `dyn_cast_or_null<T>(getStorageLocation(...))` instead.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:980,Availability,down,down,980,"/// Returns the location of the result object for a record-type prvalue.; ///; /// In C++, prvalues of record type serve only a limited purpose: They can; /// only be used to initialize a result object (e.g. a variable or a; /// temporary). This function returns the location of that result object.; ///; /// When creating a prvalue of record type, we already need the storage; /// location of the result object to pass in `this`, even though prvalues are; /// otherwise not associated with storage locations.; ///; /// FIXME: Currently, this simply returns a stable storage location for `E`,; /// but this doesn't do the right thing in scenarios like the following:; /// ```; /// MyClass c = some_condition()? MyClass(foo) : MyClass(bar);; /// ```; /// Here, `MyClass(foo)` and `MyClass(bar)` will have two different storage; /// locations, when in fact their storage locations should be the same.; /// Eventually, we want to propagate storage locations from result objects; /// down to the prvalues that initialize them, similar to the way that this is; /// done in Clang's CodeGen.; ///; /// Requirements:; /// `E` must be a prvalue of record type.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:210,Modifiability,variab,variable,210,"/// Returns the location of the result object for a record-type prvalue.; ///; /// In C++, prvalues of record type serve only a limited purpose: They can; /// only be used to initialize a result object (e.g. a variable or a; /// temporary). This function returns the location of that result object.; ///; /// When creating a prvalue of record type, we already need the storage; /// location of the result object to pass in `this`, even though prvalues are; /// otherwise not associated with storage locations.; ///; /// FIXME: Currently, this simply returns a stable storage location for `E`,; /// but this doesn't do the right thing in scenarios like the following:; /// ```; /// MyClass c = some_condition()? MyClass(foo) : MyClass(bar);; /// ```; /// Here, `MyClass(foo)` and `MyClass(bar)` will have two different storage; /// locations, when in fact their storage locations should be the same.; /// Eventually, we want to propagate storage locations from result objects; /// down to the prvalues that initialize them, similar to the way that this is; /// done in Clang's CodeGen.; ///; /// Requirements:; /// `E` must be a prvalue of record type.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:543,Usability,simpl,simply,543,"/// Returns the location of the result object for a record-type prvalue.; ///; /// In C++, prvalues of record type serve only a limited purpose: They can; /// only be used to initialize a result object (e.g. a variable or a; /// temporary). This function returns the location of that result object.; ///; /// When creating a prvalue of record type, we already need the storage; /// location of the result object to pass in `this`, even though prvalues are; /// otherwise not associated with storage locations.; ///; /// FIXME: Currently, this simply returns a stable storage location for `E`,; /// but this doesn't do the right thing in scenarios like the following:; /// ```; /// MyClass c = some_condition()? MyClass(foo) : MyClass(bar);; /// ```; /// Here, `MyClass(foo)` and `MyClass(bar)` will have two different storage; /// locations, when in fact their storage locations should be the same.; /// Eventually, we want to propagate storage locations from result objects; /// down to the prvalues that initialize them, similar to the way that this is; /// done in Clang's CodeGen.; ///; /// Requirements:; /// `E` must be a prvalue of record type.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:30,Modifiability,variab,variable,30,"/// Creates an object for the variable declaration `D`. If `D` has an; /// initializer and this initializer is associated with a value, initializes; /// the object with this value. Otherwise, initializes the object with a; /// value created using `createValue()`. Uses the storage location returned by; /// `DataflowAnalysisContext::getStableStorageLocation(D)`.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:30,Modifiability,variab,variable,30,"/// Creates an object for the variable declaration `D`. If `InitExpr` is; /// non-null and has a value associated with it, initializes the object with; /// this value. Otherwise, initializes the object with a value created using; /// `createValue()`. Uses the storage location returned by; /// `DataflowAnalysisContext::getStableStorageLocation(D)`.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:4,Usability,Clear,Clears,4,/// Clears any association between `Loc` and a value in the environment.,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:117,Testability,assert,assert-fails,117,"/// Returns the result of casting `getValue(...)` to a subclass of `Value`; /// (using `cast_or_null<T>`).; /// This assert-fails if the result of `getValue(...)` is not of type `T *`;; /// if the value is not guaranteed to have type `T *`, consider using; /// `dyn_cast_or_null<T>(getValue(...))` instead.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:22,Modifiability,variab,variable,22,"/// Returns a boolean variable that identifies the flow condition (FC).; ///; /// The flow condition is a set of facts that are necessarily true when the; /// program reaches the current point, expressed as boolean formulas.; /// The flow condition token is equivalent to the AND of these facts.; ///; /// These may e.g. constrain the value of certain variables. A pointer; /// variable may have a consistent modeled PointerValue throughout, but at a; /// given point the Environment may tell us that the value must be non-null.; ///; /// The FC is necessary but not sufficient for this point to be reachable.; /// In particular, where the FC token appears in flow conditions of successor; /// environments, it means ""point X may have been reached"", not; /// ""point X was reached"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:352,Modifiability,variab,variables,352,"/// Returns a boolean variable that identifies the flow condition (FC).; ///; /// The flow condition is a set of facts that are necessarily true when the; /// program reaches the current point, expressed as boolean formulas.; /// The flow condition token is equivalent to the AND of these facts.; ///; /// These may e.g. constrain the value of certain variables. A pointer; /// variable may have a consistent modeled PointerValue throughout, but at a; /// given point the Environment may tell us that the value must be non-null.; ///; /// The FC is necessary but not sufficient for this point to be reachable.; /// In particular, where the FC token appears in flow conditions of successor; /// environments, it means ""point X may have been reached"", not; /// ""point X was reached"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:378,Modifiability,variab,variable,378,"/// Returns a boolean variable that identifies the flow condition (FC).; ///; /// The flow condition is a set of facts that are necessarily true when the; /// program reaches the current point, expressed as boolean formulas.; /// The flow condition token is equivalent to the AND of these facts.; ///; /// These may e.g. constrain the value of certain variables. A pointer; /// variable may have a consistent modeled PointerValue throughout, but at a; /// given point the Environment may tell us that the value must be non-null.; ///; /// The FC is necessary but not sufficient for this point to be reachable.; /// In particular, where the FC token appears in flow conditions of successor; /// environments, it means ""point X may have been reached"", not; /// ""point X was reached"".",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:46,Modifiability,extend,extended,46,"/// Returns whether this `Environment` can be extended to analyze the given; /// `Callee` (i.e. if `pushCall` can be used), with recursion disallowed and a; /// given `MaxDepth`.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:349,Integrability,depend,dependency,349,"/// Creates a value appropriate for `Type`, if `Type` is supported, otherwise; /// return null.; ///; /// Recursively initializes storage locations and values until it sees a; /// self-referential pointer or reference type. `Visited` is used to track; /// which types appeared in the reference/pointer chain in order to avoid; /// creating a cyclic dependency with self-referential pointers/references.; ///; /// Requirements:; ///; /// `Type` must not be null.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:320,Safety,avoid,avoid,320,"/// Creates a value appropriate for `Type`, if `Type` is supported, otherwise; /// return null.; ///; /// Recursively initializes storage locations and values until it sees a; /// self-referential pointer or reference type. `Visited` is used to track; /// which types appeared in the reference/pointer chain in order to avoid; /// creating a cyclic dependency with self-referential pointers/references.; ///; /// Requirements:; ///; /// `Type` must not be null.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h:55,Modifiability,variab,variables,55,"/// Assigns storage locations and values to all global variables, fields; /// and functions referenced in `FuncDecl`. `FuncDecl` must have a body.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowEnvironment.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowValues.h:102,Security,access,accessors,102,//===--------------------------------------------------------------------===//; // Initialization and accessors methods.; //===--------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowValues.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowValues.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowWorklist.h:385,Usability,simpl,simple,385,"//===- DataflowWorklist.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A simple and reusable worklist for flow-sensitive analyses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowWorklist.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowWorklist.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:33,Modifiability,variab,variable,33,"/// Identifies an atomic boolean variable such as ""V1"".; ///; /// This often represents an assertion that is interesting to the analysis but; /// cannot immediately be proven true or false. For example:; /// - V1 may mean ""the program reaches this point"",; /// - V2 may mean ""the parameter was null""; ///; /// We can use these variables in formulas to describe relationships we know; /// to be true: ""if the parameter was null, the program reaches this point"".; /// We also express hypotheses as formulas, and use a SAT solver to check; /// whether they are consistent with the known facts.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:327,Modifiability,variab,variables,327,"/// Identifies an atomic boolean variable such as ""V1"".; ///; /// This often represents an assertion that is interesting to the analysis but; /// cannot immediately be proven true or false. For example:; /// - V1 may mean ""the program reaches this point"",; /// - V2 may mean ""the parameter was null""; ///; /// We can use these variables in formulas to describe relationships we know; /// to be true: ""if the parameter was null, the program reaches this point"".; /// We also express hypotheses as formulas, and use a SAT solver to check; /// whether they are consistent with the known facts.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:91,Testability,assert,assertion,91,"/// Identifies an atomic boolean variable such as ""V1"".; ///; /// This often represents an assertion that is interesting to the analysis but; /// cannot immediately be proven true or false. For example:; /// - V1 may mean ""the program reaches this point"",; /// - V2 may mean ""the parameter was null""; ///; /// We can use these variables in formulas to describe relationships we know; /// to be true: ""if the parameter was null, the program reaches this point"".; /// We also express hypotheses as formulas, and use a SAT solver to check; /// whether they are consistent with the known facts.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:662,Energy Efficiency,allocate,allocated,662,"/// A boolean expression such as ""true"" or ""V1 & !V2"".; /// Expressions may refer to boolean atomic variables. These should take a; /// consistent true/false value across the set of formulas being considered.; ///; /// (Formulas are always expressions in terms of boolean variables rather than; /// e.g. integers because our underlying model is SAT rather than e.g. SMT).; ///; /// Simple formulas such as ""true"" and ""V1"" are self-contained.; /// Compound formulas connect other formulas, e.g. ""(V1 & V2) || V3"" is an 'or'; /// formula, with pointers to its operands ""(V1 & V2)"" and ""V3"" stored as; /// trailing objects.; /// For this reason, Formulas are Arena-allocated and over-aligned.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:100,Modifiability,variab,variables,100,"/// A boolean expression such as ""true"" or ""V1 & !V2"".; /// Expressions may refer to boolean atomic variables. These should take a; /// consistent true/false value across the set of formulas being considered.; ///; /// (Formulas are always expressions in terms of boolean variables rather than; /// e.g. integers because our underlying model is SAT rather than e.g. SMT).; ///; /// Simple formulas such as ""true"" and ""V1"" are self-contained.; /// Compound formulas connect other formulas, e.g. ""(V1 & V2) || V3"" is an 'or'; /// formula, with pointers to its operands ""(V1 & V2)"" and ""V3"" stored as; /// trailing objects.; /// For this reason, Formulas are Arena-allocated and over-aligned.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:272,Modifiability,variab,variables,272,"/// A boolean expression such as ""true"" or ""V1 & !V2"".; /// Expressions may refer to boolean atomic variables. These should take a; /// consistent true/false value across the set of formulas being considered.; ///; /// (Formulas are always expressions in terms of boolean variables rather than; /// e.g. integers because our underlying model is SAT rather than e.g. SMT).; ///; /// Simple formulas such as ""true"" and ""V1"" are self-contained.; /// Compound formulas connect other formulas, e.g. ""(V1 & V2) || V3"" is an 'or'; /// formula, with pointers to its operands ""(V1 & V2)"" and ""V3"" stored as; /// trailing objects.; /// For this reason, Formulas are Arena-allocated and over-aligned.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h:382,Usability,Simpl,Simple,382,"/// A boolean expression such as ""true"" or ""V1 & !V2"".; /// Expressions may refer to boolean atomic variables. These should take a; /// consistent true/false value across the set of formulas being considered.; ///; /// (Formulas are always expressions in terms of boolean variables rather than; /// e.g. integers because our underlying model is SAT rather than e.g. SMT).; ///; /// Simple formulas such as ""true"" and ""V1"" are self-contained.; /// Compound formulas connect other formulas, e.g. ""(V1 & V2) || V3"" is an 'or'; /// formula, with pointers to its operands ""(V1 & V2)"" and ""V3"" stored as; /// trailing objects.; /// For this reason, Formulas are Arena-allocated and over-aligned.",MatchSource.CODE_COMMENT,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Formula.h
